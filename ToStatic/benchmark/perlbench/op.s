	.file	"op.c"
# GNU C (Ubuntu/Linaro 4.8.1-10ubuntu9) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.1.2, MPFR version 3.1.1-p2, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -imultiarch x86_64-linux-gnu -D SPEC_CPU -D NDEBUG
# -D PERL_CORE -D SPEC_CPU_LP64 -D SPEC_CPU_LINUX_X64 op.c -mtune=generic
# -march=x86-64 -g -fverbose-asm -fno-strict-aliasing -fstack-protector
# -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
# -fident -finline-atomics -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-debug-strings
# -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
# -freg-struct-return -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
# -fsigned-zeros -fsplit-ivs-in-unroller -fstack-protector
# -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
# -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
# -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
# -funit-at-a-time -funwind-tables -fverbose-asm -fzero-initialized-in-bss
# -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
# -malign-stringops -mfancy-math-387 -mfp-ret-in-387 -mfxsr -mglibc
# -mieee-fp -mlong-double-80 -mmmx -mno-sse4 -mpush-args -mred-zone -msse
# -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.type	S_gv_ename, @function
S_gv_ename:
.LFB2:
	.file 1 "op.c"
	.loc 1 163 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# gv, gv
	.loc 1 165 0
	call	Perl_sv_newmortal	#
	movq	%rax, -8(%rbp)	# tmp67, tmpsv
	.loc 1 166 0
	movq	-24(%rbp), %rsi	# gv, tmp68
	movq	-8(%rbp), %rax	# tmpsv, tmp69
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp69,
	call	Perl_gv_efullname4	#
	.loc 1 167 0
	movq	-8(%rbp), %rax	# tmpsv, tmp70
	movl	12(%rax), %eax	# tmpsv_2->sv_flags, D.21437
	andl	$262144, %eax	#, D.21437
	testl	%eax, %eax	# D.21437
	je	.L2	#,
	.loc 1 167 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# tmpsv, tmp71
	movq	(%rax), %rax	# tmpsv_2->sv_any, D.21438
	movq	8(%rax), %rax	# MEM[(struct XPV *)_6].xpv_cur, n_a.1
	movq	%rax, -16(%rbp)	# n_a.1, n_a
	movq	-8(%rbp), %rax	# tmpsv, tmp72
	movq	(%rax), %rax	# tmpsv_2->sv_any, D.21438
	movq	(%rax), %rax	# MEM[(struct XPV *)_8].xpv_pv, iftmp.0
	jmp	.L3	#
.L2:
	.loc 1 167 0 discriminator 2
	leaq	-16(%rbp), %rcx	#, tmp73
	movq	-8(%rbp), %rax	# tmpsv, tmp74
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp73,
	movq	%rax, %rdi	# tmp74,
	call	Perl_sv_2pv_flags	#
.L3:
	.loc 1 168 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	S_gv_ename, .-S_gv_ename
	.section	.rodata
	.align 8
.LC0:
	.string	"Missing comma after first argument to %s function"
	.text
	.type	S_no_fh_allowed, @function
S_no_fh_allowed:
.LFB3:
	.loc 1 172 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 174 0
	movq	-8(%rbp), %rax	# o, tmp66
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21440
	.loc 1 173 0
	cmpw	$351, %ax	#, D.21440
	jne	.L6	#,
	.loc 1 173 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# o, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_custom_op_desc	#
	jmp	.L7	#
.L6:
	.loc 1 174 0 is_stmt 1 discriminator 2
	movq	-8(%rbp), %rax	# o, tmp68
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21440
	movzwl	%ax, %eax	# D.21440, D.21441
	.loc 1 173 0 discriminator 2
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.2
.L7:
	.loc 1 173 0 is_stmt 0 discriminator 3
	movq	%rax, %rsi	# iftmp.2,
	movl	$.LC0, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21442,
	call	Perl_yyerror	#
	.loc 1 175 0 is_stmt 1 discriminator 3
	movq	-8(%rbp), %rax	# o, D.21443
	.loc 1 176 0 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	S_no_fh_allowed, .-S_no_fh_allowed
	.section	.rodata
.LC1:
	.string	"Not enough arguments for %s"
	.text
	.type	S_too_few_arguments, @function
S_too_few_arguments:
.LFB4:
	.loc 1 180 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	movq	%rsi, -16(%rbp)	# name, name
	.loc 1 181 0
	movq	-16(%rbp), %rax	# name, tmp62
	movq	%rax, %rsi	# tmp62,
	movl	$.LC1, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21445,
	call	Perl_yyerror	#
	.loc 1 182 0
	movq	-8(%rbp), %rax	# o, D.21446
	.loc 1 183 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	S_too_few_arguments, .-S_too_few_arguments
	.section	.rodata
.LC2:
	.string	"Too many arguments for %s"
	.text
	.type	S_too_many_arguments, @function
S_too_many_arguments:
.LFB5:
	.loc 1 187 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	movq	%rsi, -16(%rbp)	# name, name
	.loc 1 188 0
	movq	-16(%rbp), %rax	# name, tmp62
	movq	%rax, %rsi	# tmp62,
	movl	$.LC2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21448,
	call	Perl_yyerror	#
	.loc 1 189 0
	movq	-8(%rbp), %rax	# o, D.21449
	.loc 1 190 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	S_too_many_arguments, .-S_too_many_arguments
	.section	.rodata
	.align 8
.LC3:
	.string	"Type of arg %d to %s must be %s (not %s)"
	.text
	.type	S_bad_type, @function
S_bad_type:
.LFB6:
	.loc 1 194 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# n, n
	movq	%rsi, -16(%rbp)	# t, t
	movq	%rdx, -24(%rbp)	# name, name
	movq	%rcx, -32(%rbp)	# kid, kid
	.loc 1 196 0
	movq	-32(%rbp), %rax	# kid, tmp64
	movzwl	32(%rax), %eax	# kid_2(D)->op_type, D.21451
	.loc 1 195 0
	cmpw	$351, %ax	#, D.21451
	jne	.L14	#,
	.loc 1 195 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# kid, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_custom_op_desc	#
	jmp	.L15	#
.L14:
	.loc 1 196 0 is_stmt 1 discriminator 2
	movq	-32(%rbp), %rax	# kid, tmp66
	movzwl	32(%rax), %eax	# kid_2(D)->op_type, D.21451
	movzwl	%ax, %eax	# D.21451, D.21452
	.loc 1 195 0 discriminator 2
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.3
.L15:
	.loc 1 195 0 is_stmt 0 discriminator 3
	movq	-16(%rbp), %rcx	# t, tmp68
	movq	-24(%rbp), %rdx	# name, tmp69
	movl	-4(%rbp), %esi	# n, tmp70
	movq	%rax, %r8	# iftmp.3,
	movl	$.LC3, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21453,
	call	Perl_yyerror	#
	.loc 1 197 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	S_bad_type, .-S_bad_type
	.section	.rodata
	.align 8
.LC4:
	.string	"Bareword \"%_\" not allowed while \"strict subs\" in use"
	.text
	.type	S_no_bareword_allowed, @function
S_no_bareword_allowed:
.LFB7:
	.loc 1 201 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 202 0
	movq	-8(%rbp), %rax	# o, tmp61
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_1(D)].op_sv, D.21455
	movq	%rax, %rsi	# D.21455,
	movl	$.LC4, %edi	#,
	movl	$0, %eax	#,
	call	Perl_mess	#
	movq	%rax, %rdi	# D.21455,
	call	Perl_qerror	#
	.loc 1 205 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	S_no_bareword_allowed, .-S_no_bareword_allowed
	.section	.rodata
.LC5:
	.string	"\t\n\r\f"
.LC6:
	.string	"Can't use global %s in \"my\""
.LC7:
	.string	"our"
.LC8:
	.string	"my"
	.align 8
.LC9:
	.string	"Can't declare class for non-scalar %s in \"%s\""
	.text
	.globl	Perl_allocmy
	.type	Perl_allocmy, @function
Perl_allocmy:
.LFB8:
	.loc 1 211 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# name, name
	.loc 1 215 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.4
	cmpl	$137, %eax	#, PL_in_my.4
	je	.L18	#,
	.loc 1 216 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp131
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_10, D.21458
	.loc 1 215 0 discriminator 1
	cmpb	$64, %al	#, D.21458
	jle	.L19	#,
	.loc 1 216 0
	movq	-24(%rbp), %rax	# name, tmp132
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_12, D.21458
	cmpb	$90, %al	#, D.21458
	jle	.L18	#,
.L19:
	.loc 1 216 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp133
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_14, D.21458
	cmpb	$96, %al	#, D.21458
	jle	.L20	#,
	.loc 1 216 0 discriminator 2
	movq	-24(%rbp), %rax	# name, tmp134
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_16, D.21458
	cmpb	$122, %al	#, D.21458
	jle	.L18	#,
.L20:
	.loc 1 217 0 is_stmt 1 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.5
	andl	$8388608, %eax	#, D.21459
	.loc 1 216 0 discriminator 1
	testl	%eax, %eax	# D.21459
	je	.L21	#,
	.loc 1 217 0
	movq	-24(%rbp), %rax	# name, tmp135
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_20, D.21458
	cmpb	$-65, %al	#, D.21460
	jbe	.L21	#,
	.loc 1 217 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp136
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_23, D.21458
	cmpb	$-3, %al	#, D.21460
	jbe	.L18	#,
.L21:
	.loc 1 218 0 is_stmt 1
	movq	-24(%rbp), %rax	# name, tmp137
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_26, D.21458
	.loc 1 215 0
	cmpb	$95, %al	#, D.21458
	jne	.L22	#,
	.loc 1 218 0
	movq	-24(%rbp), %rax	# name, tmp138
	movq	%rax, %rdi	# tmp138,
	call	strlen	#
	cmpl	$2, %eax	#, D.21462
	jg	.L18	#,
.L22:
	.loc 1 220 0
	movq	-24(%rbp), %rax	# name, tmp139
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_30, D.21458
	cmpb	$32, %al	#, D.21458
	jle	.L23	#,
	.loc 1 220 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# name, tmp140
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_32, D.21458
	cmpb	$127, %al	#, D.21458
	jne	.L24	#,
.L23:
	.loc 1 220 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp141
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_34, D.21458
	cmpb	$32, %al	#, D.21458
	jne	.L25	#,
.L24:
	movq	-24(%rbp), %rax	# name, tmp142
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_36, D.21458
	movsbl	%al, %eax	# D.21458, D.21462
	movl	%eax, %esi	# D.21462,
	movl	$.LC5, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.21457
	je	.L26	#,
.L25:
.LBB2:
	.loc 1 223 0 is_stmt 1
	movq	-24(%rbp), %rax	# name, tmp143
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp143,
	call	strchr	#
	movq	%rax, -16(%rbp)	# tmp144, p
	.loc 1 226 0
	movq	-16(%rbp), %rdx	# p, p.6
	movq	-24(%rbp), %rax	# name, name.7
	subq	%rax, %rdx	# name.7, D.21463
	movq	%rdx, %rax	# D.21463, D.21463
	cmpq	$200, %rax	#, D.21463
	jle	.L27	#,
	.loc 1 227 0
	movq	-24(%rbp), %rax	# name, tmp145
	addq	$200, %rax	#, D.21457
	movl	$3026478, (%rax)	#, MEM[(void *)_44]
	.loc 1 228 0
	movq	-24(%rbp), %rax	# name, tmp149
	addq	$199, %rax	#, tmp148
	movq	%rax, -16(%rbp)	# tmp148, p
	.loc 1 234 0
	jmp	.L29	#
.L27:
	.loc 1 231 0
	movq	-16(%rbp), %rax	# p, tmp150
	addq	$1, %rax	#, D.21457
	movb	$0, (%rax)	#, *_46
	.loc 1 234 0
	jmp	.L29	#
.L30:
	.loc 1 235 0 discriminator 2
	movq	-16(%rbp), %rax	# p, tmp151
	movzbl	-1(%rax), %edx	# MEM[(char *)p_2 + -1B], D.21458
	movq	-16(%rbp), %rax	# p, tmp152
	movb	%dl, (%rax)	# D.21458, *p_2
	.loc 1 234 0 discriminator 2
	subq	$1, -16(%rbp)	#, p
.L29:
	.loc 1 234 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rdx	# p, p.8
	movq	-24(%rbp), %rax	# name, name.9
	subq	%rax, %rdx	# name.9, D.21463
	movq	%rdx, %rax	# D.21463, D.21463
	cmpq	$2, %rax	#, D.21463
	jg	.L30	#,
	.loc 1 236 0 is_stmt 1
	movq	-24(%rbp), %rax	# name, tmp153
	leaq	2(%rax), %rdx	#, D.21457
	movq	-24(%rbp), %rax	# name, tmp154
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_53, D.21458
	cmpb	$96, %al	#, D.21458
	jle	.L31	#,
	.loc 1 236 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp155
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_55, D.21458
	cmpb	$122, %al	#, D.21458
	jg	.L31	#,
	movq	-24(%rbp), %rax	# name, tmp156
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_57, D.21458
	subl	$32, %eax	#, D.21464
	xorl	$64, %eax	#, iftmp.10
	jmp	.L32	#
.L31:
	.loc 1 236 0 discriminator 2
	movq	-24(%rbp), %rax	# name, tmp157
	addq	$1, %rax	#, D.21457
	movzbl	(%rax), %eax	# *_63, D.21458
	xorl	$64, %eax	#, iftmp.10
.L32:
	.loc 1 236 0 discriminator 3
	movb	%al, (%rdx)	# iftmp.10, *_52
	.loc 1 237 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# name, tmp158
	addq	$1, %rax	#, D.21457
	movb	$94, (%rax)	#, *_66
.L26:
.LBE2:
	.loc 1 239 0
	movq	-24(%rbp), %rax	# name, tmp159
	movq	%rax, %rsi	# tmp159,
	movl	$.LC6, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21457,
	call	Perl_yyerror	#
.L18:
	.loc 1 244 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.12
	.loc 1 242 0
	testq	%rax, %rax	# PL_curstash.12
	je	.L33	#,
	.loc 1 242 0 is_stmt 0 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, iftmp.11
	jmp	.L34	#
.L33:
	.loc 1 242 0 discriminator 2
	movq	PL_defstash(%rip), %rax	# PL_defstash, iftmp.11
.L34:
	.loc 1 242 0 discriminator 3
	movl	PL_in_my(%rip), %edx	# PL_in_my, PL_in_my.13
	cmpl	$137, %edx	#, PL_in_my.13
	sete	%dl	#, D.21465
	movzbl	%dl, %esi	# D.21465, D.21462
	movq	-24(%rbp), %rcx	# name, tmp160
	movq	%rax, %rdx	# iftmp.11,
	movq	%rcx, %rdi	# tmp160,
	call	Perl_pad_check_dup	#
	.loc 1 247 0 is_stmt 1 discriminator 3
	movq	PL_in_my_stash(%rip), %rax	# PL_in_my_stash, PL_in_my_stash.14
	testq	%rax, %rax	# PL_in_my_stash.14
	je	.L35	#,
	.loc 1 247 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# name, tmp161
	movzbl	(%rax), %eax	# *name_9(D), D.21458
	cmpb	$36, %al	#, D.21458
	je	.L35	#,
	.loc 1 250 0 is_stmt 1
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.16
	.loc 1 248 0
	cmpl	$137, %eax	#, PL_in_my.16
	jne	.L36	#,
	.loc 1 248 0 is_stmt 0 discriminator 1
	movl	$.LC7, %eax	#, iftmp.15
	jmp	.L37	#
.L36:
	.loc 1 248 0 discriminator 2
	movl	$.LC8, %eax	#, iftmp.15
.L37:
	.loc 1 248 0 discriminator 3
	movq	-24(%rbp), %rcx	# name, tmp162
	movq	%rax, %rdx	# iftmp.15,
	movq	%rcx, %rsi	# tmp162,
	movl	$.LC9, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21457,
	call	Perl_yyerror	#
.L35:
	.loc 1 257 0 is_stmt 1
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.18
	.loc 1 255 0
	cmpl	$137, %eax	#, PL_in_my.18
	jne	.L38	#,
	.loc 1 258 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.20
	testq	%rax, %rax	# PL_curstash.20
	je	.L39	#,
	.loc 1 258 0 is_stmt 0 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, iftmp.19
	jmp	.L41	#
.L39:
	.loc 1 258 0 discriminator 2
	movq	PL_defstash(%rip), %rax	# PL_defstash, iftmp.19
	jmp	.L41	#
.L38:
	.loc 1 255 0 is_stmt 1 discriminator 1
	movl	$0, %eax	#, iftmp.17
.L41:
	.loc 1 255 0 is_stmt 0 discriminator 2
	movq	PL_in_my_stash(%rip), %rsi	# PL_in_my_stash, PL_in_my_stash.21
	movq	-24(%rbp), %rdi	# name, tmp163
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# iftmp.17,
	call	Perl_pad_add_name	#
	movq	%rax, -8(%rbp)	# tmp164, off
	.loc 1 263 0 is_stmt 1 discriminator 2
	movq	-8(%rbp), %rax	# off, D.21466
	.loc 1 264 0 discriminator 2
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Perl_allocmy, .-Perl_allocmy
	.globl	Perl_op_free
	.type	Perl_op_free, @function
Perl_op_free:
.LFB9:
	.loc 1 338 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 343 0
	cmpq	$0, -40(%rbp)	#, o
	je	.L44	#,
	.loc 1 343 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp73
	movzwl	34(%rax), %eax	# o_3(D)->op_seq, D.21472
	cmpw	$-1, %ax	#, D.21472
	jne	.L45	#,
.L44:
	.loc 1 344 0 is_stmt 1
	jmp	.L43	#
.L45:
	.loc 1 346 0
	movq	-40(%rbp), %rax	# o, tmp74
	movzbl	37(%rax), %eax	# o_3(D)->op_private, D.21473
	movzbl	%al, %eax	# D.21473, D.21474
	andl	$64, %eax	#, D.21474
	testl	%eax, %eax	# D.21474
	je	.L47	#,
	.loc 1 347 0
	movq	-40(%rbp), %rax	# o, tmp75
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21472
	movzwl	%ax, %eax	# D.21472, D.21474
	cmpl	$179, %eax	#, D.21474
	jg	.L49	#,
	cmpl	$178, %eax	#, D.21474
	jge	.L50	#,
	subl	$167, %eax	#, tmp76
	cmpl	$1, %eax	#, tmp76
	ja	.L58	#,
	jmp	.L50	#
.L49:
	cmpl	$207, %eax	#, D.21474
	je	.L50	#,
	cmpl	$312, %eax	#, D.21474
	je	.L50	#,
	.loc 1 361 0
	jmp	.L58	#
.L50:
	.loc 1 355 0
	movq	-40(%rbp), %rax	# o, tmp77
	movq	24(%rax), %rax	# o_3(D)->op_targ, D.21475
	leaq	-1(%rax), %rdx	#, D.21475
	movq	-40(%rbp), %rax	# o, tmp78
	movq	%rdx, 24(%rax)	# D.21475, o_3(D)->op_targ
	movq	-40(%rbp), %rax	# o, tmp79
	movq	24(%rax), %rax	# o_3(D)->op_targ, tmp80
	movq	%rax, -24(%rbp)	# tmp80, refcnt
	.loc 1 357 0
	cmpq	$0, -24(%rbp)	#, refcnt
	je	.L51	#,
	.loc 1 358 0
	jmp	.L43	#
.L51:
	.loc 1 359 0
	jmp	.L47	#
.L58:
	.loc 1 361 0
	nop
.L47:
	.loc 1 365 0
	movq	-40(%rbp), %rax	# o, tmp81
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21473
	movzbl	%al, %eax	# D.21473, D.21474
	andl	$4, %eax	#, D.21474
	testl	%eax, %eax	# D.21474
	je	.L52	#,
	.loc 1 366 0
	movq	-40(%rbp), %rax	# o, tmp82
	movq	40(%rax), %rbx	# MEM[(struct UNOP *)o_3(D)].op_first, kid
	jmp	.L53	#
.L54:
	.loc 1 367 0 discriminator 2
	movq	8(%rbx), %r12	# kid_1->op_sibling, nextkid
	.loc 1 368 0 discriminator 2
	movq	%rbx, %rdi	# kid,
	call	Perl_op_free	#
	.loc 1 366 0 discriminator 2
	movq	%r12, %rbx	# nextkid, kid
.L53:
	.loc 1 366 0 is_stmt 0 discriminator 1
	testq	%rbx, %rbx	# kid
	jne	.L54	#,
.L52:
	.loc 1 371 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp83
	movzwl	32(%rax), %eax	# o_3(D)->op_type, tmp84
	movw	%ax, -26(%rbp)	# tmp84, type
	.loc 1 372 0
	cmpw	$0, -26(%rbp)	#, type
	jne	.L55	#,
	.loc 1 373 0
	movq	-40(%rbp), %rax	# o, tmp85
	movq	24(%rax), %rax	# o_3(D)->op_targ, D.21475
	movw	%ax, -26(%rbp)	# D.21475, type
.L55:
	.loc 1 377 0
	cmpw	$174, -26(%rbp)	#, type
	je	.L56	#,
	.loc 1 377 0 is_stmt 0 discriminator 1
	cmpw	$349, -26(%rbp)	#, type
	je	.L56	#,
	cmpw	$175, -26(%rbp)	#, type
	jne	.L57	#,
.L56:
	.loc 1 378 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp86
	movq	%rax, %rdi	# tmp86,
	call	S_cop_free	#
.L57:
	.loc 1 380 0
	movq	-40(%rbp), %rax	# o, tmp87
	movq	%rax, %rdi	# tmp87,
	call	Perl_op_clear	#
	.loc 1 381 0
	movq	-40(%rbp), %rax	# o, tmp88
	movq	%rax, %rdi	# tmp88,
	call	Perl_safesysfree	#
.L43:
	.loc 1 382 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	Perl_op_free, .-Perl_op_free
	.globl	Perl_op_clear
	.type	Perl_op_clear, @function
Perl_op_clear:
.LFB10:
	.loc 1 386 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 388 0
	movq	-40(%rbp), %rax	# o, tmp91
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21477
	movzwl	%ax, %eax	# D.21477, D.21478
	cmpl	$33, %eax	#, D.21478
	je	.L61	#,
	cmpl	$33, %eax	#, D.21478
	jg	.L62	#,
	cmpl	$7, %eax	#, D.21478
	jg	.L63	#,
	cmpl	$6, %eax	#, D.21478
	jge	.L64	#,
	testl	%eax, %eax	# D.21478
	je	.L65	#,
	cmpl	$5, %eax	#, D.21478
	je	.L66	#,
	jmp	.L60	#
.L63:
	cmpl	$13, %eax	#, D.21478
	je	.L67	#,
	cmpl	$13, %eax	#, D.21478
	jl	.L60	#,
	cmpl	$31, %eax	#, D.21478
	jl	.L60	#,
	jmp	.L68	#
.L62:
	cmpl	$187, %eax	#, D.21478
	jg	.L69	#,
	cmpl	$185, %eax	#, D.21478
	jge	.L70	#,
	cmpl	$35, %eax	#, D.21478
	je	.L71	#,
	cmpl	$126, %eax	#, D.21478
	je	.L64	#,
	jmp	.L60	#
.L69:
	cmpl	$311, %eax	#, D.21478
	je	.L65	#,
	cmpl	$350, %eax	#, D.21478
	je	.L66	#,
	cmpl	$189, %eax	#, D.21478
	je	.L70	#,
	jmp	.L60	#
.L65:
	.loc 1 394 0
	movq	-40(%rbp), %rax	# o, tmp92
	movq	$0, 24(%rax)	#, o_3(D)->op_targ
	.loc 1 395 0
	jmp	.L72	#
.L60:
	.loc 1 403 0
	movq	-40(%rbp), %rax	# o, tmp93
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21479
	movzbl	%al, %eax	# D.21479, D.21478
	andl	$16, %eax	#, D.21478
	testl	%eax, %eax	# D.21478
	je	.L72	#,
	.loc 1 404 0
	movq	-40(%rbp), %rax	# o, tmp94
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21477
	movzwl	%ax, %eax	# D.21477, D.21478
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21480
	cmpq	$Perl_ck_ftst, %rax	#, D.21480
	jne	.L72	#,
.L64:
	.loc 1 410 0
	movq	-40(%rbp), %rax	# o, tmp96
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21477
	cmpw	$126, %ax	#, D.21477
	jne	.L73	#,
	.loc 1 410 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp97
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21479
	testb	%al, %al	# D.21481
	js	.L74	#,
.L73:
	.loc 1 420 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp98
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_3(D)].op_sv, D.21482
	movq	%rax, %rdi	# D.21482,
	call	Perl_sv_free	#
	.loc 1 421 0
	movq	-40(%rbp), %rax	# o, tmp99
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)o_3(D)].op_sv
	.loc 1 424 0
	jmp	.L72	#
.L74:
	jmp	.L72	#
.L66:
	.loc 1 427 0
	movq	-40(%rbp), %rax	# o, tmp100
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_3(D)].op_sv, D.21482
	movq	%rax, %rdi	# D.21482,
	call	Perl_sv_free	#
	.loc 1 428 0
	movq	-40(%rbp), %rax	# o, tmp101
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)o_3(D)].op_sv
	.loc 1 441 0
	jmp	.L72	#
.L70:
	.loc 1 446 0
	movq	-40(%rbp), %rax	# o, tmp102
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21479
	movzbl	%al, %eax	# D.21479, D.21478
	andl	$196, %eax	#, D.21478
	testl	%eax, %eax	# D.21478
	je	.L71	#,
	.loc 1 447 0
	jmp	.L72	#
.L71:
	.loc 1 450 0
	movq	-40(%rbp), %rax	# o, tmp103
	movzbl	37(%rax), %eax	# o_3(D)->op_private, D.21479
	movzbl	%al, %eax	# D.21479, D.21478
	andl	$3, %eax	#, D.21478
	testl	%eax, %eax	# D.21478
	je	.L75	#,
	.loc 1 451 0
	movq	-40(%rbp), %rax	# o, tmp104
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_3(D)].op_sv, D.21482
	movq	%rax, %rdi	# D.21482,
	call	Perl_sv_free	#
	.loc 1 452 0
	movq	-40(%rbp), %rax	# o, tmp105
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)o_3(D)].op_sv
	.loc 1 458 0
	jmp	.L72	#
.L75:
	.loc 1 455 0
	movq	-40(%rbp), %rax	# o, tmp106
	movq	40(%rax), %rax	# MEM[(struct PVOP *)o_3(D)].op_pv, D.21483
	movq	%rax, %rdi	# D.21483,
	call	Perl_safesysfree	#
	.loc 1 456 0
	movq	-40(%rbp), %rax	# o, tmp107
	movq	$0, 40(%rax)	#, MEM[(struct PVOP *)o_3(D)].op_pv
	.loc 1 458 0
	jmp	.L72	#
.L61:
	.loc 1 460 0
	movq	-40(%rbp), %rax	# o, tmp108
	movq	56(%rax), %rax	# MEM[(struct PMOP *)o_3(D)].op_pmreplroot, D.21484
	movq	%rax, %rdi	# D.21484,
	call	Perl_op_free	#
	.loc 1 461 0
	jmp	.L68	#
.L67:
	.loc 1 470 0
	movq	-40(%rbp), %rax	# o, tmp109
	movq	56(%rax), %rax	# MEM[(struct PMOP *)o_3(D)].op_pmreplroot, D.21484
	movq	%rax, %rdi	# D.21484,
	call	Perl_sv_free	#
.L68:
.LBB3:
	.loc 1 477 0
	movq	-40(%rbp), %rax	# o, tmp110
	movq	104(%rax), %rax	# MEM[(struct PMOP *)o_3(D)].op_pmstash, tmp111
	movq	%rax, -8(%rbp)	# tmp111, pmstash
	.loc 1 478 0
	cmpq	$0, -8(%rbp)	#, pmstash
	je	.L77	#,
	.loc 1 478 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# pmstash, tmp112
	movl	8(%rax), %eax	# pmstash_27->sv_refcnt, D.21485
	testl	%eax, %eax	# D.21485
	je	.L77	#,
.LBB4:
	.loc 1 479 0 is_stmt 1
	movq	-8(%rbp), %rax	# pmstash, tmp113
	movq	(%rax), %rax	# pmstash_27->sv_any, D.21486
	movq	72(%rax), %rax	# _29->xhv_pmroot, tmp114
	movq	%rax, -24(%rbp)	# tmp114, pmop
	.loc 1 480 0
	movq	$0, -16(%rbp)	#, lastpmop
	.loc 1 481 0
	jmp	.L78	#
.L82:
	.loc 1 482 0
	movq	-40(%rbp), %rax	# o, tmp115
	cmpq	-24(%rbp), %rax	# pmop, tmp115
	jne	.L79	#,
	.loc 1 483 0
	cmpq	$0, -16(%rbp)	#, lastpmop
	je	.L80	#,
	.loc 1 484 0
	movq	-24(%rbp), %rax	# pmop, tmp116
	movq	72(%rax), %rdx	# pmop_1->op_pmnext, D.21487
	movq	-16(%rbp), %rax	# lastpmop, tmp117
	movq	%rdx, 72(%rax)	# D.21487, lastpmop_2->op_pmnext
	.loc 1 487 0
	jmp	.L77	#
.L80:
	.loc 1 486 0
	movq	-8(%rbp), %rax	# pmstash, tmp118
	movq	(%rax), %rax	# pmstash_27->sv_any, D.21486
	movq	-24(%rbp), %rdx	# pmop, tmp119
	movq	72(%rdx), %rdx	# pmop_1->op_pmnext, D.21487
	movq	%rdx, 72(%rax)	# D.21487, _33->xhv_pmroot
	.loc 1 487 0
	jmp	.L77	#
.L79:
	.loc 1 489 0
	movq	-24(%rbp), %rax	# pmop, tmp120
	movq	%rax, -16(%rbp)	# tmp120, lastpmop
	.loc 1 490 0
	movq	-24(%rbp), %rax	# pmop, tmp121
	movq	72(%rax), %rax	# pmop_1->op_pmnext, tmp122
	movq	%rax, -24(%rbp)	# tmp122, pmop
.L78:
	.loc 1 481 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, pmop
	jne	.L82	#,
.L77:
.LBE4:
.LBE3:
	.loc 1 495 0
	movq	-40(%rbp), %rax	# o, tmp123
	movq	$0, 56(%rax)	#, MEM[(struct PMOP *)o_3(D)].op_pmreplroot
	.loc 1 502 0
	movq	PL_regfree(%rip), %rax	# PL_regfree, PL_regfree.22
	movq	-40(%rbp), %rdx	# o, tmp124
	movq	80(%rdx), %rdx	# MEM[(struct PMOP *)o_3(D)].op_pmregexp, D.21488
	movq	%rdx, %rdi	# D.21488,
	call	*%rax	# PL_regfree.22
	.loc 1 503 0
	movq	-40(%rbp), %rax	# o, tmp125
	movq	$0, 80(%rax)	#, MEM[(struct PMOP *)o_3(D)].op_pmregexp
	.loc 1 512 0
	nop
.L72:
	.loc 1 515 0
	movq	-40(%rbp), %rax	# o, tmp126
	movq	24(%rax), %rax	# o_3(D)->op_targ, D.21489
	testq	%rax, %rax	# D.21489
	je	.L59	#,
	.loc 1 516 0
	movq	-40(%rbp), %rax	# o, tmp127
	movq	24(%rax), %rax	# o_3(D)->op_targ, D.21489
	movq	%rax, %rdi	# D.21489,
	call	Perl_pad_free	#
	.loc 1 517 0
	movq	-40(%rbp), %rax	# o, tmp128
	movq	$0, 24(%rax)	#, o_3(D)->op_targ
.L59:
	.loc 1 519 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	Perl_op_clear, .-Perl_op_clear
	.type	S_cop_free, @function
S_cop_free:
.LFB11:
	.loc 1 523 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# cop, cop
	.loc 1 524 0
	movq	-8(%rbp), %rax	# cop, tmp67
	movq	40(%rax), %rax	# cop_1(D)->cop_label, D.21493
	movq	%rax, %rdi	# D.21493,
	call	Perl_safesysfree	#
	.loc 1 525 0
	movq	-8(%rbp), %rax	# cop, tmp68
	movq	56(%rax), %rax	# cop_1(D)->cop_filegv, D.21494
	movq	%rax, %rdi	# D.21494,
	call	Perl_sv_free	#
	movq	-8(%rbp), %rax	# cop, tmp69
	movq	$0, 56(%rax)	#, cop_1(D)->cop_filegv
	.loc 1 527 0
	movq	-8(%rbp), %rax	# cop, tmp70
	movq	80(%rax), %rax	# cop_1(D)->cop_warnings, D.21495
	testq	%rax, %rax	# D.21495
	je	.L85	#,
	.loc 1 527 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# cop, tmp71
	movq	80(%rax), %rax	# cop_1(D)->cop_warnings, D.21495
	cmpq	$16, %rax	#, D.21495
	je	.L85	#,
	movq	-8(%rbp), %rax	# cop, tmp72
	movq	80(%rax), %rax	# cop_1(D)->cop_warnings, D.21495
	cmpq	$32, %rax	#, D.21495
	je	.L85	#,
	.loc 1 528 0 is_stmt 1
	movq	-8(%rbp), %rax	# cop, tmp73
	movq	80(%rax), %rax	# cop_1(D)->cop_warnings, D.21495
	movq	%rax, %rdi	# D.21495,
	call	Perl_sv_free	#
.L85:
	.loc 1 529 0
	movq	-8(%rbp), %rax	# cop, tmp74
	movq	88(%rax), %rax	# cop_1(D)->cop_io, D.21495
	testq	%rax, %rax	# D.21495
	je	.L84	#,
	.loc 1 537 0
	movq	-8(%rbp), %rax	# cop, tmp75
	movq	88(%rax), %rax	# cop_1(D)->cop_io, D.21495
	movq	%rax, %rdi	# D.21495,
	call	Perl_sv_free	#
.L84:
	.loc 1 540 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	S_cop_free, .-S_cop_free
	.globl	Perl_op_null
	.type	Perl_op_null, @function
Perl_op_null:
.LFB12:
	.loc 1 544 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 545 0
	movq	-8(%rbp), %rax	# o, tmp63
	movzwl	32(%rax), %eax	# o_1(D)->op_type, D.21496
	testw	%ax, %ax	# D.21496
	jne	.L88	#,
	.loc 1 546 0
	jmp	.L87	#
.L88:
	.loc 1 547 0
	movq	-8(%rbp), %rax	# o, tmp64
	movq	%rax, %rdi	# tmp64,
	call	Perl_op_clear	#
	.loc 1 548 0
	movq	-8(%rbp), %rax	# o, tmp65
	movzwl	32(%rax), %eax	# o_1(D)->op_type, D.21496
	movzwl	%ax, %edx	# D.21496, D.21497
	movq	-8(%rbp), %rax	# o, tmp66
	movq	%rdx, 24(%rax)	# D.21497, o_1(D)->op_targ
	.loc 1 549 0
	movq	-8(%rbp), %rax	# o, tmp67
	movw	$0, 32(%rax)	#, o_1(D)->op_type
	.loc 1 550 0
	movq	PL_ppaddr(%rip), %rdx	# PL_ppaddr, D.21498
	movq	-8(%rbp), %rax	# o, tmp68
	movq	%rdx, 16(%rax)	# D.21498, o_1(D)->op_ppaddr
.L87:
	.loc 1 551 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	Perl_op_null, .-Perl_op_null
	.globl	Perl_op_refcnt_lock
	.type	Perl_op_refcnt_lock, @function
Perl_op_refcnt_lock:
.LFB13:
	.loc 1 555 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 557 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	Perl_op_refcnt_lock, .-Perl_op_refcnt_lock
	.globl	Perl_op_refcnt_unlock
	.type	Perl_op_refcnt_unlock, @function
Perl_op_refcnt_unlock:
.LFB14:
	.loc 1 561 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 563 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	Perl_op_refcnt_unlock, .-Perl_op_refcnt_unlock
	.globl	Perl_linklist
	.type	Perl_linklist, @function
Perl_linklist:
.LFB15:
	.loc 1 571 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 574 0
	movq	-24(%rbp), %rax	# o, tmp75
	movq	(%rax), %rax	# o_5(D)->op_next, D.21499
	testq	%rax, %rax	# D.21499
	je	.L93	#,
	.loc 1 575 0
	movq	-24(%rbp), %rax	# o, tmp76
	movq	(%rax), %rax	# o_5(D)->op_next, D.21499
	jmp	.L94	#
.L93:
	.loc 1 578 0
	movq	-24(%rbp), %rax	# o, tmp77
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21499
	testq	%rax, %rax	# D.21499
	je	.L95	#,
	.loc 1 579 0
	movq	-24(%rbp), %rax	# o, tmp78
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21499
	movq	(%rax), %rax	# _9->op_next, D.21499
	testq	%rax, %rax	# D.21499
	je	.L96	#,
	.loc 1 579 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp79
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21499
	movq	(%rax), %rax	# _11->op_next, iftmp.23
	jmp	.L97	#
.L96:
	.loc 1 579 0 discriminator 2
	movq	-24(%rbp), %rax	# o, tmp80
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21499
	movq	%rax, %rdi	# D.21499,
	call	Perl_linklist	#
.L97:
	.loc 1 579 0 discriminator 3
	movq	-24(%rbp), %rdx	# o, tmp81
	movq	%rax, (%rdx)	# iftmp.23, o_5(D)->op_next
	.loc 1 580 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# o, tmp82
	movq	40(%rax), %rbx	# MEM[(struct UNOP *)o_5(D)].op_first, kid
	jmp	.L98	#
.L103:
	.loc 1 581 0
	movq	8(%rbx), %rax	# kid_1->op_sibling, D.21499
	testq	%rax, %rax	# D.21499
	je	.L99	#,
	.loc 1 582 0
	movq	8(%rbx), %rax	# kid_1->op_sibling, D.21499
	movq	(%rax), %rax	# _17->op_next, D.21499
	testq	%rax, %rax	# D.21499
	je	.L100	#,
	.loc 1 582 0 is_stmt 0 discriminator 1
	movq	8(%rbx), %rax	# kid_1->op_sibling, D.21499
	movq	(%rax), %rax	# _19->op_next, iftmp.24
	jmp	.L101	#
.L100:
	.loc 1 582 0 discriminator 2
	movq	8(%rbx), %rax	# kid_1->op_sibling, D.21499
	movq	%rax, %rdi	# D.21499,
	call	Perl_linklist	#
.L101:
	.loc 1 582 0 discriminator 1
	movq	%rax, (%rbx)	# iftmp.24, kid_1->op_next
	jmp	.L102	#
.L99:
	.loc 1 584 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp83
	movq	%rax, (%rbx)	# tmp83, kid_1->op_next
.L102:
	.loc 1 580 0
	movq	8(%rbx), %rbx	# kid_1->op_sibling, kid
.L98:
	.loc 1 580 0 is_stmt 0 discriminator 1
	testq	%rbx, %rbx	# kid
	jne	.L103	#,
	jmp	.L104	#
.L95:
	.loc 1 588 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp84
	movq	-24(%rbp), %rdx	# o, tmp85
	movq	%rdx, (%rax)	# tmp85, o_5(D)->op_next
.L104:
	.loc 1 590 0
	movq	-24(%rbp), %rax	# o, tmp86
	movq	(%rax), %rax	# o_5(D)->op_next, D.21499
.L94:
	.loc 1 591 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	Perl_linklist, .-Perl_linklist
	.globl	Perl_scalarkids
	.type	Perl_scalarkids, @function
Perl_scalarkids:
.LFB16:
	.loc 1 595 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 597 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L106	#,
	.loc 1 597 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp64
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.21500
	movzbl	%al, %eax	# D.21500, D.21501
	andl	$4, %eax	#, D.21501
	testl	%eax, %eax	# D.21501
	je	.L106	#,
	.loc 1 598 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp65
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp66
	movq	%rax, -8(%rbp)	# tmp66, kid
	jmp	.L107	#
.L108:
	.loc 1 599 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_scalar	#
	.loc 1 598 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp68
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp69
	movq	%rax, -8(%rbp)	# tmp69, kid
.L107:
	.loc 1 598 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L108	#,
.L106:
	.loc 1 601 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.21502
	.loc 1 602 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	Perl_scalarkids, .-Perl_scalarkids
	.section	.rodata
	.align 8
.LC10:
	.string	"Found = in conditional, should be =="
	.text
	.type	S_scalarboolean, @function
S_scalarboolean:
.LFB17:
	.loc 1 606 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 607 0
	movq	-24(%rbp), %rax	# o, tmp88
	movzwl	32(%rax), %eax	# o_1(D)->op_type, D.21503
	cmpw	$36, %ax	#, D.21503
	jne	.L111	#,
	.loc 1 607 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp89
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_1(D)].op_first, D.21504
	movzwl	32(%rax), %eax	# _3->op_type, D.21503
	cmpw	$5, %ax	#, D.21503
	jne	.L111	#,
	.loc 1 608 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.25
	movq	80(%rax), %rax	# PL_curcop.25_5->cop_warnings, D.21505
	testq	%rax, %rax	# D.21505
	je	.L112	#,
	.loc 1 608 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.26
	movq	80(%rax), %rax	# PL_curcop.26_7->cop_warnings, D.21505
	cmpq	$32, %rax	#, D.21505
	je	.L112	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.27
	movq	80(%rax), %rax	# PL_curcop.27_9->cop_warnings, D.21505
	cmpq	$16, %rax	#, D.21505
	je	.L113	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.28
	movq	80(%rax), %rax	# PL_curcop.28_11->cop_warnings, D.21505
	movq	(%rax), %rax	# _12->sv_any, D.21506
	movq	(%rax), %rax	# MEM[(struct XPV *)_13].xpv_pv, D.21507
	addq	$7, %rax	#, D.21507
	movzbl	(%rax), %eax	# *_15, D.21508
	movsbl	%al, %eax	# D.21508, D.21509
	andl	$1, %eax	#, D.21509
	testl	%eax, %eax	# D.21509
	jne	.L113	#,
.L112:
	.loc 1 608 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.29
	movq	80(%rax), %rax	# PL_curcop.29_19->cop_warnings, D.21505
	testq	%rax, %rax	# D.21505
	jne	.L111	#,
	.loc 1 608 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.30
	movzbl	%al, %eax	# PL_dowarn.30, D.21509
	andl	$1, %eax	#, D.21509
	testl	%eax, %eax	# D.21509
	je	.L111	#,
.L113:
.LBB5:
	.loc 1 609 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.31
	movl	72(%rax), %eax	# PL_curcop.31_24->cop_line, tmp90
	movl	%eax, -4(%rbp)	# tmp90, oldline
	.loc 1 611 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.32
	cmpl	$-1, %eax	#, PL_copline.32
	je	.L114	#,
	.loc 1 612 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.33
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.34
	movl	%edx, 72(%rax)	# PL_copline.34, PL_curcop.33_27->cop_line
.L114:
	.loc 1 613 0
	movl	$.LC10, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 614 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.35
	movl	-4(%rbp), %edx	# oldline, tmp91
	movl	%edx, 72(%rax)	# tmp91, PL_curcop.35_29->cop_line
.L111:
.LBE5:
	.loc 1 617 0
	movq	-24(%rbp), %rax	# o, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_scalar	#
	.loc 1 618 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	S_scalarboolean, .-S_scalarboolean
	.section	.rodata
.LC11:
	.string	"implicit split to @_"
	.align 8
.LC12:
	.string	"Useless use of sort in scalar context"
	.text
	.globl	Perl_scalar
	.type	Perl_scalar, @function
Perl_scalar:
.LFB18:
	.loc 1 622 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 626 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L117	#,
	.loc 1 626 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp105
	movzbl	36(%rax), %eax	# o_6(D)->op_flags, D.21512
	movzbl	%al, %eax	# D.21512, D.21513
	andl	$3, %eax	#, D.21513
	testl	%eax, %eax	# D.21513
	jne	.L117	#,
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.36
	testl	%eax, %eax	# PL_error_count.36
	jne	.L117	#,
	.loc 1 627 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp106
	movzwl	32(%rax), %eax	# o_6(D)->op_type, D.21514
	cmpw	$184, %ax	#, D.21514
	jne	.L118	#,
.L117:
	.loc 1 629 0
	movq	-24(%rbp), %rax	# o, D.21511
	jmp	.L119	#
.L118:
	.loc 1 632 0
	movq	-24(%rbp), %rax	# o, tmp107
	movzbl	36(%rax), %eax	# o_6(D)->op_flags, D.21512
	andl	$-4, %eax	#, D.21515
	orl	$2, %eax	#, D.21515
	movl	%eax, %edx	# D.21515, D.21512
	movq	-24(%rbp), %rax	# o, tmp108
	movb	%dl, 36(%rax)	# D.21512, o_6(D)->op_flags
	.loc 1 634 0
	movq	-24(%rbp), %rax	# o, tmp109
	movzwl	32(%rax), %eax	# o_6(D)->op_type, D.21514
	movzwl	%ax, %eax	# D.21514, D.21513
	cmpl	$160, %eax	#, D.21513
	jg	.L121	#,
	cmpl	$159, %eax	#, D.21513
	jge	.L122	#,
	cmpl	$139, %eax	#, D.21513
	je	.L123	#,
	cmpl	$139, %eax	#, D.21513
	jg	.L124	#,
	cmpl	$61, %eax	#, D.21513
	je	.L125	#,
	jmp	.L120	#
.L124:
	cmpl	$141, %eax	#, D.21513
	je	.L126	#,
	cmpl	$150, %eax	#, D.21513
	je	.L127	#,
	jmp	.L120	#
.L121:
	cmpl	$178, %eax	#, D.21513
	je	.L128	#,
	cmpl	$178, %eax	#, D.21513
	jg	.L129	#,
	cmpl	$162, %eax	#, D.21513
	je	.L122	#,
	cmpl	$173, %eax	#, D.21513
	je	.L126	#,
	jmp	.L120	#
.L129:
	cmpl	$179, %eax	#, D.21513
	je	.L126	#,
	cmpl	$314, %eax	#, D.21513
	je	.L128	#,
	jmp	.L120	#
.L125:
	.loc 1 636 0
	movq	-24(%rbp), %rax	# o, tmp110
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_6(D)].op_first, D.21511
	movq	%rax, %rdi	# D.21511,
	call	Perl_scalar	#
	.loc 1 637 0
	jmp	.L130	#
.L122:
	.loc 1 641 0
	movq	-24(%rbp), %rax	# o, tmp111
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_6(D)].op_first, D.21511
	movq	8(%rax), %rax	# _20->op_sibling, tmp112
	movq	%rax, -8(%rbp)	# tmp112, kid
	jmp	.L131	#
.L132:
	.loc 1 642 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp113
	movq	%rax, %rdi	# tmp113,
	call	Perl_scalar	#
	.loc 1 641 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp114
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp115
	movq	%rax, -8(%rbp)	# tmp115, kid
.L131:
	.loc 1 641 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L132	#,
	.loc 1 643 0 is_stmt 1
	jmp	.L130	#
.L123:
	.loc 1 645 0
	movq	-24(%rbp), %rax	# o, tmp116
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_6(D)].op_first, tmp117
	movq	%rax, -8(%rbp)	# tmp117, kid
	cmpq	$0, -8(%rbp)	#, kid
	je	.L120	#,
	.loc 1 645 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp118
	movzwl	32(%rax), %eax	# kid_23->op_type, D.21514
	cmpw	$13, %ax	#, D.21514
	jne	.L120	#,
	.loc 1 646 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp119
	movq	56(%rax), %rax	# MEM[(struct PMOP *)kid_23].op_pmreplroot, D.21511
	testq	%rax, %rax	# D.21511
	jne	.L120	#,
	.loc 1 647 0
	movl	$.LC11, %edi	#,
	call	Perl_deprecate_old	#
.L120:
	.loc 1 655 0
	movq	-24(%rbp), %rax	# o, tmp120
	movzbl	36(%rax), %eax	# o_6(D)->op_flags, D.21512
	movzbl	%al, %eax	# D.21512, D.21513
	andl	$4, %eax	#, D.21513
	testl	%eax, %eax	# D.21513
	je	.L133	#,
	.loc 1 656 0
	movq	-24(%rbp), %rax	# o, tmp121
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_6(D)].op_first, tmp122
	movq	%rax, -8(%rbp)	# tmp122, kid
	jmp	.L134	#
.L135:
	.loc 1 657 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp123
	movq	%rax, %rdi	# tmp123,
	call	Perl_scalar	#
	.loc 1 656 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp124
	movq	8(%rax), %rax	# kid_2->op_sibling, tmp125
	movq	%rax, -8(%rbp)	# tmp125, kid
.L134:
	.loc 1 656 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L135	#,
.L133:
	.loc 1 659 0 is_stmt 1
	jmp	.L130	#
.L128:
	.loc 1 662 0
	movq	-24(%rbp), %rax	# o, tmp126
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_6(D)].op_first, tmp127
	movq	%rax, -8(%rbp)	# tmp127, kid
	.loc 1 663 0
	movq	-8(%rbp), %rax	# kid, tmp128
	movq	%rax, %rdi	# tmp128,
	call	Perl_scalar	#
	.loc 1 664 0
	jmp	.L136	#
.L138:
	.loc 1 665 0
	movq	-8(%rbp), %rax	# kid, tmp129
	movq	8(%rax), %rax	# kid_32->op_sibling, D.21511
	testq	%rax, %rax	# D.21511
	je	.L137	#,
	.loc 1 666 0
	movq	-8(%rbp), %rax	# kid, tmp130
	movq	%rax, %rdi	# tmp130,
	call	Perl_scalarvoid	#
	jmp	.L136	#
.L137:
	.loc 1 668 0
	movq	-8(%rbp), %rax	# kid, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_scalar	#
.L136:
	.loc 1 664 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp132
	movq	8(%rax), %rax	# kid_3->op_sibling, tmp133
	movq	%rax, -8(%rbp)	# tmp133, kid
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L138	#,
.LBB6:
	.loc 1 670 0
	movl	$PL_compiling, %eax	#, PL_compiling.37
	movq	%rax, PL_curcop(%rip)	# PL_compiling.37, PL_curcop
.LBE6:
	.loc 1 671 0
	jmp	.L130	#
.L126:
	.loc 1 675 0
	movq	-24(%rbp), %rax	# o, tmp134
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_6(D)].op_first, tmp135
	movq	%rax, -8(%rbp)	# tmp135, kid
	jmp	.L139	#
.L142:
	.loc 1 676 0
	movq	-8(%rbp), %rax	# kid, tmp136
	movq	8(%rax), %rax	# kid_4->op_sibling, D.21511
	testq	%rax, %rax	# D.21511
	je	.L140	#,
	.loc 1 677 0
	movq	-8(%rbp), %rax	# kid, tmp137
	movq	%rax, %rdi	# tmp137,
	call	Perl_scalarvoid	#
	jmp	.L141	#
.L140:
	.loc 1 679 0
	movq	-8(%rbp), %rax	# kid, tmp138
	movq	%rax, %rdi	# tmp138,
	call	Perl_scalar	#
.L141:
	.loc 1 675 0
	movq	-8(%rbp), %rax	# kid, tmp139
	movq	8(%rax), %rax	# kid_4->op_sibling, tmp140
	movq	%rax, -8(%rbp)	# tmp140, kid
.L139:
	.loc 1 675 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L142	#,
.LBB7:
	.loc 1 681 0 is_stmt 1
	movl	$PL_compiling, %eax	#, PL_compiling.38
	movq	%rax, PL_curcop(%rip)	# PL_compiling.38, PL_curcop
.LBE7:
	.loc 1 682 0
	jmp	.L130	#
.L127:
	.loc 1 684 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.39
	movq	80(%rax), %rax	# PL_curcop.39_41->cop_warnings, D.21517
	testq	%rax, %rax	# D.21517
	je	.L143	#,
	.loc 1 684 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.40
	movq	80(%rax), %rax	# PL_curcop.40_43->cop_warnings, D.21517
	cmpq	$32, %rax	#, D.21517
	je	.L143	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.41
	movq	80(%rax), %rax	# PL_curcop.41_45->cop_warnings, D.21517
	cmpq	$16, %rax	#, D.21517
	je	.L144	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.42
	movq	80(%rax), %rax	# PL_curcop.42_47->cop_warnings, D.21517
	movq	(%rax), %rax	# _48->sv_any, D.21518
	movq	(%rax), %rax	# MEM[(struct XPV *)_49].xpv_pv, D.21519
	addq	$11, %rax	#, D.21519
	movzbl	(%rax), %eax	# *_51, D.21520
	movsbl	%al, %eax	# D.21520, D.21513
	andl	$4, %eax	#, D.21513
	testl	%eax, %eax	# D.21513
	jne	.L144	#,
.L143:
	.loc 1 684 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.43
	movq	80(%rax), %rax	# PL_curcop.43_55->cop_warnings, D.21517
	testq	%rax, %rax	# D.21517
	jne	.L130	#,
	.loc 1 684 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.44
	movzbl	%al, %eax	# PL_dowarn.44, D.21513
	andl	$1, %eax	#, D.21513
	testl	%eax, %eax	# D.21513
	je	.L130	#,
.L144:
	.loc 1 685 0 is_stmt 1
	movl	$.LC12, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L130:
	.loc 1 687 0
	movq	-24(%rbp), %rax	# o, D.21511
.L119:
	.loc 1 688 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	Perl_scalar, .-Perl_scalar
	.section	.rodata
.LC13:
	.string	"a variable"
.LC14:
	.string	"a constant"
.LC17:
	.string	"di"
.LC18:
	.string	"ds"
.LC19:
	.string	"ig"
	.align 8
.LC20:
	.string	"Useless use of %s in void context"
	.text
	.globl	Perl_scalarvoid
	.type	Perl_scalarvoid, @function
Perl_scalarvoid:
.LFB19:
	.loc 1 692 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 694 0
	movq	$0, -16(%rbp)	#, useless
	.loc 1 698 0
	movq	-40(%rbp), %rax	# o, tmp186
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	cmpw	$174, %ax	#, D.21527
	je	.L146	#,
	.loc 1 699 0
	movq	-40(%rbp), %rax	# o, tmp187
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	cmpw	$349, %ax	#, D.21527
	je	.L146	#,
	.loc 1 700 0
	movq	-40(%rbp), %rax	# o, tmp188
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	cmpw	$175, %ax	#, D.21527
	je	.L146	#,
	.loc 1 701 0
	movq	-40(%rbp), %rax	# o, tmp189
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	testw	%ax, %ax	# D.21527
	jne	.L147	#,
	.loc 1 701 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp190
	movq	24(%rax), %rax	# o_10(D)->op_targ, D.21528
	cmpq	$174, %rax	#, D.21528
	je	.L146	#,
	.loc 1 702 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp191
	movq	24(%rax), %rax	# o_10(D)->op_targ, D.21528
	cmpq	$349, %rax	#, D.21528
	je	.L146	#,
	.loc 1 703 0
	movq	-40(%rbp), %rax	# o, tmp192
	movq	24(%rax), %rax	# o_10(D)->op_targ, D.21528
	cmpq	$175, %rax	#, D.21528
	jne	.L147	#,
.L146:
	.loc 1 704 0
	movq	-40(%rbp), %rax	# o, tmp193
	movq	%rax, PL_curcop(%rip)	# tmp193, PL_curcop
.L147:
	.loc 1 707 0
	movq	-40(%rbp), %rax	# o, tmp194
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	andl	$3, %eax	#, tmp195
	movb	%al, -25(%rbp)	# tmp195, want
	.loc 1 708 0
	cmpb	$0, -25(%rbp)	#, want
	je	.L148	#,
	.loc 1 708 0 is_stmt 0 discriminator 1
	cmpb	$2, -25(%rbp)	#, want
	jne	.L149	#,
.L148:
	.loc 1 708 0 discriminator 2
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.45
	testl	%eax, %eax	# PL_error_count.45
	jne	.L149	#,
	.loc 1 709 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp196
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	cmpw	$184, %ax	#, D.21527
	jne	.L150	#,
.L149:
	.loc 1 711 0
	movq	-40(%rbp), %rax	# o, D.21526
	jmp	.L151	#
.L150:
	.loc 1 714 0
	movq	-40(%rbp), %rax	# o, tmp197
	movzbl	37(%rax), %eax	# o_10(D)->op_private, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$16, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L152	#,
	.loc 1 715 0
	movq	-40(%rbp), %rax	# o, tmp198
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	movzwl	%ax, %eax	# D.21527, D.21530
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21531
	andl	$256, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	je	.L152	#,
	.loc 1 717 0
	movq	-40(%rbp), %rax	# o, tmp200
	movq	%rax, %rdi	# tmp200,
	call	Perl_scalar	#
	jmp	.L151	#
.L152:
	.loc 1 720 0
	movq	-40(%rbp), %rax	# o, tmp201
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	andl	$-4, %eax	#, D.21532
	orl	$1, %eax	#, D.21532
	movl	%eax, %edx	# D.21532, D.21529
	movq	-40(%rbp), %rax	# o, tmp202
	movb	%dl, 36(%rax)	# D.21529, o_10(D)->op_flags
	.loc 1 722 0
	movq	-40(%rbp), %rax	# o, tmp203
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	movzwl	%ax, %eax	# D.21527, D.21530
	cmpl	$345, %eax	#, D.21530
	ja	.L153	#,
	movl	%eax, %eax	# D.21530, tmp204
	movq	.L155(,%rax,8), %rax	#, tmp205
	jmp	*%rax	# tmp205
	.section	.rodata
	.align 8
	.align 4
.L155:
	.quad	.L154
	.quad	.L153
	.quad	.L156
	.quad	.L153
	.quad	.L157
	.quad	.L158
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L159
	.quad	.L159
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L160
	.quad	.L153
	.quad	.L161
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L162
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L157
	.quad	.L163
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L159
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L159
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L164
	.quad	.L157
	.quad	.L165
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L166
	.quad	.L166
	.quad	.L153
	.quad	.L166
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L165
	.quad	.L167
	.quad	.L167
	.quad	.L153
	.quad	.L167
	.quad	.L165
	.quad	.L165
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L165
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L157
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L168
	.quad	.L153
	.quad	.L169
	.quad	.L153
	.quad	.L167
	.quad	.L165
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.quad	.L157
	.quad	.L153
	.quad	.L153
	.quad	.L153
	.quad	.L157
	.text
.L153:
	.loc 1 724 0
	movq	-40(%rbp), %rax	# o, tmp206
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	movzwl	%ax, %eax	# D.21527, D.21530
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21531
	andl	$2, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	jne	.L162	#,
	.loc 1 725 0
	jmp	.L170	#
.L162:
	.loc 1 728 0
	movq	-40(%rbp), %rax	# o, tmp208
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$64, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L171	#,
	.loc 1 729 0
	jmp	.L170	#
.L171:
	.loc 1 730 0
	jmp	.L157	#
.L163:
	.loc 1 732 0
	movq	-40(%rbp), %rax	# o, tmp209
	movzbl	37(%rax), %eax	# o_10(D)->op_private, D.21529
	cmpb	$4, %al	#, D.21529
	jne	.L157	#,
	.loc 1 733 0
	jmp	.L170	#
.L157:
	.loc 1 804 0
	movq	-40(%rbp), %rax	# o, tmp210
	movzbl	37(%rax), %eax	# o_10(D)->op_private, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$144, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	jne	.L172	#,
	.loc 1 805 0
	movq	-40(%rbp), %rax	# o, tmp211
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	cmpw	$351, %ax	#, D.21527
	jne	.L173	#,
	.loc 1 805 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp212
	movq	%rax, %rdi	# tmp212,
	call	Perl_custom_op_desc	#
	jmp	.L174	#
.L173:
	.loc 1 805 0 discriminator 2
	movq	-40(%rbp), %rax	# o, tmp213
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21527
	movzwl	%ax, %eax	# D.21527, D.21530
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.46
.L174:
	.loc 1 805 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.46, useless
	.loc 1 806 0 is_stmt 1 discriminator 3
	jmp	.L170	#
.L172:
	.loc 1 806 0 is_stmt 0
	jmp	.L170	#
.L159:
	.loc 1 812 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp215
	movzbl	37(%rax), %eax	# o_10(D)->op_private, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$144, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	jne	.L175	#,
	.loc 1 813 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp216
	movq	8(%rax), %rax	# o_10(D)->op_sibling, D.21526
	.loc 1 812 0 discriminator 1
	testq	%rax, %rax	# D.21526
	je	.L176	#,
	.loc 1 813 0
	movq	-40(%rbp), %rax	# o, tmp217
	movq	8(%rax), %rax	# o_10(D)->op_sibling, D.21526
	movzwl	32(%rax), %eax	# _58->op_type, D.21527
	cmpw	$26, %ax	#, D.21527
	je	.L175	#,
.L176:
	.loc 1 814 0
	movq	$.LC13, -16(%rbp)	#, useless
	.loc 1 815 0
	jmp	.L170	#
.L175:
	jmp	.L170	#
.L158:
	.loc 1 818 0
	movq	-40(%rbp), %rax	# o, tmp218
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_10(D)].op_sv, tmp219
	movq	%rax, -8(%rbp)	# tmp219, sv
	.loc 1 819 0
	movq	-40(%rbp), %rax	# o, tmp220
	movzbl	37(%rax), %eax	# MEM[(struct SVOP *)o_10(D)].op_private, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$8, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L177	#,
	.loc 1 820 0
	movq	-40(%rbp), %rax	# o, tmp221
	movq	%rax, %rdi	# tmp221,
	call	S_no_bareword_allowed	#
	jmp	.L178	#
.L177:
	.loc 1 822 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.47
	movq	80(%rax), %rax	# PL_curcop.47_65->cop_warnings, D.21533
	testq	%rax, %rax	# D.21533
	je	.L179	#,
	.loc 1 822 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.48
	movq	80(%rax), %rax	# PL_curcop.48_67->cop_warnings, D.21533
	cmpq	$32, %rax	#, D.21533
	je	.L179	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.49
	movq	80(%rax), %rax	# PL_curcop.49_69->cop_warnings, D.21533
	cmpq	$16, %rax	#, D.21533
	je	.L180	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.50
	movq	80(%rax), %rax	# PL_curcop.50_71->cop_warnings, D.21533
	movq	(%rax), %rax	# _72->sv_any, D.21534
	movq	(%rax), %rax	# MEM[(struct XPV *)_73].xpv_pv, D.21535
	addq	$11, %rax	#, D.21535
	movzbl	(%rax), %eax	# *_75, D.21536
	movsbl	%al, %eax	# D.21536, D.21530
	andl	$4, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	jne	.L180	#,
.L179:
	.loc 1 822 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.51
	movq	80(%rax), %rax	# PL_curcop.51_79->cop_warnings, D.21533
	testq	%rax, %rax	# D.21533
	jne	.L178	#,
	.loc 1 822 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.52
	movzbl	%al, %eax	# PL_dowarn.52, D.21530
	andl	$1, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L178	#,
.L180:
	.loc 1 823 0 is_stmt 1
	movq	$.LC14, -16(%rbp)	#, useless
	.loc 1 826 0
	movq	-40(%rbp), %rax	# o, tmp222
	movzbl	37(%rax), %eax	# MEM[(struct SVOP *)o_10(D)].op_private, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$4, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L181	#,
	.loc 1 827 0
	movq	$0, -16(%rbp)	#, useless
	jmp	.L178	#
.L181:
	.loc 1 831 0
	movq	-8(%rbp), %rax	# sv, tmp223
	movl	12(%rax), %eax	# sv_61->sv_flags, D.21531
	andl	$196608, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	je	.L182	#,
	.loc 1 831 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp224
	movl	12(%rax), %eax	# sv_61->sv_flags, D.21531
	andl	$131072, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	je	.L183	#,
	.loc 1 831 0 discriminator 2
	movq	-8(%rbp), %rax	# sv, tmp225
	movq	(%rax), %rax	# sv_61->sv_any, D.21534
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_93].xnv_nv, D.21537
	xorpd	%xmm1, %xmm1	# tmp226
	ucomisd	%xmm1, %xmm0	# tmp226, D.21537
	jp	.L186	#,
	xorpd	%xmm1, %xmm1	# tmp227
	ucomisd	%xmm1, %xmm0	# tmp227, D.21537
	je	.L184	#,
	jmp	.L186	#
.L183:
	.loc 1 831 0 discriminator 3
	movq	-8(%rbp), %rax	# sv, tmp228
	movq	%rax, %rdi	# tmp228,
	call	Perl_sv_2nv	#
	xorpd	%xmm1, %xmm1	# tmp229
	ucomisd	%xmm1, %xmm0	# tmp229, D.21537
	jp	.L186	#,
	xorpd	%xmm1, %xmm1	# tmp230
	ucomisd	%xmm1, %xmm0	# tmp230, D.21537
	je	.L184	#,
.L186:
	.loc 1 831 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp231
	movl	12(%rax), %eax	# sv_61->sv_flags, D.21531
	andl	$131072, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	je	.L188	#,
	.loc 1 831 0 discriminator 4
	movq	-8(%rbp), %rax	# sv, tmp232
	movq	(%rax), %rax	# sv_61->sv_any, D.21534
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_98].xnv_nv, D.21537
	movsd	.LC16(%rip), %xmm1	#, tmp233
	ucomisd	%xmm1, %xmm0	# tmp233, D.21537
	jp	.L182	#,
	movsd	.LC16(%rip), %xmm1	#, tmp234
	ucomisd	%xmm1, %xmm0	# tmp234, D.21537
	je	.L184	#,
	jmp	.L182	#
.L188:
	.loc 1 831 0 discriminator 5
	movq	-8(%rbp), %rax	# sv, tmp235
	movq	%rax, %rdi	# tmp235,
	call	Perl_sv_2nv	#
	movsd	.LC16(%rip), %xmm1	#, tmp236
	ucomisd	%xmm1, %xmm0	# tmp236, D.21537
	jp	.L182	#,
	movsd	.LC16(%rip), %xmm1	#, tmp237
	ucomisd	%xmm1, %xmm0	# tmp237, D.21537
	jne	.L182	#,
.L184:
	.loc 1 832 0 is_stmt 1
	movq	$0, -16(%rbp)	#, useless
	jmp	.L178	#
.L182:
	.loc 1 833 0
	movq	-8(%rbp), %rax	# sv, tmp238
	movl	12(%rax), %eax	# sv_61->sv_flags, D.21531
	andl	$262144, %eax	#, D.21531
	testl	%eax, %eax	# D.21531
	je	.L178	#,
	.loc 1 840 0
	movq	-8(%rbp), %rax	# sv, tmp239
	movq	(%rax), %rax	# sv_61->sv_any, D.21534
	movq	(%rax), %rax	# MEM[(struct XPV *)_104].xpv_pv, D.21535
	movl	$2, %edx	#,
	movl	$.LC17, %esi	#,
	movq	%rax, %rdi	# D.21535,
	call	strncmp	#
	testl	%eax, %eax	# D.21530
	je	.L191	#,
	.loc 1 841 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp240
	movq	(%rax), %rax	# sv_61->sv_any, D.21534
	movq	(%rax), %rax	# MEM[(struct XPV *)_107].xpv_pv, D.21535
	movl	$2, %edx	#,
	movl	$.LC18, %esi	#,
	movq	%rax, %rdi	# D.21535,
	call	strncmp	#
	.loc 1 840 0 discriminator 1
	testl	%eax, %eax	# D.21530
	je	.L191	#,
	.loc 1 842 0
	movq	-8(%rbp), %rax	# sv, tmp241
	movq	(%rax), %rax	# sv_61->sv_any, D.21534
	movq	(%rax), %rax	# MEM[(struct XPV *)_110].xpv_pv, D.21535
	movl	$2, %edx	#,
	movl	$.LC19, %esi	#,
	movq	%rax, %rdi	# D.21535,
	call	strncmp	#
	.loc 1 841 0
	testl	%eax, %eax	# D.21530
	jne	.L178	#,
.L191:
	.loc 1 843 0
	movq	$0, -16(%rbp)	#, useless
.L178:
	.loc 1 847 0
	movq	-40(%rbp), %rax	# o, tmp242
	movq	%rax, %rdi	# tmp242,
	call	Perl_op_null	#
	.loc 1 848 0
	jmp	.L170	#
.L160:
	.loc 1 851 0
	movq	-40(%rbp), %rax	# o, tmp243
	movw	$46, 32(%rax)	#, o_10(D)->op_type
	.loc 1 852 0
	movq	PL_ppaddr+368(%rip), %rdx	# PL_ppaddr, D.21538
	movq	-40(%rbp), %rax	# o, tmp244
	movq	%rdx, 16(%rax)	# D.21538, o_10(D)->op_ppaddr
	.loc 1 853 0
	jmp	.L170	#
.L161:
	.loc 1 856 0
	movq	-40(%rbp), %rax	# o, tmp245
	movw	$48, 32(%rax)	#, o_10(D)->op_type
	.loc 1 857 0
	movq	PL_ppaddr+384(%rip), %rdx	# PL_ppaddr, D.21538
	movq	-40(%rbp), %rax	# o, tmp246
	movq	%rdx, 16(%rax)	# D.21538, o_10(D)->op_ppaddr
	.loc 1 858 0
	jmp	.L170	#
.L166:
	.loc 1 863 0
	movq	-40(%rbp), %rax	# o, tmp247
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_10(D)].op_first, D.21526
	movq	8(%rax), %rax	# _116->op_sibling, tmp248
	movq	%rax, -24(%rbp)	# tmp248, kid
	jmp	.L192	#
.L193:
	.loc 1 864 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp249
	movq	%rax, %rdi	# tmp249,
	call	Perl_scalarvoid	#
	.loc 1 863 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp250
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp251
	movq	%rax, -24(%rbp)	# tmp251, kid
.L192:
	.loc 1 863 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, kid
	jne	.L193	#,
	.loc 1 865 0 is_stmt 1
	jmp	.L170	#
.L154:
	.loc 1 868 0
	movq	-40(%rbp), %rax	# o, tmp252
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$64, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L167	#,
	.loc 1 869 0
	jmp	.L170	#
.L167:
	.loc 1 875 0
	movq	-40(%rbp), %rax	# o, tmp253
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	movzbl	%al, %eax	# D.21529, D.21530
	andl	$4, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	jne	.L165	#,
	.loc 1 876 0
	jmp	.L170	#
.L165:
	.loc 1 884 0
	movq	-40(%rbp), %rax	# o, tmp254
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_10(D)].op_first, tmp255
	movq	%rax, -24(%rbp)	# tmp255, kid
	jmp	.L194	#
.L195:
	.loc 1 885 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp256
	movq	%rax, %rdi	# tmp256,
	call	Perl_scalarvoid	#
	.loc 1 884 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp257
	movq	8(%rax), %rax	# kid_2->op_sibling, tmp258
	movq	%rax, -24(%rbp)	# tmp258, kid
.L194:
	.loc 1 884 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, kid
	jne	.L195	#,
	.loc 1 886 0 is_stmt 1
	jmp	.L170	#
.L169:
	.loc 1 888 0
	movq	-40(%rbp), %rax	# o, tmp259
	movq	%rax, %rdi	# tmp259,
	call	Perl_scalarkids	#
	.loc 1 889 0
	jmp	.L170	#
.L168:
	.loc 1 892 0
	movq	-40(%rbp), %rax	# o, tmp260
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21529
	andl	$-4, %eax	#, D.21529
	movl	%eax, %edx	# D.21529, D.21529
	movq	-40(%rbp), %rax	# o, tmp261
	movb	%dl, 36(%rax)	# D.21529, o_10(D)->op_flags
.L156:
	.loc 1 895 0
	movq	-40(%rbp), %rax	# o, tmp262
	movq	%rax, %rdi	# tmp262,
	call	Perl_scalar	#
	jmp	.L151	#
.L164:
	.loc 1 897 0
	movq	-40(%rbp), %rax	# o, tmp263
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_10(D)].op_first, tmp264
	movq	%rax, -24(%rbp)	# tmp264, kid
	cmpq	$0, -24(%rbp)	#, kid
	je	.L196	#,
	.loc 1 897 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# kid, tmp265
	movzwl	32(%rax), %eax	# kid_130->op_type, D.21527
	cmpw	$13, %ax	#, D.21527
	jne	.L196	#,
	.loc 1 898 0 is_stmt 1
	movq	-24(%rbp), %rax	# kid, tmp266
	movq	56(%rax), %rax	# MEM[(struct PMOP *)kid_130].op_pmreplroot, D.21526
	testq	%rax, %rax	# D.21526
	jne	.L196	#,
	.loc 1 899 0
	movl	$.LC11, %edi	#,
	call	Perl_deprecate_old	#
	.loc 1 901 0
	jmp	.L200	#
.L196:
.L200:
	nop
.L170:
	.loc 1 903 0
	cmpq	$0, -16(%rbp)	#, useless
	je	.L197	#,
	.loc 1 903 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.53
	movq	80(%rax), %rax	# PL_curcop.53_133->cop_warnings, D.21533
	testq	%rax, %rax	# D.21533
	je	.L198	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.54
	movq	80(%rax), %rax	# PL_curcop.54_135->cop_warnings, D.21533
	cmpq	$32, %rax	#, D.21533
	je	.L198	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.55
	movq	80(%rax), %rax	# PL_curcop.55_137->cop_warnings, D.21533
	cmpq	$16, %rax	#, D.21533
	je	.L199	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.56
	movq	80(%rax), %rax	# PL_curcop.56_139->cop_warnings, D.21533
	movq	(%rax), %rax	# _140->sv_any, D.21534
	movq	(%rax), %rax	# MEM[(struct XPV *)_141].xpv_pv, D.21535
	addq	$11, %rax	#, D.21535
	movzbl	(%rax), %eax	# *_143, D.21536
	movsbl	%al, %eax	# D.21536, D.21530
	andl	$4, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	jne	.L199	#,
.L198:
	.loc 1 903 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.57
	movq	80(%rax), %rax	# PL_curcop.57_147->cop_warnings, D.21533
	testq	%rax, %rax	# D.21533
	jne	.L197	#,
	.loc 1 903 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.58
	movzbl	%al, %eax	# PL_dowarn.58, D.21530
	andl	$1, %eax	#, D.21530
	testl	%eax, %eax	# D.21530
	je	.L197	#,
.L199:
	.loc 1 904 0 is_stmt 1
	movq	-16(%rbp), %rax	# useless, tmp267
	movq	%rax, %rdx	# tmp267,
	movl	$.LC20, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L197:
	.loc 1 905 0
	movq	-40(%rbp), %rax	# o, D.21526
.L151:
	.loc 1 906 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	Perl_scalarvoid, .-Perl_scalarvoid
	.globl	Perl_listkids
	.type	Perl_listkids, @function
Perl_listkids:
.LFB20:
	.loc 1 910 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 912 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L202	#,
	.loc 1 912 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp64
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.21545
	movzbl	%al, %eax	# D.21545, D.21546
	andl	$4, %eax	#, D.21546
	testl	%eax, %eax	# D.21546
	je	.L202	#,
	.loc 1 913 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp65
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp66
	movq	%rax, -8(%rbp)	# tmp66, kid
	jmp	.L203	#
.L204:
	.loc 1 914 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_list	#
	.loc 1 913 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp68
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp69
	movq	%rax, -8(%rbp)	# tmp69, kid
.L203:
	.loc 1 913 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L204	#,
.L202:
	.loc 1 916 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.21547
	.loc 1 917 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	Perl_listkids, .-Perl_listkids
	.globl	Perl_list
	.type	Perl_list, @function
Perl_list:
.LFB21:
	.loc 1 921 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 925 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L207	#,
	.loc 1 925 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp94
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.21549
	movzbl	%al, %eax	# D.21549, D.21550
	andl	$3, %eax	#, D.21550
	testl	%eax, %eax	# D.21550
	jne	.L207	#,
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.59
	testl	%eax, %eax	# PL_error_count.59
	jne	.L207	#,
	.loc 1 926 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp95
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.21551
	cmpw	$184, %ax	#, D.21551
	jne	.L208	#,
.L207:
	.loc 1 928 0
	movq	-24(%rbp), %rax	# o, D.21548
	jmp	.L209	#
.L208:
	.loc 1 931 0
	movq	-24(%rbp), %rax	# o, tmp96
	movzbl	37(%rax), %eax	# o_5(D)->op_private, D.21549
	movzbl	%al, %eax	# D.21549, D.21550
	andl	$16, %eax	#, D.21550
	testl	%eax, %eax	# D.21550
	je	.L210	#,
	.loc 1 932 0
	movq	-24(%rbp), %rax	# o, tmp97
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.21551
	movzwl	%ax, %eax	# D.21551, D.21550
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21552
	andl	$256, %eax	#, D.21552
	testl	%eax, %eax	# D.21552
	je	.L210	#,
	.loc 1 934 0
	movq	-24(%rbp), %rax	# o, D.21548
	jmp	.L209	#
.L210:
	.loc 1 937 0
	movq	-24(%rbp), %rax	# o, tmp99
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.21549
	orl	$3, %eax	#, D.21549
	movl	%eax, %edx	# D.21549, D.21549
	movq	-24(%rbp), %rax	# o, tmp100
	movb	%dl, 36(%rax)	# D.21549, o_5(D)->op_flags
	.loc 1 939 0
	movq	-24(%rbp), %rax	# o, tmp101
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.21551
	movzwl	%ax, %eax	# D.21551, D.21550
	cmpl	$162, %eax	#, D.21550
	je	.L212	#,
	cmpl	$162, %eax	#, D.21550
	jg	.L213	#,
	cmpl	$158, %eax	#, D.21550
	je	.L214	#,
	cmpl	$158, %eax	#, D.21550
	jg	.L215	#,
	cmpl	$61, %eax	#, D.21550
	je	.L214	#,
	cmpl	$141, %eax	#, D.21550
	je	.L216	#,
	jmp	.L211	#
.L215:
	cmpl	$160, %eax	#, D.21550
	jg	.L211	#,
	jmp	.L212	#
.L213:
	cmpl	$179, %eax	#, D.21550
	je	.L217	#,
	cmpl	$179, %eax	#, D.21550
	jg	.L218	#,
	cmpl	$173, %eax	#, D.21550
	je	.L217	#,
	cmpl	$178, %eax	#, D.21550
	je	.L219	#,
	jmp	.L211	#
.L218:
	cmpl	$309, %eax	#, D.21550
	je	.L220	#,
	cmpl	$314, %eax	#, D.21550
	je	.L219	#,
	jmp	.L211	#
.L214:
	.loc 1 942 0
	movq	-24(%rbp), %rax	# o, tmp102
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_5(D)].op_first, D.21548
	movq	%rax, %rdi	# D.21548,
	call	Perl_list	#
	.loc 1 943 0
	jmp	.L221	#
.L212:
	.loc 1 947 0
	movq	-24(%rbp), %rax	# o, tmp103
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21548
	movq	8(%rax), %rax	# _24->op_sibling, tmp104
	movq	%rax, -8(%rbp)	# tmp104, kid
	jmp	.L222	#
.L223:
	.loc 1 948 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp105
	movq	%rax, %rdi	# tmp105,
	call	Perl_list	#
	.loc 1 947 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp106
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp107
	movq	%rax, -8(%rbp)	# tmp107, kid
.L222:
	.loc 1 947 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L223	#,
	.loc 1 949 0 is_stmt 1
	jmp	.L221	#
.L211:
	.loc 1 955 0
	movq	-24(%rbp), %rax	# o, tmp108
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.21549
	movzbl	%al, %eax	# D.21549, D.21550
	andl	$4, %eax	#, D.21550
	testl	%eax, %eax	# D.21550
	jne	.L224	#,
	.loc 1 956 0
	jmp	.L221	#
.L224:
	.loc 1 957 0
	movq	-24(%rbp), %rax	# o, tmp109
	movq	(%rax), %rax	# o_5(D)->op_next, D.21548
	testq	%rax, %rax	# D.21548
	jne	.L216	#,
	.loc 1 957 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp110
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, D.21548
	movzwl	32(%rax), %eax	# _31->op_type, D.21551
	cmpw	$158, %ax	#, D.21551
	jne	.L216	#,
	.loc 1 958 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp111
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_5(D)].op_first, D.21548
	movq	%rax, %rdi	# D.21548,
	call	Perl_list	#
	.loc 1 959 0
	movq	-24(%rbp), %rax	# o, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_gen_constant_list	#
	jmp	.L209	#
.L216:
	.loc 1 962 0
	movq	-24(%rbp), %rax	# o, tmp113
	movq	%rax, %rdi	# tmp113,
	call	Perl_listkids	#
	.loc 1 963 0
	jmp	.L221	#
.L219:
	.loc 1 966 0
	movq	-24(%rbp), %rax	# o, tmp114
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, tmp115
	movq	%rax, -8(%rbp)	# tmp115, kid
	.loc 1 967 0
	movq	-8(%rbp), %rax	# kid, tmp116
	movq	%rax, %rdi	# tmp116,
	call	Perl_list	#
	.loc 1 968 0
	jmp	.L225	#
.L227:
	.loc 1 969 0
	movq	-8(%rbp), %rax	# kid, tmp117
	movq	8(%rax), %rax	# kid_36->op_sibling, D.21548
	testq	%rax, %rax	# D.21548
	je	.L226	#,
	.loc 1 970 0
	movq	-8(%rbp), %rax	# kid, tmp118
	movq	%rax, %rdi	# tmp118,
	call	Perl_scalarvoid	#
	jmp	.L225	#
.L226:
	.loc 1 972 0
	movq	-8(%rbp), %rax	# kid, tmp119
	movq	%rax, %rdi	# tmp119,
	call	Perl_list	#
.L225:
	.loc 1 968 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp120
	movq	8(%rax), %rax	# kid_2->op_sibling, tmp121
	movq	%rax, -8(%rbp)	# tmp121, kid
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L227	#,
.LBB8:
	.loc 1 974 0
	movl	$PL_compiling, %eax	#, PL_compiling.60
	movq	%rax, PL_curcop(%rip)	# PL_compiling.60, PL_curcop
.LBE8:
	.loc 1 975 0
	jmp	.L221	#
.L217:
	.loc 1 978 0
	movq	-24(%rbp), %rax	# o, tmp122
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, tmp123
	movq	%rax, -8(%rbp)	# tmp123, kid
	jmp	.L228	#
.L231:
	.loc 1 979 0
	movq	-8(%rbp), %rax	# kid, tmp124
	movq	8(%rax), %rax	# kid_3->op_sibling, D.21548
	testq	%rax, %rax	# D.21548
	je	.L229	#,
	.loc 1 980 0
	movq	-8(%rbp), %rax	# kid, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_scalarvoid	#
	jmp	.L230	#
.L229:
	.loc 1 982 0
	movq	-8(%rbp), %rax	# kid, tmp126
	movq	%rax, %rdi	# tmp126,
	call	Perl_list	#
.L230:
	.loc 1 978 0
	movq	-8(%rbp), %rax	# kid, tmp127
	movq	8(%rax), %rax	# kid_3->op_sibling, tmp128
	movq	%rax, -8(%rbp)	# tmp128, kid
.L228:
	.loc 1 978 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L231	#,
.LBB9:
	.loc 1 984 0 is_stmt 1
	movl	$PL_compiling, %eax	#, PL_compiling.61
	movq	%rax, PL_curcop(%rip)	# PL_compiling.61, PL_curcop
.LBE9:
	.loc 1 985 0
	jmp	.L221	#
.L220:
	.loc 1 988 0
	movq	-24(%rbp), %rax	# o, tmp129
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.21549
	andl	$-4, %eax	#, D.21549
	movl	%eax, %edx	# D.21549, D.21549
	movq	-24(%rbp), %rax	# o, tmp130
	movb	%dl, 36(%rax)	# D.21549, o_5(D)->op_flags
	.loc 1 989 0
	movq	-24(%rbp), %rax	# o, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_scalar	#
	jmp	.L209	#
.L221:
	.loc 1 991 0
	movq	-24(%rbp), %rax	# o, D.21548
.L209:
	.loc 1 992 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	Perl_list, .-Perl_list
	.globl	Perl_scalarseq
	.type	Perl_scalarseq, @function
Perl_scalarseq:
.LFB22:
	.loc 1 996 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 999 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L233	#,
	.loc 1 1000 0
	movq	-24(%rbp), %rax	# o, tmp72
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21557
	cmpw	$173, %ax	#, D.21557
	je	.L234	#,
	.loc 1 1001 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp73
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21557
	.loc 1 1000 0 discriminator 1
	cmpw	$179, %ax	#, D.21557
	je	.L234	#,
	.loc 1 1002 0
	movq	-24(%rbp), %rax	# o, tmp74
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21557
	.loc 1 1001 0
	cmpw	$178, %ax	#, D.21557
	je	.L234	#,
	.loc 1 1003 0
	movq	-24(%rbp), %rax	# o, tmp75
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21557
	.loc 1 1002 0
	cmpw	$314, %ax	#, D.21557
	jne	.L235	#,
.L234:
	.loc 1 1005 0
	movq	-24(%rbp), %rax	# o, tmp76
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_3(D)].op_first, tmp77
	movq	%rax, -8(%rbp)	# tmp77, kid
	jmp	.L236	#
.L238:
	.loc 1 1006 0
	movq	-8(%rbp), %rax	# kid, tmp78
	movq	8(%rax), %rax	# kid_2->op_sibling, D.21558
	testq	%rax, %rax	# D.21558
	je	.L237	#,
	.loc 1 1007 0
	movq	-8(%rbp), %rax	# kid, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_scalarvoid	#
.L237:
	.loc 1 1005 0
	movq	-8(%rbp), %rax	# kid, tmp80
	movq	8(%rax), %rax	# kid_2->op_sibling, tmp81
	movq	%rax, -8(%rbp)	# tmp81, kid
.L236:
	.loc 1 1005 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L238	#,
	.loc 1 1010 0 is_stmt 1
	movq	$PL_compiling, PL_curcop(%rip)	#, PL_curcop
.L235:
	.loc 1 1012 0
	movq	-24(%rbp), %rax	# o, tmp82
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21559
	andl	$-9, %eax	#, D.21559
	movl	%eax, %edx	# D.21559, D.21559
	movq	-24(%rbp), %rax	# o, tmp83
	movb	%dl, 36(%rax)	# D.21559, o_3(D)->op_flags
	.loc 1 1013 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.62
	andl	$256, %eax	#, D.21560
	testl	%eax, %eax	# D.21560
	je	.L240	#,
	.loc 1 1014 0
	movq	-24(%rbp), %rax	# o, tmp84
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.21559
	orl	$8, %eax	#, D.21559
	movl	%eax, %edx	# D.21559, D.21559
	movq	-24(%rbp), %rax	# o, tmp85
	movb	%dl, 36(%rax)	# D.21559, o_3(D)->op_flags
	jmp	.L240	#
.L233:
	.loc 1 1017 0
	movl	$0, %esi	#,
	movl	$1, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -24(%rbp)	# tmp86, o
.L240:
	.loc 1 1018 0
	movq	-24(%rbp), %rax	# o, D.21558
	.loc 1 1019 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	Perl_scalarseq, .-Perl_scalarseq
	.type	S_modkids, @function
S_modkids:
.LFB23:
	.loc 1 1023 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movl	%esi, -28(%rbp)	# type, type
	.loc 1 1025 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L243	#,
	.loc 1 1025 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp64
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.21561
	movzbl	%al, %eax	# D.21561, D.21562
	andl	$4, %eax	#, D.21562
	testl	%eax, %eax	# D.21562
	je	.L243	#,
	.loc 1 1026 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp65
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp66
	movq	%rax, -8(%rbp)	# tmp66, kid
	jmp	.L244	#
.L245:
	.loc 1 1027 0 discriminator 2
	movl	-28(%rbp), %edx	# type, tmp67
	movq	-8(%rbp), %rax	# kid, tmp68
	movl	%edx, %esi	# tmp67,
	movq	%rax, %rdi	# tmp68,
	call	Perl_mod	#
	.loc 1 1026 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp69
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp70
	movq	%rax, -8(%rbp)	# tmp70, kid
.L244:
	.loc 1 1026 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L245	#,
.L243:
	.loc 1 1029 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.21563
	.loc 1 1030 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	S_modkids, .-S_modkids
	.section	.rodata
.LC21:
	.string	"That use of $[ is unsupported"
	.align 8
.LC22:
	.string	"panic: unexpected lvalue entersub args: type/targ %ld:%lu"
	.align 8
.LC23:
	.string	"panic: unexpected lvalue entersub entry via type/targ %ld:%lu"
	.align 8
.LC24:
	.string	"Unexpected constant lvalue entersub entry via type/targ %ld:%lu"
.LC25:
	.string	"local"
.LC26:
	.string	"non-lvalue subroutine call"
.LC27:
	.string	"do block"
.LC28:
	.string	"Can't modify %s in %s"
	.align 8
.LC29:
	.string	"Can't localize lexical variable %s"
	.text
	.globl	Perl_mod
	.type	Perl_mod, @function
Perl_mod:
.LFB24:
	.loc 1 1034 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)	# o, o
	movl	%esi, -76(%rbp)	# type, type
	.loc 1 1037 0
	cmpq	$0, -72(%rbp)	#, o
	je	.L248	#,
	.loc 1 1037 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.63
	testl	%eax, %eax	# PL_error_count.63
	je	.L249	#,
.L248:
	.loc 1 1038 0 is_stmt 1
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L249:
	.loc 1 1040 0
	movq	-72(%rbp), %rax	# o, tmp258
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$16, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L251	#,
	.loc 1 1041 0
	movq	-72(%rbp), %rax	# o, tmp259
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21568
	andl	$256, %eax	#, D.21568
	testl	%eax, %eax	# D.21568
	je	.L251	#,
	.loc 1 1043 0
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L251:
	.loc 1 1046 0
	movq	-72(%rbp), %rax	# o, tmp261
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	cmpl	$184, %eax	#, D.21566
	ja	.L252	#,
	movl	%eax, %eax	# D.21566, tmp262
	movq	.L254(,%rax,8), %rax	#, tmp263
	jmp	*%rax	# tmp263
	.section	.rodata
	.align 8
	.align 4
.L254:
	.quad	.L253
	.quad	.L255
	.quad	.L252
	.quad	.L345
	.quad	.L252
	.quad	.L257
	.quad	.L252
	.quad	.L258
	.quad	.L252
	.quad	.L259
	.quad	.L260
	.quad	.L260
	.quad	.L252
	.quad	.L252
	.quad	.L261
	.quad	.L262
	.quad	.L258
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L263
	.quad	.L264
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L265
	.quad	.L252
	.quad	.L266
	.quad	.L267
	.quad	.L252
	.quad	.L267
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L252
	.quad	.L267
	.quad	.L267
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L267
	.quad	.L267
	.quad	.L267
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L268
	.quad	.L266
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L269
	.quad	.L263
	.quad	.L270
	.quad	.L271
	.quad	.L252
	.quad	.L252
	.quad	.L272
	.quad	.L252
	.quad	.L252
	.quad	.L269
	.quad	.L270
	.quad	.L271
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L273
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L274
	.quad	.L263
	.quad	.L263
	.quad	.L252
	.quad	.L275
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L276
	.quad	.L264
	.quad	.L264
	.quad	.L252
	.quad	.L276
	.quad	.L276
	.quad	.L276
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L252
	.quad	.L277
	.text
.L265:
	.loc 1 1048 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.64
	addl	$1, %eax	#, PL_modcount.65
	movl	%eax, PL_modcount(%rip)	# PL_modcount.65, PL_modcount
	.loc 1 1049 0
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L257:
	.loc 1 1051 0
	movq	-72(%rbp), %rax	# o, tmp264
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$32, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	jne	.L278	#,
	.loc 1 1052 0
	jmp	.L252	#
.L278:
	.loc 1 1053 0
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.66
	testq	%rax, %rax	# PL_eval_start.66
	je	.L279	#,
	.loc 1 1053 0 is_stmt 0 discriminator 1
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.67
	movzwl	32(%rax), %eax	# PL_eval_start.67_32->op_type, D.21567
	cmpw	$5, %ax	#, D.21567
	jne	.L279	#,
	.loc 1 1054 0 is_stmt 1
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.69
	movq	40(%rax), %rax	# MEM[(struct SVOP *)PL_eval_start.69_34].op_sv, D.21569
	movl	12(%rax), %eax	# _35->sv_flags, D.21568
	andl	$65536, %eax	#, D.21568
	testl	%eax, %eax	# D.21568
	je	.L280	#,
	.loc 1 1054 0 is_stmt 0 discriminator 1
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.70
	movq	40(%rax), %rax	# MEM[(struct SVOP *)PL_eval_start.70_38].op_sv, D.21569
	movq	(%rax), %rax	# _39->sv_any, D.21570
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_40].xiv_iv, D.21571
	jmp	.L281	#
.L280:
	.loc 1 1054 0 discriminator 2
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.71
	movq	40(%rax), %rax	# MEM[(struct SVOP *)PL_eval_start.71_43].op_sv, D.21569
	movq	%rax, %rdi	# D.21569,
	call	Perl_sv_2iv	#
.L281:
	.loc 1 1054 0 discriminator 3
	movl	%eax, PL_compiling+68(%rip)	# iftmp.68, PL_compiling.cop_arybase
	.loc 1 1055 0 is_stmt 1 discriminator 3
	movq	$0, PL_eval_start(%rip)	#, PL_eval_start
	jmp	.L282	#
.L279:
	.loc 1 1057 0
	cmpl	$0, -76(%rbp)	#, type
	jne	.L283	#,
	.loc 1 1058 0
	movl	$PL_compiling+68, %edi	#,
	call	Perl_save_I32	#
	.loc 1 1059 0
	movl	$0, PL_compiling+68(%rip)	#, PL_compiling.cop_arybase
	jmp	.L282	#
.L283:
	.loc 1 1061 0
	cmpl	$20, -76(%rbp)	#, type
	jne	.L284	#,
	.loc 1 1062 0
	jmp	.L252	#
.L284:
	.loc 1 1064 0
	movl	$.LC21, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 1065 0
	jmp	.L285	#
.L282:
	jmp	.L285	#
.L255:
	.loc 1 1067 0
	movq	-72(%rbp), %rax	# o, tmp265
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$8, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L286	#,
	.loc 1 1068 0
	jmp	.L285	#
.L286:
	.loc 1 1069 0
	jmp	.L252	#
.L275:
	.loc 1 1071 0
	cmpl	$43, -76(%rbp)	#, type
	je	.L287	#,
	.loc 1 1071 0 is_stmt 0 discriminator 2
	cmpl	$20, -76(%rbp)	#, type
	jne	.L288	#,
.L287:
	.loc 1 1072 0 is_stmt 1 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp266
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$64, %eax	#, D.21566
	.loc 1 1071 0 discriminator 1
	testl	%eax, %eax	# D.21566
	jne	.L288	#,
	.loc 1 1073 0
	movq	-72(%rbp), %rax	# o, tmp267
	movw	$17, 32(%rax)	#, o_13(D)->op_type
	.loc 1 1074 0
	movq	PL_ppaddr+136(%rip), %rdx	# PL_ppaddr, D.21572
	movq	-72(%rbp), %rax	# o, tmp268
	movq	%rdx, 16(%rax)	# D.21572, o_13(D)->op_ppaddr
	.loc 1 1076 0
	movq	-72(%rbp), %rax	# o, tmp269
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_13(D)].op_first, D.21564
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)_55].op_first, D.21564
	movq	%rax, %rdi	# D.21564,
	call	Perl_op_null	#
	.loc 1 1077 0
	jmp	.L285	#
.L288:
	.loc 1 1079 0
	movq	-72(%rbp), %rax	# o, tmp270
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$64, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L289	#,
	.loc 1 1080 0
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L289:
	.loc 1 1082 0
	movq	-72(%rbp), %rax	# o, tmp271
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$-128, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp272
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
	.loc 1 1083 0
	movl	$1073741823, PL_modcount(%rip)	#, PL_modcount
	.loc 1 1084 0
	cmpl	$152, -76(%rbp)	#, type
	je	.L290	#,
	.loc 1 1084 0 is_stmt 0 discriminator 1
	cmpl	$166, -76(%rbp)	#, type
	je	.L290	#,
	cmpl	$20, -76(%rbp)	#, type
	jne	.L291	#,
.L290:
	.loc 1 1086 0 is_stmt 1
	movq	-72(%rbp), %rax	# o, tmp273
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$4, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp274
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
	.loc 1 1087 0
	jmp	.L285	#
.L291:
.LBB10:
	.loc 1 1090 0
	movq	-72(%rbp), %rax	# o, tmp275
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_13(D)].op_first, tmp276
	movq	%rax, -48(%rbp)	# tmp276, kid
	.loc 1 1094 0
	movq	-48(%rbp), %rax	# kid, tmp277
	movzwl	32(%rax), %eax	# kid_63->op_type, D.21567
	cmpw	$3, %ax	#, D.21567
	jne	.L292	#,
	.loc 1 1095 0
	nop
.L293:
	.loc 1 1103 0
	jmp	.L296	#
.L292:
	.loc 1 1096 0
	movq	-48(%rbp), %rax	# kid, tmp278
	movzwl	32(%rax), %eax	# kid_63->op_type, D.21567
	testw	%ax, %ax	# D.21567
	jne	.L294	#,
	.loc 1 1096 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# kid, tmp279
	movq	24(%rax), %rax	# kid_63->op_targ, D.21573
	cmpq	$141, %rax	#, D.21573
	je	.L295	#,
.L294:
	.loc 1 1097 0 is_stmt 1
	movq	-48(%rbp), %rax	# kid, tmp280
	movq	24(%rax), %rdx	# kid_63->op_targ, D.21573
	.loc 1 1100 0
	movq	-48(%rbp), %rax	# kid, tmp281
	movzwl	32(%rax), %eax	# kid_63->op_type, D.21567
	.loc 1 1097 0
	movzwl	%ax, %eax	# D.21567, D.21571
	movq	%rax, %rsi	# D.21571,
	movl	$.LC22, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L295:
	.loc 1 1101 0
	movq	-48(%rbp), %rax	# kid, tmp282
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)kid_63].op_first, tmp283
	movq	%rax, -48(%rbp)	# tmp283, kid
	.loc 1 1103 0
	jmp	.L296	#
.L297:
	.loc 1 1104 0
	movq	-48(%rbp), %rax	# kid, tmp284
	movq	8(%rax), %rax	# kid_4->op_sibling, tmp285
	movq	%rax, -48(%rbp)	# tmp285, kid
.L296:
	.loc 1 1103 0 discriminator 1
	movq	-48(%rbp), %rax	# kid, tmp286
	movq	8(%rax), %rax	# kid_4->op_sibling, D.21564
	testq	%rax, %rax	# D.21564
	jne	.L297	#,
	.loc 1 1105 0
	movq	-48(%rbp), %rax	# kid, tmp287
	movzwl	32(%rax), %eax	# kid_4->op_type, D.21567
	testw	%ax, %ax	# D.21567
	jne	.L298	#,
	.loc 1 1105 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# kid, tmp288
	movq	24(%rax), %rax	# kid_4->op_targ, D.21573
	cmpq	$17, %rax	#, D.21573
	je	.L299	#,
.L298:
	.loc 1 1107 0 is_stmt 1
	movq	-48(%rbp), %rax	# kid, tmp289
	movzwl	32(%rax), %eax	# kid_4->op_type, D.21567
	cmpw	$350, %ax	#, D.21567
	je	.L300	#,
	.loc 1 1108 0
	movq	-48(%rbp), %rax	# kid, tmp290
	movzwl	32(%rax), %eax	# kid_4->op_type, D.21567
	cmpw	$165, %ax	#, D.21567
	jne	.L301	#,
.L300:
.LBB11:
	.loc 1 1112 0
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp291, newop
	movq	-24(%rbp), %rax	# newop, tmp292
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp292,
	call	memset	#
	.loc 1 1113 0
	movq	-24(%rbp), %rax	# newop, tmp293
	movw	$17, 32(%rax)	#, newop_107->op_type
	.loc 1 1114 0
	movq	PL_ppaddr+136(%rip), %rdx	# PL_ppaddr, D.21572
	movq	-24(%rbp), %rax	# newop, tmp294
	movq	%rdx, 16(%rax)	# D.21572, newop_107->op_ppaddr
	.loc 1 1115 0
	movq	-24(%rbp), %rax	# newop, tmp295
	movq	$0, 40(%rax)	#, newop_107->op_first
	.loc 1 1116 0
	movq	-24(%rbp), %rax	# newop, tmp296
	movq	-24(%rbp), %rdx	# newop, tmp297
	movq	%rdx, (%rax)	# tmp297, newop_107->op_next
	.loc 1 1117 0
	movq	-48(%rbp), %rax	# kid, tmp298
	movq	-24(%rbp), %rdx	# newop, tmp299
	movq	%rdx, 8(%rax)	# tmp299, kid_4->op_sibling
	.loc 1 1118 0
	movq	-24(%rbp), %rax	# newop, tmp300
	movzbl	37(%rax), %eax	# newop_107->op_private, D.21565
	orl	$-128, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-24(%rbp), %rax	# newop, tmp301
	movb	%dl, 37(%rax)	# D.21565, newop_107->op_private
	.loc 1 1119 0
	jmp	.L285	#
.L301:
.LBE11:
	.loc 1 1122 0
	movq	-48(%rbp), %rax	# kid, tmp302
	movzwl	32(%rax), %eax	# kid_4->op_type, D.21567
	cmpw	$17, %ax	#, D.21567
	je	.L302	#,
	.loc 1 1123 0
	movq	-48(%rbp), %rax	# kid, tmp303
	movq	24(%rax), %rdx	# kid_4->op_targ, D.21573
	.loc 1 1126 0
	movq	-48(%rbp), %rax	# kid, tmp304
	movzwl	32(%rax), %eax	# kid_4->op_type, D.21567
	.loc 1 1123 0
	movzwl	%ax, %eax	# D.21567, D.21571
	movq	%rax, %rsi	# D.21571,
	movl	$.LC23, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L302:
	.loc 1 1127 0
	movq	-48(%rbp), %rax	# kid, tmp305
	movzbl	37(%rax), %eax	# kid_4->op_private, D.21565
	orl	$-128, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-48(%rbp), %rax	# kid, tmp306
	movb	%dl, 37(%rax)	# D.21565, kid_4->op_private
	.loc 1 1128 0
	jmp	.L285	#
.L299:
	.loc 1 1131 0
	movq	-48(%rbp), %rax	# kid, tmp307
	movq	%rax, -40(%rbp)	# tmp307, okid
	.loc 1 1132 0
	movq	-48(%rbp), %rax	# kid, tmp308
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_4].op_first, tmp309
	movq	%rax, -48(%rbp)	# tmp309, kid
	.loc 1 1133 0
	movq	-48(%rbp), %rax	# kid, tmp310
	movzwl	32(%rax), %eax	# kid_76->op_type, D.21567
	testw	%ax, %ax	# D.21567
	jne	.L303	#,
	.loc 1 1133 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# kid, tmp311
	movq	24(%rax), %rax	# kid_76->op_targ, D.21573
	cmpq	$15, %rax	#, D.21573
	jne	.L303	#,
	.loc 1 1134 0 is_stmt 1
	movq	-48(%rbp), %rax	# kid, tmp312
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_76].op_first, tmp313
	movq	%rax, -48(%rbp)	# tmp313, kid
.L303:
	.loc 1 1135 0
	movq	-48(%rbp), %rax	# kid, tmp314
	movzwl	32(%rax), %eax	# kid_5->op_type, D.21567
	testw	%ax, %ax	# D.21567
	jne	.L304	#,
	.loc 1 1136 0
	movq	-48(%rbp), %rax	# kid, tmp315
	movq	24(%rax), %rdx	# kid_5->op_targ, D.21573
	.loc 1 1139 0
	movq	-48(%rbp), %rax	# kid, tmp316
	movzwl	32(%rax), %eax	# kid_5->op_type, D.21567
	.loc 1 1136 0
	movzwl	%ax, %eax	# D.21567, D.21571
	movq	%rax, %rsi	# D.21571,
	movl	$.LC24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L304:
	.loc 1 1140 0
	movq	-48(%rbp), %rax	# kid, tmp317
	movzwl	32(%rax), %eax	# kid_5->op_type, D.21567
	cmpw	$7, %ax	#, D.21567
	je	.L305	#,
.L306:
	.loc 1 1143 0
	movq	-48(%rbp), %rax	# kid, tmp318
	movq	(%rax), %rax	# kid_5->op_next, D.21564
	testq	%rax, %rax	# D.21564
	je	.L307	#,
	.loc 1 1143 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# kid, tmp319
	movq	(%rax), %rax	# kid_5->op_next, D.21564
	cmpq	-48(%rbp), %rax	# kid, D.21564
	je	.L307	#,
	.loc 1 1144 0 is_stmt 1
	movq	-48(%rbp), %rax	# kid, tmp320
	movq	(%rax), %rdx	# kid_5->op_next, D.21564
	movq	-40(%rbp), %rax	# okid, tmp321
	movq	%rdx, (%rax)	# D.21564, okid_75->op_next
	.loc 1 1145 0
	movq	-48(%rbp), %rax	# kid, tmp322
	movq	-40(%rbp), %rdx	# okid, tmp323
	movq	%rdx, (%rax)	# tmp323, kid_5->op_next
	jmp	.L308	#
.L307:
	.loc 1 1148 0
	movq	-40(%rbp), %rax	# okid, tmp324
	movq	$0, (%rax)	#, okid_75->op_next
.L308:
	.loc 1 1149 0
	movq	-40(%rbp), %rax	# okid, tmp325
	movw	$17, 32(%rax)	#, okid_75->op_type
	.loc 1 1150 0
	movq	-40(%rbp), %rax	# okid, tmp326
	movq	$0, 24(%rax)	#, okid_75->op_targ
	.loc 1 1151 0
	movq	PL_ppaddr+136(%rip), %rdx	# PL_ppaddr, D.21572
	movq	-40(%rbp), %rax	# okid, tmp327
	movq	%rdx, 16(%rax)	# D.21572, okid_75->op_ppaddr
	.loc 1 1152 0
	movq	-40(%rbp), %rax	# okid, tmp328
	movzbl	37(%rax), %eax	# okid_75->op_private, D.21565
	orl	$-128, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-40(%rbp), %rax	# okid, tmp329
	movb	%dl, 37(%rax)	# D.21565, okid_75->op_private
	.loc 1 1153 0
	jmp	.L285	#
.L305:
	.loc 1 1156 0
	movq	-48(%rbp), %rax	# kid, tmp330
	movq	40(%rax), %rax	# MEM[(struct SVOP *)kid_5].op_sv, D.21569
	movq	(%rax), %rax	# MEM[(struct GV *)_85].sv_any, D.21574
	movq	56(%rax), %rax	# _86->xgv_gp, D.21575
	movq	56(%rax), %rax	# _87->gp_cv, tmp331
	movq	%rax, -32(%rbp)	# tmp331, cv
	.loc 1 1157 0
	cmpq	$0, -32(%rbp)	#, cv
	jne	.L309	#,
	.loc 1 1158 0
	jmp	.L306	#
.L309:
	.loc 1 1159 0
	movq	-32(%rbp), %rax	# cv, tmp332
	movq	(%rax), %rax	# cv_88->sv_any, D.21576
	movzwl	136(%rax), %eax	# _89->xcv_flags, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	andl	$256, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L252	#,
	.loc 1 1160 0
	jmp	.L285	#
.L252:
.LBE10:
	.loc 1 1167 0
	cmpl	$152, -76(%rbp)	#, type
	je	.L285	#,
	.loc 1 1167 0 is_stmt 0 discriminator 1
	cmpl	$166, -76(%rbp)	#, type
	je	.L285	#,
	cmpl	$20, -76(%rbp)	#, type
	je	.L285	#,
	.loc 1 1169 0 is_stmt 1
	cmpl	$0, -76(%rbp)	#, type
	je	.L310	#,
	.loc 1 1169 0 is_stmt 0 discriminator 1
	movl	-76(%rbp), %eax	# type, tmp334
	cltq
	movq	PL_op_desc(,%rax,8), %rbx	# PL_op_desc, iftmp.72
	jmp	.L311	#
.L310:
	.loc 1 1169 0 discriminator 2
	movl	$.LC25, %ebx	#, iftmp.72
.L311:
	.loc 1 1170 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# o, tmp335
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	.loc 1 1169 0 discriminator 3
	testw	%ax, %ax	# D.21567
	jne	.L312	#,
	.loc 1 1170 0
	movq	-72(%rbp), %rax	# o, tmp336
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	testb	%al, %al	# D.21579
	js	.L313	#,
.L312:
	.loc 1 1172 0
	movq	-72(%rbp), %rax	# o, tmp337
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	.loc 1 1174 0
	cmpw	$166, %ax	#, D.21567
	je	.L314	#,
	.loc 1 1174 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp338
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	cmpw	$351, %ax	#, D.21567
	jne	.L315	#,
	movq	-72(%rbp), %rax	# o, tmp339
	movq	%rax, %rdi	# tmp339,
	call	Perl_custom_op_desc	#
	jmp	.L317	#
.L315:
	.loc 1 1174 0 discriminator 2
	movq	-72(%rbp), %rax	# o, tmp340
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.75
	jmp	.L318	#
.L314:
	movl	$.LC26, %eax	#, iftmp.74
.L317:
	.loc 1 1169 0 is_stmt 1
	jmp	.L318	#
.L313:
	movl	$.LC27, %eax	#, iftmp.73
.L318:
	.loc 1 1169 0 is_stmt 0 discriminator 4
	movq	%rbx, %rdx	# iftmp.72,
	movq	%rax, %rsi	# iftmp.73,
	movl	$.LC28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21580,
	call	Perl_yyerror	#
	.loc 1 1176 0 is_stmt 1 discriminator 4
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L267:
	.loc 1 1198 0
	movq	-72(%rbp), %rax	# o, tmp342
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$64, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	jne	.L319	#,
	.loc 1 1199 0
	jmp	.L252	#
.L319:
	.loc 1 1200 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.76
	addl	$1, %eax	#, PL_modcount.77
	movl	%eax, PL_modcount(%rip)	# PL_modcount.77, PL_modcount
	.loc 1 1201 0
	jmp	.L285	#
.L274:
	.loc 1 1204 0
	movq	-72(%rbp), %rax	# o, tmp343
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_13(D)].op_first, D.21564
	movq	8(%rax), %rax	# _118->op_sibling, tmp344
	movq	%rax, -56(%rbp)	# tmp344, kid
	jmp	.L320	#
.L321:
	.loc 1 1205 0 discriminator 2
	movl	-76(%rbp), %edx	# type, tmp345
	movq	-56(%rbp), %rax	# kid, tmp346
	movl	%edx, %esi	# tmp345,
	movq	%rax, %rdi	# tmp346,
	call	Perl_mod	#
	.loc 1 1204 0 discriminator 2
	movq	-56(%rbp), %rax	# kid, tmp347
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp348
	movq	%rax, -56(%rbp)	# tmp348, kid
.L320:
	.loc 1 1204 0 is_stmt 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, kid
	jne	.L321	#,
	.loc 1 1206 0 is_stmt 1
	jmp	.L285	#
.L269:
	.loc 1 1210 0
	cmpl	$20, -76(%rbp)	#, type
	jne	.L261	#,
	.loc 1 1210 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp349
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$8, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L261	#,
	.loc 1 1211 0 is_stmt 1
	movl	$1073741823, PL_modcount(%rip)	#, PL_modcount
	.loc 1 1212 0
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L261:
	.loc 1 1216 0
	movl	-76(%rbp), %edx	# type, tmp350
	movq	-72(%rbp), %rax	# o, tmp351
	movl	%edx, %esi	# tmp350,
	movq	%rax, %rdi	# tmp351,
	call	S_scalar_mod_type	#
	testb	%al, %al	# D.21577
	je	.L322	#,
	.loc 1 1217 0
	jmp	.L252	#
.L322:
	.loc 1 1218 0
	movq	-72(%rbp), %rax	# o, tmp352
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %edx	# D.21567, D.21566
	movq	-72(%rbp), %rax	# o, tmp353
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_13(D)].op_first, D.21564
	movl	%edx, %esi	# D.21566,
	movq	%rax, %rdi	# D.21564,
	call	Perl_ref	#
.L271:
	.loc 1 1222 0
	cmpl	$168, -76(%rbp)	#, type
	jne	.L264	#,
	.loc 1 1223 0
	movq	-72(%rbp), %rax	# o, tmp354
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$8, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp355
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
.L264:
	.loc 1 1228 0
	movl	$1073741823, PL_modcount(%rip)	#, PL_modcount
	.loc 1 1229 0
	jmp	.L285	#
.L262:
	.loc 1 1231 0
	movq	-72(%rbp), %rax	# o, tmp356
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %edx	# D.21567, D.21566
	movq	-72(%rbp), %rax	# o, tmp357
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_13(D)].op_first, D.21564
	movl	%edx, %esi	# D.21566,
	movq	%rax, %rdi	# D.21564,
	call	Perl_ref	#
.L258:
	.loc 1 1235 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.78
	orb	$1, %ah	#, PL_hints.79
	movl	%eax, PL_hints(%rip)	# PL_hints.79, PL_hints
.L263:
	.loc 1 1243 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.80
	addl	$1, %eax	#, PL_modcount.81
	movl	%eax, PL_modcount(%rip)	# PL_modcount.81, PL_modcount
	.loc 1 1244 0
	jmp	.L285	#
.L260:
	.loc 1 1248 0
	movl	$1073741823, PL_modcount(%rip)	#, PL_modcount
	.loc 1 1249 0
	cmpl	$20, -76(%rbp)	#, type
	jne	.L323	#,
	.loc 1 1249 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp358
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$8, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L323	#,
	.loc 1 1250 0 is_stmt 1
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L323:
	.loc 1 1251 0
	movl	-76(%rbp), %edx	# type, tmp359
	movq	-72(%rbp), %rax	# o, tmp360
	movl	%edx, %esi	# tmp359,
	movq	%rax, %rdi	# tmp360,
	call	S_scalar_mod_type	#
	testb	%al, %al	# D.21577
	je	.L324	#,
	.loc 1 1252 0
	jmp	.L252	#
.L324:
	.loc 1 1253 0
	cmpl	$168, -76(%rbp)	#, type
	jne	.L259	#,
	.loc 1 1254 0
	movq	-72(%rbp), %rax	# o, tmp361
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$8, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp362
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
.L259:
	.loc 1 1257 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.82
	addl	$1, %eax	#, PL_modcount.83
	movl	%eax, PL_modcount(%rip)	# PL_modcount.83, PL_modcount
	.loc 1 1258 0
	cmpl	$0, -76(%rbp)	#, type
	jne	.L325	#,
	.loc 1 1264 0
	movq	-72(%rbp), %rax	# o, tmp363
	movq	24(%rax), %rax	# o_13(D)->op_targ, D.21573
	movl	%eax, %ecx	# D.21573, D.21566
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.85
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21566,
	movq	%rax, %rdi	# PL_comppad_name.85,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_150, D.21569
	movl	12(%rax), %eax	# _151->sv_flags, D.21568
	andl	$262144, %eax	#, D.21568
	.loc 1 1263 0
	testl	%eax, %eax	# D.21568
	je	.L326	#,
	.loc 1 1264 0
	movq	-72(%rbp), %rax	# o, tmp364
	movq	24(%rax), %rax	# o_13(D)->op_targ, D.21573
	movl	%eax, %ecx	# D.21573, D.21566
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.86
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21566,
	movq	%rax, %rdi	# PL_comppad_name.86,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_157, D.21569
	movq	(%rax), %rax	# _158->sv_any, D.21570
	.loc 1 1263 0
	movq	(%rax), %rax	# MEM[(struct XPV *)_159].xpv_pv, iftmp.84
	jmp	.L327	#
.L326:
	.loc 1 1264 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp365
	movq	24(%rax), %rax	# o_13(D)->op_targ, D.21573
	movl	%eax, %ecx	# D.21573, D.21566
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.87
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21566,
	movq	%rax, %rdi	# PL_comppad_name.87,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_164, D.21569
	.loc 1 1263 0 discriminator 1
	movq	%rax, %rdi	# D.21569,
	call	Perl_sv_2pv_nolen	#
.L327:
	.loc 1 1263 0 is_stmt 0 discriminator 2
	movq	%rax, %rsi	# iftmp.84,
	movl	$.LC29, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 1266 0 is_stmt 1 discriminator 2
	jmp	.L285	#
.L325:
	.loc 1 1266 0 is_stmt 0
	jmp	.L285	#
.L272:
	.loc 1 1278 0 is_stmt 1
	cmpl	$36, -76(%rbp)	#, type
	je	.L328	#,
	.loc 1 1279 0
	jmp	.L252	#
.L328:
	.loc 1 1280 0
	jmp	.L329	#
.L268:
	.loc 1 1282 0
	movq	-72(%rbp), %rax	# o, tmp366
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	cmpb	$4, %al	#, D.21565
	jne	.L266	#,
	.loc 1 1283 0
	jmp	.L252	#
.L266:
	.loc 1 1287 0
	cmpl	$168, -76(%rbp)	#, type
	jne	.L329	#,
	.loc 1 1288 0
	movq	-72(%rbp), %rax	# o, tmp367
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$8, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp368
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
.L329:
	.loc 1 1290 0
	movq	-72(%rbp), %rax	# o, tmp369
	movq	24(%rax), %rax	# o_13(D)->op_targ, D.21573
	movq	%rax, %rdi	# D.21573,
	call	Perl_pad_free	#
	.loc 1 1291 0
	movq	-72(%rbp), %rax	# o, tmp370
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	movl	$1024, %esi	#,
	movl	%eax, %edi	# D.21566,
	call	Perl_pad_alloc	#
	movq	-72(%rbp), %rdx	# o, tmp371
	movq	%rax, 24(%rdx)	# D.21573, o_13(D)->op_targ
	.loc 1 1293 0
	movq	-72(%rbp), %rax	# o, tmp372
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$4, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L330	#,
	.loc 1 1294 0
	movq	-72(%rbp), %rax	# o, tmp373
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_13(D)].op_first, D.21564
	movq	8(%rax), %rax	# _177->op_sibling, D.21564
	movl	-76(%rbp), %edx	# type, tmp374
	movl	%edx, %esi	# tmp374,
	movq	%rax, %rdi	# D.21564,
	call	Perl_mod	#
	.loc 1 1295 0
	jmp	.L285	#
.L330:
	jmp	.L285	#
.L270:
	.loc 1 1299 0
	movq	-72(%rbp), %rax	# o, tmp375
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %edx	# D.21567, D.21566
	movq	-72(%rbp), %rax	# o, tmp376
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_13(D)].op_first, D.21564
	movl	%edx, %esi	# D.21566,
	movq	%rax, %rdi	# D.21564,
	call	Perl_ref	#
	.loc 1 1300 0
	cmpl	$166, -76(%rbp)	#, type
	jne	.L331	#,
	.loc 1 1301 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp377
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$224, %eax	#, D.21566
	.loc 1 1300 0 discriminator 1
	testl	%eax, %eax	# D.21566
	jne	.L331	#,
	.loc 1 1302 0
	movq	-72(%rbp), %rax	# o, tmp378
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$16, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp379
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
.L331:
	.loc 1 1303 0
	cmpl	$168, -76(%rbp)	#, type
	jne	.L332	#,
	.loc 1 1304 0
	movq	-72(%rbp), %rax	# o, tmp380
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$8, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp381
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
.L332:
	.loc 1 1305 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.88
	addl	$1, %eax	#, PL_modcount.89
	movl	%eax, PL_modcount(%rip)	# PL_modcount.89, PL_modcount
	.loc 1 1306 0
	jmp	.L285	#
.L276:
	.loc 1 1312 0
	movq	-72(%rbp), %rax	# o, tmp382
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$4, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	je	.L333	#,
	.loc 1 1313 0
	movq	-72(%rbp), %rax	# o, tmp383
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)o_13(D)].op_last, D.21564
	movl	-76(%rbp), %edx	# type, tmp384
	movl	%edx, %esi	# tmp384,
	movq	%rax, %rdi	# D.21564,
	call	Perl_mod	#
	.loc 1 1314 0
	jmp	.L285	#
.L333:
	jmp	.L285	#
.L253:
	.loc 1 1317 0
	movq	-72(%rbp), %rax	# o, tmp385
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	testb	%al, %al	# D.21579
	jns	.L334	#,
	.loc 1 1318 0
	jmp	.L252	#
.L334:
	.loc 1 1319 0
	movq	-72(%rbp), %rax	# o, tmp386
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	movzbl	%al, %eax	# D.21565, D.21566
	andl	$4, %eax	#, D.21566
	testl	%eax, %eax	# D.21566
	jne	.L335	#,
	.loc 1 1320 0
	jmp	.L285	#
.L335:
	.loc 1 1321 0
	movq	-72(%rbp), %rax	# o, tmp387
	movq	24(%rax), %rax	# o_13(D)->op_targ, D.21573
	cmpq	$141, %rax	#, D.21573
	je	.L273	#,
	.loc 1 1322 0
	movq	-72(%rbp), %rax	# o, tmp388
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_13(D)].op_first, D.21564
	movl	-76(%rbp), %edx	# type, tmp389
	movl	%edx, %esi	# tmp389,
	movq	%rax, %rdi	# D.21564,
	call	Perl_mod	#
	.loc 1 1323 0
	jmp	.L285	#
.L273:
	.loc 1 1327 0
	movq	-72(%rbp), %rax	# o, tmp390
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_13(D)].op_first, tmp391
	movq	%rax, -56(%rbp)	# tmp391, kid
	jmp	.L336	#
.L337:
	.loc 1 1328 0 discriminator 2
	movl	-76(%rbp), %edx	# type, tmp392
	movq	-56(%rbp), %rax	# kid, tmp393
	movl	%edx, %esi	# tmp392,
	movq	%rax, %rdi	# tmp393,
	call	Perl_mod	#
	.loc 1 1327 0 discriminator 2
	movq	-56(%rbp), %rax	# kid, tmp394
	movq	8(%rax), %rax	# kid_2->op_sibling, tmp395
	movq	%rax, -56(%rbp)	# tmp395, kid
.L336:
	.loc 1 1327 0 is_stmt 0 discriminator 1
	cmpq	$0, -56(%rbp)	#, kid
	jne	.L337	#,
	.loc 1 1329 0 is_stmt 1
	jmp	.L285	#
.L277:
	.loc 1 1332 0
	cmpl	$168, -76(%rbp)	#, type
	je	.L338	#,
	.loc 1 1333 0
	jmp	.L252	#
.L338:
	.loc 1 1334 0
	jmp	.L285	#
.L345:
	.loc 1 1275 0
	nop
.L285:
	.loc 1 1340 0
	cmpl	$20, -76(%rbp)	#, type
	jne	.L339	#,
	.loc 1 1341 0 discriminator 1
	movq	-72(%rbp), %rax	# o, tmp396
	movzwl	32(%rax), %eax	# o_13(D)->op_type, D.21567
	movzwl	%ax, %eax	# D.21567, D.21566
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21581
	.loc 1 1340 0 discriminator 1
	cmpq	$Perl_ck_ftst, %rax	#, D.21581
	jne	.L339	#,
	.loc 1 1342 0
	movq	-72(%rbp), %rax	# o, D.21564
	jmp	.L250	#
.L339:
	.loc 1 1344 0
	cmpl	$168, -76(%rbp)	#, type
	je	.L340	#,
	.loc 1 1345 0
	movq	-72(%rbp), %rax	# o, tmp398
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	orl	$32, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp399
	movb	%dl, 36(%rax)	# D.21565, o_13(D)->op_flags
.L340:
	.loc 1 1347 0
	cmpl	$37, -76(%rbp)	#, type
	je	.L341	#,
	.loc 1 1347 0 is_stmt 0 discriminator 1
	cmpl	$36, -76(%rbp)	#, type
	jne	.L342	#,
.L341:
	.loc 1 1348 0 is_stmt 1
	movq	-72(%rbp), %rax	# o, tmp400
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	orl	$-112, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp401
	movb	%dl, 36(%rax)	# D.21565, o_13(D)->op_flags
	jmp	.L343	#
.L342:
	.loc 1 1349 0
	cmpl	$0, -76(%rbp)	#, type
	jne	.L344	#,
	.loc 1 1350 0
	movq	-72(%rbp), %rax	# o, tmp402
	movzbl	37(%rax), %eax	# o_13(D)->op_private, D.21565
	orl	$-128, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp403
	movb	%dl, 37(%rax)	# D.21565, o_13(D)->op_private
	.loc 1 1351 0
	movq	-72(%rbp), %rax	# o, tmp404
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	andl	$127, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp405
	movb	%dl, 36(%rax)	# D.21565, o_13(D)->op_flags
	.loc 1 1352 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.90
	orb	$1, %ah	#, PL_hints.91
	movl	%eax, PL_hints(%rip)	# PL_hints.91, PL_hints
	jmp	.L343	#
.L344:
	.loc 1 1354 0
	cmpl	$152, -76(%rbp)	#, type
	je	.L343	#,
	.loc 1 1354 0 is_stmt 0 discriminator 1
	cmpl	$166, -76(%rbp)	#, type
	je	.L343	#,
	.loc 1 1355 0 is_stmt 1
	cmpl	$168, -76(%rbp)	#, type
	je	.L343	#,
	.loc 1 1356 0
	movq	-72(%rbp), %rax	# o, tmp406
	movzbl	36(%rax), %eax	# o_13(D)->op_flags, D.21565
	orl	$16, %eax	#, D.21565
	movl	%eax, %edx	# D.21565, D.21565
	movq	-72(%rbp), %rax	# o, tmp407
	movb	%dl, 36(%rax)	# D.21565, o_13(D)->op_flags
.L343:
	.loc 1 1357 0
	movq	-72(%rbp), %rax	# o, D.21564
.L250:
	.loc 1 1358 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	Perl_mod, .-Perl_mod
	.type	S_scalar_mod_type, @function
S_scalar_mod_type:
.LFB25:
	.loc 1 1362 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	movl	%esi, -12(%rbp)	# type, type
	.loc 1 1363 0
	movl	-12(%rbp), %eax	# type, type
	cmpl	$69, %eax	#, type
	jg	.L348	#,
	cmpl	$68, %eax	#, type
	jge	.L349	#,
	cmpl	$36, %eax	#, type
	je	.L350	#,
	cmpl	$36, %eax	#, type
	jg	.L351	#,
	cmpl	$33, %eax	#, type
	je	.L349	#,
	cmpl	$35, %eax	#, type
	je	.L349	#,
	jmp	.L347	#
.L351:
	subl	$46, %eax	#, tmp63
	cmpl	$20, %eax	#, tmp63
	ja	.L347	#,
	jmp	.L349	#
.L348:
	cmpl	$164, %eax	#, type
	jg	.L352	#,
	cmpl	$163, %eax	#, type
	jge	.L349	#,
	subl	$91, %eax	#, tmp64
	cmpl	$2, %eax	#, tmp64
	ja	.L347	#,
	jmp	.L349	#
.L352:
	cmpl	$212, %eax	#, type
	je	.L349	#,
	cmpl	$215, %eax	#, type
	je	.L349	#,
	cmpl	$205, %eax	#, type
	je	.L349	#,
	jmp	.L347	#
.L350:
	.loc 1 1365 0
	movq	-8(%rbp), %rax	# o, tmp65
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.21592
	cmpw	$14, %ax	#, D.21592
	jne	.L349	#,
	.loc 1 1366 0
	movl	$0, %eax	#, D.21591
	jmp	.L353	#
.L349:
	.loc 1 1401 0
	movl	$1, %eax	#, D.21591
	jmp	.L353	#
.L347:
	.loc 1 1403 0
	movl	$0, %eax	#, D.21591
.L353:
	.loc 1 1405 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	S_scalar_mod_type, .-S_scalar_mod_type
	.type	S_is_handle_constructor, @function
S_is_handle_constructor:
.LFB26:
	.loc 1 1409 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	movl	%esi, -12(%rbp)	# argnum, argnum
	.loc 1 1410 0
	movq	-8(%rbp), %rax	# o, tmp63
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21597
	movzwl	%ax, %eax	# D.21597, D.21598
	cmpl	$210, %eax	#, D.21598
	je	.L356	#,
	cmpl	$210, %eax	#, D.21598
	jg	.L357	#,
	cmpl	$193, %eax	#, D.21598
	je	.L358	#,
	cmpl	$203, %eax	#, D.21598
	je	.L356	#,
	cmpl	$191, %eax	#, D.21598
	je	.L356	#,
	jmp	.L355	#
.L357:
	cmpl	$224, %eax	#, D.21598
	je	.L358	#,
	cmpl	$224, %eax	#, D.21598
	jg	.L359	#,
	cmpl	$223, %eax	#, D.21598
	je	.L356	#,
	jmp	.L355	#
.L359:
	cmpl	$228, %eax	#, D.21598
	je	.L356	#,
	cmpl	$275, %eax	#, D.21598
	je	.L356	#,
	jmp	.L355	#
.L358:
	.loc 1 1413 0
	cmpl	$2, -12(%rbp)	#, argnum
	jne	.L356	#,
	.loc 1 1414 0
	movl	$1, %eax	#, D.21596
	jmp	.L360	#
.L356:
	.loc 1 1422 0
	cmpl	$1, -12(%rbp)	#, argnum
	jne	.L355	#,
	.loc 1 1423 0
	movl	$1, %eax	#, D.21596
	jmp	.L360	#
.L355:
	.loc 1 1426 0
	movl	$0, %eax	#, D.21596
.L360:
	.loc 1 1428 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	S_is_handle_constructor, .-S_is_handle_constructor
	.globl	Perl_refkids
	.type	Perl_refkids, @function
Perl_refkids:
.LFB27:
	.loc 1 1432 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movl	%esi, -28(%rbp)	# type, type
	.loc 1 1434 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L362	#,
	.loc 1 1434 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp64
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.21601
	movzbl	%al, %eax	# D.21601, D.21602
	andl	$4, %eax	#, D.21602
	testl	%eax, %eax	# D.21602
	je	.L362	#,
	.loc 1 1435 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp65
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp66
	movq	%rax, -8(%rbp)	# tmp66, kid
	jmp	.L363	#
.L364:
	.loc 1 1436 0 discriminator 2
	movl	-28(%rbp), %edx	# type, tmp67
	movq	-8(%rbp), %rax	# kid, tmp68
	movl	%edx, %esi	# tmp67,
	movq	%rax, %rdi	# tmp68,
	call	Perl_ref	#
	.loc 1 1435 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp69
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp70
	movq	%rax, -8(%rbp)	# tmp70, kid
.L363:
	.loc 1 1435 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L364	#,
.L362:
	.loc 1 1438 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.21603
	.loc 1 1439 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	Perl_refkids, .-Perl_refkids
	.globl	Perl_ref
	.type	Perl_ref, @function
Perl_ref:
.LFB28:
	.loc 1 1443 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movl	%esi, -28(%rbp)	# type, type
	.loc 1 1446 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L367	#,
	.loc 1 1446 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.92
	testl	%eax, %eax	# PL_error_count.92
	je	.L368	#,
.L367:
	.loc 1 1447 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.21604
	jmp	.L369	#
.L368:
	.loc 1 1449 0
	movq	-24(%rbp), %rax	# o, tmp116
	movzwl	32(%rax), %eax	# o_7(D)->op_type, D.21605
	movzwl	%ax, %eax	# D.21605, D.21606
	cmpl	$127, %eax	#, D.21606
	je	.L371	#,
	cmpl	$127, %eax	#, D.21606
	jg	.L372	#,
	cmpl	$11, %eax	#, D.21606
	jg	.L373	#,
	cmpl	$10, %eax	#, D.21606
	jge	.L374	#,
	cmpl	$2, %eax	#, D.21606
	je	.L375	#,
	cmpl	$9, %eax	#, D.21606
	je	.L376	#,
	testl	%eax, %eax	# D.21606
	je	.L375	#,
	.loc 1 1524 0
	jmp	.L388	#
.L373:
	.loc 1 1449 0
	cmpl	$15, %eax	#, D.21606
	je	.L377	#,
	cmpl	$125, %eax	#, D.21606
	je	.L378	#,
	cmpl	$14, %eax	#, D.21606
	je	.L379	#,
	.loc 1 1524 0
	jmp	.L388	#
.L372:
	.loc 1 1449 0
	cmpl	$162, %eax	#, D.21606
	je	.L380	#,
	cmpl	$162, %eax	#, D.21606
	jg	.L381	#,
	cmpl	$135, %eax	#, D.21606
	je	.L371	#,
	cmpl	$141, %eax	#, D.21606
	je	.L382	#,
	cmpl	$134, %eax	#, D.21606
	je	.L378	#,
	.loc 1 1524 0
	jmp	.L388	#
.L381:
	.loc 1 1449 0
	cmpl	$179, %eax	#, D.21606
	jg	.L383	#,
	cmpl	$177, %eax	#, D.21606
	jge	.L382	#,
	cmpl	$166, %eax	#, D.21606
	je	.L384	#,
	.loc 1 1524 0
	jmp	.L388	#
.L383:
	.loc 1 1449 0
	cmpl	$348, %eax	#, D.21606
	je	.L385	#,
	.loc 1 1524 0
	jmp	.L388	#
.L384:
	.loc 1 1451 0
	cmpl	$133, -28(%rbp)	#, type
	je	.L386	#,
	.loc 1 1451 0 is_stmt 0 discriminator 2
	cmpl	$42, -28(%rbp)	#, type
	je	.L386	#,
	.loc 1 1451 0 discriminator 1
	cmpl	$347, -28(%rbp)	#, type
	jne	.L387	#,
.L386:
	.loc 1 1452 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp117
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	movzbl	%al, %eax	# D.21607, D.21606
	andl	$64, %eax	#, D.21606
	.loc 1 1451 0 discriminator 1
	testl	%eax, %eax	# D.21606
	jne	.L387	#,
	.loc 1 1453 0
	movq	-24(%rbp), %rax	# o, tmp118
	movw	$17, 32(%rax)	#, o_7(D)->op_type
	.loc 1 1454 0
	movq	PL_ppaddr+136(%rip), %rdx	# PL_ppaddr, D.21608
	movq	-24(%rbp), %rax	# o, tmp119
	movq	%rdx, 16(%rax)	# D.21608, o_7(D)->op_ppaddr
	.loc 1 1456 0
	movq	-24(%rbp), %rax	# o, tmp120
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21604
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)_16].op_first, D.21604
	movq	%rax, %rdi	# D.21604,
	call	Perl_op_null	#
	.loc 1 1457 0
	movq	-24(%rbp), %rax	# o, tmp121
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$-128, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp122
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
	.loc 1 1459 0
	jmp	.L388	#
.L387:
	jmp	.L388	#
.L380:
	.loc 1 1462 0
	movq	-24(%rbp), %rax	# o, tmp123
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21604
	movq	8(%rax), %rax	# _20->op_sibling, tmp124
	movq	%rax, -8(%rbp)	# tmp124, kid
	jmp	.L389	#
.L390:
	.loc 1 1463 0 discriminator 2
	movl	-28(%rbp), %edx	# type, tmp125
	movq	-8(%rbp), %rax	# kid, tmp126
	movl	%edx, %esi	# tmp125,
	movq	%rax, %rdi	# tmp126,
	call	Perl_ref	#
	.loc 1 1462 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp127
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp128
	movq	%rax, -8(%rbp)	# tmp128, kid
.L389:
	.loc 1 1462 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L390	#,
	.loc 1 1464 0 is_stmt 1
	jmp	.L388	#
.L377:
	.loc 1 1466 0
	cmpl	$42, -28(%rbp)	#, type
	jne	.L391	#,
	.loc 1 1467 0
	movq	-24(%rbp), %rax	# o, tmp129
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$-128, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp130
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
.L391:
	.loc 1 1468 0
	movq	-24(%rbp), %rax	# o, tmp131
	movzwl	32(%rax), %eax	# o_7(D)->op_type, D.21605
	movzwl	%ax, %edx	# D.21605, D.21606
	movq	-24(%rbp), %rax	# o, tmp132
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21604
	movl	%edx, %esi	# D.21606,
	movq	%rax, %rdi	# D.21604,
	call	Perl_ref	#
.L376:
	.loc 1 1471 0
	cmpl	$15, -28(%rbp)	#, type
	je	.L392	#,
	.loc 1 1471 0 is_stmt 0 discriminator 1
	cmpl	$125, -28(%rbp)	#, type
	je	.L392	#,
	cmpl	$134, -28(%rbp)	#, type
	jne	.L393	#,
.L392:
	.loc 1 1472 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp133
	movzbl	37(%rax), %eax	# o_7(D)->op_private, D.21607
	movl	%eax, %edx	# D.21607, D.21609
	cmpl	$125, -28(%rbp)	#, type
	je	.L394	#,
	.loc 1 1472 0 is_stmt 0 discriminator 1
	cmpl	$134, -28(%rbp)	#, type
	jne	.L395	#,
	.loc 1 1472 0 discriminator 3
	movl	$64, %eax	#, iftmp.94
	jmp	.L397	#
.L395:
	.loc 1 1472 0 discriminator 4
	movl	$96, %eax	#, iftmp.94
	jmp	.L397	#
.L394:
	.loc 1 1472 0 discriminator 2
	movl	$32, %eax	#, iftmp.93
.L397:
	.loc 1 1472 0 discriminator 5
	orl	%edx, %eax	# D.21609, D.21609
	movl	%eax, %edx	# D.21609, D.21607
	movq	-24(%rbp), %rax	# o, tmp134
	movb	%dl, 37(%rax)	# D.21607, o_7(D)->op_private
	.loc 1 1475 0 is_stmt 1 discriminator 5
	movq	-24(%rbp), %rax	# o, tmp135
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$32, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp136
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
	.loc 1 1477 0 discriminator 5
	jmp	.L388	#
.L393:
	.loc 1 1477 0 is_stmt 0
	jmp	.L388	#
.L385:
	.loc 1 1480 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp137
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$32, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp138
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
	.loc 1 1481 0
	jmp	.L388	#
.L378:
	.loc 1 1485 0
	movq	-24(%rbp), %rax	# o, tmp139
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$16, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp140
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
.L379:
	.loc 1 1488 0
	cmpl	$42, -28(%rbp)	#, type
	jne	.L398	#,
	.loc 1 1489 0
	movq	-24(%rbp), %rax	# o, tmp141
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$-128, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp142
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
.L398:
	.loc 1 1490 0
	movq	-24(%rbp), %rax	# o, tmp143
	movzwl	32(%rax), %eax	# o_7(D)->op_type, D.21605
	movzwl	%ax, %edx	# D.21605, D.21606
	movq	-24(%rbp), %rax	# o, tmp144
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21604
	movl	%edx, %esi	# D.21606,
	movq	%rax, %rdi	# D.21604,
	call	Perl_ref	#
	.loc 1 1491 0
	jmp	.L388	#
.L374:
	.loc 1 1495 0
	movq	-24(%rbp), %rax	# o, tmp145
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$16, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp146
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
	.loc 1 1496 0
	jmp	.L388	#
.L375:
	.loc 1 1500 0
	movq	-24(%rbp), %rax	# o, tmp147
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	movzbl	%al, %eax	# D.21607, D.21606
	andl	$4, %eax	#, D.21606
	testl	%eax, %eax	# D.21606
	jne	.L399	#,
	.loc 1 1501 0
	jmp	.L388	#
.L399:
	.loc 1 1502 0
	movq	-24(%rbp), %rax	# o, tmp148
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_7(D)].op_first, D.21604
	movl	-28(%rbp), %edx	# type, tmp149
	movl	%edx, %esi	# tmp149,
	movq	%rax, %rdi	# D.21604,
	call	Perl_ref	#
	.loc 1 1503 0
	jmp	.L388	#
.L371:
	.loc 1 1506 0
	movq	-24(%rbp), %rax	# o, tmp150
	movzwl	32(%rax), %eax	# o_7(D)->op_type, D.21605
	movzwl	%ax, %edx	# D.21605, D.21606
	movq	-24(%rbp), %rax	# o, tmp151
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_7(D)].op_first, D.21604
	movl	%edx, %esi	# D.21606,
	movq	%rax, %rdi	# D.21604,
	call	Perl_ref	#
	.loc 1 1507 0
	cmpl	$15, -28(%rbp)	#, type
	je	.L400	#,
	.loc 1 1507 0 is_stmt 0 discriminator 1
	cmpl	$125, -28(%rbp)	#, type
	je	.L400	#,
	cmpl	$134, -28(%rbp)	#, type
	jne	.L401	#,
.L400:
	.loc 1 1508 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp152
	movzbl	37(%rax), %eax	# o_7(D)->op_private, D.21607
	movl	%eax, %edx	# D.21607, D.21609
	cmpl	$125, -28(%rbp)	#, type
	je	.L402	#,
	.loc 1 1508 0 is_stmt 0 discriminator 1
	cmpl	$134, -28(%rbp)	#, type
	jne	.L403	#,
	.loc 1 1508 0 discriminator 3
	movl	$64, %eax	#, iftmp.96
	jmp	.L405	#
.L403:
	.loc 1 1508 0 discriminator 4
	movl	$96, %eax	#, iftmp.96
	jmp	.L405	#
.L402:
	.loc 1 1508 0 discriminator 2
	movl	$32, %eax	#, iftmp.95
.L405:
	.loc 1 1508 0 discriminator 5
	orl	%edx, %eax	# D.21609, D.21609
	movl	%eax, %edx	# D.21609, D.21607
	movq	-24(%rbp), %rax	# o, tmp153
	movb	%dl, 37(%rax)	# D.21607, o_7(D)->op_private
	.loc 1 1511 0 is_stmt 1 discriminator 5
	movq	-24(%rbp), %rax	# o, tmp154
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	orl	$32, %eax	#, D.21607
	movl	%eax, %edx	# D.21607, D.21607
	movq	-24(%rbp), %rax	# o, tmp155
	movb	%dl, 36(%rax)	# D.21607, o_7(D)->op_flags
	.loc 1 1513 0 discriminator 5
	jmp	.L388	#
.L401:
	.loc 1 1513 0 is_stmt 0
	jmp	.L388	#
.L382:
	.loc 1 1519 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp156
	movzbl	36(%rax), %eax	# o_7(D)->op_flags, D.21607
	movzbl	%al, %eax	# D.21607, D.21606
	andl	$4, %eax	#, D.21606
	testl	%eax, %eax	# D.21606
	jne	.L406	#,
	.loc 1 1520 0
	jmp	.L388	#
.L406:
	.loc 1 1521 0
	movq	-24(%rbp), %rax	# o, tmp157
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)o_7(D)].op_last, D.21604
	movl	-28(%rbp), %edx	# type, tmp158
	movl	%edx, %esi	# tmp158,
	movq	%rax, %rdi	# D.21604,
	call	Perl_ref	#
	.loc 1 1522 0
	nop
.L388:
	.loc 1 1526 0
	movq	-24(%rbp), %rax	# o, tmp159
	movq	%rax, %rdi	# tmp159,
	call	Perl_scalar	#
.L369:
	.loc 1 1528 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	Perl_ref, .-Perl_ref
	.type	S_dup_attrlist, @function
S_dup_attrlist:
.LFB29:
	.loc 1 1532 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 1533 0
	movq	$0, -8(%rbp)	#, rop
	.loc 1 1539 0
	movq	-24(%rbp), %rax	# o, tmp86
	movzwl	32(%rax), %eax	# o_6(D)->op_type, D.21614
	cmpw	$5, %ax	#, D.21614
	jne	.L408	#,
	.loc 1 1540 0
	movq	-24(%rbp), %rax	# o, tmp87
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_6(D)].op_sv, PL_Sv.97
	movq	%rax, PL_Sv(%rip)	# PL_Sv.97, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.99
	testq	%rax, %rax	# PL_Sv.99
	je	.L410	#,
	.loc 1 1540 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.100
	movl	8(%rax), %edx	# PL_Sv.100_10->sv_refcnt, D.21615
	addl	$1, %edx	#, D.21615
	movl	%edx, 8(%rax)	# D.21615, PL_Sv.100_10->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.100_10->sv_refcnt, D.21615
	testl	%eax, %eax	# D.21615
	je	.L410	#,
	.loc 1 1540 0
	nop
.L410:
	.loc 1 1540 0 discriminator 4
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.101
	movq	-24(%rbp), %rax	# o, tmp88
	movzbl	36(%rax), %eax	# o_6(D)->op_flags, D.21616
	movzbl	%al, %eax	# D.21616, D.21617
	movl	%eax, %esi	# D.21617,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -8(%rbp)	# tmp89, rop
	jmp	.L411	#
.L408:
	.loc 1 1543 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp90
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_6(D)].op_first, tmp91
	movq	%rax, -24(%rbp)	# tmp91, o
	jmp	.L412	#
.L416:
	.loc 1 1544 0
	movq	-24(%rbp), %rax	# o, tmp92
	movzwl	32(%rax), %eax	# o_1->op_type, D.21614
	cmpw	$5, %ax	#, D.21614
	jne	.L413	#,
	.loc 1 1547 0
	movq	-24(%rbp), %rax	# o, tmp93
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_1].op_sv, PL_Sv.102
	movq	%rax, PL_Sv(%rip)	# PL_Sv.102, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.104
	testq	%rax, %rax	# PL_Sv.104
	je	.L415	#,
	.loc 1 1547 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.105
	movl	8(%rax), %edx	# PL_Sv.105_24->sv_refcnt, D.21615
	addl	$1, %edx	#, D.21615
	movl	%edx, 8(%rax)	# D.21615, PL_Sv.105_24->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.105_24->sv_refcnt, D.21615
	testl	%eax, %eax	# D.21615
	je	.L415	#,
	.loc 1 1547 0
	nop
.L415:
	.loc 1 1545 0 is_stmt 1
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.106
	.loc 1 1546 0
	movq	-24(%rbp), %rax	# o, tmp94
	movzbl	36(%rax), %eax	# o_1->op_flags, D.21616
	.loc 1 1545 0
	movzbl	%al, %eax	# D.21616, D.21617
	movl	%eax, %esi	# D.21617,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.21618
	movq	-8(%rbp), %rax	# rop, tmp95
	movq	%rax, %rsi	# tmp95,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -8(%rbp)	# tmp96, rop
.L413:
	.loc 1 1543 0
	movq	-24(%rbp), %rax	# o, tmp97
	movq	8(%rax), %rax	# o_1->op_sibling, tmp98
	movq	%rax, -24(%rbp)	# tmp98, o
.L412:
	.loc 1 1543 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, o
	jne	.L416	#,
.L411:
	.loc 1 1550 0 is_stmt 1
	movq	-8(%rbp), %rax	# rop, D.21618
	.loc 1 1551 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	S_dup_attrlist, .-S_dup_attrlist
	.section	.rodata
.LC30:
	.string	"attributes.pm"
.LC31:
	.string	"attributes"
	.text
	.type	S_apply_attrs, @function
S_apply_attrs:
.LFB30:
	.loc 1 1555 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# stash, stash
	movq	%rsi, -48(%rbp)	# target, target
	movq	%rdx, -56(%rbp)	# attrs, attrs
	movl	%ecx, %eax	# for_my, tmp82
	movb	%al, -60(%rbp)	# tmp82, for_my
	.loc 1 1559 0
	call	Perl_push_scope	#
	.loc 1 1560 0
	movl	$PL_expect, %edi	#,
	call	Perl_save_int	#
	.loc 1 1561 0
	cmpq	$0, -40(%rbp)	#, stash
	je	.L419	#,
	.loc 1 1562 0
	movq	-40(%rbp), %rax	# stash, tmp83
	movq	(%rax), %rax	# stash_3(D)->sv_any, D.21619
	movq	80(%rax), %rax	# _4->xhv_name, D.21620
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.21620,
	call	Perl_newSVpv	#
	movq	%rax, -32(%rbp)	# tmp84, stashsv
	jmp	.L420	#
.L419:
	.loc 1 1564 0
	movq	$PL_sv_no, -32(%rbp)	#, stashsv
.L420:
	.loc 1 1569 0
	cmpb	$0, -60(%rbp)	#, for_my
	je	.L421	#,
.LBB12:
	.loc 1 1572 0
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.108
	movq	(%rax), %rax	# PL_incgv.108_9->sv_any, D.21621
	movq	56(%rax), %rax	# _10->xgv_gp, D.21622
	movq	40(%rax), %rax	# _11->gp_hv, D.21623
	testq	%rax, %rax	# D.21623
	je	.L422	#,
	.loc 1 1572 0 is_stmt 0 discriminator 1
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.109
	movq	(%rax), %rax	# PL_incgv.109_13->sv_any, D.21621
	movq	56(%rax), %rax	# _14->xgv_gp, D.21622
	movq	40(%rax), %rax	# _15->gp_hv, iftmp.107
	jmp	.L423	#
.L422:
	.loc 1 1572 0 discriminator 2
	movq	PL_incgv(%rip), %rax	# PL_incgv, PL_incgv.110
	movq	%rax, %rdi	# PL_incgv.110,
	call	Perl_gv_HVadd	#
	movq	(%rax), %rax	# _18->sv_any, D.21621
	movq	56(%rax), %rax	# _19->xgv_gp, D.21622
	movq	40(%rax), %rax	# _20->gp_hv, iftmp.107
.L423:
	.loc 1 1572 0 discriminator 3
	movl	$0, %ecx	#,
	movl	$13, %edx	#,
	movl	$.LC30, %esi	#,
	movq	%rax, %rdi	# iftmp.107,
	call	Perl_hv_fetch	#
	movq	%rax, -24(%rbp)	# tmp85, svp
	.loc 1 1574 0 is_stmt 1 discriminator 3
	cmpq	$0, -24(%rbp)	#, svp
	je	.L424	#,
	.loc 1 1574 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# svp, tmp86
	movq	(%rax), %rax	# *svp_22, D.21625
	cmpq	$PL_sv_undef, %rax	#, D.21625
	je	.L424	#,
	nop
	jmp	.L426	#
.L424:
	.loc 1 1577 0 is_stmt 1
	movl	$10, %esi	#,
	movl	$.LC31, %edi	#,
	call	Perl_newSVpvn	#
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.21625,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_load_module	#
.LBE12:
	jmp	.L426	#
.L421:
	.loc 1 1582 0
	movq	-56(%rbp), %rax	# attrs, tmp87
	movq	%rax, %rdi	# tmp87,
	call	S_dup_attrlist	#
	movq	%rax, %rbx	#, D.21626
	movq	-48(%rbp), %rax	# target, tmp88
	movq	%rax, %rdi	# tmp88,
	call	Perl_newRV	#
	movq	%rax, %rdx	# D.21625,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rbx, %rdx	# D.21626,
	movq	%rax, %rsi	# D.21626,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rbx	#, D.21626
	movq	-32(%rbp), %rax	# stashsv, tmp89
	movq	%rax, %rdx	# tmp89,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rbx, %rdx	# D.21626,
	movq	%rax, %rsi	# D.21626,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rbx	#, D.21626
	movl	$10, %esi	#,
	movl	$.LC31, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rbx, %rcx	# D.21626,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.21625,
	movl	$4, %edi	#,
	movl	$0, %eax	#,
	call	Perl_load_module	#
.L426:
	.loc 1 1592 0
	call	Perl_pop_scope	#
	.loc 1 1593 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE30:
	.size	S_apply_attrs, .-S_apply_attrs
	.section	.rodata
.LC32:
	.string	"import"
	.text
	.type	S_apply_attrs_my, @function
S_apply_attrs_my:
.LFB31:
	.loc 1 1597 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -88(%rbp)	# stash, stash
	movq	%rsi, -96(%rbp)	# target, target
	movq	%rdx, -104(%rbp)	# attrs, attrs
	movq	%rcx, -112(%rbp)	# imopsp, imopsp
	.loc 1 1601 0
	cmpq	$0, -104(%rbp)	#, attrs
	jne	.L428	#,
	.loc 1 1602 0
	jmp	.L427	#
.L428:
	.loc 1 1609 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.111
	movq	-96(%rbp), %rax	# target, tmp113
	movq	24(%rax), %rax	# target_7(D)->op_targ, D.21629
	salq	$3, %rax	#, D.21629
	addq	%rdx, %rax	# PL_curpad.111, D.21630
	movq	(%rax), %rsi	# *_10, D.21631
	movq	-104(%rbp), %rdx	# attrs, tmp114
	movq	-88(%rbp), %rax	# stash, tmp115
	movl	$1, %ecx	#,
	movq	%rax, %rdi	# tmp115,
	call	S_apply_attrs	#
	.loc 1 1612 0
	movl	$10, %esi	#,
	movl	$.LC31, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.21631,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -64(%rbp)	# tmp116, pack
	.loc 1 1615 0
	cmpq	$0, -88(%rbp)	#, stash
	je	.L430	#,
	.loc 1 1616 0
	movq	-88(%rbp), %rax	# stash, tmp117
	movq	(%rax), %rax	# stash_12(D)->sv_any, D.21632
	movq	80(%rax), %rax	# _15->xhv_name, D.21633
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.21633,
	call	Perl_newSVpv	#
	movq	%rax, -72(%rbp)	# tmp118, stashsv
	jmp	.L431	#
.L430:
	.loc 1 1618 0
	movq	$PL_sv_no, -72(%rbp)	#, stashsv
.L431:
	.loc 1 1619 0
	movl	$0, %esi	#,
	movl	$9, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -56(%rbp)	# tmp119, arg
	.loc 1 1620 0
	movq	-96(%rbp), %rax	# target, tmp120
	movq	24(%rax), %rdx	# target_7(D)->op_targ, D.21629
	movq	-56(%rbp), %rax	# arg, tmp121
	movq	%rdx, 24(%rax)	# D.21629, arg_19->op_targ
	.loc 1 1621 0
	movq	-104(%rbp), %rax	# attrs, tmp122
	movq	%rax, %rdi	# tmp122,
	call	S_dup_attrlist	#
	movq	%rax, %rbx	#, D.21634
	movq	-56(%rbp), %rax	# arg, tmp123
	movl	$20, %esi	#,
	movq	%rax, %rdi	# tmp123,
	call	Perl_mod	#
	movq	%rax, %rdx	# D.21634,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	movq	%rbx, %rdx	# D.21634,
	movq	%rax, %rsi	# D.21634,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rbx	#, D.21634
	movq	-72(%rbp), %rax	# stashsv, tmp124
	movq	%rax, %rdx	# tmp124,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rbx, %rdx	# D.21634,
	movq	%rax, %rsi	# D.21634,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, -56(%rbp)	# tmp125, arg
	.loc 1 1629 0
	movl	$6, %esi	#,
	movl	$.LC32, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -48(%rbp)	# tmp126, meth
	.loc 1 1630 0
	movq	-48(%rbp), %rax	# meth, tmp127
	movl	12(%rax), %eax	# meth_27->sv_flags, D.21635
	movzbl	%al, %eax	# D.21635, D.21635
	cmpl	$4, %eax	#, D.21635
	ja	.L432	#,
	.loc 1 1630 0 is_stmt 0 discriminator 2
	movq	-48(%rbp), %rax	# meth, tmp128
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp128,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.21636
	je	.L434	#,
.L432:
	.loc 1 1630 0 discriminator 1
	nop
.L434:
	.loc 1 1631 0 is_stmt 1
	movq	-48(%rbp), %rax	# meth, tmp129
	movl	12(%rax), %eax	# meth_27->sv_flags, D.21635
	andl	$2097152, %eax	#, D.21635
	testl	%eax, %eax	# D.21635
	je	.L436	#,
	.loc 1 1631 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# meth, tmp130
	movq	%rax, %rdi	# tmp130,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.21637
	je	.L436	#,
	.loc 1 1631 0
	nop
.L436:
	.loc 1 1631 0 discriminator 3
	movq	-48(%rbp), %rax	# meth, tmp131
	movl	12(%rax), %eax	# meth_27->sv_flags, D.21635
	orl	$16842752, %eax	#, D.21635
	movl	%eax, %edx	# D.21635, D.21635
	movq	-48(%rbp), %rax	# meth, tmp132
	movl	%edx, 12(%rax)	# D.21635, meth_27->sv_flags
.LBB13:
	.loc 1 1632 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# meth, tmp133
	movq	(%rax), %rax	# meth_27->sv_any, D.21638
	movq	(%rax), %rbx	# MEM[(struct XPV *)_40].xpv_pv, s_PeRlHaSh_tmp
	movq	%rbx, %r13	# s_PeRlHaSh_tmp, s_PeRlHaSh
	movq	-48(%rbp), %rax	# meth, tmp134
	movq	(%rax), %rax	# meth_27->sv_any, D.21638
	movq	8(%rax), %rax	# MEM[(struct XPV *)_43].xpv_cur, D.21629
	movl	%eax, %r12d	# D.21629, i_PeRlHaSh
	movl	$0, %ebx	#, hash_PeRlHaSh
	jmp	.L437	#
.L438:
	.loc 1 1632 0 is_stmt 0 discriminator 2
	movq	%r13, %rax	# s_PeRlHaSh, s_PeRlHaSh.114
	leaq	1(%rax), %r13	#, s_PeRlHaSh
	movzbl	(%rax), %eax	# *s_PeRlHaSh.114_49, D.21639
	movzbl	%al, %eax	# D.21639, D.21635
	addl	%eax, %ebx	# D.21635, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21635
	sall	$10, %eax	#, D.21635
	addl	%eax, %ebx	# D.21635, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21635
	shrl	$6, %eax	#, D.21635
	xorl	%eax, %ebx	# D.21635, hash_PeRlHaSh
.L437:
	.loc 1 1632 0 discriminator 1
	movl	%r12d, %eax	# i_PeRlHaSh, i_PeRlHaSh.115
	leal	-1(%rax), %r12d	#, i_PeRlHaSh
	testl	%eax, %eax	# i_PeRlHaSh.115
	jne	.L438	#,
	.loc 1 1632 0 discriminator 3
	leal	0(,%rbx,8), %eax	#, D.21635
	addl	%eax, %ebx	# D.21635, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21635
	shrl	$11, %eax	#, D.21635
	xorl	%eax, %ebx	# D.21635, hash_PeRlHaSh
	movq	-48(%rbp), %rax	# meth, tmp135
	movq	(%rax), %rax	# meth_27->sv_any, D.21638
	movl	%ebx, %edx	# hash_PeRlHaSh, D.21635
	sall	$15, %edx	#, D.21635
	addl	%ebx, %edx	# hash_PeRlHaSh, D.21635
	movl	%edx, %edx	# D.21635, D.21629
	movq	%rdx, 24(%rax)	# D.21629, MEM[(struct XPVUV *)_62].xuv_uv
.LBE13:
	.loc 1 1633 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# meth, tmp136
	movq	%rax, %rdx	# tmp136,
	movl	$0, %esi	#,
	movl	$350, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rbx	#, D.21634
	movq	-56(%rbp), %rax	# arg, tmp137
	movq	%rax, %rdi	# tmp137,
	call	Perl_list	#
	movq	%rax, %rdx	#, D.21634
	movq	-64(%rbp), %rax	# pack, tmp138
	movq	%rax, %rsi	# tmp138,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rbx, %rdx	# D.21634,
	movq	%rax, %rsi	# D.21634,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.21634,
	movl	$193, %esi	#,
	movl	$166, %edi	#,
	call	Perl_convert	#
	movq	%rax, -40(%rbp)	# tmp139, imop
	.loc 1 1637 0 discriminator 3
	movq	-40(%rbp), %rax	# imop, tmp140
	movzbl	37(%rax), %eax	# imop_71->op_private, D.21639
	orl	$64, %eax	#, D.21639
	movl	%eax, %edx	# D.21639, D.21639
	movq	-40(%rbp), %rax	# imop, tmp141
	movb	%dl, 37(%rax)	# D.21639, imop_71->op_private
	.loc 1 1640 0 discriminator 3
	movq	-112(%rbp), %rax	# imopsp, tmp142
	movq	(%rax), %rax	# *imopsp_74(D), D.21634
	movq	-40(%rbp), %rdx	# imop, tmp143
	movq	%rax, %rsi	# D.21634,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	-112(%rbp), %rdx	# imopsp, tmp144
	movq	%rax, (%rdx)	# D.21634, *imopsp_74(D)
.L427:
	.loc 1 1641 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE31:
	.size	S_apply_attrs_my, .-S_apply_attrs_my
	.globl	Perl_apply_attrs_string
	.type	Perl_apply_attrs_string, @function
Perl_apply_attrs_string:
.LFB32:
	.loc 1 1663 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# stashpv, stashpv
	movq	%rsi, -48(%rbp)	# cv, cv
	movq	%rdx, -56(%rbp)	# attrstr, attrstr
	movq	%rcx, -64(%rbp)	# len, len
	.loc 1 1664 0
	movq	$0, -32(%rbp)	#, attrs
	.loc 1 1666 0
	cmpq	$0, -64(%rbp)	#, len
	jne	.L440	#,
	.loc 1 1667 0
	movq	-56(%rbp), %rax	# attrstr, tmp82
	movq	%rax, %rdi	# tmp82,
	call	strlen	#
	movq	%rax, -64(%rbp)	# tmp83, len
	.loc 1 1670 0
	jmp	.L441	#
.L440:
	jmp	.L441	#
.L449:
	.loc 1 1671 0
	jmp	.L442	#
.L445:
	.loc 1 1671 0 is_stmt 0 discriminator 1
	subq	$1, -64(%rbp)	#, len
	addq	$1, -56(%rbp)	#, attrstr
.L442:
	movq	-56(%rbp), %rax	# attrstr, tmp84
	movzbl	(%rax), %eax	# *attrstr_1, D.21642
	cmpb	$32, %al	#, D.21642
	je	.L443	#,
	.loc 1 1671 0 discriminator 3
	movq	-56(%rbp), %rax	# attrstr, tmp85
	movzbl	(%rax), %eax	# *attrstr_1, D.21642
	cmpb	$9, %al	#, D.21642
	je	.L443	#,
	.loc 1 1671 0 discriminator 1
	movq	-56(%rbp), %rax	# attrstr, tmp86
	movzbl	(%rax), %eax	# *attrstr_1, D.21642
	cmpb	$10, %al	#, D.21642
	je	.L443	#,
	movq	-56(%rbp), %rax	# attrstr, tmp87
	movzbl	(%rax), %eax	# *attrstr_1, D.21642
	cmpb	$13, %al	#, D.21642
	je	.L443	#,
	movq	-56(%rbp), %rax	# attrstr, tmp88
	movzbl	(%rax), %eax	# *attrstr_1, D.21642
	cmpb	$12, %al	#, D.21642
	jne	.L444	#,
.L443:
	.loc 1 1671 0 discriminator 2
	cmpq	$0, -64(%rbp)	#, len
	jne	.L445	#,
.L444:
	.loc 1 1672 0 is_stmt 1
	cmpq	$0, -64(%rbp)	#, len
	je	.L441	#,
.LBB14:
	.loc 1 1673 0
	movq	-56(%rbp), %rax	# attrstr, tmp89
	movq	%rax, -24(%rbp)	# tmp89, sstr
	.loc 1 1674 0
	jmp	.L446	#
.L448:
	.loc 1 1674 0 is_stmt 0 discriminator 1
	subq	$1, -64(%rbp)	#, len
	addq	$1, -56(%rbp)	#, attrstr
.L446:
	movq	-56(%rbp), %rax	# attrstr, tmp90
	movzbl	(%rax), %eax	# *attrstr_2, D.21642
	cmpb	$32, %al	#, D.21642
	je	.L447	#,
	.loc 1 1674 0 discriminator 2
	movq	-56(%rbp), %rax	# attrstr, tmp91
	movzbl	(%rax), %eax	# *attrstr_2, D.21642
	cmpb	$9, %al	#, D.21642
	je	.L447	#,
	.loc 1 1674 0 discriminator 1
	movq	-56(%rbp), %rax	# attrstr, tmp92
	movzbl	(%rax), %eax	# *attrstr_2, D.21642
	cmpb	$10, %al	#, D.21642
	je	.L447	#,
	movq	-56(%rbp), %rax	# attrstr, tmp93
	movzbl	(%rax), %eax	# *attrstr_2, D.21642
	cmpb	$13, %al	#, D.21642
	je	.L447	#,
	movq	-56(%rbp), %rax	# attrstr, tmp94
	movzbl	(%rax), %eax	# *attrstr_2, D.21642
	cmpb	$12, %al	#, D.21642
	je	.L447	#,
	cmpq	$0, -64(%rbp)	#, len
	jne	.L448	#,
.L447:
	.loc 1 1677 0 is_stmt 1
	movq	-56(%rbp), %rdx	# attrstr, attrstr.116
	movq	-24(%rbp), %rax	# sstr, sstr.117
	subq	%rax, %rdx	# sstr.117, D.21643
	movq	%rdx, %rax	# D.21643, D.21643
	.loc 1 1675 0
	movq	%rax, %rdx	# D.21643, D.21644
	movq	-24(%rbp), %rax	# sstr, tmp95
	movq	%rdx, %rsi	# D.21644,
	movq	%rax, %rdi	# tmp95,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.21645,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.21646
	movq	-32(%rbp), %rax	# attrs, tmp96
	movq	%rax, %rsi	# tmp96,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -32(%rbp)	# tmp97, attrs
.L441:
.LBE14:
	.loc 1 1670 0 discriminator 1
	cmpq	$0, -64(%rbp)	#, len
	jne	.L449	#,
	.loc 1 1681 0
	movq	-48(%rbp), %rax	# cv, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_newRV	#
	movq	%rax, %rdx	# D.21645,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	-32(%rbp), %rdx	# attrs, tmp99
	movq	%rax, %rsi	# D.21646,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rbx	#, D.21646
	movq	-40(%rbp), %rax	# stashpv, tmp100
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp100,
	call	Perl_newSVpv	#
	movq	%rax, %rdx	# D.21645,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rbx, %rdx	# D.21646,
	movq	%rax, %rsi	# D.21646,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rbx	#, D.21646
	movl	$10, %esi	#,
	movl	$.LC31, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rbx, %rcx	# D.21646,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.21645,
	movl	$4, %edi	#,
	movl	$0, %eax	#,
	call	Perl_load_module	#
	.loc 1 1689 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE32:
	.size	Perl_apply_attrs_string, .-Perl_apply_attrs_string
	.section	.rodata
.LC33:
	.string	"Can't declare %s in %s"
.LC34:
	.string	"Can't declare %s in \"%s\""
	.text
	.type	S_my_kid, @function
S_my_kid:
.LFB33:
	.loc 1 1693 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# o, o
	movq	%rsi, -64(%rbp)	# attrs, attrs
	movq	%rdx, -72(%rbp)	# imopsp, imopsp
	.loc 1 1697 0
	cmpq	$0, -56(%rbp)	#, o
	je	.L451	#,
	.loc 1 1697 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.118
	testl	%eax, %eax	# PL_error_count.118
	je	.L452	#,
.L451:
	.loc 1 1698 0 is_stmt 1
	movq	-56(%rbp), %rax	# o, D.21647
	jmp	.L453	#
.L452:
	.loc 1 1700 0
	movq	-56(%rbp), %rax	# o, tmp111
	movzwl	32(%rax), %eax	# o_12(D)->op_type, D.21648
	movzwl	%ax, %eax	# D.21648, tmp112
	movl	%eax, -44(%rbp)	# tmp112, type
	.loc 1 1701 0
	cmpl	$141, -44(%rbp)	#, type
	jne	.L454	#,
	.loc 1 1702 0
	movq	-56(%rbp), %rax	# o, tmp113
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_12(D)].op_first, tmp114
	movq	%rax, -40(%rbp)	# tmp114, kid
	jmp	.L455	#
.L456:
	.loc 1 1703 0 discriminator 2
	movq	-72(%rbp), %rdx	# imopsp, tmp115
	movq	-64(%rbp), %rcx	# attrs, tmp116
	movq	-40(%rbp), %rax	# kid, tmp117
	movq	%rcx, %rsi	# tmp116,
	movq	%rax, %rdi	# tmp117,
	call	S_my_kid	#
	.loc 1 1702 0 discriminator 2
	movq	-40(%rbp), %rax	# kid, tmp118
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp119
	movq	%rax, -40(%rbp)	# tmp119, kid
.L455:
	.loc 1 1702 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, kid
	jne	.L456	#,
	jmp	.L457	#
.L454:
	.loc 1 1704 0 is_stmt 1
	cmpl	$43, -44(%rbp)	#, type
	jne	.L458	#,
	.loc 1 1705 0
	movq	-56(%rbp), %rax	# o, D.21647
	jmp	.L453	#
.L458:
	.loc 1 1706 0
	cmpl	$15, -44(%rbp)	#, type
	je	.L459	#,
	.loc 1 1706 0 is_stmt 0 discriminator 1
	cmpl	$125, -44(%rbp)	#, type
	je	.L459	#,
	.loc 1 1707 0 is_stmt 1
	cmpl	$134, -44(%rbp)	#, type
	jne	.L460	#,
.L459:
	.loc 1 1709 0
	movq	-56(%rbp), %rax	# o, tmp120
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_12(D)].op_first, D.21647
	movzwl	32(%rax), %eax	# _48->op_type, D.21648
	cmpw	$7, %ax	#, D.21648
	je	.L461	#,
	.loc 1 1711 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.120
	.loc 1 1710 0
	cmpl	$137, %eax	#, PL_in_my.120
	jne	.L462	#,
	.loc 1 1710 0 is_stmt 0 discriminator 1
	movl	$.LC7, %ebx	#, iftmp.119
	jmp	.L463	#
.L462:
	.loc 1 1710 0 discriminator 2
	movl	$.LC8, %ebx	#, iftmp.119
.L463:
	.loc 1 1711 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# o, tmp121
	movzwl	32(%rax), %eax	# o_12(D)->op_type, D.21648
	.loc 1 1710 0 discriminator 3
	cmpw	$351, %ax	#, D.21648
	jne	.L464	#,
	.loc 1 1710 0 is_stmt 0 discriminator 4
	movq	-56(%rbp), %rax	# o, tmp122
	movq	%rax, %rdi	# tmp122,
	call	Perl_custom_op_desc	#
	jmp	.L465	#
.L464:
	.loc 1 1711 0 is_stmt 1 discriminator 5
	movq	-56(%rbp), %rax	# o, tmp123
	movzwl	32(%rax), %eax	# o_12(D)->op_type, D.21648
	movzwl	%ax, %eax	# D.21648, D.21649
	.loc 1 1710 0 discriminator 5
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.121
.L465:
	.loc 1 1710 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdx	# iftmp.119,
	movq	%rax, %rsi	# iftmp.121,
	movl	$.LC33, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21650,
	call	Perl_yyerror	#
	jmp	.L466	#
.L461:
	.loc 1 1712 0 is_stmt 1
	cmpq	$0, -64(%rbp)	#, attrs
	je	.L466	#,
.LBB15:
	.loc 1 1713 0
	movq	-56(%rbp), %rax	# o, tmp125
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_12(D)].op_first, D.21647
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_59].op_sv, tmp126
	movq	%rax, -24(%rbp)	# tmp126, gv
	.loc 1 1714 0
	movl	$0, PL_in_my(%rip)	#, PL_in_my
	.loc 1 1715 0
	movq	$0, PL_in_my_stash(%rip)	#, PL_in_my_stash
	.loc 1 1716 0
	cmpl	$15, -44(%rbp)	#, type
	jne	.L467	#,
	.loc 1 1717 0
	movq	-24(%rbp), %rax	# gv, tmp127
	movq	(%rax), %rax	# gv_60->sv_any, D.21656
	movq	56(%rax), %rax	# _61->xgv_gp, D.21657
	.loc 1 1716 0
	movq	(%rax), %rax	# _62->gp_sv, iftmp.122
	jmp	.L468	#
.L467:
	.loc 1 1718 0
	cmpl	$125, -44(%rbp)	#, type
	jne	.L469	#,
	.loc 1 1718 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# gv, tmp128
	movq	(%rax), %rax	# gv_60->sv_any, D.21656
	movq	56(%rax), %rax	# _64->xgv_gp, D.21657
	movq	32(%rax), %rax	# _65->gp_av, iftmp.123
	jmp	.L468	#
.L469:
	.loc 1 1719 0 is_stmt 1
	cmpl	$134, -44(%rbp)	#, type
	jne	.L471	#,
	.loc 1 1719 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# gv, tmp129
	movq	(%rax), %rax	# gv_60->sv_any, D.21656
	movq	56(%rax), %rax	# _67->xgv_gp, D.21657
	movq	40(%rax), %rax	# _68->gp_hv, iftmp.124
	jmp	.L468	#
.L471:
	.loc 1 1719 0 discriminator 2
	movq	-24(%rbp), %rax	# gv, iftmp.124
.L468:
	.loc 1 1716 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rdx	# gv, tmp130
	movq	(%rdx), %rdx	# gv_60->sv_any, D.21656
	movq	80(%rdx), %rdi	# _73->xgv_stash, D.21658
	movq	-64(%rbp), %rdx	# attrs, tmp131
	movl	$0, %ecx	#,
	movq	%rax, %rsi	# iftmp.122,
	call	S_apply_attrs	#
.L466:
.LBE15:
	.loc 1 1722 0
	movq	-56(%rbp), %rax	# o, tmp132
	movzbl	37(%rax), %eax	# o_12(D)->op_private, D.21659
	orl	$16, %eax	#, D.21659
	movl	%eax, %edx	# D.21659, D.21659
	movq	-56(%rbp), %rax	# o, tmp133
	movb	%dl, 37(%rax)	# D.21659, o_12(D)->op_private
	.loc 1 1723 0
	movq	-56(%rbp), %rax	# o, D.21647
	jmp	.L453	#
.L460:
	.loc 1 1725 0
	cmpl	$9, -44(%rbp)	#, type
	je	.L473	#,
	.loc 1 1725 0 is_stmt 0 discriminator 1
	cmpl	$10, -44(%rbp)	#, type
	je	.L473	#,
	.loc 1 1726 0 is_stmt 1
	cmpl	$11, -44(%rbp)	#, type
	je	.L473	#,
	.loc 1 1727 0
	cmpl	$3, -44(%rbp)	#, type
	je	.L473	#,
	.loc 1 1732 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.126
	.loc 1 1730 0
	cmpl	$137, %eax	#, PL_in_my.126
	jne	.L474	#,
	.loc 1 1730 0 is_stmt 0 discriminator 1
	movl	$.LC7, %ebx	#, iftmp.125
	jmp	.L475	#
.L474:
	.loc 1 1730 0 discriminator 2
	movl	$.LC8, %ebx	#, iftmp.125
.L475:
	.loc 1 1731 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# o, tmp134
	movzwl	32(%rax), %eax	# o_12(D)->op_type, D.21648
	.loc 1 1730 0 discriminator 3
	cmpw	$351, %ax	#, D.21648
	jne	.L476	#,
	.loc 1 1730 0 is_stmt 0 discriminator 4
	movq	-56(%rbp), %rax	# o, tmp135
	movq	%rax, %rdi	# tmp135,
	call	Perl_custom_op_desc	#
	jmp	.L477	#
.L476:
	.loc 1 1731 0 is_stmt 1 discriminator 5
	movq	-56(%rbp), %rax	# o, tmp136
	movzwl	32(%rax), %eax	# o_12(D)->op_type, D.21648
	movzwl	%ax, %eax	# D.21648, D.21649
	.loc 1 1730 0 discriminator 5
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.127
.L477:
	.loc 1 1730 0 is_stmt 0 discriminator 6
	movq	%rbx, %rdx	# iftmp.125,
	movq	%rax, %rsi	# iftmp.127,
	movl	$.LC34, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rdi	# D.21650,
	call	Perl_yyerror	#
	.loc 1 1733 0 is_stmt 1 discriminator 6
	movq	-56(%rbp), %rax	# o, D.21647
	jmp	.L453	#
.L473:
	.loc 1 1735 0
	cmpq	$0, -64(%rbp)	#, attrs
	je	.L457	#,
	.loc 1 1735 0 is_stmt 0 discriminator 1
	cmpl	$3, -44(%rbp)	#, type
	je	.L457	#,
.LBB16:
	.loc 1 1738 0 is_stmt 1
	movl	$0, PL_in_my(%rip)	#, PL_in_my
	.loc 1 1739 0
	movq	$0, PL_in_my_stash(%rip)	#, PL_in_my_stash
	.loc 1 1742 0
	movq	-56(%rbp), %rax	# o, tmp138
	movq	24(%rax), %rax	# o_12(D)->op_targ, D.21651
	movl	%eax, %ecx	# D.21651, D.21649
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.129
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21649,
	movq	%rax, %rdi	# PL_comppad_name.129,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_34, D.21653
	movl	12(%rax), %eax	# _35->sv_flags, D.21654
	andl	$1073741824, %eax	#, D.21654
	testl	%eax, %eax	# D.21654
	je	.L478	#,
	.loc 1 1742 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# o, tmp139
	movq	24(%rax), %rax	# o_12(D)->op_targ, D.21651
	movl	%eax, %ecx	# D.21651, D.21649
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.130
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21649,
	movq	%rax, %rdi	# PL_comppad_name.130,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_41, D.21653
	movq	(%rax), %rax	# _42->sv_any, D.21655
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_43].xmg_stash, iftmp.128
	jmp	.L479	#
.L478:
	.loc 1 1742 0 discriminator 2
	movl	$0, %eax	#, iftmp.128
.L479:
	.loc 1 1742 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.128, stash
	.loc 1 1743 0 is_stmt 1 discriminator 3
	cmpq	$0, -32(%rbp)	#, stash
	jne	.L480	#,
	.loc 1 1744 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, tmp140
	movq	%rax, -32(%rbp)	# tmp140, stash
.L480:
	.loc 1 1745 0
	movq	-72(%rbp), %rcx	# imopsp, tmp141
	movq	-64(%rbp), %rdx	# attrs, tmp142
	movq	-56(%rbp), %rsi	# o, tmp143
	movq	-32(%rbp), %rax	# stash, tmp144
	movq	%rax, %rdi	# tmp144,
	call	S_apply_attrs_my	#
.L457:
.LBE16:
	.loc 1 1747 0
	movq	-56(%rbp), %rax	# o, tmp145
	movzbl	36(%rax), %eax	# o_12(D)->op_flags, D.21659
	orl	$32, %eax	#, D.21659
	movl	%eax, %edx	# D.21659, D.21659
	movq	-56(%rbp), %rax	# o, tmp146
	movb	%dl, 36(%rax)	# D.21659, o_12(D)->op_flags
	.loc 1 1748 0
	movq	-56(%rbp), %rax	# o, tmp147
	movzbl	37(%rax), %eax	# o_12(D)->op_private, D.21659
	orl	$-128, %eax	#, D.21659
	movl	%eax, %edx	# D.21659, D.21659
	movq	-56(%rbp), %rax	# o, tmp148
	movb	%dl, 37(%rax)	# D.21659, o_12(D)->op_private
	.loc 1 1749 0
	movq	-56(%rbp), %rax	# o, D.21647
.L453:
	.loc 1 1750 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE33:
	.size	S_my_kid, .-S_my_kid
	.globl	Perl_my_attrs
	.type	Perl_my_attrs, @function
Perl_my_attrs:
.LFB34:
	.loc 1 1754 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movq	%rsi, -32(%rbp)	# attrs, attrs
	.loc 1 1755 0
	movq	$0, -8(%rbp)	#, rops
	.loc 1 1756 0
	movl	$0, -12(%rbp)	#, maybe_scalar
	.loc 1 1766 0
	movl	$1, -12(%rbp)	#, maybe_scalar
	.loc 1 1768 0
	cmpq	$0, -32(%rbp)	#, attrs
	je	.L482	#,
	.loc 1 1769 0
	movq	-32(%rbp), %rax	# attrs, tmp68
	movq	%rax, %rdi	# tmp68,
	call	Perl_save_freeop	#
.L482:
	.loc 1 1770 0
	leaq	-8(%rbp), %rdx	#, tmp69
	movq	-32(%rbp), %rcx	# attrs, tmp70
	movq	-24(%rbp), %rax	# o, tmp71
	movq	%rcx, %rsi	# tmp70,
	movq	%rax, %rdi	# tmp71,
	call	S_my_kid	#
	movq	%rax, -24(%rbp)	# tmp72, o
	.loc 1 1771 0
	movq	-8(%rbp), %rax	# rops, rops.131
	testq	%rax, %rax	# rops.131
	je	.L483	#,
	.loc 1 1772 0
	cmpl	$0, -12(%rbp)	#, maybe_scalar
	je	.L484	#,
	.loc 1 1772 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp73
	movzwl	32(%rax), %eax	# o_6->op_type, D.21662
	cmpw	$9, %ax	#, D.21662
	jne	.L484	#,
	.loc 1 1773 0 is_stmt 1
	movq	-8(%rbp), %rax	# rops, rops.132
	movq	-24(%rbp), %rdx	# o, tmp74
	movq	%rax, %rsi	# rops.132,
	movl	$141, %edi	#,
	call	Perl_append_list	#
	movq	%rax, %rdi	# D.21663,
	call	Perl_scalar	#
	movq	%rax, -24(%rbp)	# tmp75, o
	.loc 1 1774 0
	movq	-24(%rbp), %rax	# o, tmp76
	movzbl	37(%rax), %eax	# o_11->op_private, D.21664
	orl	$-128, %eax	#, D.21664
	movl	%eax, %edx	# D.21664, D.21664
	movq	-24(%rbp), %rax	# o, tmp77
	movb	%dl, 37(%rax)	# D.21664, o_11->op_private
	jmp	.L483	#
.L484:
	.loc 1 1777 0
	movq	-8(%rbp), %rdx	# rops, rops.133
	movq	-24(%rbp), %rax	# o, tmp78
	movq	%rax, %rsi	# tmp78,
	movl	$141, %edi	#,
	call	Perl_append_list	#
	movq	%rax, -24(%rbp)	# tmp79, o
.L483:
	.loc 1 1779 0
	movl	$0, PL_in_my(%rip)	#, PL_in_my
	.loc 1 1780 0
	movq	$0, PL_in_my_stash(%rip)	#, PL_in_my_stash
	.loc 1 1781 0
	movq	-24(%rbp), %rax	# o, D.21663
	.loc 1 1782 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE34:
	.size	Perl_my_attrs, .-Perl_my_attrs
	.globl	Perl_my
	.type	Perl_my, @function
Perl_my:
.LFB35:
	.loc 1 1786 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 1787 0
	movq	-8(%rbp), %rax	# o, tmp61
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp61,
	call	Perl_my_attrs	#
	.loc 1 1788 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE35:
	.size	Perl_my, .-Perl_my
	.globl	Perl_sawparens
	.type	Perl_sawparens, @function
Perl_sawparens:
.LFB36:
	.loc 1 1792 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 1793 0
	cmpq	$0, -8(%rbp)	#, o
	je	.L489	#,
	.loc 1 1794 0
	movq	-8(%rbp), %rax	# o, tmp63
	movzbl	36(%rax), %eax	# o_1(D)->op_flags, D.21666
	orl	$8, %eax	#, D.21666
	movl	%eax, %edx	# D.21666, D.21666
	movq	-8(%rbp), %rax	# o, tmp64
	movb	%dl, 36(%rax)	# D.21666, o_1(D)->op_flags
.L489:
	.loc 1 1795 0
	movq	-8(%rbp), %rax	# o, D.21667
	.loc 1 1796 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE36:
	.size	Perl_sawparens, .-Perl_sawparens
	.section	.rodata
.LC35:
	.string	"@array"
.LC36:
	.string	"%hash"
	.align 8
.LC37:
	.string	"Applying %s to %s will act on scalar(%s)"
	.text
	.globl	Perl_bind_match
	.type	Perl_bind_match, @function
Perl_bind_match:
.LFB37:
	.loc 1 1800 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movl	%edi, -36(%rbp)	# type, type
	movq	%rsi, -48(%rbp)	# left, left
	movq	%rdx, -56(%rbp)	# right, right
	.loc 1 1803 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.134
	movq	80(%rax), %rax	# PL_curcop.134_6->cop_warnings, D.21669
	testq	%rax, %rax	# D.21669
	je	.L492	#,
	.loc 1 1803 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.135
	movq	80(%rax), %rax	# PL_curcop.135_8->cop_warnings, D.21669
	cmpq	$32, %rax	#, D.21669
	je	.L492	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.136
	movq	80(%rax), %rax	# PL_curcop.136_10->cop_warnings, D.21669
	cmpq	$16, %rax	#, D.21669
	je	.L493	#,
	.loc 1 1803 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.137
	movq	80(%rax), %rax	# PL_curcop.137_12->cop_warnings, D.21669
	movq	(%rax), %rax	# _13->sv_any, D.21670
	movq	(%rax), %rax	# MEM[(struct XPV *)_14].xpv_pv, D.21671
	addq	$3, %rax	#, D.21671
	movzbl	(%rax), %eax	# *_16, D.21672
	movsbl	%al, %eax	# D.21672, D.21673
	andl	$1, %eax	#, D.21673
	testl	%eax, %eax	# D.21673
	jne	.L493	#,
.L492:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.138
	movq	80(%rax), %rax	# PL_curcop.138_20->cop_warnings, D.21669
	testq	%rax, %rax	# D.21669
	jne	.L494	#,
	.loc 1 1803 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.139
	movzbl	%al, %eax	# PL_dowarn.139, D.21673
	andl	$1, %eax	#, D.21673
	testl	%eax, %eax	# D.21673
	je	.L494	#,
.L493:
	.loc 1 1804 0 is_stmt 1 discriminator 1
	movq	-48(%rbp), %rax	# left, tmp121
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1803 0 discriminator 1
	cmpw	$125, %ax	#, D.21674
	je	.L495	#,
	.loc 1 1805 0
	movq	-48(%rbp), %rax	# left, tmp122
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1804 0
	cmpw	$134, %ax	#, D.21674
	je	.L495	#,
	.loc 1 1806 0
	movq	-48(%rbp), %rax	# left, tmp123
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1805 0
	cmpw	$10, %ax	#, D.21674
	je	.L495	#,
	.loc 1 1807 0
	movq	-48(%rbp), %rax	# left, tmp124
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1806 0
	cmpw	$11, %ax	#, D.21674
	jne	.L494	#,
.L495:
.LBB17:
	.loc 1 1808 0
	movq	-56(%rbp), %rax	# right, tmp125
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1810 0
	cmpw	$33, %ax	#, D.21674
	je	.L496	#,
	.loc 1 1809 0
	movq	-56(%rbp), %rax	# right, tmp126
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1808 0
	cmpw	$35, %ax	#, D.21674
	jne	.L497	#,
.L496:
	.loc 1 1810 0 discriminator 1
	movq	-56(%rbp), %rax	# right, tmp127
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	movzwl	%ax, %eax	# D.21674, iftmp.140
	jmp	.L498	#
.L497:
	.loc 1 1810 0 is_stmt 0
	movl	$31, %eax	#, iftmp.140
.L498:
	.loc 1 1808 0 is_stmt 1
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, tmp129
	movq	%rax, -16(%rbp)	# tmp129, desc
	.loc 1 1811 0
	movq	-48(%rbp), %rax	# left, tmp130
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1813 0
	cmpw	$125, %ax	#, D.21674
	je	.L499	#,
	.loc 1 1812 0
	movq	-48(%rbp), %rax	# left, tmp131
	movzwl	32(%rax), %eax	# left_25(D)->op_type, D.21674
	.loc 1 1811 0
	cmpw	$10, %ax	#, D.21674
	jne	.L500	#,
.L499:
	.loc 1 1813 0 discriminator 1
	movl	$.LC35, %eax	#, iftmp.141
	jmp	.L501	#
.L500:
	.loc 1 1813 0 is_stmt 0
	movl	$.LC36, %eax	#, iftmp.141
.L501:
	.loc 1 1811 0 is_stmt 1
	movq	%rax, -8(%rbp)	# iftmp.141, sample
	.loc 1 1814 0
	movq	-8(%rbp), %rcx	# sample, tmp132
	movq	-8(%rbp), %rdx	# sample, tmp133
	movq	-16(%rbp), %rax	# desc, tmp134
	movq	%rcx, %r8	# tmp132,
	movq	%rdx, %rcx	# tmp133,
	movq	%rax, %rdx	# tmp134,
	movl	$.LC37, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L494:
.LBE17:
	.loc 1 1819 0
	movq	-56(%rbp), %rax	# right, tmp135
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	cmpw	$5, %ax	#, D.21674
	jne	.L502	#,
	.loc 1 1820 0 discriminator 1
	movq	-56(%rbp), %rax	# right, tmp136
	movzbl	37(%rax), %eax	# MEM[(struct SVOP *)right_30(D)].op_private, D.21675
	movzbl	%al, %eax	# D.21675, D.21673
	andl	$64, %eax	#, D.21673
	.loc 1 1819 0 discriminator 1
	testl	%eax, %eax	# D.21673
	je	.L502	#,
	.loc 1 1821 0
	movq	-56(%rbp), %rax	# right, tmp137
	movzbl	37(%rax), %eax	# MEM[(struct SVOP *)right_30(D)].op_private, D.21675
	movzbl	%al, %eax	# D.21675, D.21673
	andl	$8, %eax	#, D.21673
	.loc 1 1820 0
	testl	%eax, %eax	# D.21673
	je	.L502	#,
	.loc 1 1823 0
	movq	-56(%rbp), %rax	# right, tmp138
	movq	%rax, %rdi	# tmp138,
	call	S_no_bareword_allowed	#
.L502:
	.loc 1 1826 0
	movq	-56(%rbp), %rax	# right, tmp139
	movzbl	36(%rax), %eax	# right_30(D)->op_flags, D.21675
	movzbl	%al, %eax	# D.21675, D.21673
	andl	$64, %eax	#, D.21673
	testl	%eax, %eax	# D.21673
	jne	.L503	#,
	.loc 1 1827 0 discriminator 1
	movq	-56(%rbp), %rax	# right, tmp140
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1826 0 discriminator 1
	cmpw	$31, %ax	#, D.21674
	je	.L504	#,
	.loc 1 1828 0
	movq	-56(%rbp), %rax	# right, tmp141
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1827 0
	cmpw	$33, %ax	#, D.21674
	je	.L504	#,
	.loc 1 1829 0
	movq	-56(%rbp), %rax	# right, tmp142
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1828 0
	cmpw	$35, %ax	#, D.21674
	jne	.L503	#,
.L504:
	.loc 1 1830 0
	movq	-56(%rbp), %rax	# right, tmp143
	movzbl	36(%rax), %eax	# right_30(D)->op_flags, D.21675
	orl	$64, %eax	#, D.21675
	movl	%eax, %edx	# D.21675, D.21675
	movq	-56(%rbp), %rax	# right, tmp144
	movb	%dl, 36(%rax)	# D.21675, right_30(D)->op_flags
	.loc 1 1831 0
	movq	-56(%rbp), %rax	# right, tmp145
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	cmpw	$31, %ax	#, D.21674
	je	.L505	#,
	.loc 1 1832 0 discriminator 1
	movq	-56(%rbp), %rax	# right, tmp146
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	.loc 1 1831 0 discriminator 1
	cmpw	$35, %ax	#, D.21674
	jne	.L506	#,
	.loc 1 1833 0
	movq	-56(%rbp), %rax	# right, tmp147
	movzbl	37(%rax), %eax	# right_30(D)->op_private, D.21675
	movzbl	%al, %eax	# D.21675, D.21673
	andl	$4, %eax	#, D.21673
	.loc 1 1832 0
	testl	%eax, %eax	# D.21673
	jne	.L505	#,
.L506:
	.loc 1 1834 0
	movq	-56(%rbp), %rax	# right, tmp148
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	movzwl	%ax, %edx	# D.21674, D.21673
	movq	-48(%rbp), %rax	# left, tmp149
	movl	%edx, %esi	# D.21673,
	movq	%rax, %rdi	# tmp149,
	call	Perl_mod	#
	movq	%rax, -48(%rbp)	# tmp150, left
.L505:
	.loc 1 1835 0
	movq	-56(%rbp), %rax	# right, tmp151
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	cmpw	$35, %ax	#, D.21674
	jne	.L507	#,
	.loc 1 1836 0
	movq	-48(%rbp), %rax	# left, tmp152
	movq	%rax, %rdi	# tmp152,
	call	Perl_scalar	#
	movq	-56(%rbp), %rdx	# right, tmp153
	movq	%rdx, %rcx	# tmp153,
	movq	%rax, %rdx	# D.21668,
	movl	$64, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newBINOP	#
	movq	%rax, -24(%rbp)	# tmp154, o
	jmp	.L508	#
.L507:
	.loc 1 1838 0
	movq	-48(%rbp), %rax	# left, tmp155
	movq	%rax, %rdi	# tmp155,
	call	Perl_scalar	#
	movq	%rax, %rcx	#, D.21668
	movq	-56(%rbp), %rax	# right, tmp156
	movzwl	32(%rax), %eax	# right_30(D)->op_type, D.21674
	movzwl	%ax, %eax	# D.21674, D.21673
	movq	-56(%rbp), %rdx	# right, tmp157
	movq	%rcx, %rsi	# D.21668,
	movl	%eax, %edi	# D.21673,
	call	Perl_prepend_elem	#
	movq	%rax, -24(%rbp)	# tmp158, o
.L508:
	.loc 1 1839 0
	cmpl	$96, -36(%rbp)	#, type
	jne	.L509	#,
	.loc 1 1840 0
	movq	-24(%rbp), %rax	# o, tmp159
	movq	%rax, %rdi	# tmp159,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.21668,
	movl	$0, %esi	#,
	movl	$96, %edi	#,
	call	Perl_newUNOP	#
	jmp	.L510	#
.L509:
	.loc 1 1841 0
	movq	-24(%rbp), %rax	# o, D.21668
	jmp	.L510	#
.L503:
	.loc 1 1844 0
	movl	$0, %esi	#,
	movl	$31, %edi	#,
	call	Perl_newPMOP	#
	movq	-56(%rbp), %rcx	# right, tmp160
	movl	$0, %edx	#,
	movq	%rcx, %rsi	# tmp160,
	movq	%rax, %rdi	# D.21668,
	call	Perl_pmruntime	#
	movq	%rax, %rdx	#, D.21668
	movq	-48(%rbp), %rcx	# left, tmp161
	movl	-36(%rbp), %eax	# type, tmp162
	movq	%rcx, %rsi	# tmp161,
	movl	%eax, %edi	# tmp162,
	call	Perl_bind_match	#
.L510:
	.loc 1 1846 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE37:
	.size	Perl_bind_match, .-Perl_bind_match
	.globl	Perl_invert
	.type	Perl_invert, @function
Perl_invert:
.LFB38:
	.loc 1 1850 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 1851 0
	cmpq	$0, -8(%rbp)	#, o
	jne	.L512	#,
	.loc 1 1852 0
	movq	-8(%rbp), %rax	# o, D.21679
	jmp	.L513	#
.L512:
	.loc 1 1854 0
	movq	-8(%rbp), %rax	# o, tmp62
	movq	%rax, %rdi	# tmp62,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.21679,
	movl	$128, %esi	#,
	movl	$96, %edi	#,
	call	Perl_newUNOP	#
.L513:
	.loc 1 1855 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE38:
	.size	Perl_invert, .-Perl_invert
	.globl	Perl_scope
	.type	Perl_scope, @function
Perl_scope:
.LFB39:
	.loc 1 1859 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 1860 0
	cmpq	$0, -24(%rbp)	#, o
	je	.L515	#,
	.loc 1 1861 0
	movq	-24(%rbp), %rax	# o, tmp74
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.21680
	movzbl	%al, %eax	# D.21680, D.21681
	andl	$8, %eax	#, D.21681
	testl	%eax, %eax	# D.21681
	jne	.L516	#,
	.loc 1 1861 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.142
	testl	%eax, %eax	# PL_perldb.142
	je	.L517	#,
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.143
	andl	$4, %eax	#, D.21682
	testl	%eax, %eax	# D.21682
	jne	.L516	#,
.L517:
	.loc 1 1861 0 discriminator 2
	movzbl	PL_tainting(%rip), %eax	# PL_tainting, PL_tainting.144
	testb	%al, %al	# PL_tainting.144
	je	.L518	#,
.L516:
	.loc 1 1862 0 is_stmt 1
	movl	$0, %esi	#,
	movl	$177, %edi	#,
	call	Perl_newOP	#
	movq	-24(%rbp), %rdx	# o, tmp75
	movq	%rax, %rsi	# D.21685,
	movl	$173, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, -24(%rbp)	# tmp76, o
	.loc 1 1863 0
	movq	-24(%rbp), %rax	# o, tmp77
	movw	$178, 32(%rax)	#, o_17->op_type
	.loc 1 1864 0
	movq	PL_ppaddr+1424(%rip), %rdx	# PL_ppaddr, D.21684
	movq	-24(%rbp), %rax	# o, tmp78
	movq	%rdx, 16(%rax)	# D.21684, o_17->op_ppaddr
	jmp	.L515	#
.L518:
	.loc 1 1866 0
	movq	-24(%rbp), %rax	# o, tmp79
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21683
	cmpw	$173, %ax	#, D.21683
	jne	.L519	#,
.LBB18:
	.loc 1 1868 0
	movq	-24(%rbp), %rax	# o, tmp80
	movw	$179, 32(%rax)	#, o_2(D)->op_type
	.loc 1 1869 0
	movq	PL_ppaddr+1432(%rip), %rdx	# PL_ppaddr, D.21684
	movq	-24(%rbp), %rax	# o, tmp81
	movq	%rdx, 16(%rax)	# D.21684, o_2(D)->op_ppaddr
	.loc 1 1870 0
	movq	-24(%rbp), %rax	# o, tmp82
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp83
	movq	%rax, -8(%rbp)	# tmp83, kid
	.loc 1 1871 0
	movq	-8(%rbp), %rax	# kid, tmp84
	movzwl	32(%rax), %eax	# kid_12->op_type, D.21683
	cmpw	$174, %ax	#, D.21683
	je	.L520	#,
	.loc 1 1871 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp85
	movzwl	32(%rax), %eax	# kid_12->op_type, D.21683
	cmpw	$175, %ax	#, D.21683
	jne	.L521	#,
.L520:
	.loc 1 1872 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp86
	movq	%rax, %rdi	# tmp86,
	call	Perl_op_null	#
.LBE18:
	jmp	.L515	#
.L521:
	jmp	.L515	#
.L519:
	.loc 1 1875 0
	movq	-24(%rbp), %rax	# o, tmp87
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp87,
	movl	$0, %esi	#,
	movl	$179, %edi	#,
	call	Perl_newLISTOP	#
	movq	%rax, -24(%rbp)	# tmp88, o
.L515:
	.loc 1 1877 0
	movq	-24(%rbp), %rax	# o, D.21685
	.loc 1 1878 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE39:
	.size	Perl_scope, .-Perl_scope
	.section	.rodata
	.align 8
.LC38:
	.string	"internal error: obsolete function save_hints() called"
	.text
	.globl	Perl_save_hints
	.type	Perl_save_hints, @function
Perl_save_hints:
.LFB40:
	.loc 1 1883 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 1884 0
	movl	$.LC38, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 1885 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE40:
	.size	Perl_save_hints, .-Perl_save_hints
	.globl	Perl_block_start
	.type	Perl_block_start, @function
Perl_block_start:
.LFB41:
	.loc 1 1889 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)	# full, full
	.loc 1 1890 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, tmp115
	movl	%eax, -20(%rbp)	# tmp115, retval
	.loc 1 1892 0
	movl	PL_yynerrs(%rip), %eax	# PL_yynerrs, PL_yynerrs.145
	testl	%eax, %eax	# PL_yynerrs.145
	je	.L525	#,
	.loc 1 1892 0 is_stmt 0 discriminator 1
	movl	-20(%rbp), %eax	# retval, D.21687
	jmp	.L526	#
.L525:
	.loc 1 1894 0 is_stmt 1
	movl	-36(%rbp), %eax	# full, tmp116
	movl	%eax, %edi	# tmp116,
	call	Perl_pad_block_start	#
.LBB19:
	.loc 1 1895 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.146
	leal	3(%rax), %edx	#, D.21687
	movl	PL_savestack_max(%rip), %eax	# PL_savestack_max, PL_savestack_max.147
	cmpl	%eax, %edx	# PL_savestack_max.147, D.21687
	jle	.L527	#,
	.loc 1 1895 0 is_stmt 0 discriminator 1
	call	Perl_savestack_grow	#
.L527:
	.loc 1 1895 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.148
	andl	$131072, %eax	#, D.21688
	testl	%eax, %eax	# D.21688
	je	.L528	#,
	.loc 1 1895 0 discriminator 1
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.149
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.150
	leal	1(%rax), %edx	#, PL_savestack_ix.152
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.152, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.21689
	leaq	(%rcx,%rax), %rdx	#, D.21690
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.153
	movq	(%rax), %rax	# PL_hintgv.153_18->sv_any, D.21691
	movq	56(%rax), %rax	# _19->xgv_gp, D.21692
	movq	40(%rax), %rax	# _20->gp_hv, D.21693
	movq	%rax, (%rdx)	# D.21693, _17->any_ptr
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.154
	movq	(%rax), %rax	# PL_hintgv.154_22->sv_any, D.21691
	movq	56(%rax), %rbx	# _23->xgv_gp, D.21692
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.155
	movq	(%rax), %rax	# PL_hintgv.155_25->sv_any, D.21691
	movq	56(%rax), %rax	# _26->xgv_gp, D.21692
	movq	40(%rax), %rax	# _27->gp_hv, D.21693
	movq	%rax, %rdi	# D.21693,
	call	Perl_newHVhv	#
	movq	%rax, 40(%rbx)	# D.21693, _24->gp_hv
.L528:
	.loc 1 1895 0 discriminator 2
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.156
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.157
	leal	1(%rax), %edx	#, PL_savestack_ix.159
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.159, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.21689
	leaq	(%rcx,%rax), %rdx	#, D.21690
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.160
	movl	%eax, (%rdx)	# PL_hints.161, _36->any_i32
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.162
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.163
	leal	1(%rax), %edx	#, PL_savestack_ix.165
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.165, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.21689
	addq	%rcx, %rax	# PL_savestack.162, D.21690
	movl	$27, (%rax)	#, _45->any_i32
.LBE19:
	.loc 1 1896 0 is_stmt 1 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.166
	andb	$254, %ah	#, PL_hints.167
	movl	%eax, PL_hints(%rip)	# PL_hints.167, PL_hints
	.loc 1 1897 0 discriminator 2
	movl	$PL_compiling+80, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 1898 0 discriminator 2
	movq	PL_compiling+80(%rip), %rax	# PL_compiling.cop_warnings, D.21695
	testq	%rax, %rax	# D.21695
	je	.L529	#,
	.loc 1 1898 0 is_stmt 0 discriminator 1
	movq	PL_compiling+80(%rip), %rax	# PL_compiling.cop_warnings, D.21695
	cmpq	$16, %rax	#, D.21695
	je	.L529	#,
	movq	PL_compiling+80(%rip), %rax	# PL_compiling.cop_warnings, D.21695
	cmpq	$32, %rax	#, D.21695
	je	.L529	#,
	.loc 1 1899 0 is_stmt 1
	movq	PL_compiling+80(%rip), %rax	# PL_compiling.cop_warnings, D.21695
	movq	%rax, %rdi	# D.21695,
	call	Perl_newSVsv	#
	movq	%rax, PL_compiling+80(%rip)	# D.21695, PL_compiling.cop_warnings
	.loc 1 1900 0
	movq	PL_compiling+80(%rip), %rax	# PL_compiling.cop_warnings, D.21695
	movq	%rax, %rdi	# D.21695,
	call	Perl_save_freesv	#
.L529:
	.loc 1 1902 0
	movl	$PL_compiling+88, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 1903 0
	movq	PL_compiling+88(%rip), %rax	# PL_compiling.cop_io, D.21695
	testq	%rax, %rax	# D.21695
	je	.L530	#,
	.loc 1 1904 0
	movq	PL_compiling+88(%rip), %rax	# PL_compiling.cop_io, D.21695
	movq	%rax, %rdi	# D.21695,
	call	Perl_newSVsv	#
	movq	%rax, PL_compiling+88(%rip)	# D.21695, PL_compiling.cop_io
	.loc 1 1905 0
	movq	PL_compiling+88(%rip), %rax	# PL_compiling.cop_io, D.21695
	movq	%rax, %rdi	# D.21695,
	call	Perl_save_freesv	#
.L530:
	.loc 1 1907 0
	movl	-20(%rbp), %eax	# retval, D.21687
.L526:
	.loc 1 1908 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE41:
	.size	Perl_block_start, .-Perl_block_start
	.globl	Perl_block_end
	.type	Perl_block_end, @function
Perl_block_end:
.LFB42:
	.loc 1 1912 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# floor, floor
	movq	%rsi, -32(%rbp)	# seq, seq
	.loc 1 1913 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.168
	andl	$256, %eax	#, tmp69
	movl	%eax, -12(%rbp)	# tmp69, needblockscope
	.loc 1 1914 0
	movq	-32(%rbp), %rax	# seq, tmp70
	movq	%rax, %rdi	# tmp70,
	call	Perl_scalarseq	#
	movq	%rax, -8(%rbp)	# tmp71, retval
	.loc 1 1916 0
	movl	PL_yynerrs(%rip), %eax	# PL_yynerrs, PL_yynerrs.170
	testl	%eax, %eax	# PL_yynerrs.170
	je	.L532	#,
	.loc 1 1916 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# retval, D.21696
	jmp	.L533	#
.L532:
	.loc 1 1917 0 is_stmt 1
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.171
	cmpl	-20(%rbp), %eax	# floor, PL_savestack_ix.171
	jle	.L534	#,
	.loc 1 1917 0 is_stmt 0 discriminator 1
	movl	-20(%rbp), %eax	# floor, tmp72
	movl	%eax, %edi	# tmp72,
	call	Perl_leave_scope	#
.L534:
	.loc 1 1918 0 is_stmt 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.172
	movb	%al, PL_compiling+37(%rip)	# D.21697, PL_compiling.op_private
	.loc 1 1919 0
	cmpl	$0, -12(%rbp)	#, needblockscope
	je	.L535	#,
	.loc 1 1920 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.173
	orb	$1, %ah	#, PL_hints.174
	movl	%eax, PL_hints(%rip)	# PL_hints.174, PL_hints
.L535:
	.loc 1 1921 0
	call	Perl_pad_leavemy	#
	.loc 1 1922 0
	movq	-8(%rbp), %rax	# retval, D.21696
.L533:
	.loc 1 1923 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE42:
	.size	Perl_block_end, .-Perl_block_end
	.type	S_newDEFSVOP, @function
S_newDEFSVOP:
.LFB43:
	.loc 1 1927 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 1933 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.175
	movq	%rax, %rdx	# PL_defgv.175,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdi	# D.21698,
	call	Perl_newSVREF	#
	.loc 1 1935 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE43:
	.size	S_newDEFSVOP, .-S_newDEFSVOP
	.section	.rodata
.LC39:
	.string	"DB::postponed"
	.text
	.globl	Perl_newPROG
	.type	Perl_newPROG, @function
Perl_newPROG:
.LFB44:
	.loc 1 1939 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 1940 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.176
	testl	%eax, %eax	# PL_in_eval.176
	je	.L539	#,
	.loc 1 1941 0
	movq	PL_eval_root(%rip), %rax	# PL_eval_root, PL_eval_root.177
	testq	%rax, %rax	# PL_eval_root.177
	je	.L540	#,
	.loc 1 1942 0
	jmp	.L538	#
.L540:
	.loc 1 1944 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.179
	andl	$4, %eax	#, D.21699
	.loc 1 1943 0
	testl	%eax, %eax	# D.21699
	je	.L542	#,
	.loc 1 1943 0 is_stmt 0 discriminator 1
	movl	$128, %eax	#, iftmp.178
	jmp	.L543	#
.L542:
	.loc 1 1943 0 discriminator 2
	movl	$0, %eax	#, iftmp.178
.L543:
	.loc 1 1943 0 discriminator 1
	movq	-40(%rbp), %rdx	# o, tmp114
	movl	%eax, %esi	# iftmp.178,
	movl	$312, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, PL_eval_root(%rip)	# PL_eval_root.180, PL_eval_root
	.loc 1 1946 0 is_stmt 1 discriminator 1
	movq	PL_eval_root(%rip), %rax	# PL_eval_root, PL_eval_root.181
	movq	%rax, %rdi	# PL_eval_root.181,
	call	Perl_linklist	#
	movq	%rax, PL_eval_start(%rip)	# PL_eval_start.182, PL_eval_start
	.loc 1 1947 0 discriminator 1
	movq	PL_eval_root(%rip), %rax	# PL_eval_root, PL_eval_root.183
	movq	PL_eval_root(%rip), %rdx	# PL_eval_root, PL_eval_root.184
	movzbl	37(%rdx), %edx	# PL_eval_root.184_15->op_private, D.21700
	orl	$64, %edx	#, D.21700
	movb	%dl, 37(%rax)	# D.21700, PL_eval_root.183_14->op_private
	.loc 1 1948 0 discriminator 1
	movq	PL_eval_root(%rip), %rax	# PL_eval_root, PL_eval_root.185
	movq	$1, 24(%rax)	#, PL_eval_root.185_18->op_targ
	.loc 1 1949 0 discriminator 1
	movq	PL_eval_root(%rip), %rax	# PL_eval_root, PL_eval_root.186
	movq	$0, (%rax)	#, PL_eval_root.186_19->op_next
	.loc 1 1950 0 discriminator 1
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.187
	movq	PL_eval_start(%rip), %rdx	# PL_eval_start, PL_eval_start.188
	movq	%rdx, %rdi	# PL_eval_start.188,
	call	*%rax	# PL_peepp.187
	jmp	.L538	#
.L539:
	.loc 1 1953 0
	movq	-40(%rbp), %rax	# o, tmp115
	movzwl	32(%rax), %eax	# o_10(D)->op_type, D.21701
	cmpw	$1, %ax	#, D.21701
	jne	.L544	#,
	.loc 1 1954 0
	movq	$0, PL_comppad_name(%rip)	#, PL_comppad_name
	.loc 1 1955 0
	movq	$0, PL_compcv(%rip)	#, PL_compcv
	.loc 1 1956 0
	movq	-40(%rbp), %rax	# o, tmp116
	movq	%rax, %rdi	# tmp116,
	call	Perl_safesysfree	#
	.loc 1 1957 0
	jmp	.L538	#
.L544:
	.loc 1 1959 0
	movq	-40(%rbp), %rax	# o, tmp117
	movq	%rax, %rdi	# tmp117,
	call	Perl_scalarvoid	#
	movq	%rax, %rdi	# D.21702,
	call	Perl_sawparens	#
	movq	%rax, %rdi	# D.21702,
	call	Perl_scope	#
	movq	%rax, PL_main_root(%rip)	# PL_main_root.189, PL_main_root
	.loc 1 1960 0
	movq	$PL_compiling, PL_curcop(%rip)	#, PL_curcop
	.loc 1 1961 0
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.191
	movq	(%rax), %rax	# PL_main_root.191_26->op_next, D.21702
	testq	%rax, %rax	# D.21702
	je	.L545	#,
	.loc 1 1961 0 is_stmt 0 discriminator 1
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.192
	movq	(%rax), %rax	# PL_main_root.192_28->op_next, iftmp.190
	jmp	.L546	#
.L545:
	.loc 1 1961 0 discriminator 2
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.193
	movq	%rax, %rdi	# PL_main_root.193,
	call	Perl_linklist	#
.L546:
	.loc 1 1961 0 discriminator 3
	movq	%rax, PL_main_start(%rip)	# iftmp.190, PL_main_start
	.loc 1 1962 0 is_stmt 1 discriminator 3
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.194
	movq	PL_main_root(%rip), %rdx	# PL_main_root, PL_main_root.195
	movzbl	37(%rdx), %edx	# PL_main_root.195_33->op_private, D.21700
	orl	$64, %edx	#, D.21700
	movb	%dl, 37(%rax)	# D.21700, PL_main_root.194_32->op_private
	.loc 1 1963 0 discriminator 3
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.196
	movq	$1, 24(%rax)	#, PL_main_root.196_36->op_targ
	.loc 1 1964 0 discriminator 3
	movq	PL_main_root(%rip), %rax	# PL_main_root, PL_main_root.197
	movq	$0, (%rax)	#, PL_main_root.197_37->op_next
	.loc 1 1965 0 discriminator 3
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.198
	movq	PL_main_start(%rip), %rdx	# PL_main_start, PL_main_start.199
	movq	%rdx, %rdi	# PL_main_start.199,
	call	*%rax	# PL_peepp.198
	.loc 1 1966 0 discriminator 3
	movq	$0, PL_compcv(%rip)	#, PL_compcv
	.loc 1 1969 0 discriminator 3
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.200
	testl	%eax, %eax	# PL_perldb.200
	je	.L538	#,
	.loc 1 1969 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.201
	andl	$8, %eax	#, D.21703
	testl	%eax, %eax	# D.21703
	je	.L538	#,
.LBB20:
	.loc 1 1970 0 is_stmt 1
	movl	$0, %esi	#,
	movl	$.LC39, %edi	#,
	call	Perl_get_cv	#
	movq	%rax, -24(%rbp)	# tmp118, cv
	.loc 1 1971 0
	cmpq	$0, -24(%rbp)	#, cv
	je	.L538	#,
.LBB21:
	.loc 1 1972 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
.LBB22:
	.loc 1 1973 0
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.202
	addq	$4, %rax	#, PL_markstack_ptr.203
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.203, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.204
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.205
	cmpq	%rax, %rdx	# PL_markstack_max.205, PL_markstack_ptr.204
	jne	.L547	#,
	.loc 1 1973 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L547:
	.loc 1 1973 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.206
	movq	%rbx, %rcx	# sp, sp.207
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.208
	subq	%rdx, %rcx	# PL_stack_base.209, D.21704
	movq	%rcx, %rdx	# D.21704, D.21704
	sarq	$3, %rdx	#, tmp119
	movl	%edx, (%rax)	# D.21699, *PL_markstack_ptr.206_49
.LBE22:
.LBB23:
	.loc 1 1974 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.210
	movq	%rax, %rdx	# PL_stack_max.210, PL_stack_max.211
	movq	%rbx, %rax	# sp, sp.212
	subq	%rax, %rdx	# sp.212, D.21704
	movq	%rdx, %rax	# D.21704, D.21704
	cmpq	$7, %rax	#, D.21704
	jg	.L548	#,
	.loc 1 1974 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L548:
	.loc 1 1974 0 discriminator 2
	addq	$8, %rbx	#, sp
	movq	PL_compiling+56(%rip), %rax	# PL_compiling.cop_filegv, D.21706
	movq	%rax, (%rbx)	# D.21706, *sp_62
.LBE23:
	.loc 1 1975 0 is_stmt 1 discriminator 2
	movq	%rbx, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 1976 0 discriminator 2
	movq	-24(%rbp), %rax	# cv, tmp120
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp120,
	call	Perl_call_sv	#
.L538:
.LBE21:
.LBE20:
	.loc 1 1980 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE44:
	.size	Perl_newPROG, .-Perl_newPROG
	.section	.rodata
.LC40:
	.string	", \t\n"
.LC41:
	.string	"@$%*"
	.align 8
.LC42:
	.string	"Parentheses missing around \"%s\" list"
	.text
	.globl	Perl_localize
	.type	Perl_localize, @function
Perl_localize:
.LFB45:
	.loc 1 1984 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movl	%esi, -28(%rbp)	# lex, lex
	.loc 1 1985 0
	movq	-24(%rbp), %rax	# o, tmp123
	movzbl	36(%rax), %eax	# o_10(D)->op_flags, D.21709
	movzbl	%al, %eax	# D.21709, D.21710
	andl	$8, %eax	#, D.21710
	testl	%eax, %eax	# D.21710
	jne	.L550	#,
	.loc 1 1994 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.213
	movq	80(%rax), %rax	# PL_curcop.213_14->cop_warnings, D.21711
	testq	%rax, %rax	# D.21711
	je	.L551	#,
	.loc 1 1994 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.214
	movq	80(%rax), %rax	# PL_curcop.214_16->cop_warnings, D.21711
	cmpq	$32, %rax	#, D.21711
	je	.L551	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.215
	movq	80(%rax), %rax	# PL_curcop.215_18->cop_warnings, D.21711
	cmpq	$16, %rax	#, D.21711
	je	.L552	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.216
	movq	80(%rax), %rax	# PL_curcop.216_20->cop_warnings, D.21711
	movq	(%rax), %rax	# _21->sv_any, D.21712
	movq	(%rax), %rax	# MEM[(struct XPV *)_22].xpv_pv, D.21713
	addq	$8, %rax	#, D.21713
	movzbl	(%rax), %eax	# *_24, D.21714
	movsbl	%al, %eax	# D.21714, D.21710
	andl	$1, %eax	#, D.21710
	testl	%eax, %eax	# D.21710
	jne	.L552	#,
.L551:
	.loc 1 1994 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.217
	movq	80(%rax), %rax	# PL_curcop.217_28->cop_warnings, D.21711
	testq	%rax, %rax	# D.21711
	jne	.L550	#,
	.loc 1 1994 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.218
	movzbl	%al, %eax	# PL_dowarn.218, D.21710
	andl	$1, %eax	#, D.21710
	testl	%eax, %eax	# D.21710
	je	.L550	#,
.L552:
	.loc 1 1995 0 is_stmt 1
	movq	PL_bufptr(%rip), %rdx	# PL_bufptr, PL_bufptr.219
	movq	PL_oldbufptr(%rip), %rax	# PL_oldbufptr, PL_oldbufptr.220
	cmpq	%rax, %rdx	# PL_oldbufptr.220, PL_bufptr.219
	jbe	.L550	#,
	.loc 1 1995 0 is_stmt 0 discriminator 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, PL_bufptr.221
	subq	$1, %rax	#, D.21713
	movzbl	(%rax), %eax	# *_36, D.21714
	cmpb	$44, %al	#, D.21714
	jne	.L550	#,
.LBB24:
	.loc 1 1997 0 is_stmt 1
	movq	PL_bufptr(%rip), %rax	# PL_bufptr, tmp124
	movq	%rax, -8(%rbp)	# tmp124, s
	.loc 1 1998 0
	movb	$0, -9(%rbp)	#, sigil
	.loc 1 2001 0
	jmp	.L553	#
.L555:
	.loc 1 2002 0
	addq	$1, -8(%rbp)	#, s
.L553:
	.loc 1 2001 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp125
	movzbl	(%rax), %eax	# *s_2, D.21714
	testb	%al, %al	# D.21714
	je	.L554	#,
	.loc 1 2001 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp126
	movzbl	(%rax), %eax	# *s_2, D.21714
	movsbl	%al, %eax	# D.21714, D.21710
	movl	%eax, %esi	# D.21710,
	movl	$.LC40, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.21713
	jne	.L555	#,
.L554:
	.loc 1 2005 0 is_stmt 1
	movq	-8(%rbp), %rax	# s, tmp127
	movzbl	(%rax), %eax	# *s_3, D.21714
	testb	%al, %al	# D.21714
	je	.L556	#,
	.loc 1 2005 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp128
	movzbl	(%rax), %eax	# *s_3, D.21714
	movsbl	%al, %eax	# D.21714, D.21710
	movl	%eax, %esi	# D.21710,
	movl	$.LC41, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.21713
	je	.L556	#,
	addq	$1, -8(%rbp)	#, s
	movq	-8(%rbp), %rax	# s, tmp129
	movzbl	(%rax), %eax	# *s_49, D.21714
	testb	%al, %al	# D.21714
	je	.L556	#,
	.loc 1 2006 0 is_stmt 1
	movq	-8(%rbp), %rax	# s, tmp130
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$64, %al	#, D.21714
	jle	.L557	#,
	.loc 1 2006 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp131
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$90, %al	#, D.21714
	jle	.L558	#,
.L557:
	.loc 1 2006 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp132
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$96, %al	#, D.21714
	jle	.L559	#,
	.loc 1 2006 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp133
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$122, %al	#, D.21714
	jle	.L558	#,
.L559:
	.loc 1 2006 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp134
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$47, %al	#, D.21714
	jle	.L560	#,
	.loc 1 2006 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp135
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$57, %al	#, D.21714
	jle	.L558	#,
.L560:
	.loc 1 2006 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp136
	movzbl	(%rax), %eax	# *s_49, D.21714
	cmpb	$95, %al	#, D.21714
	je	.L558	#,
	.loc 1 2006 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp137
	movzbl	(%rax), %eax	# *s_49, D.21714
	testb	%al, %al	# D.21714
	jns	.L556	#,
.L558:
	.loc 1 2007 0 is_stmt 1
	addq	$1, -8(%rbp)	#, s
	.loc 1 2008 0
	movb	$1, -9(%rbp)	#, sigil
	.loc 1 2009 0
	jmp	.L561	#
.L564:
	.loc 1 2010 0
	addq	$1, -8(%rbp)	#, s
.L561:
	.loc 1 2009 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp138
	movzbl	(%rax), %eax	# *s_4, D.21714
	testb	%al, %al	# D.21714
	je	.L562	#,
	.loc 1 2009 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp139
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$64, %al	#, D.21714
	jle	.L563	#,
	.loc 1 2009 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp140
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$90, %al	#, D.21714
	jle	.L564	#,
.L563:
	.loc 1 2009 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp141
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$96, %al	#, D.21714
	jle	.L565	#,
	.loc 1 2009 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp142
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$122, %al	#, D.21714
	jle	.L564	#,
.L565:
	.loc 1 2009 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp143
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$47, %al	#, D.21714
	jle	.L566	#,
	.loc 1 2009 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp144
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$57, %al	#, D.21714
	jle	.L564	#,
.L566:
	.loc 1 2009 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp145
	movzbl	(%rax), %eax	# *s_4, D.21714
	cmpb	$95, %al	#, D.21714
	je	.L564	#,
	.loc 1 2009 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp146
	movzbl	(%rax), %eax	# *s_4, D.21714
	testb	%al, %al	# D.21714
	js	.L564	#,
.L562:
	.loc 1 2011 0 is_stmt 1
	jmp	.L567	#
.L569:
	.loc 1 2012 0
	addq	$1, -8(%rbp)	#, s
.L567:
	.loc 1 2011 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp147
	movzbl	(%rax), %eax	# *s_5, D.21714
	testb	%al, %al	# D.21714
	je	.L568	#,
	.loc 1 2011 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# s, tmp148
	movzbl	(%rax), %eax	# *s_5, D.21714
	movsbl	%al, %eax	# D.21714, D.21710
	movl	%eax, %esi	# D.21710,
	movl	$.LC40, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.21713
	jne	.L569	#,
.L568:
	.loc 1 2016 0 is_stmt 1
	jmp	.L554	#
.L556:
	.loc 1 2017 0
	cmpb	$0, -9(%rbp)	#, sigil
	je	.L550	#,
	.loc 1 2017 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# s, tmp149
	movzbl	(%rax), %eax	# *s_6, D.21714
	cmpb	$59, %al	#, D.21714
	je	.L570	#,
	movq	-8(%rbp), %rax	# s, tmp150
	movzbl	(%rax), %eax	# *s_6, D.21714
	cmpb	$61, %al	#, D.21714
	jne	.L550	#,
.L570:
	.loc 1 2018 0 is_stmt 1
	cmpl	$0, -28(%rbp)	#, lex
	je	.L571	#,
	.loc 1 2020 0
	movl	PL_in_my(%rip), %eax	# PL_in_my, PL_in_my.224
	cmpl	$137, %eax	#, PL_in_my.224
	jne	.L572	#,
	.loc 1 2020 0 is_stmt 0 discriminator 1
	movl	$.LC7, %eax	#, iftmp.223
	jmp	.L574	#
.L572:
	.loc 1 2020 0 discriminator 2
	movl	$.LC8, %eax	#, iftmp.223
	jmp	.L574	#
.L571:
	.loc 1 2018 0 is_stmt 1 discriminator 1
	movl	$.LC25, %eax	#, iftmp.222
.L574:
	.loc 1 2018 0 is_stmt 0 discriminator 2
	movq	%rax, %rdx	# iftmp.222,
	movl	$.LC42, %esi	#,
	movl	$32, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L550:
.LBE24:
	.loc 1 2025 0 is_stmt 1
	cmpl	$0, -28(%rbp)	#, lex
	je	.L575	#,
	.loc 1 2026 0
	movq	-24(%rbp), %rax	# o, tmp151
	movq	%rax, %rdi	# tmp151,
	call	Perl_my	#
	movq	%rax, -24(%rbp)	# tmp152, o
	jmp	.L576	#
.L575:
	.loc 1 2028 0
	movq	-24(%rbp), %rax	# o, tmp153
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp153,
	call	Perl_mod	#
	movq	%rax, -24(%rbp)	# tmp154, o
.L576:
	.loc 1 2029 0
	movl	$0, PL_in_my(%rip)	#, PL_in_my
	.loc 1 2030 0
	movq	$0, PL_in_my_stash(%rip)	#, PL_in_my_stash
	.loc 1 2031 0
	movq	-24(%rbp), %rax	# o, D.21715
	.loc 1 2032 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE45:
	.size	Perl_localize, .-Perl_localize
	.section	.rodata
.LC43:
	.string	";"
	.text
	.globl	Perl_jmaybe
	.type	Perl_jmaybe, @function
Perl_jmaybe:
.LFB46:
	.loc 1 2036 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 2037 0
	movq	-24(%rbp), %rax	# o, tmp65
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21719
	cmpw	$141, %ax	#, D.21719
	jne	.L579	#,
.LBB25:
	.loc 1 2043 0
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC43, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, %rdx	# D.21720,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdi	# D.21721,
	call	Perl_newSVREF	#
	movq	%rax, -8(%rbp)	# tmp66, o2
	.loc 1 2045 0
	movq	-24(%rbp), %rdx	# o, tmp67
	movq	-8(%rbp), %rax	# o2, tmp68
	movq	%rax, %rsi	# tmp68,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, %rdx	# D.21721,
	movl	$0, %esi	#,
	movl	$140, %edi	#,
	call	Perl_convert	#
	movq	%rax, -24(%rbp)	# tmp69, o
.L579:
.LBE25:
	.loc 1 2047 0
	movq	-24(%rbp), %rax	# o, D.21721
	.loc 1 2048 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE46:
	.size	Perl_jmaybe, .-Perl_jmaybe
	.globl	Perl_fold_constants
	.type	Perl_fold_constants, @function
Perl_fold_constants:
.LFB47:
	.loc 1 2052 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# o, o
	.loc 1 2054 0
	movzwl	32(%rbx), %eax	# o_7(D)->op_type, D.21724
	movzwl	%ax, %eax	# D.21724, tmp129
	movl	%eax, -28(%rbp)	# tmp129, type
	.loc 1 2057 0
	movl	-28(%rbp), %eax	# type, tmp131
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21725
	andl	$4, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L582	#,
	.loc 1 2058 0
	movq	%rbx, %rdi	# o,
	call	Perl_scalar	#
.L582:
	.loc 1 2059 0
	movl	-28(%rbp), %eax	# type, tmp133
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21725
	andl	$8, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L583	#,
	.loc 1 2059 0 is_stmt 0 discriminator 1
	movq	24(%rbx), %rax	# o_7(D)->op_targ, D.21726
	testq	%rax, %rax	# D.21726
	jne	.L583	#,
	.loc 1 2060 0 is_stmt 1
	movl	-28(%rbp), %eax	# type, tmp134
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp134,
	call	Perl_pad_alloc	#
	movq	%rax, 24(%rbx)	# D.21726, o_7(D)->op_targ
.L583:
	.loc 1 2064 0
	movl	-28(%rbp), %eax	# type, tmp136
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21725
	andl	$32, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L584	#,
	.loc 1 2064 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.225
	andl	$1, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L584	#,
	.loc 1 2065 0 is_stmt 1
	cmpl	$94, -28(%rbp)	#, type
	jne	.L585	#,
	.loc 1 2065 0 is_stmt 0 discriminator 1
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21723
	movzwl	32(%rax), %eax	# _20->op_type, D.21724
	cmpw	$5, %ax	#, D.21724
	jne	.L585	#,
	.loc 1 2066 0 is_stmt 1 discriminator 1
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21723
	movzbl	37(%rax), %eax	# _22->op_private, D.21727
	movzbl	%al, %eax	# D.21727, D.21728
	andl	$64, %eax	#, D.21728
	.loc 1 2065 0 discriminator 1
	testl	%eax, %eax	# D.21728
	jne	.L584	#,
.L585:
	.loc 1 2068 0
	movzwl	32(%rbx), %eax	# o_7(D)->op_type, D.21724
	addl	$1, %eax	#, D.21724
	movw	%ax, 32(%rbx)	# D.21724, o_7(D)->op_type
	movzwl	32(%rbx), %eax	# o_7(D)->op_type, D.21724
	movzwl	%ax, %eax	# D.21724, tmp137
	movl	%eax, -28(%rbp)	# tmp137, type
	movl	-28(%rbp), %eax	# type, tmp139
	cltq
	movq	PL_ppaddr(,%rax,8), %rax	# PL_ppaddr, D.21729
	movq	%rax, 16(%rbx)	# D.21729, o_7(D)->op_ppaddr
.L584:
	.loc 1 2071 0
	movl	-28(%rbp), %eax	# type, tmp141
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21725
	andl	$2, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	jne	.L586	#,
	.loc 1 2072 0
	jmp	.L587	#
.L586:
	.loc 1 2074 0
	movl	-28(%rbp), %eax	# type, tmp143
	subl	$84, %eax	#, tmp142
	cmpl	$39, %eax	#, tmp142
	ja	.L588	#,
	movl	%eax, %eax	# tmp142, tmp144
	movq	.L590(,%rax,8), %rax	#, tmp145
	jmp	*%rax	# tmp145
	.section	.rodata
	.align 8
	.align 4
.L590:
	.quad	.L589
	.quad	.L589
	.quad	.L589
	.quad	.L589
	.quad	.L588
	.quad	.L588
	.quad	.L589
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L591
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L589
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L588
	.quad	.L589
	.quad	.L589
	.quad	.L589
	.quad	.L589
	.text
.L591:
	.loc 1 2077 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)o_7(D)].op_first, D.21723
	movq	40(%rbx), %rdx	# MEM[(struct UNOP *)o_7(D)].op_first, D.21723
	movzbl	37(%rdx), %edx	# _34->op_private, D.21727
	andl	$-9, %edx	#, D.21727
	movb	%dl, 37(%rax)	# D.21727, _33->op_private
	.loc 1 2078 0
	jmp	.L588	#
.L589:
	.loc 1 2090 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.226
	andl	$4, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L588	#,
	.loc 1 2091 0
	jmp	.L587	#
.L588:
	.loc 1 2094 0
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.227
	testl	%eax, %eax	# PL_error_count.227
	je	.L592	#,
	.loc 1 2095 0
	jmp	.L587	#
.L592:
	.loc 1 2097 0
	movq	(%rbx), %rax	# o_7(D)->op_next, D.21723
	testq	%rax, %rax	# D.21723
	je	.L593	#,
	.loc 1 2097 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_7(D)->op_next, iftmp.228
	jmp	.L594	#
.L593:
	.loc 1 2097 0 discriminator 2
	movq	%rbx, %rdi	# o,
	call	Perl_linklist	#
.L594:
	.loc 1 2097 0 discriminator 3
	movq	%rax, %r12	# iftmp.228, curop
	jmp	.L595	#
.L600:
	.loc 1 2098 0 is_stmt 1
	movzwl	32(%r12), %eax	# curop_1->op_type, D.21724
	cmpw	$5, %ax	#, D.21724
	jne	.L596	#,
	.loc 1 2099 0 discriminator 1
	movzbl	37(%r12), %eax	# curop_1->op_private, D.21727
	movzbl	%al, %eax	# D.21727, D.21728
	andl	$64, %eax	#, D.21728
	.loc 1 2098 0 discriminator 1
	testl	%eax, %eax	# D.21728
	je	.L597	#,
.L596:
	.loc 1 2100 0
	movzwl	32(%r12), %eax	# curop_1->op_type, D.21724
	.loc 1 2099 0
	cmpw	$141, %ax	#, D.21724
	je	.L597	#,
	.loc 1 2101 0
	movzwl	32(%r12), %eax	# curop_1->op_type, D.21724
	.loc 1 2100 0
	cmpw	$2, %ax	#, D.21724
	je	.L597	#,
	.loc 1 2102 0
	movzwl	32(%r12), %eax	# curop_1->op_type, D.21724
	.loc 1 2101 0
	testw	%ax, %ax	# D.21724
	je	.L597	#,
	.loc 1 2103 0
	movzwl	32(%r12), %eax	# curop_1->op_type, D.21724
	.loc 1 2102 0
	cmpw	$3, %ax	#, D.21724
	je	.L597	#,
	.loc 1 2105 0
	jmp	.L587	#
.L597:
	.loc 1 2097 0
	movq	(%r12), %rax	# curop_1->op_next, D.21723
	testq	%rax, %rax	# D.21723
	je	.L598	#,
	.loc 1 2097 0 is_stmt 0 discriminator 1
	movq	(%r12), %rax	# curop_1->op_next, iftmp.229
	jmp	.L599	#
.L598:
	.loc 1 2097 0 discriminator 2
	movq	%r12, %rdi	# curop,
	call	Perl_linklist	#
.L599:
	.loc 1 2097 0 discriminator 3
	movq	%rax, %r12	# iftmp.229, curop
.L595:
	.loc 1 2097 0 discriminator 1
	cmpq	%rbx, %r12	# o, curop
	jne	.L600	#,
	.loc 1 2109 0 is_stmt 1
	movq	(%rbx), %rax	# o_7(D)->op_next, D.21723
	testq	%rax, %rax	# D.21723
	je	.L601	#,
	.loc 1 2109 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_7(D)->op_next, iftmp.230
	jmp	.L602	#
.L601:
	.loc 1 2109 0 discriminator 2
	movq	%rbx, %rdi	# o,
	call	Perl_linklist	#
.L602:
	.loc 1 2109 0 discriminator 3
	movq	%rax, %r12	# iftmp.230, curop
	.loc 1 2110 0 is_stmt 1 discriminator 3
	movq	$0, (%rbx)	#, o_7(D)->op_next
	.loc 1 2111 0 discriminator 3
	movq	%r12, PL_op(%rip)	# curop, PL_op
	.loc 1 2112 0 discriminator 3
	movq	PL_runops(%rip), %rax	# PL_runops, PL_runops.231
	call	*%rax	# PL_runops.231
	.loc 1 2113 0 discriminator 3
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.232
	leaq	-8(%rax), %rdx	#, PL_stack_sp.234
	movq	%rdx, PL_stack_sp(%rip)	# PL_stack_sp.234, PL_stack_sp
	movq	(%rax), %rax	# *PL_stack_sp.233_62, tmp146
	movq	%rax, -24(%rbp)	# tmp146, sv
	.loc 1 2114 0 discriminator 3
	movq	24(%rbx), %rax	# o_7(D)->op_targ, D.21726
	testq	%rax, %rax	# D.21726
	je	.L603	#,
	.loc 1 2114 0 is_stmt 0 discriminator 1
	movq	PL_curpad(%rip), %rax	# PL_curpad, PL_curpad.235
	movq	24(%rbx), %rdx	# o_7(D)->op_targ, D.21726
	salq	$3, %rdx	#, D.21726
	addq	%rdx, %rax	# D.21726, D.21730
	movq	(%rax), %rax	# *_69, D.21731
	cmpq	-24(%rbp), %rax	# sv, D.21731
	jne	.L603	#,
	.loc 1 2115 0 is_stmt 1
	movq	24(%rbx), %rax	# o_7(D)->op_targ, D.21726
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.21726,
	call	Perl_pad_swipe	#
	jmp	.L604	#
.L603:
	.loc 1 2116 0
	movq	-24(%rbp), %rax	# sv, tmp147
	movl	12(%rax), %eax	# sv_64->sv_flags, D.21725
	andl	$2048, %eax	#, D.21725
	testl	%eax, %eax	# D.21725
	je	.L604	#,
	.loc 1 2117 0
	movq	-24(%rbp), %rax	# sv, tmp148
	movq	%rax, PL_Sv(%rip)	# tmp148, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.237
	testq	%rax, %rax	# PL_Sv.237
	je	.L606	#,
	.loc 1 2117 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.238
	movl	8(%rax), %edx	# PL_Sv.238_75->sv_refcnt, D.21725
	addl	$1, %edx	#, D.21725
	movl	%edx, 8(%rax)	# D.21725, PL_Sv.238_75->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.238_75->sv_refcnt, D.21725
	testl	%eax, %eax	# D.21725
	je	.L606	#,
	.loc 1 2117 0
	nop
.L606:
	.loc 1 2118 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp149
	movl	12(%rax), %eax	# sv_64->sv_flags, D.21725
	andb	$247, %ah	#, D.21725
	movl	%eax, %edx	# D.21725, D.21725
	movq	-24(%rbp), %rax	# sv, tmp150
	movl	%edx, 12(%rax)	# D.21725, sv_64->sv_flags
.L604:
	.loc 1 2120 0
	movq	%rbx, %rdi	# o,
	call	Perl_op_free	#
	.loc 1 2121 0
	cmpl	$14, -28(%rbp)	#, type
	jne	.L607	#,
	.loc 1 2122 0
	movq	-24(%rbp), %rax	# sv, tmp151
	movq	%rax, %rdx	# tmp151,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	jmp	.L608	#
.L607:
	.loc 1 2123 0
	movq	-24(%rbp), %rax	# sv, tmp152
	movq	%rax, %rdx	# tmp152,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	jmp	.L608	#
.L587:
	.loc 1 2126 0
	movq	%rbx, %rax	# o, D.21723
.L608:
	.loc 1 2127 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE47:
	.size	Perl_fold_constants, .-Perl_fold_constants
	.globl	Perl_gen_constant_list
	.type	Perl_gen_constant_list, @function
Perl_gen_constant_list:
.LFB48:
	.loc 1 2131 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$16, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# o, o
	.loc 1 2133 0
	movl	PL_tmps_floor(%rip), %eax	# PL_tmps_floor, tmp86
	movl	%eax, -20(%rbp)	# tmp86, oldtmps_floor
	.loc 1 2135 0
	movq	%rbx, %rdi	# o,
	call	Perl_list	#
	.loc 1 2136 0
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.239
	testl	%eax, %eax	# PL_error_count.239
	je	.L610	#,
	.loc 1 2137 0
	movq	%rbx, %rax	# o, D.21732
	jmp	.L611	#
.L610:
	.loc 1 2139 0
	movq	(%rbx), %rax	# o_4(D)->op_next, D.21732
	testq	%rax, %rax	# D.21732
	je	.L612	#,
	.loc 1 2139 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_4(D)->op_next, iftmp.240
	jmp	.L613	#
.L612:
	.loc 1 2139 0 discriminator 2
	movq	%rbx, %rdi	# o,
	call	Perl_linklist	#
.L613:
	.loc 1 2139 0 discriminator 3
	movq	%rax, %r12	# iftmp.240, curop
	movq	%r12, PL_op(%rip)	# curop, PL_op
	.loc 1 2140 0 is_stmt 1 discriminator 3
	movq	$0, (%rbx)	#, o_4(D)->op_next
	.loc 1 2141 0 discriminator 3
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.241
	movq	%r12, %rdi	# curop,
	call	*%rax	# PL_peepp.241
	.loc 1 2142 0 discriminator 3
	call	Perl_pp_pushmark	#
	.loc 1 2143 0 discriminator 3
	movq	PL_runops(%rip), %rax	# PL_runops, PL_runops.242
	call	*%rax	# PL_runops.242
	.loc 1 2144 0 discriminator 3
	movq	%r12, PL_op(%rip)	# curop, PL_op
	.loc 1 2145 0 discriminator 3
	call	Perl_pp_anonlist	#
	.loc 1 2146 0 discriminator 3
	movl	-20(%rbp), %eax	# oldtmps_floor, tmp87
	movl	%eax, PL_tmps_floor(%rip)	# tmp87, PL_tmps_floor
	.loc 1 2148 0 discriminator 3
	movw	$125, 32(%rbx)	#, o_4(D)->op_type
	.loc 1 2149 0 discriminator 3
	movq	PL_ppaddr+1000(%rip), %rax	# PL_ppaddr, D.21733
	movq	%rax, 16(%rbx)	# D.21733, o_4(D)->op_ppaddr
	.loc 1 2150 0 discriminator 3
	movzbl	36(%rbx), %eax	# o_4(D)->op_flags, D.21734
	andl	$-17, %eax	#, D.21734
	movb	%al, 36(%rbx)	# D.21734, o_4(D)->op_flags
	.loc 1 2151 0 discriminator 3
	movzbl	36(%rbx), %eax	# o_4(D)->op_flags, D.21734
	orl	$8, %eax	#, D.21734
	movb	%al, 36(%rbx)	# D.21734, o_4(D)->op_flags
	.loc 1 2152 0 discriminator 3
	movw	$0, 34(%rbx)	#, o_4(D)->op_seq
	.loc 1 2153 0 discriminator 3
	movq	40(%rbx), %r12	# MEM[(struct UNOP *)o_4(D)].op_first, curop
	.loc 1 2154 0 discriminator 3
	movq	PL_stack_sp(%rip), %rax	# PL_stack_sp, PL_stack_sp.243
	leaq	-8(%rax), %rdx	#, PL_stack_sp.245
	movq	%rdx, PL_stack_sp(%rip)	# PL_stack_sp.245, PL_stack_sp
	movq	(%rax), %rax	# *PL_stack_sp.244_20, PL_Sv.246
	movq	%rax, PL_Sv(%rip)	# PL_Sv.246, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.248
	testq	%rax, %rax	# PL_Sv.248
	je	.L615	#,
	.loc 1 2154 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.249
	movl	8(%rax), %edx	# PL_Sv.249_24->sv_refcnt, D.21735
	addl	$1, %edx	#, D.21735
	movl	%edx, 8(%rax)	# D.21735, PL_Sv.249_24->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.249_24->sv_refcnt, D.21735
	testl	%eax, %eax	# D.21735
	je	.L615	#,
	.loc 1 2154 0
	nop
.L615:
	.loc 1 2154 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.250
	movq	%rax, %rdx	# PL_Sv.250,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, 40(%rbx)	# D.21732, MEM[(struct UNOP *)o_4(D)].op_first
	.loc 1 2155 0 is_stmt 1 discriminator 4
	movq	%r12, %rdi	# curop,
	call	Perl_op_free	#
	.loc 1 2156 0 discriminator 4
	movq	%rbx, %rdi	# o,
	call	Perl_linklist	#
	.loc 1 2157 0 discriminator 4
	movq	%rbx, %rdi	# o,
	call	Perl_list	#
.L611:
	.loc 1 2158 0
	addq	$16, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE48:
	.size	Perl_gen_constant_list, .-Perl_gen_constant_list
	.section	.rodata
	.align 8
.LC44:
	.string	"'%s' trapped by operation mask"
	.text
	.globl	Perl_convert
	.type	Perl_convert, @function
Perl_convert:
.LFB49:
	.loc 1 2162 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movl	%esi, -8(%rbp)	# flags, flags
	movq	%rdx, -16(%rbp)	# o, o
	.loc 1 2163 0
	cmpq	$0, -16(%rbp)	#, o
	je	.L617	#,
	.loc 1 2163 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# o, tmp85
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.21737
	cmpw	$141, %ax	#, D.21737
	je	.L618	#,
.L617:
	.loc 1 2164 0 is_stmt 1
	movq	-16(%rbp), %rax	# o, tmp86
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp86,
	movl	$0, %esi	#,
	movl	$141, %edi	#,
	call	Perl_newLISTOP	#
	movq	%rax, -16(%rbp)	# tmp87, o
	jmp	.L619	#
.L618:
	.loc 1 2166 0
	movq	-16(%rbp), %rax	# o, tmp88
	movzbl	36(%rax), %eax	# o_4(D)->op_flags, D.21738
	andl	$-4, %eax	#, D.21738
	movl	%eax, %edx	# D.21738, D.21738
	movq	-16(%rbp), %rax	# o, tmp89
	movb	%dl, 36(%rax)	# D.21738, o_4(D)->op_flags
.L619:
	.loc 1 2168 0
	movl	-4(%rbp), %eax	# type, tmp91
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21739
	andl	$1, %eax	#, D.21739
	testl	%eax, %eax	# D.21739
	jne	.L620	#,
	.loc 1 2169 0
	movq	-16(%rbp), %rax	# o, tmp92
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_1].op_first, D.21736
	movq	%rax, %rdi	# D.21736,
	call	Perl_op_null	#
.L620:
	.loc 1 2171 0
	movl	-4(%rbp), %eax	# type, tmp93
	movl	%eax, %edx	# tmp93, D.21737
	movq	-16(%rbp), %rax	# o, tmp94
	movw	%dx, 32(%rax)	# D.21737, o_1->op_type
	.loc 1 2172 0
	movl	-4(%rbp), %eax	# type, tmp96
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21740
	movq	-16(%rbp), %rax	# o, tmp97
	movq	%rdx, 16(%rax)	# D.21740, o_1->op_ppaddr
	.loc 1 2173 0
	movq	-16(%rbp), %rax	# o, tmp98
	movzbl	36(%rax), %eax	# o_1->op_flags, D.21738
	movl	%eax, %edx	# D.21738, D.21741
	movl	-8(%rbp), %eax	# flags, tmp99
	orl	%edx, %eax	# D.21741, D.21741
	movl	%eax, %edx	# D.21741, D.21738
	movq	-16(%rbp), %rax	# o, tmp100
	movb	%dl, 36(%rax)	# D.21738, o_1->op_flags
	.loc 1 2175 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.252
	testq	%rax, %rax	# PL_op_mask.252
	je	.L621	#,
	.loc 1 2175 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.253
	movl	-4(%rbp), %eax	# type, tmp101
	cltq
	addq	%rdx, %rax	# PL_op_mask.253, D.21743
	movzbl	(%rax), %eax	# *_24, D.21744
	testb	%al, %al	# D.21744
	je	.L621	#,
	movq	-16(%rbp), %rax	# o, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_op_free	#
	movl	-4(%rbp), %eax	# type, tmp104
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21743
	movq	%rax, %rsi	# D.21743,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.251
	jmp	.L622	#
.L621:
	.loc 1 2175 0 discriminator 2
	movl	-4(%rbp), %eax	# type, tmp106
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21745
	movq	-16(%rbp), %rdx	# o, tmp107
	movq	%rdx, %rdi	# tmp107,
	call	*%rax	# D.21745
.L622:
	.loc 1 2175 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.251, o
	.loc 1 2176 0 is_stmt 1 discriminator 3
	movq	-16(%rbp), %rax	# o, tmp108
	movzwl	32(%rax), %eax	# o_30->op_type, D.21737
	movzwl	%ax, %edx	# D.21737, D.21739
	movl	-4(%rbp), %eax	# type, type.254
	cmpl	%eax, %edx	# type.254, D.21739
	je	.L623	#,
	.loc 1 2177 0
	movq	-16(%rbp), %rax	# o, D.21736
	jmp	.L624	#
.L623:
	.loc 1 2179 0
	movq	-16(%rbp), %rax	# o, tmp109
	movq	%rax, %rdi	# tmp109,
	call	Perl_fold_constants	#
.L624:
	.loc 1 2180 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE49:
	.size	Perl_convert, .-Perl_convert
	.globl	Perl_append_elem
	.type	Perl_append_elem, @function
Perl_append_elem:
.LFB50:
	.loc 1 2186 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movq	%rsi, -16(%rbp)	# first, first
	movq	%rdx, -24(%rbp)	# last, last
	.loc 1 2187 0
	cmpq	$0, -16(%rbp)	#, first
	jne	.L626	#,
	.loc 1 2188 0
	movq	-24(%rbp), %rax	# last, D.21747
	jmp	.L627	#
.L626:
	.loc 1 2190 0
	cmpq	$0, -24(%rbp)	#, last
	jne	.L628	#,
	.loc 1 2191 0
	movq	-16(%rbp), %rax	# first, D.21747
	jmp	.L627	#
.L628:
	.loc 1 2193 0
	movq	-16(%rbp), %rax	# first, tmp73
	movzwl	32(%rax), %eax	# first_2(D)->op_type, D.21748
	movzwl	%ax, %edx	# D.21748, D.21749
	movl	-4(%rbp), %eax	# type, type.255
	cmpl	%eax, %edx	# type.255, D.21749
	jne	.L629	#,
	.loc 1 2194 0
	cmpl	$141, -4(%rbp)	#, type
	jne	.L630	#,
	.loc 1 2194 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# first, tmp74
	movzbl	36(%rax), %eax	# first_2(D)->op_flags, D.21750
	movzbl	%al, %eax	# D.21750, D.21751
	andl	$8, %eax	#, D.21751
	testl	%eax, %eax	# D.21751
	je	.L630	#,
.L629:
	.loc 1 2196 0 is_stmt 1
	movq	-24(%rbp), %rcx	# last, tmp75
	movq	-16(%rbp), %rdx	# first, tmp76
	movl	-4(%rbp), %eax	# type, tmp77
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp77,
	call	Perl_newLISTOP	#
	jmp	.L627	#
.L630:
	.loc 1 2199 0
	movq	-16(%rbp), %rax	# first, tmp78
	movzbl	36(%rax), %eax	# first_2(D)->op_flags, D.21750
	movzbl	%al, %eax	# D.21750, D.21751
	andl	$4, %eax	#, D.21751
	testl	%eax, %eax	# D.21751
	je	.L631	#,
	.loc 1 2200 0
	movq	-16(%rbp), %rax	# first, tmp79
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)first_2(D)].op_last, D.21747
	movq	-24(%rbp), %rdx	# last, tmp80
	movq	%rdx, 8(%rax)	# tmp80, _16->op_sibling
	jmp	.L632	#
.L631:
	.loc 1 2202 0
	movq	-16(%rbp), %rax	# first, tmp81
	movzbl	36(%rax), %eax	# first_2(D)->op_flags, D.21750
	orl	$4, %eax	#, D.21750
	movl	%eax, %edx	# D.21750, D.21750
	movq	-16(%rbp), %rax	# first, tmp82
	movb	%dl, 36(%rax)	# D.21750, first_2(D)->op_flags
	.loc 1 2203 0
	movq	-16(%rbp), %rax	# first, tmp83
	movq	-24(%rbp), %rdx	# last, tmp84
	movq	%rdx, 40(%rax)	# tmp84, MEM[(struct LISTOP *)first_2(D)].op_first
.L632:
	.loc 1 2205 0
	movq	-16(%rbp), %rax	# first, tmp85
	movq	-24(%rbp), %rdx	# last, tmp86
	movq	%rdx, 48(%rax)	# tmp86, MEM[(struct LISTOP *)first_2(D)].op_last
	.loc 1 2206 0
	movq	-16(%rbp), %rax	# first, D.21747
.L627:
	.loc 1 2207 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE50:
	.size	Perl_append_elem, .-Perl_append_elem
	.globl	Perl_append_list
	.type	Perl_append_list, @function
Perl_append_list:
.LFB51:
	.loc 1 2211 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movq	%rsi, -16(%rbp)	# first, first
	movq	%rdx, -24(%rbp)	# last, last
	.loc 1 2212 0
	cmpq	$0, -16(%rbp)	#, first
	jne	.L634	#,
	.loc 1 2213 0
	movq	-24(%rbp), %rax	# last, D.21752
	jmp	.L635	#
.L634:
	.loc 1 2215 0
	cmpq	$0, -24(%rbp)	#, last
	jne	.L636	#,
	.loc 1 2216 0
	movq	-16(%rbp), %rax	# first, D.21752
	jmp	.L635	#
.L636:
	.loc 1 2218 0
	movq	-16(%rbp), %rax	# first, tmp77
	movzwl	32(%rax), %eax	# first_2(D)->op_type, D.21753
	movzwl	%ax, %edx	# D.21753, D.21754
	movl	-4(%rbp), %eax	# type, type.256
	cmpl	%eax, %edx	# type.256, D.21754
	je	.L637	#,
	.loc 1 2219 0
	movq	-24(%rbp), %rdx	# last, tmp78
	movq	-16(%rbp), %rcx	# first, tmp79
	movl	-4(%rbp), %eax	# type, tmp80
	movq	%rcx, %rsi	# tmp79,
	movl	%eax, %edi	# tmp80,
	call	Perl_prepend_elem	#
	jmp	.L635	#
.L637:
	.loc 1 2221 0
	movq	-24(%rbp), %rax	# last, tmp81
	movzwl	32(%rax), %eax	# last_3(D)->op_type, D.21753
	movzwl	%ax, %edx	# D.21753, D.21754
	movl	-4(%rbp), %eax	# type, type.257
	cmpl	%eax, %edx	# type.257, D.21754
	je	.L638	#,
	.loc 1 2222 0
	movq	-24(%rbp), %rdx	# last, tmp82
	movq	-16(%rbp), %rcx	# first, tmp83
	movl	-4(%rbp), %eax	# type, tmp84
	movq	%rcx, %rsi	# tmp83,
	movl	%eax, %edi	# tmp84,
	call	Perl_append_elem	#
	jmp	.L635	#
.L638:
	.loc 1 2224 0
	movq	-16(%rbp), %rax	# first, tmp85
	movq	48(%rax), %rax	# first_2(D)->op_last, D.21752
	movq	-24(%rbp), %rdx	# last, tmp86
	movq	40(%rdx), %rdx	# last_3(D)->op_first, D.21752
	movq	%rdx, 8(%rax)	# D.21752, _15->op_sibling
	.loc 1 2225 0
	movq	-24(%rbp), %rax	# last, tmp87
	movq	48(%rax), %rdx	# last_3(D)->op_last, D.21752
	movq	-16(%rbp), %rax	# first, tmp88
	movq	%rdx, 48(%rax)	# D.21752, first_2(D)->op_last
	.loc 1 2226 0
	movq	-16(%rbp), %rax	# first, tmp89
	movzbl	36(%rax), %eax	# first_2(D)->op_flags, D.21755
	movl	%eax, %edx	# D.21755, D.21756
	movq	-24(%rbp), %rax	# last, tmp90
	movzbl	36(%rax), %eax	# last_3(D)->op_flags, D.21755
	andl	$4, %eax	#, D.21756
	orl	%edx, %eax	# D.21756, D.21756
	movl	%eax, %edx	# D.21756, D.21755
	movq	-16(%rbp), %rax	# first, tmp91
	movb	%dl, 36(%rax)	# D.21755, first_2(D)->op_flags
	.loc 1 2228 0
	movq	-24(%rbp), %rax	# last, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_safesysfree	#
	.loc 1 2230 0
	movq	-16(%rbp), %rax	# first, D.21752
.L635:
	.loc 1 2231 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE51:
	.size	Perl_append_list, .-Perl_append_list
	.globl	Perl_prepend_elem
	.type	Perl_prepend_elem, @function
Perl_prepend_elem:
.LFB52:
	.loc 1 2235 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movq	%rsi, -16(%rbp)	# first, first
	movq	%rdx, -24(%rbp)	# last, last
	.loc 1 2236 0
	cmpq	$0, -16(%rbp)	#, first
	jne	.L640	#,
	.loc 1 2237 0
	movq	-24(%rbp), %rax	# last, D.21757
	jmp	.L641	#
.L640:
	.loc 1 2239 0
	cmpq	$0, -24(%rbp)	#, last
	jne	.L642	#,
	.loc 1 2240 0
	movq	-16(%rbp), %rax	# first, D.21757
	jmp	.L641	#
.L642:
	.loc 1 2242 0
	movq	-24(%rbp), %rax	# last, tmp80
	movzwl	32(%rax), %eax	# last_3(D)->op_type, D.21758
	movzwl	%ax, %edx	# D.21758, D.21759
	movl	-4(%rbp), %eax	# type, type.258
	cmpl	%eax, %edx	# type.258, D.21759
	jne	.L643	#,
	.loc 1 2243 0
	cmpl	$141, -4(%rbp)	#, type
	jne	.L644	#,
	.loc 1 2244 0
	movq	-24(%rbp), %rax	# last, tmp81
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)last_3(D)].op_first, D.21757
	movq	8(%rax), %rdx	# _10->op_sibling, D.21757
	movq	-16(%rbp), %rax	# first, tmp82
	movq	%rdx, 8(%rax)	# D.21757, first_2(D)->op_sibling
	.loc 1 2245 0
	movq	-24(%rbp), %rax	# last, tmp83
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)last_3(D)].op_first, D.21757
	movq	-16(%rbp), %rdx	# first, tmp84
	movq	%rdx, 8(%rax)	# tmp84, _12->op_sibling
	.loc 1 2246 0
	movq	-16(%rbp), %rax	# first, tmp85
	movzbl	36(%rax), %eax	# first_2(D)->op_flags, D.21760
	movzbl	%al, %eax	# D.21760, D.21761
	andl	$8, %eax	#, D.21761
	testl	%eax, %eax	# D.21761
	jne	.L646	#,
	.loc 1 2247 0
	movq	-24(%rbp), %rax	# last, tmp86
	movzbl	36(%rax), %eax	# last_3(D)->op_flags, D.21760
	andl	$-9, %eax	#, D.21760
	movl	%eax, %edx	# D.21760, D.21760
	movq	-24(%rbp), %rax	# last, tmp87
	movb	%dl, 36(%rax)	# D.21760, last_3(D)->op_flags
	jmp	.L646	#
.L644:
	.loc 1 2250 0
	movq	-24(%rbp), %rax	# last, tmp88
	movzbl	36(%rax), %eax	# last_3(D)->op_flags, D.21760
	movzbl	%al, %eax	# D.21760, D.21761
	andl	$4, %eax	#, D.21761
	testl	%eax, %eax	# D.21761
	jne	.L647	#,
	.loc 1 2251 0
	movq	-24(%rbp), %rax	# last, tmp89
	movq	-16(%rbp), %rdx	# first, tmp90
	movq	%rdx, 48(%rax)	# tmp90, MEM[(struct LISTOP *)last_3(D)].op_last
	.loc 1 2252 0
	movq	-24(%rbp), %rax	# last, tmp91
	movzbl	36(%rax), %eax	# last_3(D)->op_flags, D.21760
	orl	$4, %eax	#, D.21760
	movl	%eax, %edx	# D.21760, D.21760
	movq	-24(%rbp), %rax	# last, tmp92
	movb	%dl, 36(%rax)	# D.21760, last_3(D)->op_flags
.L647:
	.loc 1 2254 0
	movq	-24(%rbp), %rax	# last, tmp93
	movq	40(%rax), %rdx	# MEM[(struct LISTOP *)last_3(D)].op_first, D.21757
	movq	-16(%rbp), %rax	# first, tmp94
	movq	%rdx, 8(%rax)	# D.21757, first_2(D)->op_sibling
	.loc 1 2255 0
	movq	-24(%rbp), %rax	# last, tmp95
	movq	-16(%rbp), %rdx	# first, tmp96
	movq	%rdx, 40(%rax)	# tmp96, MEM[(struct LISTOP *)last_3(D)].op_first
.L646:
	.loc 1 2257 0
	movq	-24(%rbp), %rax	# last, tmp97
	movzbl	36(%rax), %eax	# last_3(D)->op_flags, D.21760
	orl	$4, %eax	#, D.21760
	movl	%eax, %edx	# D.21760, D.21760
	movq	-24(%rbp), %rax	# last, tmp98
	movb	%dl, 36(%rax)	# D.21760, last_3(D)->op_flags
	.loc 1 2258 0
	movq	-24(%rbp), %rax	# last, D.21757
	jmp	.L641	#
.L643:
	.loc 1 2261 0
	movq	-24(%rbp), %rcx	# last, tmp99
	movq	-16(%rbp), %rdx	# first, tmp100
	movl	-4(%rbp), %eax	# type, tmp101
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp101,
	call	Perl_newLISTOP	#
.L641:
	.loc 1 2262 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE52:
	.size	Perl_prepend_elem, .-Perl_prepend_elem
	.globl	Perl_newNULLLIST
	.type	Perl_newNULLLIST, @function
Perl_newNULLLIST:
.LFB53:
	.loc 1 2268 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	.loc 1 2269 0
	movl	$0, %esi	#,
	movl	$1, %edi	#,
	call	Perl_newOP	#
	.loc 1 2270 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE53:
	.size	Perl_newNULLLIST, .-Perl_newNULLLIST
	.globl	Perl_force_list
	.type	Perl_force_list, @function
Perl_force_list:
.LFB54:
	.loc 1 2274 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 2275 0
	cmpq	$0, -8(%rbp)	#, o
	je	.L651	#,
	.loc 1 2275 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# o, tmp62
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.21763
	cmpw	$141, %ax	#, D.21763
	je	.L652	#,
.L651:
	.loc 1 2276 0 is_stmt 1
	movq	-8(%rbp), %rax	# o, tmp63
	movl	$0, %ecx	#,
	movq	%rax, %rdx	# tmp63,
	movl	$0, %esi	#,
	movl	$141, %edi	#,
	call	Perl_newLISTOP	#
	movq	%rax, -8(%rbp)	# tmp64, o
.L652:
	.loc 1 2277 0
	movq	-8(%rbp), %rax	# o, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_op_null	#
	.loc 1 2278 0
	movq	-8(%rbp), %rax	# o, D.21764
	.loc 1 2279 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE54:
	.size	Perl_force_list, .-Perl_force_list
	.globl	Perl_newLISTOP
	.type	Perl_newLISTOP, @function
Perl_newLISTOP:
.LFB55:
	.loc 1 2283 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# first, first
	movq	%rcx, -40(%rbp)	# last, last
	.loc 1 2286 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -16(%rbp)	# tmp74, listop
	movq	-16(%rbp), %rax	# listop, tmp75
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp75,
	call	memset	#
	.loc 1 2288 0
	movl	-20(%rbp), %eax	# type, tmp76
	movl	%eax, %edx	# tmp76, D.21765
	movq	-16(%rbp), %rax	# listop, tmp77
	movw	%dx, 32(%rax)	# D.21765, listop_5->op_type
	.loc 1 2289 0
	movl	-20(%rbp), %eax	# type, tmp79
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21766
	movq	-16(%rbp), %rax	# listop, tmp80
	movq	%rdx, 16(%rax)	# D.21766, listop_5->op_ppaddr
	.loc 1 2290 0
	cmpq	$0, -32(%rbp)	#, first
	jne	.L655	#,
	.loc 1 2290 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, last
	je	.L656	#,
.L655:
	.loc 1 2291 0 is_stmt 1
	orl	$4, -24(%rbp)	#, flags
.L656:
	.loc 1 2292 0
	movl	-24(%rbp), %eax	# flags, tmp81
	movl	%eax, %edx	# tmp81, D.21767
	movq	-16(%rbp), %rax	# listop, tmp82
	movb	%dl, 36(%rax)	# D.21767, listop_5->op_flags
	.loc 1 2294 0
	cmpq	$0, -40(%rbp)	#, last
	jne	.L657	#,
	.loc 1 2294 0 is_stmt 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, first
	je	.L657	#,
	.loc 1 2295 0 is_stmt 1
	movq	-32(%rbp), %rax	# first, tmp83
	movq	%rax, -40(%rbp)	# tmp83, last
	jmp	.L658	#
.L657:
	.loc 1 2296 0
	cmpq	$0, -32(%rbp)	#, first
	jne	.L659	#,
	.loc 1 2296 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)	#, last
	je	.L659	#,
	.loc 1 2297 0 is_stmt 1
	movq	-40(%rbp), %rax	# last, tmp84
	movq	%rax, -32(%rbp)	# tmp84, first
	jmp	.L658	#
.L659:
	.loc 1 2298 0
	cmpq	$0, -32(%rbp)	#, first
	je	.L658	#,
	.loc 1 2299 0
	movq	-32(%rbp), %rax	# first, tmp85
	movq	-40(%rbp), %rdx	# last, tmp86
	movq	%rdx, 8(%rax)	# tmp86, first_9(D)->op_sibling
.L658:
	.loc 1 2300 0
	movq	-16(%rbp), %rax	# listop, tmp87
	movq	-32(%rbp), %rdx	# first, tmp88
	movq	%rdx, 40(%rax)	# tmp88, listop_5->op_first
	.loc 1 2301 0
	movq	-16(%rbp), %rax	# listop, tmp89
	movq	-40(%rbp), %rdx	# last, tmp90
	movq	%rdx, 48(%rax)	# tmp90, listop_5->op_last
	.loc 1 2302 0
	cmpl	$141, -20(%rbp)	#, type
	jne	.L660	#,
.LBB26:
	.loc 1 2304 0
	movl	$0, %esi	#,
	movl	$3, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -8(%rbp)	# tmp91, pushop
	.loc 1 2305 0
	movq	-8(%rbp), %rax	# pushop, tmp92
	movq	-32(%rbp), %rdx	# first, tmp93
	movq	%rdx, 8(%rax)	# tmp93, pushop_16->op_sibling
	.loc 1 2306 0
	movq	-16(%rbp), %rax	# listop, tmp94
	movq	-8(%rbp), %rdx	# pushop, tmp95
	movq	%rdx, 40(%rax)	# tmp95, listop_5->op_first
	.loc 1 2307 0
	movq	-16(%rbp), %rax	# listop, tmp96
	movzbl	36(%rax), %eax	# listop_5->op_flags, D.21767
	orl	$4, %eax	#, D.21767
	movl	%eax, %edx	# D.21767, D.21767
	movq	-16(%rbp), %rax	# listop, tmp97
	movb	%dl, 36(%rax)	# D.21767, listop_5->op_flags
	.loc 1 2308 0
	cmpq	$0, -40(%rbp)	#, last
	jne	.L660	#,
	.loc 1 2309 0
	movq	-16(%rbp), %rax	# listop, tmp98
	movq	-8(%rbp), %rdx	# pushop, tmp99
	movq	%rdx, 48(%rax)	# tmp99, listop_5->op_last
.L660:
.LBE26:
	.loc 1 2312 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.260
	testq	%rax, %rax	# PL_op_mask.260
	je	.L661	#,
	.loc 1 2312 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.261
	movl	-20(%rbp), %eax	# type, tmp100
	cltq
	addq	%rdx, %rax	# PL_op_mask.261, D.21769
	movzbl	(%rax), %eax	# *_22, D.21770
	testb	%al, %al	# D.21770
	je	.L661	#,
	movq	-16(%rbp), %rax	# listop, tmp101
	movq	%rax, %rdi	# tmp101,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp103
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21769
	movq	%rax, %rsi	# D.21769,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.259
	jmp	.L662	#
.L661:
	.loc 1 2312 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp105
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21771
	movq	-16(%rbp), %rdx	# listop, tmp106
	movq	%rdx, %rdi	# tmp106,
	call	*%rax	# D.21771
.L662:
	.loc 1 2313 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE55:
	.size	Perl_newLISTOP, .-Perl_newLISTOP
	.globl	Perl_newOP
	.type	Perl_newOP, @function
Perl_newOP:
.LFB56:
	.loc 1 2317 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	.loc 1 2319 0
	movl	$40, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp79, o
	movq	-8(%rbp), %rax	# o, tmp80
	movl	$40, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp80,
	call	memset	#
	.loc 1 2320 0
	movl	-20(%rbp), %eax	# type, tmp81
	movl	%eax, %edx	# tmp81, D.21773
	movq	-8(%rbp), %rax	# o, tmp82
	movw	%dx, 32(%rax)	# D.21773, o_2->op_type
	.loc 1 2321 0
	movl	-20(%rbp), %eax	# type, tmp84
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21774
	movq	-8(%rbp), %rax	# o, tmp85
	movq	%rdx, 16(%rax)	# D.21774, o_2->op_ppaddr
	.loc 1 2322 0
	movl	-24(%rbp), %eax	# flags, tmp86
	movl	%eax, %edx	# tmp86, D.21775
	movq	-8(%rbp), %rax	# o, tmp87
	movb	%dl, 36(%rax)	# D.21775, o_2->op_flags
	.loc 1 2324 0
	movq	-8(%rbp), %rax	# o, tmp88
	movq	-8(%rbp), %rdx	# o, tmp89
	movq	%rdx, (%rax)	# tmp89, o_2->op_next
	.loc 1 2325 0
	movl	-24(%rbp), %eax	# flags, tmp90
	sarl	$8, %eax	#, D.21776
	movl	%eax, %edx	# D.21776, D.21775
	movq	-8(%rbp), %rax	# o, tmp91
	movb	%dl, 37(%rax)	# D.21775, o_2->op_private
	.loc 1 2326 0
	movl	-20(%rbp), %eax	# type, tmp93
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21777
	andl	$4, %eax	#, D.21777
	testl	%eax, %eax	# D.21777
	je	.L665	#,
	.loc 1 2327 0
	movq	-8(%rbp), %rax	# o, tmp94
	movq	%rax, %rdi	# tmp94,
	call	Perl_scalar	#
.L665:
	.loc 1 2328 0
	movl	-20(%rbp), %eax	# type, tmp96
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21777
	andl	$8, %eax	#, D.21777
	testl	%eax, %eax	# D.21777
	je	.L666	#,
	.loc 1 2329 0
	movl	-20(%rbp), %eax	# type, tmp97
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp97,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# o, tmp98
	movq	%rax, 24(%rdx)	# D.21778, o_2->op_targ
.L666:
	.loc 1 2330 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.263
	testq	%rax, %rax	# PL_op_mask.263
	je	.L667	#,
	.loc 1 2330 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.264
	movl	-20(%rbp), %eax	# type, tmp99
	cltq
	addq	%rdx, %rax	# PL_op_mask.264, D.21780
	movzbl	(%rax), %eax	# *_18, D.21781
	testb	%al, %al	# D.21781
	je	.L667	#,
	movq	-8(%rbp), %rax	# o, tmp100
	movq	%rax, %rdi	# tmp100,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp102
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21780
	movq	%rax, %rsi	# D.21780,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.262
	jmp	.L668	#
.L667:
	.loc 1 2330 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp104
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21782
	movq	-8(%rbp), %rdx	# o, tmp105
	movq	%rdx, %rdi	# tmp105,
	call	*%rax	# D.21782
.L668:
	.loc 1 2331 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE56:
	.size	Perl_newOP, .-Perl_newOP
	.globl	Perl_newUNOP
	.type	Perl_newUNOP, @function
Perl_newUNOP:
.LFB57:
	.loc 1 2335 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# first, first
	.loc 1 2338 0
	cmpq	$0, -32(%rbp)	#, first
	jne	.L671	#,
	.loc 1 2339 0
	movl	$0, %esi	#,
	movl	$1, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -32(%rbp)	# tmp81, first
.L671:
	.loc 1 2340 0
	movl	-20(%rbp), %eax	# type, tmp83
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21785
	andl	$1, %eax	#, D.21785
	testl	%eax, %eax	# D.21785
	je	.L672	#,
	.loc 1 2341 0
	movq	-32(%rbp), %rax	# first, tmp84
	movq	%rax, %rdi	# tmp84,
	call	Perl_force_list	#
	movq	%rax, -32(%rbp)	# tmp85, first
.L672:
	.loc 1 2343 0
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp86, unop
	movq	-8(%rbp), %rax	# unop, tmp87
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp87,
	call	memset	#
	.loc 1 2344 0
	movl	-20(%rbp), %eax	# type, tmp88
	movl	%eax, %edx	# tmp88, D.21786
	movq	-8(%rbp), %rax	# unop, tmp89
	movw	%dx, 32(%rax)	# D.21786, unop_11->op_type
	.loc 1 2345 0
	movl	-20(%rbp), %eax	# type, tmp91
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21787
	movq	-8(%rbp), %rax	# unop, tmp92
	movq	%rdx, 16(%rax)	# D.21787, unop_11->op_ppaddr
	.loc 1 2346 0
	movq	-8(%rbp), %rax	# unop, tmp93
	movq	-32(%rbp), %rdx	# first, tmp94
	movq	%rdx, 40(%rax)	# tmp94, unop_11->op_first
	.loc 1 2347 0
	movl	-24(%rbp), %eax	# flags, tmp95
	orl	$4, %eax	#, D.21788
	movl	%eax, %edx	# D.21788, D.21789
	movq	-8(%rbp), %rax	# unop, tmp96
	movb	%dl, 36(%rax)	# D.21789, unop_11->op_flags
	.loc 1 2348 0
	movl	-24(%rbp), %eax	# flags, tmp97
	sarl	$8, %eax	#, D.21790
	orl	$1, %eax	#, D.21788
	movl	%eax, %edx	# D.21788, D.21789
	movq	-8(%rbp), %rax	# unop, tmp98
	movb	%dl, 37(%rax)	# D.21789, unop_11->op_private
	.loc 1 2349 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.266
	testq	%rax, %rax	# PL_op_mask.266
	je	.L673	#,
	.loc 1 2349 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.267
	movl	-20(%rbp), %eax	# type, tmp99
	cltq
	addq	%rdx, %rax	# PL_op_mask.267, D.21792
	movzbl	(%rax), %eax	# *_25, D.21793
	testb	%al, %al	# D.21793
	je	.L673	#,
	movq	-8(%rbp), %rax	# unop, tmp100
	movq	%rax, %rdi	# tmp100,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp102
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21792
	movq	%rax, %rsi	# D.21792,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.265
	jmp	.L674	#
.L673:
	.loc 1 2349 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp104
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21794
	movq	-8(%rbp), %rdx	# unop, tmp105
	movq	%rdx, %rdi	# tmp105,
	call	*%rax	# D.21794
.L674:
	.loc 1 2349 0 discriminator 3
	movq	%rax, -8(%rbp)	# iftmp.265, unop
	.loc 1 2350 0 is_stmt 1 discriminator 3
	movq	-8(%rbp), %rax	# unop, tmp106
	movq	(%rax), %rax	# unop_31->op_next, D.21784
	testq	%rax, %rax	# D.21784
	je	.L675	#,
	.loc 1 2351 0
	movq	-8(%rbp), %rax	# unop, D.21784
	jmp	.L676	#
.L675:
	.loc 1 2353 0
	movq	-8(%rbp), %rax	# unop, tmp107
	movq	%rax, %rdi	# tmp107,
	call	Perl_fold_constants	#
.L676:
	.loc 1 2354 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE57:
	.size	Perl_newUNOP, .-Perl_newUNOP
	.globl	Perl_newBINOP
	.type	Perl_newBINOP, @function
Perl_newBINOP:
.LFB58:
	.loc 1 2358 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# first, first
	movq	%rcx, -40(%rbp)	# last, last
	.loc 1 2360 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp87, binop
	movq	-8(%rbp), %rax	# binop, tmp88
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp88,
	call	memset	#
	.loc 1 2362 0
	cmpq	$0, -32(%rbp)	#, first
	jne	.L678	#,
	.loc 1 2363 0
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -32(%rbp)	# tmp89, first
.L678:
	.loc 1 2365 0
	movl	-20(%rbp), %eax	# type, tmp90
	movl	%eax, %edx	# tmp90, D.21796
	movq	-8(%rbp), %rax	# binop, tmp91
	movw	%dx, 32(%rax)	# D.21796, binop_4->op_type
	.loc 1 2366 0
	movl	-20(%rbp), %eax	# type, tmp93
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21797
	movq	-8(%rbp), %rax	# binop, tmp94
	movq	%rdx, 16(%rax)	# D.21797, binop_4->op_ppaddr
	.loc 1 2367 0
	movq	-8(%rbp), %rax	# binop, tmp95
	movq	-32(%rbp), %rdx	# first, tmp96
	movq	%rdx, 40(%rax)	# tmp96, binop_4->op_first
	.loc 1 2368 0
	movl	-24(%rbp), %eax	# flags, tmp97
	orl	$4, %eax	#, D.21798
	movl	%eax, %edx	# D.21798, D.21799
	movq	-8(%rbp), %rax	# binop, tmp98
	movb	%dl, 36(%rax)	# D.21799, binop_4->op_flags
	.loc 1 2369 0
	cmpq	$0, -40(%rbp)	#, last
	jne	.L679	#,
	.loc 1 2370 0
	movq	-32(%rbp), %rax	# first, tmp99
	movq	%rax, -40(%rbp)	# tmp99, last
	.loc 1 2371 0
	movl	-24(%rbp), %eax	# flags, tmp100
	sarl	$8, %eax	#, D.21800
	orl	$1, %eax	#, D.21798
	movl	%eax, %edx	# D.21798, D.21799
	movq	-8(%rbp), %rax	# binop, tmp101
	movb	%dl, 37(%rax)	# D.21799, binop_4->op_private
	jmp	.L680	#
.L679:
	.loc 1 2374 0
	movl	-24(%rbp), %eax	# flags, tmp102
	sarl	$8, %eax	#, D.21800
	orl	$2, %eax	#, D.21798
	movl	%eax, %edx	# D.21798, D.21799
	movq	-8(%rbp), %rax	# binop, tmp103
	movb	%dl, 37(%rax)	# D.21799, binop_4->op_private
	.loc 1 2375 0
	movq	-32(%rbp), %rax	# first, tmp104
	movq	-40(%rbp), %rdx	# last, tmp105
	movq	%rdx, 8(%rax)	# tmp105, first_1->op_sibling
.L680:
	.loc 1 2378 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.269
	testq	%rax, %rax	# PL_op_mask.269
	je	.L681	#,
	.loc 1 2378 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.270
	movl	-20(%rbp), %eax	# type, tmp106
	cltq
	addq	%rdx, %rax	# PL_op_mask.270, D.21802
	movzbl	(%rax), %eax	# *_27, D.21803
	testb	%al, %al	# D.21803
	je	.L681	#,
	movq	-8(%rbp), %rax	# binop, tmp107
	movq	%rax, %rdi	# tmp107,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp109
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21802
	movq	%rax, %rsi	# D.21802,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.268
	jmp	.L682	#
.L681:
	.loc 1 2378 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp111
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21804
	movq	-8(%rbp), %rdx	# binop, tmp112
	movq	%rdx, %rdi	# tmp112,
	call	*%rax	# D.21804
.L682:
	.loc 1 2378 0 discriminator 3
	movq	%rax, -8(%rbp)	# iftmp.268, binop
	.loc 1 2379 0 is_stmt 1 discriminator 3
	movq	-8(%rbp), %rax	# binop, tmp113
	movq	(%rax), %rax	# binop_33->op_next, D.21795
	testq	%rax, %rax	# D.21795
	jne	.L683	#,
	.loc 1 2379 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# binop, tmp114
	movzwl	32(%rax), %edx	# binop_33->op_type, D.21796
	movl	-20(%rbp), %eax	# type, tmp115
	cmpw	%ax, %dx	# D.21796, D.21796
	je	.L684	#,
.L683:
	.loc 1 2380 0 is_stmt 1
	movq	-8(%rbp), %rax	# binop, D.21795
	jmp	.L685	#
.L684:
	.loc 1 2382 0
	movq	-8(%rbp), %rax	# binop, tmp116
	movq	40(%rax), %rax	# binop_33->op_first, D.21795
	movq	8(%rax), %rdx	# _37->op_sibling, D.21795
	movq	-8(%rbp), %rax	# binop, tmp117
	movq	%rdx, 48(%rax)	# D.21795, binop_33->op_last
	.loc 1 2384 0
	movq	-8(%rbp), %rax	# binop, tmp118
	movq	%rax, %rdi	# tmp118,
	call	Perl_fold_constants	#
.L685:
	.loc 1 2385 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE58:
	.size	Perl_newBINOP, .-Perl_newBINOP
	.type	uvcompare, @function
uvcompare:
.LFB59:
	.loc 1 2389 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# a, a
	movq	%rsi, -16(%rbp)	# b, b
	.loc 1 2390 0
	movq	-8(%rbp), %rax	# a, tmp73
	movq	(%rax), %rdx	# MEM[(UV *)a_2(D)], D.21806
	movq	-16(%rbp), %rax	# b, tmp74
	movq	(%rax), %rax	# MEM[(UV *)b_4(D)], D.21806
	cmpq	%rax, %rdx	# D.21806, D.21806
	jae	.L687	#,
	.loc 1 2391 0
	movl	$-1, %eax	#, D.21805
	jmp	.L688	#
.L687:
	.loc 1 2392 0
	movq	-8(%rbp), %rax	# a, tmp75
	movq	(%rax), %rdx	# MEM[(UV *)a_2(D)], D.21806
	movq	-16(%rbp), %rax	# b, tmp76
	movq	(%rax), %rax	# MEM[(UV *)b_4(D)], D.21806
	cmpq	%rax, %rdx	# D.21806, D.21806
	jbe	.L689	#,
	.loc 1 2393 0
	movl	$1, %eax	#, D.21805
	jmp	.L688	#
.L689:
	.loc 1 2394 0
	movq	-8(%rbp), %rax	# a, tmp77
	addq	$8, %rax	#, D.21807
	movq	(%rax), %rdx	# *_10, D.21806
	movq	-16(%rbp), %rax	# b, tmp78
	movq	(%rax), %rax	# MEM[(UV *)b_4(D)], D.21806
	addq	$1, %rax	#, D.21806
	cmpq	%rax, %rdx	# D.21806, D.21806
	jae	.L690	#,
	.loc 1 2395 0
	movl	$-1, %eax	#, D.21805
	jmp	.L688	#
.L690:
	.loc 1 2396 0
	movq	-8(%rbp), %rax	# a, tmp79
	addq	$8, %rax	#, D.21807
	movq	(%rax), %rdx	# *_15, D.21806
	movq	-16(%rbp), %rax	# b, tmp80
	movq	(%rax), %rax	# MEM[(UV *)b_4(D)], D.21806
	addq	$1, %rax	#, D.21806
	cmpq	%rax, %rdx	# D.21806, D.21806
	jbe	.L691	#,
	.loc 1 2397 0
	movl	$1, %eax	#, D.21805
	jmp	.L688	#
.L691:
	.loc 1 2398 0
	movl	$0, %eax	#, D.21805
.L688:
	.loc 1 2399 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE59:
	.size	uvcompare, .-uvcompare
	.section	.rodata
.LC45:
	.string	"# comment\n"
.LC46:
	.string	""
.LC47:
	.string	"%04lx\t%04lx\tXXXX\n"
.LC48:
	.string	"%04lx\t\tXXXX\n"
.LC49:
	.string	"%04lx\t%04lx\t%04lx\n"
.LC50:
	.string	"%04lx\t\t%04lx\n"
.LC51:
	.string	"utf8"
.LC52:
	.string	"FINAL"
	.text
	.globl	Perl_pmtrans
	.type	Perl_pmtrans, @function
Perl_pmtrans:
.LFB60:
	.loc 1 2403 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$312, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -312(%rbp)	# o, o
	movq	%rsi, -320(%rbp)	# expr, expr
	movq	%rdx, -328(%rbp)	# repl, repl
	.loc 1 2403 0
	movq	%fs:40, %rax	#, tmp618
	movq	%rax, -40(%rbp)	# tmp618, D.21826
	xorl	%eax, %eax	# tmp618
	.loc 1 2404 0
	movq	-320(%rbp), %rax	# expr, tmp397
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr_87(D)].op_sv, tmp398
	movq	%rax, -120(%rbp)	# tmp398, tstr
	.loc 1 2405 0
	movq	-328(%rbp), %rax	# repl, tmp399
	movq	40(%rax), %rax	# MEM[(struct SVOP *)repl_89(D)].op_sv, tmp400
	movq	%rax, -112(%rbp)	# tmp400, rstr
	.loc 1 2408 0
	movq	-120(%rbp), %rax	# tstr, tmp401
	movl	12(%rax), %eax	# tstr_88->sv_flags, D.21809
	andl	$262144, %eax	#, D.21809
	testl	%eax, %eax	# D.21809
	je	.L693	#,
	.loc 1 2408 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# tstr, tmp402
	movq	(%rax), %rax	# tstr_88->sv_any, D.21810
	movq	8(%rax), %rax	# MEM[(struct XPV *)_93].xpv_cur, tlen.272
	movq	%rax, -248(%rbp)	# tlen.272, tlen
	movq	-120(%rbp), %rax	# tstr, tmp403
	movq	(%rax), %rax	# tstr_88->sv_any, D.21810
	movq	(%rax), %rax	# MEM[(struct XPV *)_95].xpv_pv, iftmp.271
	jmp	.L694	#
.L693:
	.loc 1 2408 0 discriminator 2
	leaq	-248(%rbp), %rcx	#, tmp404
	movq	-120(%rbp), %rax	# tstr, tmp405
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp404,
	movq	%rax, %rdi	# tmp405,
	call	Perl_sv_2pv_flags	#
.L694:
	.loc 1 2408 0 discriminator 3
	movq	%rax, -224(%rbp)	# iftmp.271, t
	.loc 1 2409 0 is_stmt 1 discriminator 3
	movq	-112(%rbp), %rax	# rstr, tmp406
	movl	12(%rax), %eax	# rstr_90->sv_flags, D.21809
	andl	$262144, %eax	#, D.21809
	testl	%eax, %eax	# D.21809
	je	.L695	#,
	.loc 1 2409 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# rstr, tmp407
	movq	(%rax), %rax	# rstr_90->sv_any, D.21810
	movq	8(%rax), %rax	# MEM[(struct XPV *)_101].xpv_cur, rlen.274
	movq	%rax, -240(%rbp)	# rlen.274, rlen
	movq	-112(%rbp), %rax	# rstr, tmp408
	movq	(%rax), %rax	# rstr_90->sv_any, D.21810
	movq	(%rax), %rax	# MEM[(struct XPV *)_103].xpv_pv, iftmp.273
	jmp	.L696	#
.L695:
	.loc 1 2409 0 discriminator 2
	leaq	-240(%rbp), %rcx	#, tmp409
	movq	-112(%rbp), %rax	# rstr, tmp410
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp409,
	movq	%rax, %rdi	# tmp410,
	call	Perl_sv_2pv_flags	#
.L696:
	.loc 1 2409 0 discriminator 3
	movq	%rax, -216(%rbp)	# iftmp.273, r
	.loc 1 2415 0 is_stmt 1 discriminator 3
	movl	$0, -288(%rbp)	#, grows
	.loc 1 2418 0 discriminator 3
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.275
	orb	$1, %ah	#, PL_hints.276
	movl	%eax, PL_hints(%rip)	# PL_hints.276, PL_hints
	.loc 1 2419 0 discriminator 3
	movq	-312(%rbp), %rax	# o, tmp411
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$32, %eax	#, tmp412
	movl	%eax, -268(%rbp)	# tmp412, complement
	.loc 1 2420 0 discriminator 3
	movq	-312(%rbp), %rax	# o, tmp413
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$16, %eax	#, tmp414
	movl	%eax, -292(%rbp)	# tmp414, del
	.loc 1 2421 0 discriminator 3
	movq	-312(%rbp), %rax	# o, tmp415
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$8, %eax	#, tmp416
	movl	%eax, -264(%rbp)	# tmp416, squash
	.loc 1 2423 0 discriminator 3
	movq	-120(%rbp), %rax	# tstr, tmp417
	movl	12(%rax), %eax	# tstr_88->sv_flags, D.21809
	andl	$536870912, %eax	#, D.21809
	testl	%eax, %eax	# D.21809
	je	.L697	#,
	.loc 1 2424 0
	movq	-312(%rbp), %rax	# o, tmp418
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$1, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp419
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
.L697:
	.loc 1 2426 0
	movq	-112(%rbp), %rax	# rstr, tmp420
	movl	12(%rax), %eax	# rstr_90->sv_flags, D.21809
	andl	$536870912, %eax	#, D.21809
	testl	%eax, %eax	# D.21809
	je	.L698	#,
	.loc 1 2427 0
	movq	-312(%rbp), %rax	# o, tmp421
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$2, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp422
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
.L698:
	.loc 1 2429 0
	movq	-312(%rbp), %rax	# o, tmp423
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$3, %eax	#, D.21812
	testl	%eax, %eax	# D.21812
	je	.L699	#,
.LBB27:
	.loc 1 2430 0
	movl	$10, %esi	#,
	movl	$.LC45, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -104(%rbp)	# tmp424, listsv
	.loc 1 2431 0
	movq	$0, -208(%rbp)	#, transv
	.loc 1 2432 0
	movq	-248(%rbp), %rdx	# tlen, tlen.277
	movq	-224(%rbp), %rax	# t, tmp428
	addq	%rdx, %rax	# tlen.277, tmp427
	movq	%rax, -200(%rbp)	# tmp427, tend
	.loc 1 2433 0
	movq	-240(%rbp), %rdx	# rlen, rlen.278
	movq	-216(%rbp), %rax	# r, tmp432
	addq	%rdx, %rax	# rlen.278, tmp431
	movq	%rax, -192(%rbp)	# tmp431, rend
	.loc 1 2435 0
	movq	$1, -184(%rbp)	#, tfirst
	.loc 1 2436 0
	movq	$0, -176(%rbp)	#, tlast
	.loc 1 2438 0
	movq	$1, -168(%rbp)	#, rfirst
	.loc 1 2439 0
	movq	$0, -160(%rbp)	#, rlast
	.loc 1 2442 0
	movl	$0, -260(%rbp)	#, none
	.loc 1 2443 0
	movl	$0, -284(%rbp)	#, max
	.loc 1 2445 0
	movl	$0, -276(%rbp)	#, havefinal
	.loc 1 2446 0
	movl	$0, -272(%rbp)	#, final
	.loc 1 2447 0
	movq	-312(%rbp), %rax	# o, tmp433
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$1, %eax	#, tmp434
	movl	%eax, -256(%rbp)	# tmp434, from_utf
	.loc 1 2448 0
	movq	-312(%rbp), %rax	# o, tmp435
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	movzbl	%al, %eax	# D.21811, D.21812
	andl	$2, %eax	#, tmp436
	movl	%eax, -252(%rbp)	# tmp436, to_utf
	.loc 1 2449 0
	movq	$0, -144(%rbp)	#, tsave
	.loc 1 2450 0
	movq	$0, -136(%rbp)	#, rsave
	.loc 1 2452 0
	cmpl	$0, -256(%rbp)	#, from_utf
	jne	.L700	#,
.LBB28:
	.loc 1 2453 0
	movq	-248(%rbp), %rax	# tlen, tlen.279
	movq	%rax, -232(%rbp)	# tlen.279, len
	.loc 1 2454 0
	leaq	-232(%rbp), %rdx	#, tmp437
	movq	-224(%rbp), %rax	# t, tmp438
	movq	%rdx, %rsi	# tmp437,
	movq	%rax, %rdi	# tmp438,
	call	Perl_bytes_to_utf8	#
	movq	%rax, -224(%rbp)	# tmp439, t
	movq	-224(%rbp), %rax	# t, tmp440
	movq	%rax, -144(%rbp)	# tmp440, tsave
	.loc 1 2455 0
	movq	-232(%rbp), %rdx	# len, len.280
	movq	-224(%rbp), %rax	# t, tmp444
	addq	%rdx, %rax	# len.280, tmp443
	movq	%rax, -200(%rbp)	# tmp443, tend
.L700:
.LBE28:
	.loc 1 2457 0
	cmpl	$0, -252(%rbp)	#, to_utf
	jne	.L701	#,
	.loc 1 2457 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rax	# rlen, rlen.281
	testq	%rax, %rax	# rlen.281
	je	.L701	#,
.LBB29:
	.loc 1 2458 0 is_stmt 1
	movq	-240(%rbp), %rax	# rlen, rlen.282
	movq	%rax, -232(%rbp)	# rlen.282, len
	.loc 1 2459 0
	leaq	-232(%rbp), %rdx	#, tmp445
	movq	-216(%rbp), %rax	# r, tmp446
	movq	%rdx, %rsi	# tmp445,
	movq	%rax, %rdi	# tmp446,
	call	Perl_bytes_to_utf8	#
	movq	%rax, -216(%rbp)	# tmp447, r
	movq	-216(%rbp), %rax	# r, tmp448
	movq	%rax, -136(%rbp)	# tmp448, rsave
	.loc 1 2460 0
	movq	-232(%rbp), %rdx	# len, len.283
	movq	-216(%rbp), %rax	# r, tmp452
	addq	%rdx, %rax	# len.283, tmp451
	movq	%rax, -192(%rbp)	# tmp451, rend
.L701:
.LBE29:
	.loc 1 2469 0
	cmpl	$0, -268(%rbp)	#, complement
	je	.L702	#,
.LBB30:
	.loc 1 2472 0
	movq	$0, -128(%rbp)	#, nextmin
	.loc 1 2473 0
	movq	-248(%rbp), %rax	# tlen, tlen.284
	salq	$4, %rax	#, D.21813
	movq	%rax, %rdi	# D.21813,
	call	Perl_safesysmalloc	#
	movq	%rax, -96(%rbp)	# tmp453, cp
	.loc 1 2474 0
	movl	$0, %ebx	#, i
	.loc 1 2475 0
	movl	$0, %esi	#,
	movl	$.LC46, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -208(%rbp)	# tmp454, transv
	.loc 1 2476 0
	jmp	.L703	#
.L706:
	.loc 1 2477 0
	movslq	%ebx, %rax	# i, D.21813
	salq	$4, %rax	#, D.21813
	movq	%rax, %rdx	# D.21813, D.21813
	movq	-96(%rbp), %rax	# cp, tmp455
	leaq	(%rdx,%rax), %r12	#, D.21814
	movq	-200(%rbp), %rdx	# tend, tend.285
	movq	-224(%rbp), %rax	# t, t.286
	subq	%rax, %rdx	# t.286, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp456
	movq	-224(%rbp), %rax	# t, tmp457
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp457,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, (%r12)	# D.21813, *_172
	.loc 1 2478 0
	movq	-232(%rbp), %rax	# ulen, ulen.287
	addq	%rax, -224(%rbp)	# ulen.287, t
	.loc 1 2479 0
	movq	-224(%rbp), %rax	# t, tmp458
	cmpq	-200(%rbp), %rax	# tend, tmp458
	jae	.L704	#,
	.loc 1 2479 0 is_stmt 0 discriminator 1
	movq	-224(%rbp), %rax	# t, tmp459
	movzbl	(%rax), %eax	# *t_179, D.21811
	cmpb	$-1, %al	#, D.21811
	jne	.L704	#,
	.loc 1 2480 0 is_stmt 1
	addq	$1, -224(%rbp)	#, t
	.loc 1 2481 0
	movslq	%ebx, %rax	# i, D.21816
	salq	$4, %rax	#, D.21816
	leaq	8(%rax), %rdx	#, D.21816
	movq	-96(%rbp), %rax	# cp, tmp460
	leaq	(%rdx,%rax), %r12	#, D.21814
	movq	-200(%rbp), %rdx	# tend, tend.288
	movq	-224(%rbp), %rax	# t, t.289
	subq	%rax, %rdx	# t.289, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp461
	movq	-224(%rbp), %rax	# t, tmp462
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp462,
	call	Perl_utf8n_to_uvuni	#
	movq	%rax, (%r12)	# D.21813, *_185
	.loc 1 2482 0
	movq	-232(%rbp), %rax	# ulen, ulen.290
	addq	%rax, -224(%rbp)	# ulen.290, t
	jmp	.L705	#
.L704:
	.loc 1 2485 0
	movslq	%ebx, %rax	# i, D.21816
	salq	$4, %rax	#, D.21816
	leaq	8(%rax), %rdx	#, D.21816
	movq	-96(%rbp), %rax	# cp, tmp463
	addq	%rax, %rdx	# tmp463, D.21814
	movslq	%ebx, %rax	# i, D.21813
	salq	$4, %rax	#, D.21813
	movq	%rax, %rcx	# D.21813, D.21813
	movq	-96(%rbp), %rax	# cp, tmp464
	addq	%rcx, %rax	# D.21813, D.21814
	movq	(%rax), %rax	# *_199, D.21813
	movq	%rax, (%rdx)	# D.21813, *_196
.L705:
	.loc 1 2487 0
	addl	$1, %ebx	#, i
.L703:
	.loc 1 2476 0 discriminator 1
	movq	-224(%rbp), %rax	# t, tmp465
	cmpq	-200(%rbp), %rax	# tend, tmp465
	jb	.L706	#,
	.loc 1 2489 0
	movslq	%ebx, %rsi	# i, D.21813
	movq	-96(%rbp), %rax	# cp, tmp466
	movl	$uvcompare, %ecx	#,
	movl	$16, %edx	#,
	movq	%rax, %rdi	# tmp466,
	call	qsort	#
	.loc 1 2490 0
	movl	$0, %r12d	#, j
	jmp	.L707	#
.L710:
.LBB31:
	.loc 1 2491 0
	movslq	%r12d, %rax	# j, D.21813
	salq	$4, %rax	#, D.21813
	movq	%rax, %rdx	# D.21813, D.21813
	movq	-96(%rbp), %rax	# cp, tmp467
	addq	%rdx, %rax	# D.21813, D.21814
	movq	(%rax), %rax	# *_206, tmp468
	movq	%rax, -88(%rbp)	# tmp468, val
	.loc 1 2492 0
	movq	-128(%rbp), %rax	# nextmin, tmp469
	movq	-88(%rbp), %rdx	# val, tmp470
	subq	%rax, %rdx	# tmp469, D.21813
	movq	%rdx, %rax	# D.21813, D.21813
	movq	%rax, -152(%rbp)	# D.21813, diff
	.loc 1 2493 0
	cmpq	$0, -152(%rbp)	#, diff
	jle	.L708	#,
	.loc 1 2494 0
	movq	-128(%rbp), %rdx	# nextmin, tmp471
	leaq	-64(%rbp), %rax	#, tmp472
	movq	%rdx, %rsi	# tmp471,
	movq	%rax, %rdi	# tmp472,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, -224(%rbp)	# tmp473, t
	.loc 1 2495 0
	movq	-224(%rbp), %rdx	# t, t.291
	leaq	-64(%rbp), %rax	#, tmpbuf.292
	subq	%rax, %rdx	# tmpbuf.292, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rdx	# D.21815, D.21813
	leaq	-64(%rbp), %rsi	#, tmp474
	movq	-208(%rbp), %rax	# transv, tmp475
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp475,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2496 0
	cmpq	$1, -152(%rbp)	#, diff
	jle	.L708	#,
.LBB32:
	.loc 1 2497 0
	movb	$-1, -293(%rbp)	#, range_mark
	.loc 1 2498 0
	movq	-88(%rbp), %rax	# val, tmp476
	leaq	-1(%rax), %rdx	#, D.21813
	leaq	-64(%rbp), %rax	#, tmp477
	movq	%rdx, %rsi	# D.21813,
	movq	%rax, %rdi	# tmp477,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, -224(%rbp)	# tmp478, t
	.loc 1 2499 0
	leaq	-293(%rbp), %rsi	#, tmp479
	movq	-208(%rbp), %rax	# transv, tmp480
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movq	%rax, %rdi	# tmp480,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2500 0
	movq	-224(%rbp), %rdx	# t, t.293
	leaq	-64(%rbp), %rax	#, tmpbuf.294
	subq	%rax, %rdx	# tmpbuf.294, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rdx	# D.21815, D.21813
	leaq	-64(%rbp), %rsi	#, tmp481
	movq	-208(%rbp), %rax	# transv, tmp482
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp482,
	call	Perl_sv_catpvn_flags	#
.L708:
.LBE32:
	.loc 1 2503 0
	movslq	%r12d, %rax	# j, D.21816
	salq	$4, %rax	#, D.21816
	leaq	8(%rax), %rdx	#, D.21816
	movq	-96(%rbp), %rax	# cp, tmp483
	addq	%rdx, %rax	# D.21816, D.21814
	movq	(%rax), %rax	# *_224, tmp484
	movq	%rax, -88(%rbp)	# tmp484, val
	.loc 1 2504 0
	movq	-88(%rbp), %rax	# val, tmp485
	cmpq	-128(%rbp), %rax	# nextmin, tmp485
	jb	.L709	#,
	.loc 1 2505 0
	movq	-88(%rbp), %rax	# val, tmp489
	addq	$1, %rax	#, tmp488
	movq	%rax, -128(%rbp)	# tmp488, nextmin
.L709:
.LBE31:
	.loc 1 2490 0
	addl	$1, %r12d	#, j
.L707:
	.loc 1 2490 0 is_stmt 0 discriminator 1
	cmpl	%ebx, %r12d	# i, j
	jl	.L710	#,
	.loc 1 2507 0 is_stmt 1
	movq	-128(%rbp), %rdx	# nextmin, tmp490
	leaq	-64(%rbp), %rax	#, tmp491
	movq	%rdx, %rsi	# tmp490,
	movq	%rax, %rdi	# tmp491,
	call	Perl_uvuni_to_utf8	#
	movq	%rax, -224(%rbp)	# tmp492, t
	.loc 1 2508 0
	movq	-224(%rbp), %rdx	# t, t.295
	leaq	-64(%rbp), %rax	#, tmpbuf.296
	subq	%rax, %rdx	# tmpbuf.296, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rdx	# D.21815, D.21813
	leaq	-64(%rbp), %rsi	#, tmp493
	movq	-208(%rbp), %rax	# transv, tmp494
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp494,
	call	Perl_sv_catpvn_flags	#
.LBB33:
	.loc 1 2510 0
	movb	$-1, -293(%rbp)	#, range_mark
	.loc 1 2511 0
	leaq	-293(%rbp), %rsi	#, tmp495
	movq	-208(%rbp), %rax	# transv, tmp496
	movl	$2, %ecx	#,
	movl	$1, %edx	#,
	movq	%rax, %rdi	# tmp496,
	call	Perl_sv_catpvn_flags	#
.LBE33:
	.loc 1 2513 0
	leaq	-64(%rbp), %rax	#, tmp497
	movl	$8, %edx	#,
	movl	$2147483647, %esi	#,
	movq	%rax, %rdi	# tmp497,
	call	Perl_uvuni_to_utf8_flags	#
	movq	%rax, -224(%rbp)	# tmp498, t
	.loc 1 2515 0
	movq	-224(%rbp), %rdx	# t, t.297
	leaq	-64(%rbp), %rax	#, tmpbuf.298
	subq	%rax, %rdx	# tmpbuf.298, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rdx	# D.21815, D.21813
	leaq	-64(%rbp), %rsi	#, tmp499
	movq	-208(%rbp), %rax	# transv, tmp500
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp500,
	call	Perl_sv_catpvn_flags	#
	.loc 1 2516 0
	movq	-208(%rbp), %rax	# transv, tmp501
	movq	(%rax), %rax	# transv_169->sv_any, D.21810
	movq	(%rax), %rax	# MEM[(struct XPV *)_238].xpv_pv, tmp502
	movq	%rax, -224(%rbp)	# tmp502, t
	.loc 1 2517 0
	movq	-208(%rbp), %rax	# transv, tmp503
	movq	(%rax), %rax	# transv_169->sv_any, D.21810
	movq	8(%rax), %rax	# MEM[(struct XPV *)_240].xpv_cur, tlen.299
	movq	%rax, -248(%rbp)	# tlen.299, tlen
	.loc 1 2518 0
	movq	-248(%rbp), %rdx	# tlen, tlen.300
	movq	-224(%rbp), %rax	# t, tmp507
	addq	%rdx, %rax	# tlen.300, tmp506
	movq	%rax, -200(%rbp)	# tmp506, tend
	.loc 1 2519 0
	movq	-96(%rbp), %rax	# cp, tmp508
	movq	%rax, %rdi	# tmp508,
	call	Perl_safesysfree	#
.LBE30:
	jmp	.L711	#
.L702:
	.loc 1 2521 0
	movq	-240(%rbp), %rax	# rlen, rlen.301
	testq	%rax, %rax	# rlen.301
	jne	.L711	#,
	.loc 1 2521 0 is_stmt 0 discriminator 1
	cmpl	$0, -292(%rbp)	#, del
	jne	.L711	#,
	.loc 1 2522 0 is_stmt 1
	movq	-224(%rbp), %rax	# t, tmp509
	movq	%rax, -216(%rbp)	# tmp509, r
	movq	-248(%rbp), %rax	# tlen, tlen.302
	movq	%rax, -240(%rbp)	# tlen.302, rlen
	movq	-200(%rbp), %rax	# tend, tmp510
	movq	%rax, -192(%rbp)	# tmp510, rend
.L711:
	.loc 1 2524 0
	cmpl	$0, -264(%rbp)	#, squash
	jne	.L712	#,
	.loc 1 2525 0
	movq	-240(%rbp), %rax	# rlen, rlen.303
	testq	%rax, %rax	# rlen.303
	jne	.L713	#,
	.loc 1 2525 0 is_stmt 0 discriminator 1
	cmpl	$0, -292(%rbp)	#, del
	je	.L714	#,
.L713:
	.loc 1 2525 0 discriminator 2
	movq	-224(%rbp), %rax	# t, tmp511
	cmpq	-216(%rbp), %rax	# r, tmp511
	je	.L714	#,
	.loc 1 2526 0 is_stmt 1 discriminator 1
	movq	-248(%rbp), %rdx	# tlen, tlen.304
	movq	-240(%rbp), %rax	# rlen, rlen.305
	.loc 1 2525 0 discriminator 1
	cmpq	%rax, %rdx	# rlen.305, tlen.304
	jne	.L712	#,
	.loc 1 2526 0
	movq	-248(%rbp), %rdx	# tlen, tlen.306
	movq	-216(%rbp), %rcx	# r, tmp512
	movq	-224(%rbp), %rax	# t, tmp513
	movq	%rcx, %rsi	# tmp512,
	movq	%rax, %rdi	# tmp513,
	call	memcmp	#
	testl	%eax, %eax	# D.21812
	jne	.L712	#,
.L714:
	.loc 1 2528 0
	movq	-312(%rbp), %rax	# o, tmp514
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$4, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp515
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
	.loc 1 2532 0
	jmp	.L715	#
.L712:
	jmp	.L715	#
.L763:
	.loc 1 2534 0
	movq	-184(%rbp), %rax	# tfirst, tmp516
	cmpq	-176(%rbp), %rax	# tlast, tmp516
	jbe	.L716	#,
	.loc 1 2535 0
	movq	-200(%rbp), %rdx	# tend, tend.307
	movq	-224(%rbp), %rax	# t, t.308
	subq	%rax, %rdx	# t.308, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp517
	movq	-224(%rbp), %rax	# t, tmp518
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp518,
	call	Perl_utf8n_to_uvuni	#
	cltq
	movq	%rax, -184(%rbp)	# tmp519, tfirst
	.loc 1 2536 0
	movq	-232(%rbp), %rax	# ulen, ulen.309
	addq	%rax, -224(%rbp)	# ulen.309, t
	.loc 1 2537 0
	movq	-224(%rbp), %rax	# t, tmp520
	cmpq	-200(%rbp), %rax	# tend, tmp520
	jae	.L717	#,
	.loc 1 2537 0 is_stmt 0 discriminator 1
	movq	-224(%rbp), %rax	# t, tmp521
	movzbl	(%rax), %eax	# *t_281, D.21811
	cmpb	$-1, %al	#, D.21811
	jne	.L717	#,
	.loc 1 2538 0 is_stmt 1
	addq	$1, -224(%rbp)	#, t
	.loc 1 2539 0
	movq	-200(%rbp), %rdx	# tend, tend.310
	movq	-224(%rbp), %rax	# t, t.311
	subq	%rax, %rdx	# t.311, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp522
	movq	-224(%rbp), %rax	# t, tmp523
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp523,
	call	Perl_utf8n_to_uvuni	#
	cltq
	movq	%rax, -176(%rbp)	# tmp524, tlast
	.loc 1 2540 0
	movq	-232(%rbp), %rax	# ulen, ulen.312
	addq	%rax, -224(%rbp)	# ulen.312, t
	jmp	.L716	#
.L717:
	.loc 1 2543 0
	movq	-184(%rbp), %rax	# tfirst, tmp525
	movq	%rax, -176(%rbp)	# tmp525, tlast
.L716:
	.loc 1 2547 0
	movq	-168(%rbp), %rax	# rfirst, tmp526
	cmpq	-160(%rbp), %rax	# rlast, tmp526
	jbe	.L718	#,
	.loc 1 2548 0
	movq	-216(%rbp), %rax	# r, tmp527
	cmpq	-192(%rbp), %rax	# rend, tmp527
	jae	.L719	#,
	.loc 1 2549 0
	movq	-192(%rbp), %rdx	# rend, rend.313
	movq	-216(%rbp), %rax	# r, r.314
	subq	%rax, %rdx	# r.314, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp528
	movq	-216(%rbp), %rax	# r, tmp529
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp529,
	call	Perl_utf8n_to_uvuni	#
	cltq
	movq	%rax, -168(%rbp)	# tmp530, rfirst
	.loc 1 2550 0
	movq	-232(%rbp), %rax	# ulen, ulen.315
	addq	%rax, -216(%rbp)	# ulen.315, r
	.loc 1 2551 0
	movq	-216(%rbp), %rax	# r, tmp531
	cmpq	-192(%rbp), %rax	# rend, tmp531
	jae	.L720	#,
	.loc 1 2551 0 is_stmt 0 discriminator 1
	movq	-216(%rbp), %rax	# r, tmp532
	movzbl	(%rax), %eax	# *r_302, D.21811
	cmpb	$-1, %al	#, D.21811
	jne	.L720	#,
	.loc 1 2552 0 is_stmt 1
	addq	$1, -216(%rbp)	#, r
	.loc 1 2553 0
	movq	-192(%rbp), %rdx	# rend, rend.316
	movq	-216(%rbp), %rax	# r, r.317
	subq	%rax, %rdx	# r.317, D.21815
	movq	%rdx, %rax	# D.21815, D.21815
	movq	%rax, %rsi	# D.21815, D.21813
	leaq	-232(%rbp), %rdx	#, tmp533
	movq	-216(%rbp), %rax	# r, tmp534
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp534,
	call	Perl_utf8n_to_uvuni	#
	cltq
	movq	%rax, -160(%rbp)	# tmp535, rlast
	.loc 1 2554 0
	movq	-232(%rbp), %rax	# ulen, ulen.318
	addq	%rax, -216(%rbp)	# ulen.318, r
	jmp	.L718	#
.L720:
	.loc 1 2557 0
	movq	-168(%rbp), %rax	# rfirst, tmp536
	movq	%rax, -160(%rbp)	# tmp536, rlast
	jmp	.L718	#
.L719:
	.loc 1 2560 0
	movl	-276(%rbp), %eax	# havefinal, havefinal.319
	leal	1(%rax), %edx	#, tmp537
	movl	%edx, -276(%rbp)	# tmp537, havefinal
	testl	%eax, %eax	# havefinal.319
	jne	.L722	#,
	.loc 1 2561 0
	movq	-160(%rbp), %rax	# rlast, tmp538
	movl	%eax, -272(%rbp)	# tmp538, final
.L722:
	.loc 1 2562 0
	movl	$4294967295, %eax	#, tmp637
	movq	%rax, -160(%rbp)	# tmp637, rlast
	movq	-160(%rbp), %rax	# rlast, tmp539
	movq	%rax, -168(%rbp)	# tmp539, rfirst
.L718:
	.loc 1 2567 0
	movq	-184(%rbp), %rax	# tfirst, tmp540
	movq	-176(%rbp), %rdx	# tlast, tmp541
	subq	%rax, %rdx	# tmp540, D.21813
	movq	%rdx, %rax	# D.21813, D.21813
	movq	%rax, -80(%rbp)	# D.21813, tdiff
	.loc 1 2568 0
	movq	-168(%rbp), %rax	# rfirst, tmp542
	movq	-160(%rbp), %rdx	# rlast, tmp543
	subq	%rax, %rdx	# tmp542, D.21813
	movq	%rdx, %rax	# D.21813, D.21813
	movq	%rax, -72(%rbp)	# D.21813, rdiff
	.loc 1 2570 0
	movq	-80(%rbp), %rax	# tdiff, tmp544
	cmpq	-72(%rbp), %rax	# rdiff, tmp544
	jg	.L723	#,
	.loc 1 2571 0
	movq	-80(%rbp), %rax	# tdiff, tmp545
	movq	%rax, -152(%rbp)	# tmp545, diff
	jmp	.L724	#
.L723:
	.loc 1 2573 0
	movq	-72(%rbp), %rax	# rdiff, tmp546
	movq	%rax, -152(%rbp)	# tmp546, diff
.L724:
	.loc 1 2575 0
	movl	$4294967295, %eax	#, tmp547
	cmpq	%rax, -168(%rbp)	# tmp547, rfirst
	jne	.L725	#,
	.loc 1 2576 0
	movq	-80(%rbp), %rax	# tdiff, tmp548
	movq	%rax, -152(%rbp)	# tmp548, diff
	.loc 1 2577 0
	cmpq	$0, -152(%rbp)	#, diff
	jle	.L726	#,
	.loc 1 2578 0
	movq	-176(%rbp), %rcx	# tlast, tlast.320
	movq	-184(%rbp), %rdx	# tfirst, tfirst.321
	movq	-104(%rbp), %rax	# listsv, tmp549
	movl	$.LC47, %esi	#,
	movq	%rax, %rdi	# tmp549,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L728	#
.L726:
	.loc 1 2581 0
	movq	-184(%rbp), %rdx	# tfirst, tfirst.322
	movq	-104(%rbp), %rax	# listsv, tmp550
	movl	$.LC48, %esi	#,
	movq	%rax, %rdi	# tmp550,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L728	#
.L725:
	.loc 1 2584 0
	cmpq	$0, -152(%rbp)	#, diff
	jle	.L729	#,
	.loc 1 2585 0
	movq	-168(%rbp), %rsi	# rfirst, rfirst.323
	.loc 1 2586 0
	movq	-152(%rbp), %rdx	# diff, diff.324
	movq	-184(%rbp), %rax	# tfirst, tmp551
	addq	%rdx, %rax	# diff.324, D.21813
	.loc 1 2585 0
	movq	%rax, %rcx	# D.21813, D.21815
	movq	-184(%rbp), %rdx	# tfirst, tfirst.325
	movq	-104(%rbp), %rax	# listsv, tmp552
	movq	%rsi, %r8	# rfirst.323,
	movl	$.LC49, %esi	#,
	movq	%rax, %rdi	# tmp552,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L730	#
.L729:
	.loc 1 2589 0
	movq	-168(%rbp), %rcx	# rfirst, rfirst.326
	movq	-184(%rbp), %rdx	# tfirst, tfirst.327
	movq	-104(%rbp), %rax	# listsv, tmp553
	movl	$.LC50, %esi	#,
	movq	%rax, %rdi	# tmp553,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
.L730:
	.loc 1 2592 0
	movq	-152(%rbp), %rdx	# diff, diff.328
	movq	-168(%rbp), %rax	# rfirst, tmp554
	addq	%rax, %rdx	# tmp554, D.21813
	movl	-284(%rbp), %eax	# max, D.21813
	cmpq	%rax, %rdx	# D.21813, D.21813
	jbe	.L731	#,
	.loc 1 2593 0
	movq	-168(%rbp), %rax	# rfirst, tmp555
	movl	%eax, %edx	# tmp555, D.21809
	movq	-152(%rbp), %rax	# diff, tmp556
	addl	%edx, %eax	# D.21809, tmp557
	movl	%eax, -284(%rbp)	# tmp557, max
.L731:
	.loc 1 2594 0
	cmpl	$0, -288(%rbp)	#, grows
	jne	.L732	#,
	.loc 1 2595 0
	movq	-184(%rbp), %rax	# tfirst, tmp558
	cmpq	-168(%rbp), %rax	# rfirst, tmp558
	jae	.L733	#,
	.loc 1 2596 0
	cmpq	$127, -184(%rbp)	#, tfirst
	jbe	.L734	#,
	.loc 1 2596 0 is_stmt 0 discriminator 1
	cmpq	$2047, -184(%rbp)	#, tfirst
	jbe	.L735	#,
	cmpq	$65535, -184(%rbp)	#, tfirst
	jbe	.L736	#,
	cmpq	$2097151, -184(%rbp)	#, tfirst
	jbe	.L737	#,
	cmpq	$67108863, -184(%rbp)	#, tfirst
	jbe	.L738	#,
	cmpq	$2147483647, -184(%rbp)	#, tfirst
	jbe	.L739	#,
	movabsq	$68719476735, %rax	#, tmp559
	cmpq	%rax, -184(%rbp)	# tmp559, tfirst
	ja	.L740	#,
	movl	$7, %eax	#, iftmp.336
	jmp	.L746	#
.L740:
	.loc 1 2596 0 discriminator 2
	movl	$13, %eax	#, iftmp.336
	jmp	.L746	#
.L739:
	movl	$6, %eax	#, iftmp.335
	jmp	.L746	#
.L738:
	movl	$5, %eax	#, iftmp.334
	jmp	.L746	#
.L737:
	movl	$4, %eax	#, iftmp.333
	jmp	.L746	#
.L736:
	movl	$3, %eax	#, iftmp.332
	jmp	.L746	#
.L735:
	movl	$2, %eax	#, iftmp.331
.L746:
	.loc 1 2596 0 discriminator 7
	movl	%eax, %edx	# iftmp.331, iftmp.330
	jmp	.L747	#
.L734:
	.loc 1 2596 0 discriminator 2
	movl	$1, %edx	#, iftmp.330
.L747:
	.loc 1 2596 0 discriminator 3
	movq	-152(%rbp), %rcx	# diff, diff.338
	movq	-168(%rbp), %rax	# rfirst, tmp560
	addq	%rcx, %rax	# diff.338, D.21813
	cmpq	$127, %rax	#, D.21813
	jbe	.L748	#,
	.loc 1 2596 0 discriminator 1
	movq	-152(%rbp), %rcx	# diff, diff.340
	movq	-168(%rbp), %rax	# rfirst, tmp561
	addq	%rcx, %rax	# diff.340, D.21813
	cmpq	$2047, %rax	#, D.21813
	jbe	.L749	#,
	movq	-152(%rbp), %rcx	# diff, diff.342
	movq	-168(%rbp), %rax	# rfirst, tmp562
	addq	%rcx, %rax	# diff.342, D.21813
	cmpq	$65535, %rax	#, D.21813
	jbe	.L750	#,
	movq	-152(%rbp), %rcx	# diff, diff.344
	movq	-168(%rbp), %rax	# rfirst, tmp563
	addq	%rcx, %rax	# diff.344, D.21813
	cmpq	$2097151, %rax	#, D.21813
	jbe	.L751	#,
	movq	-152(%rbp), %rcx	# diff, diff.346
	movq	-168(%rbp), %rax	# rfirst, tmp564
	addq	%rcx, %rax	# diff.346, D.21813
	cmpq	$67108863, %rax	#, D.21813
	jbe	.L752	#,
	movq	-152(%rbp), %rcx	# diff, diff.348
	movq	-168(%rbp), %rax	# rfirst, tmp565
	addq	%rcx, %rax	# diff.348, D.21813
	cmpq	$2147483647, %rax	#, D.21813
	jbe	.L753	#,
	movq	-152(%rbp), %rcx	# diff, diff.350
	movq	-168(%rbp), %rax	# rfirst, tmp566
	addq	%rax, %rcx	# tmp566, D.21813
	movabsq	$68719476735, %rax	#, tmp567
	cmpq	%rax, %rcx	# tmp567, D.21813
	ja	.L754	#,
	movl	$7, %eax	#, iftmp.349
	jmp	.L761	#
.L754:
	.loc 1 2596 0 discriminator 2
	movl	$13, %eax	#, iftmp.349
	jmp	.L761	#
.L753:
	movl	$6, %eax	#, iftmp.347
	jmp	.L761	#
.L752:
	movl	$5, %eax	#, iftmp.345
	jmp	.L761	#
.L751:
	movl	$4, %eax	#, iftmp.343
	jmp	.L761	#
.L750:
	movl	$3, %eax	#, iftmp.341
	jmp	.L761	#
.L749:
	movl	$2, %eax	#, iftmp.339
	jmp	.L761	#
.L748:
	movl	$1, %eax	#, iftmp.337
.L761:
	.loc 1 2595 0 is_stmt 1
	cmpl	%eax, %edx	# iftmp.337, iftmp.330
	jge	.L733	#,
	.loc 1 2595 0 is_stmt 0 discriminator 2
	movl	$1, %eax	#, iftmp.329
	jmp	.L762	#
.L733:
	.loc 1 2595 0 discriminator 1
	movl	$0, %eax	#, iftmp.329
.L762:
	.loc 1 2595 0 discriminator 3
	movl	%eax, -288(%rbp)	# iftmp.329, grows
.L732:
	.loc 1 2597 0 is_stmt 1
	movq	-152(%rbp), %rdx	# diff, diff.351
	movq	-168(%rbp), %rax	# rfirst, tmp568
	addq	%rdx, %rax	# diff.351, D.21813
	addq	$1, %rax	#, tmp569
	movq	%rax, -168(%rbp)	# tmp569, rfirst
.L728:
	.loc 1 2599 0
	movq	-152(%rbp), %rdx	# diff, diff.352
	movq	-184(%rbp), %rax	# tfirst, tmp570
	addq	%rdx, %rax	# diff.352, D.21813
	addq	$1, %rax	#, tmp571
	movq	%rax, -184(%rbp)	# tmp571, tfirst
.L715:
	.loc 1 2532 0 discriminator 1
	movq	-224(%rbp), %rax	# t, tmp572
	cmpq	-200(%rbp), %rax	# tend, tmp572
	jb	.L763	#,
	.loc 1 2532 0 is_stmt 0 discriminator 2
	movq	-184(%rbp), %rax	# tfirst, tmp573
	cmpq	-176(%rbp), %rax	# tlast, tmp573
	jbe	.L763	#,
	.loc 1 2602 0 is_stmt 1
	addl	$1, -284(%rbp)	#, max
	movl	-284(%rbp), %eax	# max, tmp574
	movl	%eax, -260(%rbp)	# tmp574, none
	.loc 1 2603 0
	cmpl	$0, -292(%rbp)	#, del
	je	.L764	#,
	.loc 1 2604 0
	addl	$1, -284(%rbp)	#, max
	movl	-284(%rbp), %eax	# max, tmp575
	movl	%eax, -292(%rbp)	# tmp575, del
.L764:
	.loc 1 2606 0
	cmpl	$65535, -284(%rbp)	#, max
	jbe	.L765	#,
	.loc 1 2607 0
	movl	$32, -280(%rbp)	#, bits
	jmp	.L766	#
.L765:
	.loc 1 2608 0
	cmpl	$255, -284(%rbp)	#, max
	jbe	.L767	#,
	.loc 1 2609 0
	movl	$16, -280(%rbp)	#, bits
	jmp	.L766	#
.L767:
	.loc 1 2611 0
	movl	$8, -280(%rbp)	#, bits
.L766:
	.loc 1 2613 0
	movq	-312(%rbp), %rax	# o, tmp576
	movq	40(%rax), %rax	# MEM[(struct PVOP *)o_110(D)].op_pv, D.21817
	movq	%rax, %rdi	# D.21817,
	call	Perl_safesysfree	#
	.loc 1 2614 0
	movl	-260(%rbp), %ecx	# none, tmp577
	movl	-280(%rbp), %edx	# bits, tmp578
	movq	-104(%rbp), %rax	# listsv, tmp579
	movl	%ecx, %r8d	# tmp577,
	movl	%edx, %ecx	# tmp578,
	movq	%rax, %rdx	# tmp579,
	movl	$.LC46, %esi	#,
	movl	$.LC51, %edi	#,
	call	Perl_swash_init	#
	movq	-312(%rbp), %rdx	# o, tmp580
	movq	%rax, 40(%rdx)	# D.21818, MEM[(struct SVOP *)o_110(D)].op_sv
	.loc 1 2615 0
	movq	-104(%rbp), %rax	# listsv, tmp581
	movq	%rax, %rdi	# tmp581,
	call	Perl_sv_free	#
	.loc 1 2616 0
	cmpq	$0, -208(%rbp)	#, transv
	je	.L768	#,
	.loc 1 2617 0
	movq	-208(%rbp), %rax	# transv, tmp582
	movq	%rax, %rdi	# tmp582,
	call	Perl_sv_free	#
.L768:
	.loc 1 2619 0
	cmpl	$0, -292(%rbp)	#, del
	jne	.L769	#,
	.loc 1 2619 0 is_stmt 0 discriminator 1
	cmpl	$0, -276(%rbp)	#, havefinal
	je	.L769	#,
	movq	-240(%rbp), %rax	# rlen, rlen.353
	testq	%rax, %rax	# rlen.353
	je	.L769	#,
	.loc 1 2620 0 is_stmt 1
	movl	-272(%rbp), %eax	# final, D.21813
	movq	%rax, %rdi	# D.21813,
	call	Perl_newSVuv	#
	movq	%rax, %rdx	#, D.21818
	movq	-312(%rbp), %rax	# o, tmp583
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_110(D)].op_sv, D.21818
	movq	(%rax), %rax	# _267->sv_any, D.21810
	movq	(%rax), %rax	# MEM[(struct XRV *)_268].xrv_rv, D.21818
	movl	$0, %r8d	#,
	movq	%rdx, %rcx	# D.21818,
	movl	$5, %edx	#,
	movl	$.LC52, %esi	#,
	movq	%rax, %rdi	# D.21818,
	call	Perl_hv_store	#
.L769:
	.loc 1 2623 0
	cmpl	$0, -288(%rbp)	#, grows
	je	.L770	#,
	.loc 1 2624 0
	movq	-312(%rbp), %rax	# o, tmp584
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$64, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp585
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
.L770:
	.loc 1 2626 0
	cmpq	$0, -144(%rbp)	#, tsave
	je	.L771	#,
	.loc 1 2627 0
	movq	-144(%rbp), %rax	# tsave, tmp586
	movq	%rax, %rdi	# tmp586,
	call	Perl_safesysfree	#
.L771:
	.loc 1 2628 0
	cmpq	$0, -136(%rbp)	#, rsave
	je	.L772	#,
	.loc 1 2629 0
	movq	-136(%rbp), %rax	# rsave, tmp587
	movq	%rax, %rdi	# tmp587,
	call	Perl_safesysfree	#
.L772:
	.loc 1 2631 0
	movq	-320(%rbp), %rax	# expr, tmp588
	movq	%rax, %rdi	# tmp588,
	call	Perl_op_free	#
	.loc 1 2632 0
	movq	-328(%rbp), %rax	# repl, tmp589
	movq	%rax, %rdi	# tmp589,
	call	Perl_op_free	#
	.loc 1 2633 0
	movq	-312(%rbp), %rax	# o, D.21808
	jmp	.L805	#
.L699:
.LBE27:
	.loc 1 2636 0
	movq	-312(%rbp), %rax	# o, tmp590
	movq	40(%rax), %r13	# MEM[(struct PVOP *)o_110(D)].op_pv, tbl
	.loc 1 2637 0
	cmpl	$0, -268(%rbp)	#, complement
	je	.L774	#,
	.loc 1 2638 0
	movl	$512, %edx	#,
	movl	$0, %esi	#,
	movq	%r13, %rdi	# tbl,
	call	memset	#
	.loc 1 2639 0
	movl	$0, %ebx	#, i
	jmp	.L775	#
.L776:
	.loc 1 2640 0 discriminator 2
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp591
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_399, D.21811
	movzbl	%al, %eax	# D.21811, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movw	$-1, (%rax)	#, *_403
	.loc 1 2639 0 discriminator 2
	addl	$1, %ebx	#, i
.L775:
	.loc 1 2639 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# tlen, tlen.354
	cmpl	%ebx, %eax	# i, D.21812
	jg	.L776	#,
	.loc 1 2641 0 is_stmt 1
	movl	$0, %ebx	#, i
	movl	$0, %r12d	#, j
	jmp	.L777	#
.L784:
	.loc 1 2642 0
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movzwl	(%rax), %eax	# *_409, D.21821
	testw	%ax, %ax	# D.21821
	jne	.L778	#,
	.loc 1 2643 0
	movq	-240(%rbp), %rax	# rlen, rlen.355
	cmpl	%r12d, %eax	# j, D.21812
	jg	.L779	#,
	.loc 1 2644 0
	cmpl	$0, -292(%rbp)	#, del
	je	.L780	#,
	.loc 1 2645 0
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movw	$-2, (%rax)	#, *_415
	jmp	.L778	#
.L780:
	.loc 1 2646 0
	movq	-240(%rbp), %rax	# rlen, rlen.356
	testq	%rax, %rax	# rlen.356
	je	.L782	#,
	.loc 1 2647 0
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	leaq	0(%r13,%rax), %rdx	#, D.21820
	movslq	%r12d, %rax	# j, D.21816
	leaq	-1(%rax), %rcx	#, D.21816
	movq	-216(%rbp), %rax	# r, tmp592
	addq	%rcx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_422, D.21811
	movzbl	%al, %eax	# D.21811, D.21821
	movw	%ax, (%rdx)	# D.21821, *_419
	jmp	.L778	#
.L782:
	.loc 1 2649 0
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	leaq	0(%r13,%rax), %rdx	#, D.21820
	movl	%ebx, %eax	# i, D.21821
	movw	%ax, (%rdx)	# D.21821, *_427
	jmp	.L778	#
.L779:
	.loc 1 2652 0
	cmpl	$127, %ebx	#, i
	jg	.L783	#,
	.loc 1 2652 0 is_stmt 0 discriminator 1
	movslq	%r12d, %rdx	# j, D.21816
	movq	-216(%rbp), %rax	# r, tmp593
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_430, D.21811
	testb	%al, %al	# D.21822
	jns	.L783	#,
	.loc 1 2653 0 is_stmt 1
	movl	$1, -288(%rbp)	#, grows
.L783:
	.loc 1 2654 0
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	leaq	0(%r13,%rax), %rdx	#, D.21820
	movl	%r12d, %eax	# j, j.357
	leal	1(%rax), %r12d	#, j
	movslq	%eax, %rcx	# j.357, D.21816
	movq	-216(%rbp), %rax	# r, tmp594
	addq	%rcx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_440, D.21811
	movzbl	%al, %eax	# D.21811, D.21821
	movw	%ax, (%rdx)	# D.21821, *_436
.L778:
	.loc 1 2641 0
	addl	$1, %ebx	#, i
.L777:
	.loc 1 2641 0 is_stmt 0 discriminator 1
	cmpl	$255, %ebx	#, i
	jle	.L784	#,
	.loc 1 2658 0 is_stmt 1
	cmpl	$0, -292(%rbp)	#, del
	jne	.L785	#,
	.loc 1 2659 0
	movq	-240(%rbp), %rax	# rlen, rlen.358
	testq	%rax, %rax	# rlen.358
	jne	.L786	#,
	.loc 1 2660 0
	movq	-240(%rbp), %rax	# rlen, rlen.359
	movl	%eax, %r12d	# rlen.359, j
	.loc 1 2661 0
	cmpl	$0, -264(%rbp)	#, squash
	jne	.L788	#,
	.loc 1 2662 0
	movq	-312(%rbp), %rax	# o, tmp595
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$4, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp596
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
	jmp	.L788	#
.L786:
	.loc 1 2664 0
	movq	-240(%rbp), %rax	# rlen, rlen.360
	cmpl	%r12d, %eax	# j, D.21812
	jg	.L789	#,
	.loc 1 2665 0
	movq	-240(%rbp), %rax	# rlen, rlen.361
	subl	$1, %eax	#, D.21823
	movl	%eax, %r12d	# D.21823, j
	jmp	.L788	#
.L789:
	.loc 1 2667 0
	movq	-240(%rbp), %rdx	# rlen, rlen.362
	movslq	%r12d, %rax	# j, D.21813
	subq	%rax, %rdx	# D.21813, D.21813
	movq	%rdx, %rax	# D.21813, D.21813
	addq	$257, %rax	#, D.21813
	addq	%rax, %rax	# D.21813
	movq	%rax, %rsi	# D.21813,
	movq	%r13, %rdi	# tbl,
	call	Perl_safesysrealloc	#
	movq	%rax, %r13	#, tbl
	movq	-312(%rbp), %rax	# o, tmp597
	movq	%r13, 40(%rax)	# tbl, MEM[(struct PVOP *)o_110(D)].op_pv
.L788:
	.loc 1 2668 0
	leaq	512(%r13), %rax	#, D.21820
	movq	-240(%rbp), %rdx	# rlen, rlen.363
	movl	%edx, %ecx	# rlen.363, D.21824
	movl	%r12d, %edx	# j, D.21824
	subl	%edx, %ecx	# D.21824, D.21824
	movl	%ecx, %edx	# D.21824, D.21824
	movw	%dx, (%rax)	# D.21821, *_461
	.loc 1 2669 0
	movl	$0, %ebx	#, i
	jmp	.L790	#
.L791:
	.loc 1 2670 0 discriminator 2
	leal	257(%rbx), %eax	#, D.21812
	cltq
	addq	%rax, %rax	# D.21813
	leaq	0(%r13,%rax), %rdx	#, D.21820
	leal	(%r12,%rbx), %eax	#, D.21812
	movslq	%eax, %rcx	# D.21812, D.21816
	movq	-216(%rbp), %rax	# r, tmp598
	addq	%rcx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_477, D.21811
	movzbl	%al, %eax	# D.21811, D.21821
	movw	%ax, (%rdx)	# D.21821, *_474
	.loc 1 2669 0 discriminator 2
	addl	$1, %ebx	#, i
.L790:
	.loc 1 2669 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rax	# rlen, rlen.364
	subl	%r12d, %eax	# j, D.21812
	cmpl	%ebx, %eax	# i, D.21812
	jg	.L791	#,
	jmp	.L785	#
.L774:
	.loc 1 2674 0 is_stmt 1
	movq	-240(%rbp), %rax	# rlen, rlen.365
	testq	%rax, %rax	# rlen.365
	jne	.L792	#,
	.loc 1 2674 0 is_stmt 0 discriminator 1
	cmpl	$0, -292(%rbp)	#, del
	jne	.L792	#,
	.loc 1 2675 0 is_stmt 1
	movq	-224(%rbp), %rax	# t, tmp599
	movq	%rax, -216(%rbp)	# tmp599, r
	movq	-248(%rbp), %rax	# tlen, tlen.366
	movq	%rax, -240(%rbp)	# tlen.366, rlen
	.loc 1 2676 0
	cmpl	$0, -264(%rbp)	#, squash
	jne	.L793	#,
	.loc 1 2677 0
	movq	-312(%rbp), %rax	# o, tmp600
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$4, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp601
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
	.loc 1 2676 0
	jmp	.L794	#
.L793:
	.loc 1 2676 0 is_stmt 0 discriminator 1
	jmp	.L794	#
.L792:
	.loc 1 2679 0 is_stmt 1
	cmpl	$0, -264(%rbp)	#, squash
	jne	.L794	#,
	.loc 1 2679 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rdx	# rlen, rlen.367
	movq	-248(%rbp), %rax	# tlen, tlen.368
	cmpq	%rax, %rdx	# tlen.368, rlen.367
	jne	.L794	#,
	movq	-248(%rbp), %rdx	# tlen, tlen.369
	movq	-216(%rbp), %rcx	# r, tmp602
	movq	-224(%rbp), %rax	# t, tmp603
	movq	%rcx, %rsi	# tmp602,
	movq	%rax, %rdi	# tmp603,
	call	memcmp	#
	testl	%eax, %eax	# D.21812
	jne	.L794	#,
	.loc 1 2680 0 is_stmt 1
	movq	-312(%rbp), %rax	# o, tmp604
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$4, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp605
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
.L794:
	.loc 1 2682 0
	movl	$0, %ebx	#, i
	jmp	.L795	#
.L796:
	.loc 1 2683 0 discriminator 2
	movslq	%ebx, %rax	# i, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movw	$-1, (%rax)	#, *_495
	.loc 1 2682 0 discriminator 2
	addl	$1, %ebx	#, i
.L795:
	.loc 1 2682 0 is_stmt 0 discriminator 1
	cmpl	$255, %ebx	#, i
	jle	.L796	#,
	.loc 1 2684 0 is_stmt 1
	movl	$0, %ebx	#, i
	movl	$0, %r12d	#, j
	jmp	.L797	#
.L803:
	.loc 1 2685 0
	movq	-240(%rbp), %rax	# rlen, rlen.370
	cmpl	%r12d, %eax	# j, D.21812
	jg	.L798	#,
	.loc 1 2686 0
	cmpl	$0, -292(%rbp)	#, del
	je	.L799	#,
	.loc 1 2687 0
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp606
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_504, D.21811
	movzbl	%al, %eax	# D.21811, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movzwl	(%rax), %eax	# *_508, D.21821
	cmpw	$-1, %ax	#, D.21821
	jne	.L800	#,
	.loc 1 2688 0
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp607
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_511, D.21811
	movzbl	%al, %eax	# D.21811, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movw	$-2, (%rax)	#, *_515
	.loc 1 2689 0
	jmp	.L801	#
.L800:
	jmp	.L801	#
.L799:
	.loc 1 2691 0
	subl	$1, %r12d	#, j
.L798:
	.loc 1 2693 0
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp608
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_518, D.21811
	movzbl	%al, %eax	# D.21811, D.21813
	addq	%rax, %rax	# D.21813
	addq	%r13, %rax	# tbl, D.21820
	movzwl	(%rax), %eax	# *_522, D.21821
	cmpw	$-1, %ax	#, D.21821
	jne	.L801	#,
	.loc 1 2694 0
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp609
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_525, D.21811
	testb	%al, %al	# D.21822
	js	.L802	#,
	.loc 1 2694 0 is_stmt 0 discriminator 1
	movslq	%r12d, %rdx	# j, D.21816
	movq	-216(%rbp), %rax	# r, tmp610
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_529, D.21811
	testb	%al, %al	# D.21822
	jns	.L802	#,
	.loc 1 2695 0 is_stmt 1
	movl	$1, -288(%rbp)	#, grows
.L802:
	.loc 1 2696 0
	movslq	%ebx, %rdx	# i, D.21816
	movq	-224(%rbp), %rax	# t, tmp611
	addq	%rdx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_534, D.21811
	movzbl	%al, %eax	# D.21811, D.21813
	addq	%rax, %rax	# D.21813
	leaq	0(%r13,%rax), %rdx	#, D.21820
	movslq	%r12d, %rcx	# j, D.21816
	movq	-216(%rbp), %rax	# r, tmp612
	addq	%rcx, %rax	# D.21816, D.21819
	movzbl	(%rax), %eax	# *_540, D.21811
	movzbl	%al, %eax	# D.21811, D.21821
	movw	%ax, (%rdx)	# D.21821, *_538
.L801:
	.loc 1 2684 0
	addl	$1, %ebx	#, i
	addl	$1, %r12d	#, j
.L797:
	.loc 1 2684 0 is_stmt 0 discriminator 1
	movq	-248(%rbp), %rax	# tlen, tlen.371
	cmpl	%ebx, %eax	# i, D.21812
	jg	.L803	#,
.L785:
	.loc 1 2700 0 is_stmt 1
	cmpl	$0, -288(%rbp)	#, grows
	je	.L804	#,
	.loc 1 2701 0
	movq	-312(%rbp), %rax	# o, tmp613
	movzbl	37(%rax), %eax	# o_110(D)->op_private, D.21811
	orl	$64, %eax	#, D.21811
	movl	%eax, %edx	# D.21811, D.21811
	movq	-312(%rbp), %rax	# o, tmp614
	movb	%dl, 37(%rax)	# D.21811, o_110(D)->op_private
.L804:
	.loc 1 2702 0
	movq	-320(%rbp), %rax	# expr, tmp615
	movq	%rax, %rdi	# tmp615,
	call	Perl_op_free	#
	.loc 1 2703 0
	movq	-328(%rbp), %rax	# repl, tmp616
	movq	%rax, %rdi	# tmp616,
	call	Perl_op_free	#
	.loc 1 2705 0
	movq	-312(%rbp), %rax	# o, D.21808
.L805:
	.loc 1 2706 0
	movq	-40(%rbp), %rbx	# D.21826, tmp619
	xorq	%fs:40, %rbx	#, tmp619
	je	.L806	#,
	call	__stack_chk_fail	#
.L806:
	addq	$312, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE60:
	.size	Perl_pmtrans, .-Perl_pmtrans
	.globl	Perl_newPMOP
	.type	Perl_newPMOP, @function
Perl_newPMOP:
.LFB61:
	.loc 1 2710 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	.loc 1 2713 0
	movl	$112, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp90, pmop
	movq	-8(%rbp), %rax	# pmop, tmp91
	movl	$112, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp91,
	call	memset	#
	.loc 1 2714 0
	movl	-20(%rbp), %eax	# type, tmp92
	movl	%eax, %edx	# tmp92, D.21837
	movq	-8(%rbp), %rax	# pmop, tmp93
	movw	%dx, 32(%rax)	# D.21837, pmop_2->op_type
	.loc 1 2715 0
	movl	-20(%rbp), %eax	# type, tmp95
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21838
	movq	-8(%rbp), %rax	# pmop, tmp96
	movq	%rdx, 16(%rax)	# D.21838, pmop_2->op_ppaddr
	.loc 1 2716 0
	movl	-24(%rbp), %eax	# flags, tmp97
	movl	%eax, %edx	# tmp97, D.21839
	movq	-8(%rbp), %rax	# pmop, tmp98
	movb	%dl, 36(%rax)	# D.21839, pmop_2->op_flags
	.loc 1 2717 0
	movl	-24(%rbp), %eax	# flags, tmp99
	sarl	$8, %eax	#, D.21840
	movl	%eax, %edx	# D.21840, D.21839
	movq	-8(%rbp), %rax	# pmop, tmp100
	movb	%dl, 37(%rax)	# D.21839, pmop_2->op_private
	.loc 1 2719 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.372
	andl	$1048576, %eax	#, D.21841
	testl	%eax, %eax	# D.21841
	je	.L808	#,
	.loc 1 2720 0
	movq	-8(%rbp), %rax	# pmop, tmp101
	movl	92(%rax), %eax	# pmop_2->op_pmpermflags, D.21841
	orl	$1, %eax	#, D.21841
	movl	%eax, %edx	# D.21841, D.21841
	movq	-8(%rbp), %rax	# pmop, tmp102
	movl	%edx, 92(%rax)	# D.21841, pmop_2->op_pmpermflags
.L808:
	.loc 1 2721 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.373
	andl	$4, %eax	#, D.21841
	testl	%eax, %eax	# D.21841
	je	.L809	#,
	.loc 1 2722 0
	movq	-8(%rbp), %rax	# pmop, tmp103
	movl	92(%rax), %eax	# pmop_2->op_pmpermflags, D.21841
	orb	$8, %ah	#, D.21841
	movl	%eax, %edx	# D.21841, D.21841
	movq	-8(%rbp), %rax	# pmop, tmp104
	movl	%edx, 92(%rax)	# D.21841, pmop_2->op_pmpermflags
.L809:
	.loc 1 2723 0
	movq	-8(%rbp), %rax	# pmop, tmp105
	movl	92(%rax), %edx	# pmop_2->op_pmpermflags, D.21841
	movq	-8(%rbp), %rax	# pmop, tmp106
	movl	%edx, 88(%rax)	# D.21841, pmop_2->op_pmflags
	.loc 1 2743 0
	cmpl	$35, -20(%rbp)	#, type
	je	.L810	#,
	.loc 1 2743 0 is_stmt 0 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.374
	testq	%rax, %rax	# PL_curstash.374
	je	.L810	#,
	.loc 1 2744 0 is_stmt 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.375
	movq	(%rax), %rax	# PL_curstash.375_20->sv_any, D.21842
	movq	72(%rax), %rdx	# _21->xhv_pmroot, D.21843
	movq	-8(%rbp), %rax	# pmop, tmp107
	movq	%rdx, 72(%rax)	# D.21843, pmop_2->op_pmnext
	.loc 1 2745 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.376
	movq	(%rax), %rax	# PL_curstash.376_23->sv_any, D.21842
	movq	-8(%rbp), %rdx	# pmop, tmp108
	movq	%rdx, 72(%rax)	# tmp108, _24->xhv_pmroot
	.loc 1 2746 0
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.377
	movq	-8(%rbp), %rax	# pmop, tmp109
	movq	%rdx, 104(%rax)	# PL_curstash.377, pmop_2->op_pmstash
.L810:
	.loc 1 2749 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.379
	testq	%rax, %rax	# PL_op_mask.379
	je	.L811	#,
	.loc 1 2749 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.380
	movl	-20(%rbp), %eax	# type, tmp110
	cltq
	addq	%rdx, %rax	# PL_op_mask.380, D.21845
	movzbl	(%rax), %eax	# *_29, D.21846
	testb	%al, %al	# D.21846
	je	.L811	#,
	movq	-8(%rbp), %rax	# pmop, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp113
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21845
	movq	%rax, %rsi	# D.21845,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.378
	jmp	.L812	#
.L811:
	.loc 1 2749 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp115
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21847
	movq	-8(%rbp), %rdx	# pmop, tmp116
	movq	%rdx, %rdi	# tmp116,
	call	*%rax	# D.21847
.L812:
	.loc 1 2750 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE61:
	.size	Perl_newPMOP, .-Perl_newPMOP
	.section	.rodata
.LC53:
	.string	"\\s+"
.LC54:
	.string	"&`'123456789+-\016\022"
	.text
	.globl	Perl_pmruntime
	.type	Perl_pmruntime, @function
Perl_pmruntime:
.LFB62:
	.loc 1 2754 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$112, %rsp	#,
	movq	%rdi, -88(%rbp)	# o, o
	movq	%rsi, -96(%rbp)	# expr, expr
	movq	%rdx, -104(%rbp)	# repl, repl
	.loc 1 2757 0
	movl	$0, -68(%rbp)	#, repl_has_vars
	.loc 1 2759 0
	movq	-88(%rbp), %rax	# o, tmp196
	movzwl	32(%rax), %eax	# o_21(D)->op_type, D.21850
	cmpw	$35, %ax	#, D.21850
	jne	.L815	#,
	.loc 1 2760 0
	movq	-104(%rbp), %rdx	# repl, tmp197
	movq	-96(%rbp), %rcx	# expr, tmp198
	movq	-88(%rbp), %rax	# o, tmp199
	movq	%rcx, %rsi	# tmp198,
	movq	%rax, %rdi	# tmp199,
	call	Perl_pmtrans	#
	jmp	.L816	#
.L815:
	.loc 1 2762 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.381
	orb	$1, %ah	#, PL_hints.382
	movl	%eax, PL_hints(%rip)	# PL_hints.382, PL_hints
	.loc 1 2763 0
	movq	-88(%rbp), %rax	# o, tmp200
	movq	%rax, -32(%rbp)	# tmp200, pm
	.loc 1 2765 0
	movq	-96(%rbp), %rax	# expr, tmp201
	movzwl	32(%rax), %eax	# expr_23(D)->op_type, D.21850
	cmpw	$5, %ax	#, D.21850
	jne	.L817	#,
.LBB34:
	.loc 1 2767 0
	movq	-96(%rbp), %rax	# expr, tmp202
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr_23(D)].op_sv, tmp203
	movq	%rax, -24(%rbp)	# tmp203, pat
	.loc 1 2768 0
	movq	-24(%rbp), %rax	# pat, tmp204
	movl	12(%rax), %eax	# pat_30->sv_flags, D.21851
	andl	$262144, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L818	#,
	.loc 1 2768 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# pat, tmp205
	movq	(%rax), %rax	# pat_30->sv_any, D.21852
	movq	8(%rax), %rax	# MEM[(struct XPV *)_33].xpv_cur, plen.384
	movq	%rax, -64(%rbp)	# plen.384, plen
	movq	-24(%rbp), %rax	# pat, tmp206
	movq	(%rax), %rax	# pat_30->sv_any, D.21852
	movq	(%rax), %rax	# MEM[(struct XPV *)_35].xpv_pv, iftmp.383
	jmp	.L819	#
.L818:
	.loc 1 2768 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp207
	movq	-24(%rbp), %rax	# pat, tmp208
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp207,
	movq	%rax, %rdi	# tmp208,
	call	Perl_sv_2pv_flags	#
.L819:
	.loc 1 2768 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.383, p
	.loc 1 2769 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rax	# o, tmp209
	movzbl	36(%rax), %eax	# o_21(D)->op_flags, D.21853
	testb	%al, %al	# D.21854
	jns	.L820	#,
	.loc 1 2769 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# p, tmp210
	movzbl	(%rax), %eax	# *p_38, D.21855
	cmpb	$32, %al	#, D.21855
	jne	.L820	#,
	movq	-56(%rbp), %rax	# p, tmp211
	addq	$1, %rax	#, D.21856
	movzbl	(%rax), %eax	# *_42, D.21855
	testb	%al, %al	# D.21855
	jne	.L820	#,
	.loc 1 2770 0 is_stmt 1
	movq	-24(%rbp), %rax	# pat, tmp212
	movl	$3, %edx	#,
	movl	$.LC53, %esi	#,
	movq	%rax, %rdi	# tmp212,
	call	Perl_sv_setpvn	#
	.loc 1 2771 0
	movq	-24(%rbp), %rax	# pat, tmp213
	movl	12(%rax), %eax	# pat_30->sv_flags, D.21851
	andl	$262144, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L821	#,
	.loc 1 2771 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# pat, tmp214
	movq	(%rax), %rax	# pat_30->sv_any, D.21852
	movq	8(%rax), %rax	# MEM[(struct XPV *)_46].xpv_cur, plen.386
	movq	%rax, -64(%rbp)	# plen.386, plen
	movq	-24(%rbp), %rax	# pat, tmp215
	movq	(%rax), %rax	# pat_30->sv_any, D.21852
	movq	(%rax), %rax	# MEM[(struct XPV *)_48].xpv_pv, iftmp.385
	jmp	.L822	#
.L821:
	.loc 1 2771 0 discriminator 2
	leaq	-64(%rbp), %rcx	#, tmp216
	movq	-24(%rbp), %rax	# pat, tmp217
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp216,
	movq	%rax, %rdi	# tmp217,
	call	Perl_sv_2pv_flags	#
.L822:
	.loc 1 2771 0 discriminator 3
	movq	%rax, -56(%rbp)	# iftmp.385, p
	.loc 1 2772 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# pm, tmp218
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	orl	$16, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp219
	movl	%edx, 88(%rax)	# D.21851, pm_28->op_pmflags
.L820:
	.loc 1 2774 0
	movq	-24(%rbp), %rax	# pat, tmp220
	movl	12(%rax), %eax	# pat_30->sv_flags, D.21851
	andl	$536870912, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L823	#,
	.loc 1 2774 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.387
	movzbl	37(%rax), %eax	# PL_curcop.387_56->op_private, D.21853
	movzbl	%al, %eax	# D.21853, D.21857
	andl	$8, %eax	#, D.21857
	testl	%eax, %eax	# D.21857
	jne	.L823	#,
	.loc 1 2775 0 is_stmt 1
	movq	-32(%rbp), %rax	# pm, tmp221
	movzbl	96(%rax), %eax	# pm_28->op_pmdynflags, D.21853
	orl	$4, %eax	#, D.21853
	movl	%eax, %edx	# D.21853, D.21853
	movq	-32(%rbp), %rax	# pm, tmp222
	movb	%dl, 96(%rax)	# D.21853, pm_28->op_pmdynflags
.L823:
	.loc 1 2776 0
	movq	PL_regcompp(%rip), %rax	# PL_regcompp, PL_regcompp.388
	movq	-64(%rbp), %rcx	# plen, plen.389
	movq	-56(%rbp), %rdx	# p, tmp223
	leaq	(%rcx,%rdx), %rsi	#, D.21856
	movq	-32(%rbp), %rdx	# pm, tmp224
	movq	-56(%rbp), %rcx	# p, tmp225
	movq	%rcx, %rdi	# tmp225,
	call	*%rax	# PL_regcompp.388
	movq	-32(%rbp), %rdx	# pm, tmp226
	movq	%rax, 80(%rdx)	# D.21858, pm_28->op_pmregexp
	.loc 1 2777 0
	movq	-32(%rbp), %rax	# pm, tmp227
	movq	80(%rax), %rax	# pm_28->op_pmregexp, D.21859
	movq	32(%rax), %rax	# _66->precomp, D.21856
	movq	%rax, %rsi	# D.21856,
	movl	$.LC53, %edi	#,
	call	strcmp	#
	testl	%eax, %eax	# D.21857
	jne	.L824	#,
	.loc 1 2778 0
	movq	-32(%rbp), %rax	# pm, tmp228
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	orl	$32, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp229
	movl	%edx, 88(%rax)	# D.21851, pm_28->op_pmflags
.L824:
	.loc 1 2779 0
	movq	-96(%rbp), %rax	# expr, tmp230
	movq	%rax, %rdi	# tmp230,
	call	Perl_op_free	#
.LBE34:
	jmp	.L825	#
.L817:
	.loc 1 2782 0
	movq	-32(%rbp), %rax	# pm, tmp231
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	andl	$128, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L826	#,
	.loc 1 2782 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.390
	andl	$2097152, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L827	#,
.L826:
	.loc 1 2783 0 is_stmt 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.392
	andl	$2097152, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L828	#,
	.loc 1 2783 0 is_stmt 0 discriminator 1
	movl	$29, %eax	#, iftmp.391
	jmp	.L829	#
.L828:
	.loc 1 2783 0 discriminator 2
	movl	$28, %eax	#, iftmp.391
.L829:
	.loc 1 2783 0 discriminator 3
	movq	-96(%rbp), %rdx	# expr, tmp232
	movl	$0, %esi	#,
	movl	%eax, %edi	# iftmp.391,
	call	Perl_newUNOP	#
	movq	%rax, -96(%rbp)	# tmp233, expr
.L827:
	.loc 1 2787 0 is_stmt 1
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -16(%rbp)	# tmp234, rcop
	movq	-16(%rbp), %rax	# rcop, tmp235
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp235,
	call	memset	#
	.loc 1 2788 0
	movq	-16(%rbp), %rax	# rcop, tmp236
	movw	$30, 32(%rax)	#, rcop_80->op_type
	.loc 1 2789 0
	movq	PL_ppaddr+240(%rip), %rdx	# PL_ppaddr, D.21860
	movq	-16(%rbp), %rax	# rcop, tmp237
	movq	%rdx, 16(%rax)	# D.21860, rcop_80->op_ppaddr
	.loc 1 2790 0
	movq	-96(%rbp), %rax	# expr, tmp238
	movq	%rax, %rdi	# tmp238,
	call	Perl_scalar	#
	movq	-16(%rbp), %rdx	# rcop, tmp239
	movq	%rax, 40(%rdx)	# D.21849, rcop_80->op_first
	.loc 1 2791 0
	movq	-16(%rbp), %rax	# rcop, tmp240
	movzbl	36(%rax), %eax	# rcop_80->op_flags, D.21853
	movl	%eax, %edx	# D.21853, D.21854
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.394
	andl	$2097152, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L830	#,
	.loc 1 2791 0 is_stmt 0 discriminator 1
	movl	$-124, %eax	#, iftmp.393
	jmp	.L831	#
.L830:
	.loc 1 2791 0 discriminator 2
	movl	$4, %eax	#, iftmp.393
.L831:
	.loc 1 2791 0 discriminator 3
	orl	%edx, %eax	# D.21854, D.21854
	movl	%eax, %edx	# D.21854, D.21853
	movq	-16(%rbp), %rax	# rcop, tmp241
	movb	%dl, 36(%rax)	# D.21853, rcop_80->op_flags
	.loc 1 2794 0 is_stmt 1 discriminator 3
	movq	-16(%rbp), %rax	# rcop, tmp242
	movb	$1, 37(%rax)	#, rcop_80->op_private
	.loc 1 2795 0 discriminator 3
	movq	-16(%rbp), %rax	# rcop, tmp243
	movq	-88(%rbp), %rdx	# o, tmp244
	movq	%rdx, 48(%rax)	# tmp244, rcop_80->op_other
	.loc 1 2798 0 discriminator 3
	movq	-32(%rbp), %rax	# pm, tmp245
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	andl	$128, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L832	#,
	.loc 1 2798 0 is_stmt 0 discriminator 1
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.395
	andl	$2097152, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L833	#,
.L832:
	.loc 1 2799 0 is_stmt 1
	movq	-96(%rbp), %rax	# expr, tmp246
	movq	(%rax), %rax	# expr_1->op_next, D.21849
	testq	%rax, %rax	# D.21849
	jne	.L835	#,
	.loc 1 2799 0 is_stmt 0 discriminator 2
	movq	-96(%rbp), %rax	# expr, tmp248
	movq	%rax, %rdi	# tmp248,
	call	Perl_linklist	#
.L835:
	.loc 1 2800 0 is_stmt 1
	movq	-16(%rbp), %rax	# rcop, tmp249
	movq	-96(%rbp), %rdx	# expr, tmp250
	movq	%rdx, (%rax)	# tmp250, rcop_80->op_next
	.loc 1 2801 0
	movq	-96(%rbp), %rax	# expr, tmp251
	movq	40(%rax), %rax	# MEM[(struct UNOP *)expr_1].op_first, D.21849
	movq	-16(%rbp), %rdx	# rcop, tmp252
	movq	%rdx, (%rax)	# tmp252, _101->op_next
	jmp	.L836	#
.L833:
	.loc 1 2804 0
	movq	-96(%rbp), %rax	# expr, tmp253
	movq	(%rax), %rax	# expr_1->op_next, D.21849
	testq	%rax, %rax	# D.21849
	je	.L837	#,
	.loc 1 2804 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# expr, tmp254
	movq	(%rax), %rax	# expr_1->op_next, iftmp.397
	jmp	.L838	#
.L837:
	.loc 1 2804 0 discriminator 2
	movq	-96(%rbp), %rax	# expr, tmp255
	movq	%rax, %rdi	# tmp255,
	call	Perl_linklist	#
.L838:
	.loc 1 2804 0 discriminator 3
	movq	-16(%rbp), %rdx	# rcop, tmp256
	movq	%rax, (%rdx)	# iftmp.397, rcop_80->op_next
	.loc 1 2805 0 is_stmt 1 discriminator 3
	movq	-96(%rbp), %rax	# expr, tmp257
	movq	-16(%rbp), %rdx	# rcop, tmp258
	movq	%rdx, (%rax)	# tmp258, expr_1->op_next
.L836:
	.loc 1 2808 0
	movq	-16(%rbp), %rax	# rcop, tmp259
	movq	%rax, %rdi	# tmp259,
	call	Perl_scalar	#
	movq	%rax, %rcx	#, D.21849
	movq	-88(%rbp), %rax	# o, tmp260
	movzwl	32(%rax), %eax	# o_21(D)->op_type, D.21850
	movzwl	%ax, %eax	# D.21850, D.21857
	movq	-88(%rbp), %rdx	# o, tmp261
	movq	%rcx, %rsi	# D.21849,
	movl	%eax, %edi	# D.21857,
	call	Perl_prepend_elem	#
.L825:
	.loc 1 2811 0
	cmpq	$0, -104(%rbp)	#, repl
	je	.L839	#,
.LBB35:
	.loc 1 2813 0
	movq	-32(%rbp), %rax	# pm, tmp262
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	andl	$1024, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L840	#,
	.loc 1 2814 0
	movq	$0, -48(%rbp)	#, curop
	.loc 1 2815 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.398
	movl	72(%rax), %edx	# PL_curcop.398_108->cop_line, D.21851
	movl	PL_multi_end(%rip), %eax	# PL_multi_end, PL_multi_end.399
	cmpl	%eax, %edx	# PL_multi_end.400, D.21851
	jae	.L842	#,
	.loc 1 2816 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.401
	movl	PL_multi_end(%rip), %edx	# PL_multi_end, PL_multi_end.402
	movl	%edx, 72(%rax)	# PL_multi_end.403, PL_curcop.401_112->cop_line
	jmp	.L842	#
.L840:
	.loc 1 2826 0
	movq	-104(%rbp), %rax	# repl, tmp263
	movzwl	32(%rax), %eax	# repl_24(D)->op_type, D.21850
	cmpw	$5, %ax	#, D.21850
	jne	.L843	#,
	.loc 1 2827 0
	movq	-104(%rbp), %rax	# repl, tmp264
	movq	%rax, -48(%rbp)	# tmp264, curop
	jmp	.L842	#
.L843:
.LBB36:
	.loc 1 2829 0
	movq	$0, -40(%rbp)	#, lastop
	.loc 1 2830 0
	movq	-104(%rbp), %rax	# repl, tmp265
	movq	(%rax), %rax	# repl_24(D)->op_next, D.21849
	testq	%rax, %rax	# D.21849
	je	.L844	#,
	.loc 1 2830 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# repl, tmp266
	movq	(%rax), %rax	# repl_24(D)->op_next, iftmp.404
	jmp	.L845	#
.L844:
	.loc 1 2830 0 discriminator 2
	movq	-104(%rbp), %rax	# repl, tmp267
	movq	%rax, %rdi	# tmp267,
	call	Perl_linklist	#
.L845:
	.loc 1 2830 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.404, curop
	jmp	.L846	#
.L860:
	.loc 1 2831 0 is_stmt 1
	movq	-48(%rbp), %rax	# curop, tmp268
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	movzwl	%ax, %eax	# D.21850, D.21857
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21851
	andl	$64, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	je	.L847	#,
	.loc 1 2839 0
	movq	-48(%rbp), %rax	# curop, tmp270
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	cmpw	$7, %ax	#, D.21850
	jne	.L848	#,
.LBB37:
	.loc 1 2840 0
	movq	-48(%rbp), %rax	# curop, tmp271
	movq	40(%rax), %rax	# MEM[(struct SVOP *)curop_6].op_sv, tmp272
	movq	%rax, -8(%rbp)	# tmp272, gv
	.loc 1 2841 0
	movl	$1, -68(%rbp)	#, repl_has_vars
	.loc 1 2842 0
	movq	-8(%rbp), %rax	# gv, tmp273
	movq	(%rax), %rax	# gv_127->sv_any, D.21861
	movq	56(%rax), %rax	# _129->xgv_gp, D.21862
	movq	48(%rax), %rax	# _130->gp_egv, D.21863
	testq	%rax, %rax	# D.21863
	je	.L849	#,
	.loc 1 2842 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# gv, tmp274
	movq	(%rax), %rax	# gv_127->sv_any, D.21861
	movq	56(%rax), %rax	# _132->xgv_gp, D.21862
	movq	48(%rax), %rax	# _133->gp_egv, iftmp.405
	jmp	.L850	#
.L849:
	.loc 1 2842 0 discriminator 2
	movq	-8(%rbp), %rax	# gv, iftmp.405
.L850:
	.loc 1 2842 0 discriminator 3
	movq	(%rax), %rax	# iftmp.405_16->sv_any, D.21861
	movq	64(%rax), %rax	# _136->xgv_name, D.21856
	movzbl	(%rax), %eax	# *_137, D.21855
	movsbl	%al, %eax	# D.21855, D.21857
	movl	%eax, %esi	# D.21857,
	movl	$.LC54, %edi	#,
	call	strchr	#
	testq	%rax, %rax	# D.21856
	je	.L851	#,
	.loc 1 2843 0 is_stmt 1
	jmp	.L842	#
.L851:
.LBE37:
	jmp	.L847	#
.L848:
	.loc 1 2846 0
	movq	-48(%rbp), %rax	# curop, tmp275
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	cmpw	$17, %ax	#, D.21850
	jne	.L852	#,
	.loc 1 2847 0
	jmp	.L842	#
.L852:
	.loc 1 2848 0
	movq	-48(%rbp), %rax	# curop, tmp276
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	cmpw	$15, %ax	#, D.21850
	je	.L853	#,
	.loc 1 2849 0 discriminator 1
	movq	-48(%rbp), %rax	# curop, tmp277
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2848 0 discriminator 1
	cmpw	$125, %ax	#, D.21850
	je	.L853	#,
	.loc 1 2850 0
	movq	-48(%rbp), %rax	# curop, tmp278
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2849 0
	cmpw	$134, %ax	#, D.21850
	je	.L853	#,
	.loc 1 2851 0
	movq	-48(%rbp), %rax	# curop, tmp279
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2850 0
	cmpw	$14, %ax	#, D.21850
	jne	.L854	#,
.L853:
	.loc 1 2852 0
	cmpq	$0, -40(%rbp)	#, lastop
	je	.L855	#,
	.loc 1 2852 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# lastop, tmp280
	movzwl	32(%rax), %eax	# lastop_8->op_type, D.21850
	cmpw	$7, %ax	#, D.21850
	je	.L855	#,
	.loc 1 2853 0 is_stmt 1
	jmp	.L842	#
.L855:
	.loc 1 2852 0 discriminator 2
	jmp	.L847	#
.L854:
	.loc 1 2855 0
	movq	-48(%rbp), %rax	# curop, tmp281
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	cmpw	$9, %ax	#, D.21850
	je	.L856	#,
	.loc 1 2856 0 discriminator 1
	movq	-48(%rbp), %rax	# curop, tmp282
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2855 0 discriminator 1
	cmpw	$10, %ax	#, D.21850
	je	.L856	#,
	.loc 1 2857 0
	movq	-48(%rbp), %rax	# curop, tmp283
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2856 0
	cmpw	$11, %ax	#, D.21850
	je	.L856	#,
	.loc 1 2858 0
	movq	-48(%rbp), %rax	# curop, tmp284
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	.loc 1 2857 0
	cmpw	$12, %ax	#, D.21850
	jne	.L857	#,
.L856:
	.loc 1 2859 0
	movl	$1, -68(%rbp)	#, repl_has_vars
	jmp	.L847	#
.L857:
	.loc 1 2861 0
	movq	-48(%rbp), %rax	# curop, tmp285
	movzwl	32(%rax), %eax	# curop_6->op_type, D.21850
	cmpw	$13, %ax	#, D.21850
	je	.L847	#,
	.loc 1 2864 0
	jmp	.L842	#
.L847:
	.loc 1 2866 0
	movq	-48(%rbp), %rax	# curop, tmp286
	movq	%rax, -40(%rbp)	# tmp286, lastop
	.loc 1 2830 0
	movq	-48(%rbp), %rax	# curop, tmp287
	movq	(%rax), %rax	# curop_6->op_next, D.21849
	testq	%rax, %rax	# D.21849
	je	.L858	#,
	.loc 1 2830 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# curop, tmp288
	movq	(%rax), %rax	# curop_6->op_next, iftmp.406
	jmp	.L859	#
.L858:
	.loc 1 2830 0 discriminator 2
	movq	-48(%rbp), %rax	# curop, tmp289
	movq	%rax, %rdi	# tmp289,
	call	Perl_linklist	#
.L859:
	.loc 1 2830 0 discriminator 3
	movq	%rax, -48(%rbp)	# iftmp.406, curop
.L846:
	.loc 1 2830 0 discriminator 1
	movq	-48(%rbp), %rax	# curop, tmp290
	cmpq	-104(%rbp), %rax	# repl, tmp290
	jne	.L860	#,
.L842:
.LBE36:
	.loc 1 2869 0 is_stmt 1
	movq	-48(%rbp), %rax	# curop, tmp291
	cmpq	-104(%rbp), %rax	# repl, tmp291
	jne	.L861	#,
	.loc 1 2870 0
	cmpl	$0, -68(%rbp)	#, repl_has_vars
	je	.L862	#,
	.loc 1 2871 0 discriminator 1
	movq	-32(%rbp), %rax	# pm, tmp292
	movq	80(%rax), %rax	# pm_28->op_pmregexp, D.21859
	.loc 1 2870 0 discriminator 1
	testq	%rax, %rax	# D.21859
	je	.L861	#,
	.loc 1 2872 0
	movq	-32(%rbp), %rax	# pm, tmp293
	movq	80(%rax), %rax	# pm_28->op_pmregexp, D.21859
	movl	92(%rax), %eax	# _159->reganch, D.21851
	andl	$1024, %eax	#, D.21851
	testl	%eax, %eax	# D.21851
	jne	.L861	#,
.L862:
	.loc 1 2873 0
	movq	-32(%rbp), %rax	# pm, tmp294
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	orl	$64, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp295
	movl	%edx, 88(%rax)	# D.21851, pm_28->op_pmflags
	.loc 1 2874 0
	movq	-32(%rbp), %rax	# pm, tmp296
	movl	92(%rax), %eax	# pm_28->op_pmpermflags, D.21851
	orl	$64, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp297
	movl	%edx, 92(%rax)	# D.21851, pm_28->op_pmpermflags
	.loc 1 2875 0
	movq	-104(%rbp), %rax	# repl, tmp298
	movq	%rax, %rdi	# tmp298,
	call	Perl_scalar	#
	movq	%rax, %rcx	#, D.21849
	movq	-88(%rbp), %rax	# o, tmp299
	movzwl	32(%rax), %eax	# o_21(D)->op_type, D.21850
	movzwl	%ax, %eax	# D.21850, D.21857
	movq	-88(%rbp), %rdx	# o, tmp300
	movq	%rcx, %rsi	# D.21849,
	movl	%eax, %edi	# D.21857,
	call	Perl_prepend_elem	#
	jmp	.L839	#
.L861:
	.loc 1 2878 0
	movq	-48(%rbp), %rax	# curop, tmp301
	cmpq	-104(%rbp), %rax	# repl, tmp301
	jne	.L863	#,
	.loc 1 2878 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pm, tmp302
	movq	80(%rax), %rax	# pm_28->op_pmregexp, D.21859
	testq	%rax, %rax	# D.21859
	jne	.L863	#,
	.loc 1 2879 0 is_stmt 1
	movq	-32(%rbp), %rax	# pm, tmp303
	movl	88(%rax), %eax	# pm_28->op_pmflags, D.21851
	orl	$8, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp304
	movl	%edx, 88(%rax)	# D.21851, pm_28->op_pmflags
	.loc 1 2880 0
	movq	-32(%rbp), %rax	# pm, tmp305
	movl	92(%rax), %eax	# pm_28->op_pmpermflags, D.21851
	orl	$8, %eax	#, D.21851
	movl	%eax, %edx	# D.21851, D.21851
	movq	-32(%rbp), %rax	# pm, tmp306
	movl	%edx, 92(%rax)	# D.21851, pm_28->op_pmpermflags
.L863:
	.loc 1 2882 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -16(%rbp)	# tmp307, rcop
	movq	-16(%rbp), %rax	# rcop, tmp308
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp308,
	call	memset	#
	.loc 1 2883 0
	movq	-16(%rbp), %rax	# rcop, tmp309
	movw	$34, 32(%rax)	#, rcop_174->op_type
	.loc 1 2884 0
	movq	PL_ppaddr+272(%rip), %rdx	# PL_ppaddr, D.21860
	movq	-16(%rbp), %rax	# rcop, tmp310
	movq	%rdx, 16(%rax)	# D.21860, rcop_174->op_ppaddr
	.loc 1 2885 0
	movq	-104(%rbp), %rax	# repl, tmp311
	movq	%rax, %rdi	# tmp311,
	call	Perl_scalar	#
	movq	-16(%rbp), %rdx	# rcop, tmp312
	movq	%rax, 40(%rdx)	# D.21849, rcop_174->op_first
	.loc 1 2886 0
	movq	-16(%rbp), %rax	# rcop, tmp313
	movzbl	36(%rax), %eax	# rcop_174->op_flags, D.21853
	orl	$4, %eax	#, D.21853
	movl	%eax, %edx	# D.21853, D.21853
	movq	-16(%rbp), %rax	# rcop, tmp314
	movb	%dl, 36(%rax)	# D.21853, rcop_174->op_flags
	.loc 1 2887 0
	movq	-16(%rbp), %rax	# rcop, tmp315
	movb	$1, 37(%rax)	#, rcop_174->op_private
	.loc 1 2888 0
	movq	-16(%rbp), %rax	# rcop, tmp316
	movq	-88(%rbp), %rdx	# o, tmp317
	movq	%rdx, 48(%rax)	# tmp317, rcop_174->op_other
	.loc 1 2891 0
	movq	-104(%rbp), %rax	# repl, tmp318
	movq	(%rax), %rax	# repl_24(D)->op_next, D.21849
	testq	%rax, %rax	# D.21849
	je	.L864	#,
	.loc 1 2891 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# repl, tmp319
	movq	(%rax), %rax	# repl_24(D)->op_next, iftmp.407
	jmp	.L865	#
.L864:
	.loc 1 2891 0 discriminator 2
	movq	-104(%rbp), %rax	# repl, tmp320
	movq	%rax, %rdi	# tmp320,
	call	Perl_linklist	#
.L865:
	.loc 1 2891 0 discriminator 3
	movq	-16(%rbp), %rdx	# rcop, tmp321
	movq	%rax, (%rdx)	# iftmp.407, rcop_174->op_next
	.loc 1 2892 0 is_stmt 1 discriminator 3
	movq	-104(%rbp), %rax	# repl, tmp322
	movq	-16(%rbp), %rdx	# rcop, tmp323
	movq	%rdx, (%rax)	# tmp323, repl_24(D)->op_next
	.loc 1 2894 0 discriminator 3
	movq	-16(%rbp), %rax	# rcop, tmp324
	movq	%rax, %rdi	# tmp324,
	call	Perl_scalar	#
	movq	-32(%rbp), %rdx	# pm, tmp325
	movq	%rax, 56(%rdx)	# D.21849, pm_28->op_pmreplroot
	.loc 1 2895 0 discriminator 3
	movq	-16(%rbp), %rax	# rcop, tmp326
	movq	(%rax), %rax	# rcop_174->op_next, D.21849
	testq	%rax, %rax	# D.21849
	je	.L866	#,
	.loc 1 2895 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# rcop, tmp327
	movq	(%rax), %rax	# rcop_174->op_next, iftmp.408
	jmp	.L867	#
.L866:
	.loc 1 2895 0 discriminator 2
	movq	-16(%rbp), %rax	# rcop, tmp328
	movq	%rax, %rdi	# tmp328,
	call	Perl_linklist	#
.L867:
	.loc 1 2895 0 discriminator 3
	movq	-32(%rbp), %rdx	# pm, tmp329
	movq	%rax, 64(%rdx)	# iftmp.408, pm_28->op_pmreplstart
	.loc 1 2896 0 is_stmt 1 discriminator 3
	movq	-16(%rbp), %rax	# rcop, tmp330
	movq	$0, (%rax)	#, rcop_174->op_next
.L839:
.LBE35:
	.loc 1 2900 0
	movq	-32(%rbp), %rax	# pm, D.21849
.L816:
	.loc 1 2901 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE62:
	.size	Perl_pmruntime, .-Perl_pmruntime
	.globl	Perl_newSVOP
	.type	Perl_newSVOP, @function
Perl_newSVOP:
.LFB63:
	.loc 1 2905 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# sv, sv
	.loc 1 2907 0
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp77, svop
	movq	-8(%rbp), %rax	# svop, tmp78
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp78,
	call	memset	#
	.loc 1 2908 0
	movl	-20(%rbp), %eax	# type, tmp79
	movl	%eax, %edx	# tmp79, D.21866
	movq	-8(%rbp), %rax	# svop, tmp80
	movw	%dx, 32(%rax)	# D.21866, svop_2->op_type
	.loc 1 2909 0
	movl	-20(%rbp), %eax	# type, tmp82
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21867
	movq	-8(%rbp), %rax	# svop, tmp83
	movq	%rdx, 16(%rax)	# D.21867, svop_2->op_ppaddr
	.loc 1 2910 0
	movq	-8(%rbp), %rax	# svop, tmp84
	movq	-32(%rbp), %rdx	# sv, tmp85
	movq	%rdx, 40(%rax)	# tmp85, svop_2->op_sv
	.loc 1 2911 0
	movq	-8(%rbp), %rax	# svop, tmp86
	movq	-8(%rbp), %rdx	# svop, tmp87
	movq	%rdx, (%rax)	# tmp87, svop_2->op_next
	.loc 1 2912 0
	movl	-24(%rbp), %eax	# flags, tmp88
	movl	%eax, %edx	# tmp88, D.21868
	movq	-8(%rbp), %rax	# svop, tmp89
	movb	%dl, 36(%rax)	# D.21868, svop_2->op_flags
	.loc 1 2913 0
	movl	-20(%rbp), %eax	# type, tmp91
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21869
	andl	$4, %eax	#, D.21869
	testl	%eax, %eax	# D.21869
	je	.L869	#,
	.loc 1 2914 0
	movq	-8(%rbp), %rax	# svop, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_scalar	#
.L869:
	.loc 1 2915 0
	movl	-20(%rbp), %eax	# type, tmp94
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21869
	andl	$8, %eax	#, D.21869
	testl	%eax, %eax	# D.21869
	je	.L870	#,
	.loc 1 2916 0
	movl	-20(%rbp), %eax	# type, tmp95
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp95,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# svop, tmp96
	movq	%rax, 24(%rdx)	# D.21870, svop_2->op_targ
.L870:
	.loc 1 2917 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.410
	testq	%rax, %rax	# PL_op_mask.410
	je	.L871	#,
	.loc 1 2917 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.411
	movl	-20(%rbp), %eax	# type, tmp97
	cltq
	addq	%rdx, %rax	# PL_op_mask.411, D.21872
	movzbl	(%rax), %eax	# *_17, D.21873
	testb	%al, %al	# D.21873
	je	.L871	#,
	movq	-8(%rbp), %rax	# svop, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp100
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21872
	movq	%rax, %rsi	# D.21872,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.409
	jmp	.L872	#
.L871:
	.loc 1 2917 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp102
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21874
	movq	-8(%rbp), %rdx	# svop, tmp103
	movq	%rdx, %rdi	# tmp103,
	call	*%rax	# D.21874
.L872:
	.loc 1 2918 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE63:
	.size	Perl_newSVOP, .-Perl_newSVOP
	.globl	Perl_newPADOP
	.type	Perl_newPADOP, @function
Perl_newPADOP:
.LFB64:
	.loc 1 2922 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# sv, sv
	.loc 1 2924 0
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp89, padop
	movq	-8(%rbp), %rax	# padop, tmp90
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp90,
	call	memset	#
	.loc 1 2925 0
	movl	-20(%rbp), %eax	# type, tmp91
	movl	%eax, %edx	# tmp91, D.21876
	movq	-8(%rbp), %rax	# padop, tmp92
	movw	%dx, 32(%rax)	# D.21876, padop_2->op_type
	.loc 1 2926 0
	movl	-20(%rbp), %eax	# type, tmp94
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21877
	movq	-8(%rbp), %rax	# padop, tmp95
	movq	%rdx, 16(%rax)	# D.21877, padop_2->op_ppaddr
	.loc 1 2927 0
	movl	-20(%rbp), %eax	# type, tmp96
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp96,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# padop, tmp97
	movq	%rax, 40(%rdx)	# D.21878, padop_2->op_padix
	.loc 1 2928 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.412
	movq	-8(%rbp), %rax	# padop, tmp98
	movq	40(%rax), %rax	# padop_2->op_padix, D.21878
	salq	$3, %rax	#, D.21878
	addq	%rdx, %rax	# PL_curpad.412, D.21879
	movq	(%rax), %rax	# *_10, D.21880
	movq	%rax, %rdi	# D.21880,
	call	Perl_sv_free	#
	.loc 1 2929 0
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.413
	movq	-8(%rbp), %rax	# padop, tmp99
	movq	40(%rax), %rax	# padop_2->op_padix, D.21878
	salq	$3, %rax	#, D.21878
	addq	%rax, %rdx	# D.21878, D.21879
	movq	-32(%rbp), %rax	# sv, tmp100
	movq	%rax, (%rdx)	# tmp100, *_15
	.loc 1 2930 0
	cmpq	$0, -32(%rbp)	#, sv
	je	.L875	#,
	.loc 1 2931 0
	movq	-32(%rbp), %rax	# sv, tmp101
	movl	12(%rax), %eax	# sv_16(D)->sv_flags, D.21881
	orb	$3, %ah	#, D.21881
	movl	%eax, %edx	# D.21881, D.21881
	movq	-32(%rbp), %rax	# sv, tmp102
	movl	%edx, 12(%rax)	# D.21881, sv_16(D)->sv_flags
.L875:
	.loc 1 2932 0
	movq	-8(%rbp), %rax	# padop, tmp103
	movq	-8(%rbp), %rdx	# padop, tmp104
	movq	%rdx, (%rax)	# tmp104, padop_2->op_next
	.loc 1 2933 0
	movl	-24(%rbp), %eax	# flags, tmp105
	movl	%eax, %edx	# tmp105, D.21882
	movq	-8(%rbp), %rax	# padop, tmp106
	movb	%dl, 36(%rax)	# D.21882, padop_2->op_flags
	.loc 1 2934 0
	movl	-20(%rbp), %eax	# type, tmp108
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21881
	andl	$4, %eax	#, D.21881
	testl	%eax, %eax	# D.21881
	je	.L876	#,
	.loc 1 2935 0
	movq	-8(%rbp), %rax	# padop, tmp109
	movq	%rax, %rdi	# tmp109,
	call	Perl_scalar	#
.L876:
	.loc 1 2936 0
	movl	-20(%rbp), %eax	# type, tmp111
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21881
	andl	$8, %eax	#, D.21881
	testl	%eax, %eax	# D.21881
	je	.L877	#,
	.loc 1 2937 0
	movl	-20(%rbp), %eax	# type, tmp112
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp112,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# padop, tmp113
	movq	%rax, 24(%rdx)	# D.21878, padop_2->op_targ
.L877:
	.loc 1 2938 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.415
	testq	%rax, %rax	# PL_op_mask.415
	je	.L878	#,
	.loc 1 2938 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.416
	movl	-20(%rbp), %eax	# type, tmp114
	cltq
	addq	%rdx, %rax	# PL_op_mask.416, D.21884
	movzbl	(%rax), %eax	# *_29, D.21885
	testb	%al, %al	# D.21885
	je	.L878	#,
	movq	-8(%rbp), %rax	# padop, tmp115
	movq	%rax, %rdi	# tmp115,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp117
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21884
	movq	%rax, %rsi	# D.21884,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.414
	jmp	.L879	#
.L878:
	.loc 1 2938 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp119
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21886
	movq	-8(%rbp), %rdx	# padop, tmp120
	movq	%rdx, %rdi	# tmp120,
	call	*%rax	# D.21886
.L879:
	.loc 1 2939 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE64:
	.size	Perl_newPADOP, .-Perl_newPADOP
	.globl	Perl_newGVOP
	.type	Perl_newGVOP, @function
Perl_newGVOP:
.LFB65:
	.loc 1 2943 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movl	%esi, -8(%rbp)	# flags, flags
	movq	%rdx, -16(%rbp)	# gv, gv
	.loc 1 2949 0
	movq	-16(%rbp), %rax	# gv, tmp69
	movq	%rax, PL_Sv(%rip)	# tmp69, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.418
	testq	%rax, %rax	# PL_Sv.418
	je	.L883	#,
	.loc 1 2949 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.419
	movl	8(%rax), %edx	# PL_Sv.419_3->sv_refcnt, D.21888
	addl	$1, %edx	#, D.21888
	movl	%edx, 8(%rax)	# D.21888, PL_Sv.419_3->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.419_3->sv_refcnt, D.21888
	testl	%eax, %eax	# D.21888
	je	.L883	#,
	.loc 1 2949 0
	nop
.L883:
	.loc 1 2949 0 discriminator 4
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.420
	movl	-8(%rbp), %ecx	# flags, tmp70
	movl	-4(%rbp), %eax	# type, tmp71
	movl	%ecx, %esi	# tmp70,
	movl	%eax, %edi	# tmp71,
	call	Perl_newSVOP	#
	.loc 1 2951 0 is_stmt 1 discriminator 4
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE65:
	.size	Perl_newGVOP, .-Perl_newGVOP
	.globl	Perl_newPVOP
	.type	Perl_newPVOP, @function
Perl_newPVOP:
.LFB66:
	.loc 1 2955 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movl	%esi, -24(%rbp)	# flags, flags
	movq	%rdx, -32(%rbp)	# pv, pv
	.loc 1 2957 0
	movl	$48, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp77, pvop
	movq	-8(%rbp), %rax	# pvop, tmp78
	movl	$48, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp78,
	call	memset	#
	.loc 1 2958 0
	movl	-20(%rbp), %eax	# type, tmp79
	movl	%eax, %edx	# tmp79, D.21890
	movq	-8(%rbp), %rax	# pvop, tmp80
	movw	%dx, 32(%rax)	# D.21890, pvop_2->op_type
	.loc 1 2959 0
	movl	-20(%rbp), %eax	# type, tmp82
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21891
	movq	-8(%rbp), %rax	# pvop, tmp83
	movq	%rdx, 16(%rax)	# D.21891, pvop_2->op_ppaddr
	.loc 1 2960 0
	movq	-8(%rbp), %rax	# pvop, tmp84
	movq	-32(%rbp), %rdx	# pv, tmp85
	movq	%rdx, 40(%rax)	# tmp85, pvop_2->op_pv
	.loc 1 2961 0
	movq	-8(%rbp), %rax	# pvop, tmp86
	movq	-8(%rbp), %rdx	# pvop, tmp87
	movq	%rdx, (%rax)	# tmp87, pvop_2->op_next
	.loc 1 2962 0
	movl	-24(%rbp), %eax	# flags, tmp88
	movl	%eax, %edx	# tmp88, D.21892
	movq	-8(%rbp), %rax	# pvop, tmp89
	movb	%dl, 36(%rax)	# D.21892, pvop_2->op_flags
	.loc 1 2963 0
	movl	-20(%rbp), %eax	# type, tmp91
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21893
	andl	$4, %eax	#, D.21893
	testl	%eax, %eax	# D.21893
	je	.L886	#,
	.loc 1 2964 0
	movq	-8(%rbp), %rax	# pvop, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_scalar	#
.L886:
	.loc 1 2965 0
	movl	-20(%rbp), %eax	# type, tmp94
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21893
	andl	$8, %eax	#, D.21893
	testl	%eax, %eax	# D.21893
	je	.L887	#,
	.loc 1 2966 0
	movl	-20(%rbp), %eax	# type, tmp95
	movl	$512, %esi	#,
	movl	%eax, %edi	# tmp95,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# pvop, tmp96
	movq	%rax, 24(%rdx)	# D.21894, pvop_2->op_targ
.L887:
	.loc 1 2967 0
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.422
	testq	%rax, %rax	# PL_op_mask.422
	je	.L888	#,
	.loc 1 2967 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.423
	movl	-20(%rbp), %eax	# type, tmp97
	cltq
	addq	%rdx, %rax	# PL_op_mask.423, D.21896
	movzbl	(%rax), %eax	# *_17, D.21897
	testb	%al, %al	# D.21897
	je	.L888	#,
	movq	-8(%rbp), %rax	# pvop, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_op_free	#
	movl	-20(%rbp), %eax	# type, tmp100
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21896
	movq	%rax, %rsi	# D.21896,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	movl	$0, %eax	#, iftmp.421
	jmp	.L889	#
.L888:
	.loc 1 2967 0 discriminator 2
	movl	-20(%rbp), %eax	# type, tmp102
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21898
	movq	-8(%rbp), %rdx	# pvop, tmp103
	movq	%rdx, %rdi	# tmp103,
	call	*%rax	# D.21898
.L889:
	.loc 1 2968 0 is_stmt 1 discriminator 3
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE66:
	.size	Perl_newPVOP, .-Perl_newPVOP
	.section	.rodata
.LC55:
	.string	"\"package\" with no arguments"
.LC56:
	.string	"<none>"
	.text
	.globl	Perl_package
	.type	Perl_package, @function
Perl_package:
.LFB67:
	.loc 1 2972 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 2975 0
	movl	$PL_curstash, %edi	#,
	call	Perl_save_hptr	#
	.loc 1 2976 0
	movq	PL_curstname(%rip), %rax	# PL_curstname, PL_curstname.424
	movq	%rax, %rdi	# PL_curstname.424,
	call	Perl_save_item	#
	.loc 1 2977 0
	cmpq	$0, -40(%rbp)	#, o
	je	.L892	#,
.LBB38:
	.loc 1 2980 0
	movq	-40(%rbp), %rax	# o, tmp74
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_3(D)].op_sv, tmp75
	movq	%rax, -16(%rbp)	# tmp75, sv
	.loc 1 2981 0
	movq	-16(%rbp), %rax	# sv, tmp76
	movl	12(%rax), %eax	# sv_4->sv_flags, D.21900
	andl	$262144, %eax	#, D.21900
	testl	%eax, %eax	# D.21900
	je	.L893	#,
	.loc 1 2981 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# sv, tmp77
	movq	(%rax), %rax	# sv_4->sv_any, D.21901
	movq	8(%rax), %rax	# MEM[(struct XPV *)_7].xpv_cur, len.426
	movq	%rax, -24(%rbp)	# len.426, len
	movq	-16(%rbp), %rax	# sv, tmp78
	movq	(%rax), %rax	# sv_4->sv_any, D.21901
	movq	(%rax), %rax	# MEM[(struct XPV *)_9].xpv_pv, iftmp.425
	jmp	.L894	#
.L893:
	.loc 1 2981 0 discriminator 2
	leaq	-24(%rbp), %rcx	#, tmp79
	movq	-16(%rbp), %rax	# sv, tmp80
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp79,
	movq	%rax, %rdi	# tmp80,
	call	Perl_sv_2pv_flags	#
.L894:
	.loc 1 2981 0 discriminator 1
	movq	%rax, -8(%rbp)	# iftmp.425, name
	.loc 1 2982 0 is_stmt 1 discriminator 1
	movq	-24(%rbp), %rax	# len, len.427
	movl	%eax, %ecx	# len.427, D.21900
	movq	-8(%rbp), %rax	# name, tmp81
	movl	$1, %edx	#,
	movl	%ecx, %esi	# D.21900,
	movq	%rax, %rdi	# tmp81,
	call	Perl_gv_stashpvn	#
	movq	%rax, PL_curstash(%rip)	# PL_curstash.428, PL_curstash
	.loc 1 2983 0 discriminator 1
	movq	-24(%rbp), %rdx	# len, len.429
	movq	PL_curstname(%rip), %rax	# PL_curstname, PL_curstname.430
	movq	-8(%rbp), %rcx	# name, tmp82
	movq	%rcx, %rsi	# tmp82,
	movq	%rax, %rdi	# PL_curstname.430,
	call	Perl_sv_setpvn	#
	.loc 1 2984 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_op_free	#
.LBE38:
	jmp	.L895	#
.L892:
	.loc 1 2987 0
	movl	$.LC55, %edi	#,
	call	Perl_deprecate	#
	.loc 1 2988 0
	movq	PL_curstname(%rip), %rax	# PL_curstname, PL_curstname.431
	movl	$.LC56, %esi	#,
	movq	%rax, %rdi	# PL_curstname.431,
	call	Perl_sv_setpv	#
	.loc 1 2989 0
	movq	$0, PL_curstash(%rip)	#, PL_curstash
.L895:
	.loc 1 2991 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.432
	orb	$1, %ah	#, PL_hints.433
	movl	%eax, PL_hints(%rip)	# PL_hints.433, PL_hints
	.loc 1 2992 0
	movl	$-1, PL_copline(%rip)	#, PL_copline
	.loc 1 2993 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 2994 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE67:
	.size	Perl_package, .-Perl_package
	.section	.rodata
.LC57:
	.string	"Module name must be constant"
	.align 8
.LC58:
	.string	"Version number must be constant number"
.LC59:
	.string	"VERSION"
.LC60:
	.string	"unimport"
.LC61:
	.string	"BEGIN"
	.text
	.globl	Perl_utilize
	.type	Perl_utilize, @function
Perl_utilize:
.LFB68:
	.loc 1 2998 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r13	#
	pushq	%r12	#
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movl	%edi, -100(%rbp)	# aver, aver
	movl	%esi, -104(%rbp)	# floor, floor
	movq	%rdx, -112(%rbp)	# version, version
	movq	%rcx, -120(%rbp)	# idop, idop
	movq	%r8, -128(%rbp)	# arg, arg
	.loc 1 3003 0
	movq	-120(%rbp), %rax	# idop, tmp153
	movzwl	32(%rax), %eax	# idop_11(D)->op_type, D.21904
	cmpw	$5, %ax	#, D.21904
	je	.L897	#,
	.loc 1 3004 0
	movl	$.LC57, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L897:
	.loc 1 3006 0
	movq	$0, -80(%rbp)	#, veop
	.loc 1 3008 0
	cmpq	$0, -112(%rbp)	#, version
	je	.L898	#,
.LBB39:
	.loc 1 3009 0
	movq	-112(%rbp), %rax	# version, tmp154
	movq	40(%rax), %rax	# MEM[(struct SVOP *)version_14(D)].op_sv, tmp155
	movq	%rax, -72(%rbp)	# tmp155, vesv
	.loc 1 3011 0
	cmpq	$0, -128(%rbp)	#, arg
	jne	.L899	#,
	.loc 1 3011 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# vesv, tmp156
	movl	12(%rax), %eax	# vesv_16->sv_flags, D.21905
	andl	$50331648, %eax	#, D.21905
	testl	%eax, %eax	# D.21905
	jne	.L899	#,
	.loc 1 3012 0 is_stmt 1
	movq	-112(%rbp), %rax	# version, tmp157
	movq	%rax, -128(%rbp)	# tmp157, arg
	jmp	.L898	#
.L899:
.LBB40:
	.loc 1 3018 0
	movq	-112(%rbp), %rax	# version, tmp158
	movzwl	32(%rax), %eax	# version_14(D)->op_type, D.21904
	cmpw	$5, %ax	#, D.21904
	jne	.L900	#,
	.loc 1 3018 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# vesv, tmp159
	movl	12(%rax), %eax	# vesv_16->sv_flags, D.21905
	andl	$50331648, %eax	#, D.21905
	testl	%eax, %eax	# D.21905
	jne	.L901	#,
.L900:
	.loc 1 3019 0 is_stmt 1
	movl	$.LC58, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L901:
	.loc 1 3022 0
	movq	-120(%rbp), %rax	# idop, tmp160
	movq	40(%rax), %rax	# MEM[(struct SVOP *)idop_11(D)].op_sv, D.21906
	movq	%rax, %rdi	# D.21906,
	call	Perl_newSVsv	#
	movq	%rax, %rdx	# D.21906,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -64(%rbp)	# tmp161, pack
	.loc 1 3025 0
	movl	$7, %esi	#,
	movl	$.LC59, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -56(%rbp)	# tmp162, meth
	.loc 1 3026 0
	movq	-56(%rbp), %rax	# meth, tmp163
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp163,
	call	Perl_sv_upgrade	#
	.loc 1 3027 0
	movq	-56(%rbp), %rax	# meth, tmp164
	movl	12(%rax), %eax	# meth_26->sv_flags, D.21905
	andl	$2097152, %eax	#, D.21905
	testl	%eax, %eax	# D.21905
	je	.L903	#,
	.loc 1 3027 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# meth, tmp165
	movq	%rax, %rdi	# tmp165,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.21907
	je	.L903	#,
	.loc 1 3027 0
	nop
.L903:
	.loc 1 3027 0 discriminator 3
	movq	-56(%rbp), %rax	# meth, tmp166
	movl	12(%rax), %eax	# meth_26->sv_flags, D.21905
	orl	$16842752, %eax	#, D.21905
	movl	%eax, %edx	# D.21905, D.21905
	movq	-56(%rbp), %rax	# meth, tmp167
	movl	%edx, 12(%rax)	# D.21905, meth_26->sv_flags
.LBB41:
	.loc 1 3028 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# meth, tmp168
	movq	(%rax), %rax	# meth_26->sv_any, D.21908
	movq	(%rax), %rbx	# MEM[(struct XPV *)_34].xpv_pv, s_PeRlHaSh_tmp
	movq	%rbx, %r13	# s_PeRlHaSh_tmp, s_PeRlHaSh
	movq	-56(%rbp), %rax	# meth, tmp169
	movq	(%rax), %rax	# meth_26->sv_any, D.21908
	movq	8(%rax), %rax	# MEM[(struct XPV *)_37].xpv_cur, D.21909
	movl	%eax, %r12d	# D.21909, i_PeRlHaSh
	movl	$0, %ebx	#, hash_PeRlHaSh
	jmp	.L904	#
.L905:
	.loc 1 3028 0 is_stmt 0 discriminator 2
	movq	%r13, %rax	# s_PeRlHaSh, s_PeRlHaSh.435
	leaq	1(%rax), %r13	#, s_PeRlHaSh
	movzbl	(%rax), %eax	# *s_PeRlHaSh.435_43, D.21910
	movzbl	%al, %eax	# D.21910, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	sall	$10, %eax	#, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	shrl	$6, %eax	#, D.21905
	xorl	%eax, %ebx	# D.21905, hash_PeRlHaSh
.L904:
	.loc 1 3028 0 discriminator 1
	movl	%r12d, %eax	# i_PeRlHaSh, i_PeRlHaSh.436
	leal	-1(%rax), %r12d	#, i_PeRlHaSh
	testl	%eax, %eax	# i_PeRlHaSh.436
	jne	.L905	#,
	.loc 1 3028 0 discriminator 3
	leal	0(,%rbx,8), %eax	#, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	shrl	$11, %eax	#, D.21905
	xorl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movq	-56(%rbp), %rax	# meth, tmp170
	movq	(%rax), %rax	# meth_26->sv_any, D.21908
	movl	%ebx, %edx	# hash_PeRlHaSh, D.21905
	sall	$15, %edx	#, D.21905
	addl	%ebx, %edx	# hash_PeRlHaSh, D.21905
	movl	%edx, %edx	# D.21905, D.21909
	movq	%rdx, 24(%rax)	# D.21909, MEM[(struct XPVUV *)_56].xuv_uv
.LBE41:
	.loc 1 3029 0 is_stmt 1 discriminator 3
	movq	-56(%rbp), %rax	# meth, tmp171
	movq	%rax, %rdx	# tmp171,
	movl	$0, %esi	#,
	movl	$350, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rbx	#, D.21912
	movq	-112(%rbp), %rax	# version, tmp172
	movq	%rax, %rdi	# tmp172,
	call	Perl_list	#
	movq	%rax, %rdx	#, D.21912
	movq	-64(%rbp), %rax	# pack, tmp173
	movq	%rax, %rsi	# tmp173,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rbx, %rdx	# D.21912,
	movq	%rax, %rsi	# D.21912,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.21912,
	movl	$192, %esi	#,
	movl	$166, %edi	#,
	call	Perl_convert	#
	movq	%rax, -80(%rbp)	# tmp174, veop
.L898:
.LBE40:
.LBE39:
	.loc 1 3037 0
	cmpq	$0, -128(%rbp)	#, arg
	je	.L906	#,
	.loc 1 3037 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# arg, tmp175
	movzwl	32(%rax), %eax	# arg_1->op_type, D.21904
	cmpw	$1, %ax	#, D.21904
	jne	.L906	#,
	.loc 1 3038 0 is_stmt 1
	movq	-128(%rbp), %rax	# arg, tmp176
	movq	%rax, -88(%rbp)	# tmp176, imop
	jmp	.L907	#
.L906:
	.loc 1 3039 0
	movq	-120(%rbp), %rax	# idop, tmp177
	movq	40(%rax), %rax	# MEM[(struct SVOP *)idop_11(D)].op_sv, D.21906
	movl	12(%rax), %eax	# _68->sv_flags, D.21905
	andl	$50331648, %eax	#, D.21905
	testl	%eax, %eax	# D.21905
	je	.L908	#,
	.loc 1 3040 0
	movq	$0, -88(%rbp)	#, imop
	jmp	.L907	#
.L908:
.LBB42:
	.loc 1 3046 0
	movq	-120(%rbp), %rax	# idop, tmp178
	movq	40(%rax), %rax	# MEM[(struct SVOP *)idop_11(D)].op_sv, D.21906
	movq	%rax, %rdi	# D.21906,
	call	Perl_newSVsv	#
	movq	%rax, %rdx	# D.21906,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -48(%rbp)	# tmp179, pack
	.loc 1 3049 0
	cmpl	$0, -100(%rbp)	#, aver
	je	.L909	#,
	.loc 1 3049 0 is_stmt 0 discriminator 1
	movl	$6, %esi	#,
	movl	$.LC32, %edi	#,
	call	Perl_newSVpvn	#
	jmp	.L910	#
.L909:
	.loc 1 3049 0 discriminator 2
	movl	$8, %esi	#,
	movl	$.LC60, %edi	#,
	call	Perl_newSVpvn	#
.L910:
	.loc 1 3049 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.437, meth
	.loc 1 3050 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# meth, tmp180
	movl	12(%rax), %eax	# meth_78->sv_flags, D.21905
	movzbl	%al, %eax	# D.21905, D.21905
	cmpl	$4, %eax	#, D.21905
	ja	.L911	#,
	.loc 1 3050 0 is_stmt 0 discriminator 2
	movq	-40(%rbp), %rax	# meth, tmp181
	movl	$5, %esi	#,
	movq	%rax, %rdi	# tmp181,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.21913
	je	.L913	#,
.L911:
	.loc 1 3050 0 discriminator 1
	nop
.L913:
	.loc 1 3051 0 is_stmt 1
	movq	-40(%rbp), %rax	# meth, tmp182
	movl	12(%rax), %eax	# meth_78->sv_flags, D.21905
	andl	$2097152, %eax	#, D.21905
	testl	%eax, %eax	# D.21905
	je	.L915	#,
	.loc 1 3051 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# meth, tmp183
	movq	%rax, %rdi	# tmp183,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.21907
	je	.L915	#,
	.loc 1 3051 0
	nop
.L915:
	.loc 1 3051 0 discriminator 3
	movq	-40(%rbp), %rax	# meth, tmp184
	movl	12(%rax), %eax	# meth_78->sv_flags, D.21905
	orl	$16842752, %eax	#, D.21905
	movl	%eax, %edx	# D.21905, D.21905
	movq	-40(%rbp), %rax	# meth, tmp185
	movl	%edx, 12(%rax)	# D.21905, meth_78->sv_flags
.LBB43:
	.loc 1 3052 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# meth, tmp186
	movq	(%rax), %rax	# meth_78->sv_any, D.21908
	movq	(%rax), %rbx	# MEM[(struct XPV *)_91].xpv_pv, s_PeRlHaSh_tmp
	movq	%rbx, %r13	# s_PeRlHaSh_tmp, s_PeRlHaSh
	movq	-40(%rbp), %rax	# meth, tmp187
	movq	(%rax), %rax	# meth_78->sv_any, D.21908
	movq	8(%rax), %rax	# MEM[(struct XPV *)_94].xpv_cur, D.21909
	movl	%eax, %r12d	# D.21909, i_PeRlHaSh
	movl	$0, %ebx	#, hash_PeRlHaSh
	jmp	.L916	#
.L917:
	.loc 1 3052 0 is_stmt 0 discriminator 2
	movq	%r13, %rax	# s_PeRlHaSh, s_PeRlHaSh.440
	leaq	1(%rax), %r13	#, s_PeRlHaSh
	movzbl	(%rax), %eax	# *s_PeRlHaSh.440_100, D.21910
	movzbl	%al, %eax	# D.21910, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	sall	$10, %eax	#, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	shrl	$6, %eax	#, D.21905
	xorl	%eax, %ebx	# D.21905, hash_PeRlHaSh
.L916:
	.loc 1 3052 0 discriminator 1
	movl	%r12d, %eax	# i_PeRlHaSh, i_PeRlHaSh.441
	leal	-1(%rax), %r12d	#, i_PeRlHaSh
	testl	%eax, %eax	# i_PeRlHaSh.441
	jne	.L917	#,
	.loc 1 3052 0 discriminator 3
	leal	0(,%rbx,8), %eax	#, D.21905
	addl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movl	%ebx, %eax	# hash_PeRlHaSh, D.21905
	shrl	$11, %eax	#, D.21905
	xorl	%eax, %ebx	# D.21905, hash_PeRlHaSh
	movq	-40(%rbp), %rax	# meth, tmp188
	movq	(%rax), %rax	# meth_78->sv_any, D.21908
	movl	%ebx, %edx	# hash_PeRlHaSh, D.21905
	sall	$15, %edx	#, D.21905
	addl	%ebx, %edx	# hash_PeRlHaSh, D.21905
	movl	%edx, %edx	# D.21905, D.21909
	movq	%rdx, 24(%rax)	# D.21909, MEM[(struct XPVUV *)_113].xuv_uv
.LBE43:
	.loc 1 3053 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# meth, tmp189
	movq	%rax, %rdx	# tmp189,
	movl	$0, %esi	#,
	movl	$350, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rbx	#, D.21912
	movq	-128(%rbp), %rax	# arg, tmp190
	movq	%rax, %rdi	# tmp190,
	call	Perl_list	#
	movq	%rax, %rdx	#, D.21912
	movq	-48(%rbp), %rax	# pack, tmp191
	movq	%rax, %rsi	# tmp191,
	movl	$141, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rbx, %rdx	# D.21912,
	movq	%rax, %rsi	# D.21912,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.21912,
	movl	$192, %esi	#,
	movl	$166, %edi	#,
	call	Perl_convert	#
	movq	%rax, -88(%rbp)	# tmp192, imop
.L907:
.LBE42:
	.loc 1 3060 0
	movq	-88(%rbp), %rax	# imop, tmp193
	movq	%rax, %rdx	# tmp193,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newSTATEOP	#
	movq	%rax, %rbx	#, D.21912
	movq	-80(%rbp), %rax	# veop, tmp194
	movq	%rax, %rdx	# tmp194,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newSTATEOP	#
	movq	%rax, %r12	#, D.21912
	movq	-120(%rbp), %rax	# idop, tmp195
	movq	%rax, %rdx	# tmp195,
	movl	$0, %esi	#,
	movl	$309, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdx	# D.21912,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newSTATEOP	#
	movq	%r12, %rdx	# D.21912,
	movq	%rax, %rsi	# D.21912,
	movl	$173, %edi	#,
	call	Perl_append_elem	#
	movq	%rbx, %rdx	# D.21912,
	movq	%rax, %rsi	# D.21912,
	movl	$173, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rbx	#, D.21912
	movl	$5, %esi	#,
	movl	$.LC61, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.21906,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rsi	#, D.21912
	movl	-104(%rbp), %eax	# floor, tmp196
	movq	%rbx, %r8	# D.21912,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp196,
	call	Perl_newATTRSUB	#
	.loc 1 3087 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.442
	orb	$1, %ah	#, PL_hints.443
	movl	%eax, PL_hints(%rip)	# PL_hints.443, PL_hints
	.loc 1 3088 0
	movl	$-1, PL_copline(%rip)	#, PL_copline
	.loc 1 3089 0
	movl	$3, PL_expect(%rip)	#, PL_expect
	.loc 1 3090 0
	movl	PL_cop_seqmax(%rip), %eax	# PL_cop_seqmax, PL_cop_seqmax.444
	addl	$1, %eax	#, PL_cop_seqmax.445
	movl	%eax, PL_cop_seqmax(%rip)	# PL_cop_seqmax.445, PL_cop_seqmax
	.loc 1 3091 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%r13	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE68:
	.size	Perl_utilize, .-Perl_utilize
	.globl	Perl_load_module
	.type	Perl_load_module, @function
Perl_load_module:
.LFB69:
	.loc 1 3111 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$240, %rsp	#,
	movl	%edi, -212(%rbp)	# flags, flags
	movq	%rsi, -224(%rbp)	# name, name
	movq	%rcx, -152(%rbp)	#,
	movq	%r8, -144(%rbp)	#,
	movq	%r9, -136(%rbp)	#,
	testb	%al, %al	#
	je	.L919	#,
	.loc 1 3111 0
	movaps	%xmm0, -128(%rbp)	#,
	movaps	%xmm1, -112(%rbp)	#,
	movaps	%xmm2, -96(%rbp)	#,
	movaps	%xmm3, -80(%rbp)	#,
	movaps	%xmm4, -64(%rbp)	#,
	movaps	%xmm5, -48(%rbp)	#,
	movaps	%xmm6, -32(%rbp)	#,
	movaps	%xmm7, -16(%rbp)	#,
.L919:
	movq	%rdx, -232(%rbp)	# ver, ver
	.loc 1 3113 0
	movl	$24, -200(%rbp)	#, MEM[(struct [1] *)&args].gp_offset
	movl	$48, -196(%rbp)	#, MEM[(struct [1] *)&args].fp_offset
	leaq	16(%rbp), %rax	#, tmp64
	movq	%rax, -192(%rbp)	# tmp64, MEM[(struct [1] *)&args].overflow_arg_area
	leaq	-176(%rbp), %rax	#, tmp65
	movq	%rax, -184(%rbp)	# tmp65, MEM[(struct [1] *)&args].reg_save_area
	.loc 1 3114 0
	leaq	-200(%rbp), %rcx	#, tmp60
	movq	-232(%rbp), %rdx	# ver, tmp61
	movq	-224(%rbp), %rsi	# name, tmp62
	movl	-212(%rbp), %eax	# flags, tmp63
	movl	%eax, %edi	# tmp63,
	call	Perl_vload_module	#
	.loc 1 3116 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE69:
	.size	Perl_load_module, .-Perl_load_module
	.globl	Perl_vload_module
	.type	Perl_vload_module, @function
Perl_vload_module:
.LFB70:
	.loc 1 3132 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movl	%edi, -52(%rbp)	# flags, flags
	movq	%rsi, -64(%rbp)	# name, name
	movq	%rdx, -72(%rbp)	# ver, ver
	movq	%rcx, -80(%rbp)	# args, args
	.loc 1 3135 0
	movq	-64(%rbp), %rax	# name, tmp96
	movq	%rax, %rdx	# tmp96,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -16(%rbp)	# tmp97, modname
	.loc 1 3136 0
	movq	-16(%rbp), %rax	# modname, tmp98
	movzbl	37(%rax), %eax	# modname_9->op_private, D.21921
	orl	$64, %eax	#, D.21921
	movl	%eax, %edx	# D.21921, D.21921
	movq	-16(%rbp), %rax	# modname, tmp99
	movb	%dl, 37(%rax)	# D.21921, modname_9->op_private
	.loc 1 3137 0
	cmpq	$0, -72(%rbp)	#, ver
	je	.L921	#,
	.loc 1 3138 0
	movq	-72(%rbp), %rax	# ver, tmp100
	movq	%rax, %rdx	# tmp100,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -40(%rbp)	# tmp101, veop
	jmp	.L922	#
.L921:
	.loc 1 3141 0
	movq	$0, -40(%rbp)	#, veop
.L922:
	.loc 1 3142 0
	movl	-52(%rbp), %eax	# flags, tmp102
	andl	$2, %eax	#, D.21922
	testl	%eax, %eax	# D.21922
	je	.L923	#,
	.loc 1 3143 0
	call	Perl_newNULLLIST	#
	movq	%rax, %rdi	# D.21923,
	call	Perl_sawparens	#
	movq	%rax, -32(%rbp)	# tmp103, imop
	jmp	.L924	#
.L923:
	.loc 1 3145 0
	movl	-52(%rbp), %eax	# flags, tmp104
	andl	$4, %eax	#, D.21922
	testl	%eax, %eax	# D.21922
	je	.L925	#,
	.loc 1 3146 0
	movq	-80(%rbp), %rax	# args, tmp105
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	cmpl	$48, %eax	#, D.21922
	jae	.L926	#,
	.loc 1 3146 0 is_stmt 0 discriminator 2
	movq	-80(%rbp), %rax	# args, tmp106
	movq	16(%rax), %rdx	# args_20(D)->reg_save_area, D.21924
	movq	-80(%rbp), %rax	# args, tmp107
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	movl	%eax, %eax	# D.21922, D.21925
	addq	%rdx, %rax	# D.21924, addr.446
	movq	-80(%rbp), %rdx	# args, tmp108
	movl	(%rdx), %edx	# args_20(D)->gp_offset, D.21922
	leal	8(%rdx), %ecx	#, D.21922
	movq	-80(%rbp), %rdx	# args, tmp109
	movl	%ecx, (%rdx)	# D.21922, args_20(D)->gp_offset
	jmp	.L927	#
.L926:
	.loc 1 3146 0 discriminator 1
	movq	-80(%rbp), %rax	# args, tmp110
	movq	8(%rax), %rdx	# args_20(D)->overflow_arg_area, D.21924
	movq	%rdx, %rax	# D.21924, addr.446
	leaq	8(%rdx), %rcx	#, D.21924
	movq	-80(%rbp), %rdx	# args, tmp111
	movq	%rcx, 8(%rdx)	# D.21924, args_20(D)->overflow_arg_area
.L927:
	movq	(%rax), %rax	# MEM[(struct OP * * {ref-all})addr.446_5], tmp112
	movq	%rax, -32(%rbp)	# tmp112, imop
	jmp	.L924	#
.L925:
.LBB44:
	.loc 1 3150 0 is_stmt 1
	movq	$0, -32(%rbp)	#, imop
	.loc 1 3151 0
	movq	-80(%rbp), %rax	# args, tmp113
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	cmpl	$48, %eax	#, D.21922
	jae	.L928	#,
	.loc 1 3151 0 is_stmt 0 discriminator 2
	movq	-80(%rbp), %rax	# args, tmp114
	movq	16(%rax), %rdx	# args_20(D)->reg_save_area, D.21924
	movq	-80(%rbp), %rax	# args, tmp115
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	movl	%eax, %eax	# D.21922, D.21925
	addq	%rdx, %rax	# D.21924, addr.447
	movq	-80(%rbp), %rdx	# args, tmp116
	movl	(%rdx), %edx	# args_20(D)->gp_offset, D.21922
	leal	8(%rdx), %ecx	#, D.21922
	movq	-80(%rbp), %rdx	# args, tmp117
	movl	%ecx, (%rdx)	# D.21922, args_20(D)->gp_offset
	jmp	.L929	#
.L928:
	.loc 1 3151 0 discriminator 1
	movq	-80(%rbp), %rax	# args, tmp118
	movq	8(%rax), %rdx	# args_20(D)->overflow_arg_area, D.21924
	movq	%rdx, %rax	# D.21924, addr.447
	leaq	8(%rdx), %rcx	#, D.21924
	movq	-80(%rbp), %rdx	# args, tmp119
	movq	%rcx, 8(%rdx)	# D.21924, args_20(D)->overflow_arg_area
.L929:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.447_6], tmp120
	movq	%rax, -24(%rbp)	# tmp120, sv
	.loc 1 3152 0 is_stmt 1 discriminator 1
	jmp	.L930	#
.L933:
	.loc 1 3153 0
	movq	-24(%rbp), %rax	# sv, tmp121
	movq	%rax, %rdx	# tmp121,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.21923
	movq	-32(%rbp), %rax	# imop, tmp122
	movq	%rax, %rsi	# tmp122,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -32(%rbp)	# tmp123, imop
	.loc 1 3154 0
	movq	-80(%rbp), %rax	# args, tmp124
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	cmpl	$48, %eax	#, D.21922
	jae	.L931	#,
	.loc 1 3154 0 is_stmt 0 discriminator 2
	movq	-80(%rbp), %rax	# args, tmp125
	movq	16(%rax), %rdx	# args_20(D)->reg_save_area, D.21924
	movq	-80(%rbp), %rax	# args, tmp126
	movl	(%rax), %eax	# args_20(D)->gp_offset, D.21922
	movl	%eax, %eax	# D.21922, D.21925
	addq	%rdx, %rax	# D.21924, addr.448
	movq	-80(%rbp), %rdx	# args, tmp127
	movl	(%rdx), %edx	# args_20(D)->gp_offset, D.21922
	leal	8(%rdx), %ecx	#, D.21922
	movq	-80(%rbp), %rdx	# args, tmp128
	movl	%ecx, (%rdx)	# D.21922, args_20(D)->gp_offset
	jmp	.L932	#
.L931:
	.loc 1 3154 0 discriminator 1
	movq	-80(%rbp), %rax	# args, tmp129
	movq	8(%rax), %rdx	# args_20(D)->overflow_arg_area, D.21924
	movq	%rdx, %rax	# D.21924, addr.448
	leaq	8(%rdx), %rcx	#, D.21924
	movq	-80(%rbp), %rdx	# args, tmp130
	movq	%rcx, 8(%rdx)	# D.21924, args_20(D)->overflow_arg_area
.L932:
	movq	(%rax), %rax	# MEM[(struct SV * * {ref-all})addr.448_7], tmp131
	movq	%rax, -24(%rbp)	# tmp131, sv
.L930:
	.loc 1 3152 0 is_stmt 1 discriminator 1
	cmpq	$0, -24(%rbp)	#, sv
	jne	.L933	#,
.L924:
.LBE44:
.LBB45:
	.loc 1 3158 0
	movl	PL_copline(%rip), %eax	# PL_copline, tmp132
	movl	%eax, -48(%rbp)	# tmp132, ocopline
	.loc 1 3159 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, tmp133
	movq	%rax, -8(%rbp)	# tmp133, ocurcop
	.loc 1 3160 0
	movl	PL_expect(%rip), %eax	# PL_expect, tmp134
	movl	%eax, -44(%rbp)	# tmp134, oexpect
	.loc 1 3162 0
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_start_subparse	#
	movl	%eax, %esi	#, D.21926
	movl	-52(%rbp), %eax	# flags, tmp135
	andl	$1, %eax	#, D.21922
	testl	%eax, %eax	# D.21922
	sete	%al	#, D.21927
	movzbl	%al, %eax	# D.21927, D.21926
	movq	-32(%rbp), %rdi	# imop, tmp136
	movq	-16(%rbp), %rcx	# modname, tmp137
	movq	-40(%rbp), %rdx	# veop, tmp138
	movq	%rdi, %r8	# tmp136,
	movl	%eax, %edi	# D.21926,
	call	Perl_utilize	#
	.loc 1 3164 0
	movl	-44(%rbp), %eax	# oexpect, tmp139
	movl	%eax, PL_expect(%rip)	# tmp139, PL_expect
	.loc 1 3165 0
	movl	-48(%rbp), %eax	# ocopline, tmp140
	movl	%eax, PL_copline(%rip)	# tmp140, PL_copline
	.loc 1 3166 0
	movq	-8(%rbp), %rax	# ocurcop, tmp141
	movq	%rax, PL_curcop(%rip)	# tmp141, PL_curcop
.LBE45:
	.loc 1 3168 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE70:
	.size	Perl_vload_module, .-Perl_vload_module
	.section	.rodata
.LC62:
	.string	"do"
.LC63:
	.string	"CORE::GLOBAL::do"
	.text
	.globl	Perl_dofile
	.type	Perl_dofile, @function
Perl_dofile:
.LFB71:
	.loc 1 3172 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# term, term
	.loc 1 3176 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC62, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -8(%rbp)	# tmp85, gv
	.loc 1 3177 0
	cmpq	$0, -8(%rbp)	#, gv
	je	.L935	#,
	.loc 1 3177 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# gv, tmp86
	movq	(%rax), %rax	# gv_3->sv_any, D.21928
	movq	56(%rax), %rax	# _4->xgv_gp, D.21929
	movl	64(%rax), %eax	# _5->gp_cvgen, D.21930
	testl	%eax, %eax	# D.21930
	jne	.L935	#,
	movq	-8(%rbp), %rax	# gv, tmp87
	movq	(%rax), %rax	# gv_3->sv_any, D.21928
	movq	56(%rax), %rax	# _7->xgv_gp, D.21929
	movq	56(%rax), %rax	# _8->gp_cv, D.21931
	testq	%rax, %rax	# D.21931
	je	.L935	#,
	.loc 1 3177 0 discriminator 2
	movq	-8(%rbp), %rax	# gv, tmp88
	movq	(%rax), %rax	# gv_3->sv_any, D.21928
	movzbl	88(%rax), %eax	# _10->xgv_flags, D.21932
	testb	%al, %al	# D.21933
	js	.L936	#,
.L935:
	.loc 1 3178 0 is_stmt 1
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC63, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -8(%rbp)	# tmp89, gv
.L936:
	.loc 1 3180 0
	cmpq	$0, -8(%rbp)	#, gv
	je	.L937	#,
	.loc 1 3180 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# gv, tmp90
	movq	(%rax), %rax	# gv_2->sv_any, D.21928
	movq	56(%rax), %rax	# _14->xgv_gp, D.21929
	movl	64(%rax), %eax	# _15->gp_cvgen, D.21930
	testl	%eax, %eax	# D.21930
	jne	.L937	#,
	movq	-8(%rbp), %rax	# gv, tmp91
	movq	(%rax), %rax	# gv_2->sv_any, D.21928
	movq	56(%rax), %rax	# _17->xgv_gp, D.21929
	movq	56(%rax), %rax	# _18->gp_cv, D.21931
	testq	%rax, %rax	# D.21931
	je	.L937	#,
	.loc 1 3180 0 discriminator 2
	movq	-8(%rbp), %rax	# gv, tmp92
	movq	(%rax), %rax	# gv_2->sv_any, D.21928
	movzbl	88(%rax), %eax	# _20->xgv_flags, D.21932
	testb	%al, %al	# D.21933
	jns	.L937	#,
	.loc 1 3181 0 is_stmt 1
	movq	-8(%rbp), %rax	# gv, tmp93
	movq	%rax, %rdx	# tmp93,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.21934,
	movl	$0, %esi	#,
	movl	$17, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdi	# D.21934,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.21934
	movq	-24(%rbp), %rax	# term, tmp94
	movq	%rax, %rsi	# tmp94,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.21934,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdi	# D.21934,
	call	Perl_ck_subr	#
	movq	%rax, -16(%rbp)	# tmp95, doop
	jmp	.L938	#
.L937:
	.loc 1 3188 0
	movq	-24(%rbp), %rax	# term, tmp96
	movq	%rax, %rdi	# tmp96,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.21934,
	movl	$0, %esi	#,
	movl	$310, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -16(%rbp)	# tmp97, doop
.L938:
	.loc 1 3190 0
	movq	-16(%rbp), %rax	# doop, D.21934
	.loc 1 3191 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE71:
	.size	Perl_dofile, .-Perl_dofile
	.globl	Perl_newSLICEOP
	.type	Perl_newSLICEOP, @function
Perl_newSLICEOP:
.LFB72:
	.loc 1 3195 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)	# flags, flags
	movq	%rsi, -32(%rbp)	# subscript, subscript
	movq	%rdx, -40(%rbp)	# listval, listval
	.loc 1 3196 0
	movq	-40(%rbp), %rax	# listval, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_force_list	#
	movq	%rax, %rdi	# D.21937,
	call	Perl_list	#
	movq	%rax, %rbx	#, D.21937
	movq	-32(%rbp), %rax	# subscript, tmp66
	movq	%rax, %rdi	# tmp66,
	call	Perl_force_list	#
	movq	%rax, %rdi	# D.21937,
	call	Perl_list	#
	movq	%rax, %rdx	#, D.21937
	movl	-20(%rbp), %eax	# flags, tmp67
	movq	%rbx, %rcx	# D.21937,
	movl	%eax, %esi	# tmp67,
	movl	$142, %edi	#,
	call	Perl_newBINOP	#
	.loc 1 3199 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE72:
	.size	Perl_newSLICEOP, .-Perl_newSLICEOP
	.section	.rodata
	.align 8
.LC64:
	.string	"Assignment to both a list and a scalar"
	.text
	.type	S_list_assignment, @function
S_list_assignment:
.LFB73:
	.loc 1 3203 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# o, o
	.loc 1 3204 0
	testq	%rbx, %rbx	# o
	jne	.L943	#,
	.loc 1 3205 0
	movl	$1, %eax	#, D.21938
	jmp	.L944	#
.L943:
	.loc 1 3207 0
	movzwl	32(%rbx), %eax	# o_3(D)->op_type, D.21939
	testw	%ax, %ax	# D.21939
	jne	.L945	#,
	.loc 1 3207 0 is_stmt 0 discriminator 1
	movzbl	36(%rbx), %eax	# o_3(D)->op_flags, D.21940
	movzbl	%al, %eax	# D.21940, D.21941
	andl	$4, %eax	#, D.21941
	testl	%eax, %eax	# D.21941
	je	.L945	#,
	.loc 1 3208 0 is_stmt 1
	movq	40(%rbx), %rbx	# MEM[(struct UNOP *)o_3(D)].op_first, o
.L945:
	.loc 1 3210 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$162, %ax	#, D.21939
	jne	.L946	#,
.LBB46:
	.loc 1 3211 0
	movq	40(%rbx), %rax	# MEM[(struct LOGOP *)o_1].op_first, D.21942
	movq	8(%rax), %rax	# _11->op_sibling, D.21942
	movq	%rax, %rdi	# D.21942,
	call	S_list_assignment	#
	movl	%eax, -24(%rbp)	# tmp89, t
	.loc 1 3212 0
	movq	40(%rbx), %rax	# MEM[(struct LOGOP *)o_1].op_first, D.21942
	movq	8(%rax), %rax	# _14->op_sibling, D.21942
	movq	8(%rax), %rax	# _15->op_sibling, D.21942
	movq	%rax, %rdi	# D.21942,
	call	S_list_assignment	#
	movl	%eax, -20(%rbp)	# tmp90, f
	.loc 1 3214 0
	cmpl	$0, -24(%rbp)	#, t
	je	.L947	#,
	.loc 1 3214 0 is_stmt 0 discriminator 1
	cmpl	$0, -20(%rbp)	#, f
	je	.L947	#,
	.loc 1 3215 0 is_stmt 1
	movl	$1, %eax	#, D.21938
	jmp	.L944	#
.L947:
	.loc 1 3216 0
	cmpl	$0, -24(%rbp)	#, t
	jne	.L948	#,
	.loc 1 3216 0 is_stmt 0 discriminator 1
	cmpl	$0, -20(%rbp)	#, f
	je	.L949	#,
.L948:
	.loc 1 3217 0 is_stmt 1
	movl	$.LC64, %edi	#,
	call	Perl_yyerror	#
.L949:
	.loc 1 3218 0
	movl	$0, %eax	#, D.21938
	jmp	.L944	#
.L946:
.LBE46:
	.loc 1 3221 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$141, %ax	#, D.21939
	jne	.L950	#,
	.loc 1 3222 0 discriminator 1
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.21940
	movzbl	%al, %eax	# D.21940, D.21941
	andl	$3, %eax	#, D.21941
	.loc 1 3221 0 discriminator 1
	cmpl	$2, %eax	#, D.21941
	jne	.L950	#,
	.loc 1 3223 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.21940
	.loc 1 3222 0
	testb	%al, %al	# D.21943
	jns	.L950	#,
	.loc 1 3224 0
	movl	$0, %eax	#, D.21938
	jmp	.L944	#
.L950:
	.loc 1 3226 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$141, %ax	#, D.21939
	je	.L951	#,
	.loc 1 3226 0 is_stmt 0 discriminator 1
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.21940
	movzbl	%al, %eax	# D.21940, D.21941
	andl	$8, %eax	#, D.21941
	testl	%eax, %eax	# D.21941
	jne	.L951	#,
	.loc 1 3227 0 is_stmt 1 discriminator 1
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	.loc 1 3226 0 discriminator 1
	cmpw	$125, %ax	#, D.21939
	je	.L951	#,
	.loc 1 3227 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$134, %ax	#, D.21939
	je	.L951	#,
	.loc 1 3228 0 discriminator 1
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	.loc 1 3227 0 discriminator 1
	cmpw	$128, %ax	#, D.21939
	je	.L951	#,
	.loc 1 3228 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$136, %ax	#, D.21939
	jne	.L952	#,
.L951:
	.loc 1 3229 0
	movl	$1, %eax	#, D.21938
	jmp	.L944	#
.L952:
	.loc 1 3231 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$10, %ax	#, D.21939
	je	.L953	#,
	.loc 1 3231 0 is_stmt 0 discriminator 1
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$11, %ax	#, D.21939
	jne	.L954	#,
.L953:
	.loc 1 3232 0 is_stmt 1
	movl	$1, %eax	#, D.21938
	jmp	.L944	#
.L954:
	.loc 1 3234 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.21939
	cmpw	$15, %ax	#, D.21939
	jne	.L955	#,
	.loc 1 3235 0
	movl	$0, %eax	#, D.21938
	jmp	.L944	#
.L955:
	.loc 1 3237 0
	movl	$0, %eax	#, D.21938
.L944:
	.loc 1 3238 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE73:
	.size	S_list_assignment, .-S_list_assignment
	.globl	Perl_newASSIGNOP
	.type	Perl_newASSIGNOP, @function
Perl_newASSIGNOP:
.LFB74:
	.loc 1 3242 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -84(%rbp)	# flags, flags
	movq	%rsi, -96(%rbp)	# left, left
	movl	%edx, -88(%rbp)	# optype, optype
	movq	%rcx, -104(%rbp)	# right, right
	.loc 1 3245 0
	cmpl	$0, -88(%rbp)	#, optype
	je	.L957	#,
	.loc 1 3246 0
	cmpl	$163, -88(%rbp)	#, optype
	je	.L958	#,
	.loc 1 3246 0 is_stmt 0 discriminator 1
	cmpl	$164, -88(%rbp)	#, optype
	jne	.L959	#,
.L958:
	.loc 1 3247 0 is_stmt 1
	movq	-104(%rbp), %rax	# right, tmp186
	movq	%rax, %rdi	# tmp186,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.21945,
	movl	$0, %esi	#,
	movl	$36, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rbx	#, D.21945
	movq	-96(%rbp), %rax	# left, tmp187
	movq	%rax, %rdi	# tmp187,
	call	Perl_scalar	#
	movl	-88(%rbp), %edx	# optype, tmp188
	movl	%edx, %esi	# tmp188,
	movq	%rax, %rdi	# D.21945,
	call	Perl_mod	#
	movq	%rax, %rdx	#, D.21945
	movl	-88(%rbp), %eax	# optype, tmp189
	movq	%rbx, %rcx	# D.21945,
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp189,
	call	Perl_newLOGOP	#
	jmp	.L960	#
.L959:
	.loc 1 3252 0
	movq	-104(%rbp), %rax	# right, tmp190
	movq	%rax, %rdi	# tmp190,
	call	Perl_scalar	#
	movq	%rax, %rbx	#, D.21945
	movq	-96(%rbp), %rax	# left, tmp191
	movq	%rax, %rdi	# tmp191,
	call	Perl_scalar	#
	movl	-88(%rbp), %edx	# optype, tmp192
	movl	%edx, %esi	# tmp192,
	movq	%rax, %rdi	# D.21945,
	call	Perl_mod	#
	movq	%rax, %rdx	#, D.21945
	movl	-88(%rbp), %eax	# optype, tmp193
	movq	%rbx, %rcx	# D.21945,
	movl	$64, %esi	#,
	movl	%eax, %edi	# tmp193,
	call	Perl_newBINOP	#
	jmp	.L960	#
.L957:
	.loc 1 3257 0
	movq	-96(%rbp), %rax	# left, tmp194
	movq	%rax, %rdi	# tmp194,
	call	S_list_assignment	#
	testl	%eax, %eax	# D.21946
	je	.L961	#,
.LBB47:
	.loc 1 3260 0
	movl	$0, PL_modcount(%rip)	#, PL_modcount
	.loc 1 3261 0
	movq	-104(%rbp), %rax	# right, tmp195
	movq	%rax, PL_eval_start(%rip)	# tmp195, PL_eval_start
	.loc 1 3262 0
	movq	-96(%rbp), %rax	# left, tmp196
	movl	$37, %esi	#,
	movq	%rax, %rdi	# tmp196,
	call	Perl_mod	#
	movq	%rax, -96(%rbp)	# tmp197, left
	.loc 1 3263 0
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.449
	testq	%rax, %rax	# PL_eval_start.449
	je	.L962	#,
	.loc 1 3264 0
	movq	$0, PL_eval_start(%rip)	#, PL_eval_start
	.loc 1 3271 0
	movq	-96(%rbp), %rax	# left, tmp200
	movzwl	32(%rax), %eax	# left_21->op_type, D.21947
	cmpw	$10, %ax	#, D.21947
	je	.L964	#,
	jmp	.L996	#
.L962:
	.loc 1 3266 0
	movq	-96(%rbp), %rax	# left, tmp198
	movq	%rax, %rdi	# tmp198,
	call	Perl_op_free	#
	.loc 1 3267 0
	movq	-104(%rbp), %rax	# right, tmp199
	movq	%rax, %rdi	# tmp199,
	call	Perl_op_free	#
	.loc 1 3268 0
	movl	$0, %eax	#, D.21945
	jmp	.L960	#
.L996:
	.loc 1 3271 0 discriminator 1
	movq	-96(%rbp), %rax	# left, tmp201
	movzwl	32(%rax), %eax	# left_21->op_type, D.21947
	cmpw	$11, %ax	#, D.21947
	jne	.L965	#,
.L964:
	.loc 1 3272 0
	movq	-104(%rbp), %rax	# right, tmp202
	movzwl	32(%rax), %eax	# right_9(D)->op_type, D.21947
	cmpw	$1, %ax	#, D.21947
	jne	.L965	#,
	.loc 1 3273 0
	movq	-96(%rbp), %rax	# left, tmp203
	movzbl	37(%rax), %eax	# left_21->op_private, D.21948
	testb	%al, %al	# D.21949
	jns	.L965	#,
	.loc 1 3275 0
	movq	-104(%rbp), %rax	# right, tmp204
	movq	%rax, %rdi	# tmp204,
	call	Perl_op_free	#
	.loc 1 3276 0
	movq	-96(%rbp), %rax	# left, tmp205
	movzbl	36(%rax), %eax	# left_21->op_flags, D.21948
	andl	$111, %eax	#, D.21948
	movl	%eax, %edx	# D.21948, D.21948
	movq	-96(%rbp), %rax	# left, tmp206
	movb	%dl, 36(%rax)	# D.21948, left_21->op_flags
	.loc 1 3277 0
	movq	-96(%rbp), %rax	# left, D.21945
	jmp	.L960	#
.L965:
	.loc 1 3279 0
	movq	-96(%rbp), %rax	# left, tmp207
	movq	%rax, %rdi	# tmp207,
	call	Perl_force_list	#
	movq	%rax, %rdi	# D.21945,
	call	Perl_list	#
	movq	%rax, -80(%rbp)	# tmp208, curop
	.loc 1 3280 0
	movq	-104(%rbp), %rax	# right, tmp209
	movq	%rax, %rdi	# tmp209,
	call	Perl_force_list	#
	movq	%rax, %rdi	# D.21945,
	call	Perl_list	#
	movq	%rax, %rdx	#, D.21945
	movq	-80(%rbp), %rcx	# curop, tmp210
	movl	-84(%rbp), %eax	# flags, tmp211
	movl	%eax, %esi	# tmp211,
	movl	$37, %edi	#,
	call	Perl_newBINOP	#
	movq	%rax, -64(%rbp)	# tmp212, o
	.loc 1 3281 0
	movl	-84(%rbp), %eax	# flags, tmp213
	sarl	$8, %eax	#, D.21946
	movl	%eax, %edx	# D.21946, D.21948
	movq	-64(%rbp), %rax	# o, tmp214
	movb	%dl, 37(%rax)	# D.21948, o_36->op_private
	.loc 1 3282 0
	movq	-80(%rbp), %rax	# curop, tmp215
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)curop_32].op_first, tmp216
	movq	%rax, -80(%rbp)	# tmp216, curop
	jmp	.L966	#
.L969:
	.loc 1 3285 0
	movq	-80(%rbp), %rax	# curop, tmp217
	movzwl	32(%rax), %eax	# curop_2->op_type, D.21947
	cmpw	$134, %ax	#, D.21947
	jne	.L967	#,
	.loc 1 3286 0 discriminator 1
	movq	-80(%rbp), %rax	# curop, tmp218
	movq	40(%rax), %rax	# MEM[(struct UNOP *)curop_2].op_first, D.21945
	movzwl	32(%rax), %eax	# _41->op_type, D.21947
	.loc 1 3285 0 discriminator 1
	cmpw	$7, %ax	#, D.21947
	je	.L967	#,
	.loc 1 3287 0
	movq	-64(%rbp), %rax	# o, tmp219
	movzbl	37(%rax), %eax	# o_36->op_private, D.21948
	orl	$32, %eax	#, D.21948
	movl	%eax, %edx	# D.21948, D.21948
	movq	-64(%rbp), %rax	# o, tmp220
	movb	%dl, 37(%rax)	# D.21948, o_36->op_private
	.loc 1 3288 0
	jmp	.L968	#
.L967:
	.loc 1 3283 0
	movq	-80(%rbp), %rax	# curop, tmp221
	movq	8(%rax), %rax	# curop_2->op_sibling, tmp222
	movq	%rax, -80(%rbp)	# tmp222, curop
.L966:
	.loc 1 3282 0 discriminator 1
	cmpq	$0, -80(%rbp)	#, curop
	jne	.L969	#,
.L968:
	.loc 1 3306 0
	movq	-96(%rbp), %rax	# left, tmp223
	movzbl	37(%rax), %eax	# left_21->op_private, D.21948
	testb	%al, %al	# D.21949
	js	.L970	#,
.LBB48:
	.loc 1 3307 0
	movq	-64(%rbp), %rax	# o, tmp224
	movq	%rax, -72(%rbp)	# tmp224, lastop
	.loc 1 3308 0
	movl	PL_generation(%rip), %eax	# PL_generation, PL_generation.450
	addl	$1, %eax	#, PL_generation.451
	movl	%eax, PL_generation(%rip)	# PL_generation.451, PL_generation
	.loc 1 3309 0
	movq	-64(%rbp), %rax	# o, tmp225
	movq	(%rax), %rax	# o_36->op_next, D.21945
	testq	%rax, %rax	# D.21945
	je	.L971	#,
	.loc 1 3309 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# o, tmp226
	movq	(%rax), %rax	# o_36->op_next, iftmp.452
	jmp	.L972	#
.L971:
	.loc 1 3309 0 discriminator 2
	movq	-64(%rbp), %rax	# o, tmp227
	movq	%rax, %rdi	# tmp227,
	call	Perl_linklist	#
.L972:
	.loc 1 3309 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.452, curop
	jmp	.L973	#
.L988:
	.loc 1 3310 0 is_stmt 1
	movq	-80(%rbp), %rax	# curop, tmp228
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	movzwl	%ax, %eax	# D.21947, D.21946
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.21950
	andl	$64, %eax	#, D.21950
	testl	%eax, %eax	# D.21950
	je	.L974	#,
	.loc 1 3311 0
	movq	-80(%rbp), %rax	# curop, tmp230
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	cmpw	$7, %ax	#, D.21947
	jne	.L975	#,
.LBB49:
	.loc 1 3312 0
	movq	-80(%rbp), %rax	# curop, tmp231
	movq	40(%rax), %rax	# MEM[(struct SVOP *)curop_3].op_sv, tmp232
	movq	%rax, -56(%rbp)	# tmp232, gv
	.loc 1 3313 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.453
	cmpq	%rax, -56(%rbp)	# PL_defgv.453, gv
	je	.L976	#,
	.loc 1 3313 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# gv, tmp233
	movq	(%rax), %rax	# gv_60->sv_any, D.21951
	movq	8(%rax), %rax	# MEM[(struct XPV *)_62].xpv_cur, D.21952
	movl	%eax, %edx	# D.21952, D.21946
	movl	PL_generation(%rip), %eax	# PL_generation, PL_generation.454
	cmpl	%eax, %edx	# PL_generation.454, D.21946
	je	.L976	#,
	.loc 1 3315 0 is_stmt 1
	movq	-56(%rbp), %rax	# gv, tmp234
	movq	(%rax), %rax	# gv_60->sv_any, D.21951
	movl	PL_generation(%rip), %edx	# PL_generation, PL_generation.455
	movslq	%edx, %rdx	# PL_generation.455, D.21952
	movq	%rdx, 8(%rax)	# D.21952, MEM[(struct XPV *)_66].xpv_cur
.LBE49:
	jmp	.L974	#
.L975:
	.loc 1 3317 0
	movq	-80(%rbp), %rax	# curop, tmp235
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	cmpw	$9, %ax	#, D.21947
	je	.L977	#,
	.loc 1 3318 0 discriminator 1
	movq	-80(%rbp), %rax	# curop, tmp236
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3317 0 discriminator 1
	cmpw	$10, %ax	#, D.21947
	je	.L977	#,
	.loc 1 3319 0
	movq	-80(%rbp), %rax	# curop, tmp237
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3318 0
	cmpw	$11, %ax	#, D.21947
	je	.L977	#,
	.loc 1 3320 0
	movq	-80(%rbp), %rax	# curop, tmp238
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3319 0
	cmpw	$12, %ax	#, D.21947
	jne	.L978	#,
.L977:
	.loc 1 3322 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.456
	movq	(%rax), %rax	# PL_comppad_name.456_90->sv_any, D.21953
	movq	(%rax), %rdx	# _91->xav_array, D.21954
	movq	-80(%rbp), %rax	# curop, tmp239
	movq	24(%rax), %rax	# curop_3->op_targ, D.21952
	salq	$3, %rax	#, D.21952
	addq	%rdx, %rax	# D.21954, D.21955
	movq	(%rax), %rax	# *_95, D.21956
	movq	(%rax), %rax	# _96->sv_any, D.21957
	movq	8(%rax), %rax	# MEM[(struct XPV *)_97].xpv_cur, D.21952
	movl	%eax, %edx	# D.21952, D.21946
	.loc 1 3323 0
	movl	PL_generation(%rip), %eax	# PL_generation, PL_generation.457
	.loc 1 3322 0
	cmpl	%eax, %edx	# PL_generation.457, D.21946
	jne	.L979	#,
	.loc 1 3324 0
	jmp	.L976	#
.L979:
	.loc 1 3325 0
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.458
	movq	(%rax), %rax	# PL_comppad_name.458_101->sv_any, D.21953
	movq	(%rax), %rdx	# _102->xav_array, D.21954
	movq	-80(%rbp), %rax	# curop, tmp240
	movq	24(%rax), %rax	# curop_3->op_targ, D.21952
	salq	$3, %rax	#, D.21952
	addq	%rdx, %rax	# D.21954, D.21955
	movq	(%rax), %rax	# *_106, D.21956
	movq	(%rax), %rax	# _107->sv_any, D.21957
	.loc 1 3326 0
	movl	PL_generation(%rip), %edx	# PL_generation, PL_generation.459
	movslq	%edx, %rdx	# PL_generation.459, D.21952
	movq	%rdx, 8(%rax)	# D.21952, MEM[(struct XPV *)_108].xpv_cur
	jmp	.L974	#
.L978:
	.loc 1 3329 0
	movq	-80(%rbp), %rax	# curop, tmp241
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	cmpw	$17, %ax	#, D.21947
	jne	.L980	#,
	.loc 1 3330 0
	jmp	.L976	#
.L980:
	.loc 1 3331 0
	movq	-80(%rbp), %rax	# curop, tmp242
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	cmpw	$15, %ax	#, D.21947
	je	.L981	#,
	.loc 1 3332 0 discriminator 1
	movq	-80(%rbp), %rax	# curop, tmp243
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3331 0 discriminator 1
	cmpw	$125, %ax	#, D.21947
	je	.L981	#,
	.loc 1 3333 0
	movq	-80(%rbp), %rax	# curop, tmp244
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3332 0
	cmpw	$134, %ax	#, D.21947
	je	.L981	#,
	.loc 1 3334 0
	movq	-80(%rbp), %rax	# curop, tmp245
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	.loc 1 3333 0
	cmpw	$14, %ax	#, D.21947
	jne	.L982	#,
.L981:
	.loc 1 3335 0
	movq	-72(%rbp), %rax	# lastop, tmp246
	movzwl	32(%rax), %eax	# lastop_4->op_type, D.21947
	cmpw	$7, %ax	#, D.21947
	je	.L983	#,
	.loc 1 3336 0
	jmp	.L976	#
.L983:
	.loc 1 3335 0 discriminator 1
	jmp	.L974	#
.L982:
	.loc 1 3338 0
	movq	-80(%rbp), %rax	# curop, tmp247
	movzwl	32(%rax), %eax	# curop_3->op_type, D.21947
	cmpw	$13, %ax	#, D.21947
	jne	.L984	#,
	.loc 1 3339 0
	movq	-80(%rbp), %rax	# curop, tmp248
	movq	56(%rax), %rax	# MEM[(struct PMOP *)curop_3].op_pmreplroot, D.21945
	testq	%rax, %rax	# D.21945
	je	.L974	#,
.LBB50:
	.loc 1 3344 0
	movq	-80(%rbp), %rax	# curop, tmp249
	movq	56(%rax), %rax	# MEM[(struct PMOP *)curop_3].op_pmreplroot, tmp250
	movq	%rax, -48(%rbp)	# tmp250, gv
	.loc 1 3346 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.460
	cmpq	%rax, -48(%rbp)	# PL_defgv.460, gv
	je	.L976	#,
	.loc 1 3346 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# gv, tmp251
	movq	(%rax), %rax	# gv_80->sv_any, D.21951
	movq	8(%rax), %rax	# MEM[(struct XPV *)_82].xpv_cur, D.21952
	movl	%eax, %edx	# D.21952, D.21946
	movl	PL_generation(%rip), %eax	# PL_generation, PL_generation.461
	cmpl	%eax, %edx	# PL_generation.461, D.21946
	je	.L976	#,
	.loc 1 3348 0 is_stmt 1
	movq	-48(%rbp), %rax	# gv, tmp252
	movq	(%rax), %rax	# gv_80->sv_any, D.21951
	movl	PL_generation(%rip), %edx	# PL_generation, PL_generation.462
	movslq	%edx, %rdx	# PL_generation.462, D.21952
	movq	%rdx, 8(%rax)	# D.21952, MEM[(struct XPV *)_86].xpv_cur
	jmp	.L974	#
.L984:
.LBE50:
	.loc 1 3352 0
	jmp	.L976	#
.L974:
	.loc 1 3354 0
	movq	-80(%rbp), %rax	# curop, tmp253
	movq	%rax, -72(%rbp)	# tmp253, lastop
	.loc 1 3309 0
	movq	-80(%rbp), %rax	# curop, tmp254
	movq	(%rax), %rax	# curop_3->op_next, D.21945
	testq	%rax, %rax	# D.21945
	je	.L986	#,
	.loc 1 3309 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# curop, tmp255
	movq	(%rax), %rax	# curop_3->op_next, iftmp.463
	jmp	.L987	#
.L986:
	.loc 1 3309 0 discriminator 2
	movq	-80(%rbp), %rax	# curop, tmp256
	movq	%rax, %rdi	# tmp256,
	call	Perl_linklist	#
.L987:
	.loc 1 3309 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.463, curop
.L973:
	.loc 1 3309 0 discriminator 1
	movq	-80(%rbp), %rax	# curop, tmp257
	cmpq	-64(%rbp), %rax	# o, tmp257
	jne	.L988	#,
.L976:
	.loc 1 3356 0 is_stmt 1
	movq	-80(%rbp), %rax	# curop, tmp258
	cmpq	-64(%rbp), %rax	# o, tmp258
	je	.L970	#,
	.loc 1 3357 0
	movq	-64(%rbp), %rax	# o, tmp259
	movzbl	37(%rax), %eax	# o_36->op_private, D.21948
	orl	$64, %eax	#, D.21948
	movl	%eax, %edx	# D.21948, D.21948
	movq	-64(%rbp), %rax	# o, tmp260
	movb	%dl, 37(%rax)	# D.21948, o_36->op_private
.L970:
.LBE48:
	.loc 1 3359 0
	cmpq	$0, -104(%rbp)	#, right
	je	.L989	#,
	.loc 1 3359 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# right, tmp261
	movzwl	32(%rax), %eax	# right_9(D)->op_type, D.21947
	cmpw	$139, %ax	#, D.21947
	jne	.L989	#,
.LBB51:
	.loc 1 3361 0 is_stmt 1
	movq	-104(%rbp), %rax	# right, tmp262
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)right_9(D)].op_first, tmp263
	movq	%rax, -40(%rbp)	# tmp263, tmpop
	cmpq	$0, -40(%rbp)	#, tmpop
	je	.L989	#,
	.loc 1 3362 0 discriminator 1
	movq	-40(%rbp), %rax	# tmpop, tmp264
	movzwl	32(%rax), %eax	# tmpop_119->op_type, D.21947
	.loc 1 3361 0 discriminator 1
	cmpw	$13, %ax	#, D.21947
	jne	.L989	#,
.LBB52:
	.loc 1 3364 0
	movq	-40(%rbp), %rax	# tmpop, tmp265
	movq	%rax, -32(%rbp)	# tmp265, pm
	.loc 1 3365 0
	movq	-96(%rbp), %rax	# left, tmp266
	movzwl	32(%rax), %eax	# left_21->op_type, D.21947
	cmpw	$125, %ax	#, D.21947
	jne	.L990	#,
	.loc 1 3366 0 discriminator 1
	movq	-96(%rbp), %rax	# left, tmp267
	movzbl	37(%rax), %eax	# left_21->op_private, D.21948
	.loc 1 3365 0 discriminator 1
	testb	%al, %al	# D.21949
	js	.L990	#,
	.loc 1 3367 0
	movq	-64(%rbp), %rax	# o, tmp268
	movzbl	37(%rax), %eax	# o_36->op_private, D.21948
	movzbl	%al, %eax	# D.21948, D.21946
	andl	$64, %eax	#, D.21946
	.loc 1 3366 0
	testl	%eax, %eax	# D.21946
	jne	.L990	#,
	.loc 1 3369 0
	movq	-96(%rbp), %rax	# left, tmp269
	movq	40(%rax), %rax	# MEM[(struct UNOP *)left_21].op_first, tmp270
	movq	%rax, -40(%rbp)	# tmp270, tmpop
	.loc 1 3370 0
	movq	-40(%rbp), %rax	# tmpop, tmp271
	movzwl	32(%rax), %eax	# tmpop_128->op_type, D.21947
	cmpw	$7, %ax	#, D.21947
	jne	.L991	#,
	.loc 1 3370 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# pm, tmp272
	movq	56(%rax), %rax	# pm_121->op_pmreplroot, D.21945
	testq	%rax, %rax	# D.21945
	jne	.L991	#,
	.loc 1 3375 0 is_stmt 1
	movq	-40(%rbp), %rax	# tmpop, tmp273
	movq	40(%rax), %rdx	# MEM[(struct SVOP *)tmpop_128].op_sv, D.21956
	movq	-32(%rbp), %rax	# pm, tmp274
	movq	%rdx, 56(%rax)	# D.21956, pm_121->op_pmreplroot
	.loc 1 3376 0
	movq	-40(%rbp), %rax	# tmpop, tmp275
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)tmpop_128].op_sv
	.loc 1 3378 0
	movq	-32(%rbp), %rax	# pm, tmp276
	movl	88(%rax), %eax	# pm_121->op_pmflags, D.21950
	orl	$2, %eax	#, D.21950
	movl	%eax, %edx	# D.21950, D.21950
	movq	-32(%rbp), %rax	# pm, tmp277
	movl	%edx, 88(%rax)	# D.21950, pm_121->op_pmflags
	.loc 1 3379 0
	movq	-64(%rbp), %rax	# o, tmp278
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_36].op_first, tmp279
	movq	%rax, -40(%rbp)	# tmp279, tmpop
	.loc 1 3380 0
	movq	-40(%rbp), %rax	# tmpop, tmp280
	movq	40(%rax), %rax	# MEM[(struct UNOP *)tmpop_134].op_first, tmp281
	movq	%rax, -40(%rbp)	# tmp281, tmpop
	.loc 1 3381 0
	movq	-40(%rbp), %rax	# tmpop, tmp282
	movq	$0, 8(%rax)	#, tmpop_135->op_sibling
	.loc 1 3382 0
	movq	-40(%rbp), %rax	# tmpop, tmp283
	movq	(%rax), %rdx	# tmpop_135->op_next, D.21945
	movq	-104(%rbp), %rax	# right, tmp284
	movq	%rdx, (%rax)	# D.21945, right_9(D)->op_next
	.loc 1 3383 0
	movq	-64(%rbp), %rax	# o, tmp285
	movq	%rax, %rdi	# tmp285,
	call	Perl_op_free	#
	.loc 1 3384 0
	movq	-104(%rbp), %rax	# right, tmp286
	movzbl	36(%rax), %eax	# right_9(D)->op_flags, D.21948
	andl	$-4, %eax	#, D.21948
	movl	%eax, %edx	# D.21948, D.21948
	movq	-104(%rbp), %rax	# right, tmp287
	movb	%dl, 36(%rax)	# D.21948, right_9(D)->op_flags
	.loc 1 3386 0
	movq	-104(%rbp), %rax	# right, D.21945
	jmp	.L960	#
.L991:
	.loc 1 3370 0 discriminator 2
	jmp	.L989	#
.L990:
	.loc 1 3390 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.464
	cmpl	$1073741822, %eax	#, PL_modcount.464
	jg	.L989	#,
	.loc 1 3391 0 discriminator 1
	movq	-104(%rbp), %rax	# right, tmp288
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)right_9(D)].op_last, D.21945
	movzwl	32(%rax), %eax	# _141->op_type, D.21947
	.loc 1 3390 0 discriminator 1
	cmpw	$5, %ax	#, D.21947
	jne	.L989	#,
.LBB53:
	.loc 1 3393 0
	movq	-104(%rbp), %rax	# right, tmp289
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)right_9(D)].op_last, D.21945
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_143].op_sv, tmp290
	movq	%rax, -24(%rbp)	# tmp290, sv
	.loc 1 3394 0
	movq	-24(%rbp), %rax	# sv, tmp291
	movq	(%rax), %rax	# sv_144->sv_any, D.21957
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_145].xiv_iv, D.21958
	testq	%rax, %rax	# D.21958
	jne	.L989	#,
	.loc 1 3395 0
	movl	PL_modcount(%rip), %eax	# PL_modcount, PL_modcount.465
	addl	$1, %eax	#, D.21946
	movslq	%eax, %rdx	# D.21946, D.21958
	movq	-24(%rbp), %rax	# sv, tmp292
	movq	%rdx, %rsi	# D.21958,
	movq	%rax, %rdi	# tmp292,
	call	Perl_sv_setiv	#
.L989:
.LBE53:
.LBE52:
.LBE51:
	.loc 1 3400 0
	movq	-64(%rbp), %rax	# o, D.21945
	jmp	.L960	#
.L961:
.LBE47:
	.loc 1 3402 0
	cmpq	$0, -104(%rbp)	#, right
	jne	.L992	#,
	.loc 1 3403 0
	movl	$0, %esi	#,
	movl	$43, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -104(%rbp)	# tmp293, right
.L992:
	.loc 1 3404 0
	movq	-104(%rbp), %rax	# right, tmp294
	movzwl	32(%rax), %eax	# right_1->op_type, D.21947
	cmpw	$26, %ax	#, D.21947
	jne	.L993	#,
	.loc 1 3405 0
	movq	-104(%rbp), %rax	# right, tmp295
	movzbl	36(%rax), %eax	# right_1->op_flags, D.21948
	orl	$64, %eax	#, D.21948
	movl	%eax, %edx	# D.21948, D.21948
	movq	-104(%rbp), %rax	# right, tmp296
	movb	%dl, 36(%rax)	# D.21948, right_1->op_flags
	.loc 1 3406 0
	movq	-104(%rbp), %rax	# right, tmp297
	movq	%rax, %rdi	# tmp297,
	call	Perl_scalar	#
	movq	%rax, %rbx	#, D.21945
	movq	-96(%rbp), %rax	# left, tmp298
	movq	%rax, %rdi	# tmp298,
	call	Perl_scalar	#
	movl	$36, %esi	#,
	movq	%rax, %rdi	# D.21945,
	call	Perl_mod	#
	movq	%rax, %rdx	#, D.21945
	movl	-84(%rbp), %eax	# flags, tmp299
	movq	%rbx, %rcx	# D.21945,
	movl	%eax, %esi	# tmp299,
	movl	$0, %edi	#,
	call	Perl_newBINOP	#
	jmp	.L960	#
.L993:
	.loc 1 3409 0
	movq	-104(%rbp), %rax	# right, tmp300
	movq	%rax, PL_eval_start(%rip)	# tmp300, PL_eval_start
	.loc 1 3410 0
	movq	-96(%rbp), %rax	# left, tmp301
	movq	%rax, %rdi	# tmp301,
	call	Perl_scalar	#
	movl	$36, %esi	#,
	movq	%rax, %rdi	# D.21945,
	call	Perl_mod	#
	movq	%rax, %rbx	#, D.21945
	movq	-104(%rbp), %rax	# right, tmp302
	movq	%rax, %rdi	# tmp302,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.21945
	movl	-84(%rbp), %eax	# flags, tmp303
	movq	%rbx, %rcx	# D.21945,
	movl	%eax, %esi	# tmp303,
	movl	$36, %edi	#,
	call	Perl_newBINOP	#
	movq	%rax, -64(%rbp)	# tmp304, o
	.loc 1 3412 0
	movq	PL_eval_start(%rip), %rax	# PL_eval_start, PL_eval_start.466
	testq	%rax, %rax	# PL_eval_start.466
	je	.L994	#,
	.loc 1 3413 0
	movq	$0, PL_eval_start(%rip)	#, PL_eval_start
	.loc 1 3419 0
	movq	-64(%rbp), %rax	# o, D.21945
	jmp	.L960	#
.L994:
	.loc 1 3415 0
	movq	-64(%rbp), %rax	# o, tmp305
	movq	%rax, %rdi	# tmp305,
	call	Perl_op_free	#
	.loc 1 3416 0
	movl	$0, %eax	#, D.21945
.L960:
	.loc 1 3420 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE74:
	.size	Perl_newASSIGNOP, .-Perl_newASSIGNOP
	.globl	Perl_newSTATEOP
	.type	Perl_newSTATEOP, @function
Perl_newSTATEOP:
.LFB75:
	.loc 1 3424 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -36(%rbp)	# flags, flags
	movq	%rsi, -48(%rbp)	# label, label
	movq	%rdx, -56(%rbp)	# o, o
	.loc 1 3425 0
	call	Perl_intro_my	#
	movl	%eax, -28(%rbp)	# tmp141, seq
	.loc 1 3428 0
	movl	$96, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, %rbx	#, cop
	movl	$96, %edx	#,
	movl	$0, %esi	#,
	movq	%rbx, %rdi	# cop,
	call	memset	#
	.loc 1 3429 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.467
	testl	%eax, %eax	# PL_perldb.467
	je	.L998	#,
	.loc 1 3429 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.468
	andl	$2, %eax	#, D.21959
	testl	%eax, %eax	# D.21959
	je	.L998	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.469
	movl	72(%rax), %eax	# PL_curcop.469_7->cop_line, D.21959
	testl	%eax, %eax	# D.21959
	je	.L998	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.470
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.471
	cmpq	%rax, %rdx	# PL_debstash.471, PL_curstash.470
	je	.L998	#,
	.loc 1 3430 0 is_stmt 1
	movw	$175, 32(%rbx)	#, cop_3->op_type
	.loc 1 3431 0
	movq	PL_ppaddr+1400(%rip), %rax	# PL_ppaddr, D.21960
	movq	%rax, 16(%rbx)	# D.21960, cop_3->op_ppaddr
	jmp	.L999	#
.L998:
	.loc 1 3434 0
	movw	$174, 32(%rbx)	#, cop_3->op_type
	.loc 1 3435 0
	movq	PL_ppaddr+1392(%rip), %rax	# PL_ppaddr, D.21960
	movq	%rax, 16(%rbx)	# D.21960, cop_3->op_ppaddr
.L999:
	.loc 1 3437 0
	movl	-36(%rbp), %eax	# flags, tmp142
	movb	%al, 36(%rbx)	# D.21961, cop_3->op_flags
	.loc 1 3438 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.472
	movb	%al, 37(%rbx)	# D.21961, cop_3->op_private
	.loc 1 3442 0
	movzbl	37(%rbx), %eax	# cop_3->op_private, D.21961
	movb	%al, PL_compiling+37(%rip)	# D.21961, PL_compiling.op_private
	.loc 1 3443 0
	movq	%rbx, (%rbx)	# cop, cop_3->op_next
	.loc 1 3445 0
	cmpq	$0, -48(%rbp)	#, label
	je	.L1000	#,
	.loc 1 3446 0
	movq	-48(%rbp), %rax	# label, tmp143
	movq	%rax, 40(%rbx)	# tmp143, cop_3->cop_label
	.loc 1 3447 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.473
	orb	$1, %ah	#, PL_hints.474
	movl	%eax, PL_hints(%rip)	# PL_hints.474, PL_hints
.L1000:
	.loc 1 3449 0
	movl	-28(%rbp), %eax	# seq, tmp144
	movl	%eax, 64(%rbx)	# tmp144, cop_3->cop_seq
	.loc 1 3450 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.475
	movl	68(%rax), %eax	# PL_curcop.475_21->cop_arybase, D.21962
	movl	%eax, 68(%rbx)	# D.21962, cop_3->cop_arybase
	.loc 1 3451 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.476
	movq	80(%rax), %rax	# PL_curcop.476_23->cop_warnings, D.21963
	testq	%rax, %rax	# D.21963
	je	.L1001	#,
	.loc 1 3451 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.477
	movq	80(%rax), %rax	# PL_curcop.477_25->cop_warnings, D.21963
	cmpq	$16, %rax	#, D.21963
	je	.L1001	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.478
	movq	80(%rax), %rax	# PL_curcop.478_27->cop_warnings, D.21963
	cmpq	$32, %rax	#, D.21963
	jne	.L1002	#,
.L1001:
	.loc 1 3452 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.479
	movq	80(%rax), %rax	# PL_curcop.479_32->cop_warnings, D.21963
	movq	%rax, 80(%rbx)	# D.21963, cop_3->cop_warnings
	jmp	.L1003	#
.L1002:
	.loc 1 3454 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.480
	movq	80(%rax), %rax	# PL_curcop.480_29->cop_warnings, D.21963
	movq	%rax, %rdi	# D.21963,
	call	Perl_newSVsv	#
	movq	%rax, 80(%rbx)	# D.21963, cop_3->cop_warnings
.L1003:
	.loc 1 3455 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.481
	movq	88(%rax), %rax	# PL_curcop.481_34->cop_io, D.21963
	testq	%rax, %rax	# D.21963
	jne	.L1004	#,
	.loc 1 3456 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.482
	movq	88(%rax), %rax	# PL_curcop.482_36->cop_io, D.21963
	movq	%rax, 88(%rbx)	# D.21963, cop_3->cop_io
	jmp	.L1005	#
.L1004:
	.loc 1 3458 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.483
	movq	88(%rax), %rax	# PL_curcop.483_38->cop_io, D.21963
	movq	%rax, %rdi	# D.21963,
	call	Perl_newSVsv	#
	movq	%rax, 88(%rbx)	# D.21963, cop_3->cop_io
.L1005:
	.loc 1 3461 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.484
	cmpl	$-1, %eax	#, PL_copline.484
	jne	.L1006	#,
	.loc 1 3462 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.485
	movl	72(%rax), %eax	# PL_curcop.485_42->cop_line, D.21959
	movl	%eax, 72(%rbx)	# D.21959, cop_3->cop_line
	jmp	.L1007	#
.L1006:
	.loc 1 3464 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.486
	movl	%eax, 72(%rbx)	# PL_copline.486, cop_3->cop_line
	.loc 1 3465 0
	movl	$-1, PL_copline(%rip)	#, PL_copline
.L1007:
	.loc 1 3470 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.487
	movq	56(%rax), %rax	# PL_curcop.487_45->cop_filegv, PL_Sv.488
	movq	%rax, PL_Sv(%rip)	# PL_Sv.488, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.490
	testq	%rax, %rax	# PL_Sv.490
	je	.L1009	#,
	.loc 1 3470 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.491
	movl	8(%rax), %edx	# PL_Sv.491_48->sv_refcnt, D.21959
	addl	$1, %edx	#, D.21959
	movl	%edx, 8(%rax)	# D.21959, PL_Sv.491_48->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.491_48->sv_refcnt, D.21959
	testl	%eax, %eax	# D.21959
	je	.L1009	#,
	.loc 1 3470 0
	nop
.L1009:
	.loc 1 3470 0 discriminator 4
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.492
	movq	%rax, 56(%rbx)	# PL_Sv.492, cop_3->cop_filegv
	.loc 1 3472 0 is_stmt 1 discriminator 4
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.493
	movq	%rax, 48(%rbx)	# PL_curstash.493, cop_3->cop_stash
	.loc 1 3474 0 discriminator 4
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.494
	testl	%eax, %eax	# PL_perldb.494
	je	.L1010	#,
	.loc 1 3474 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.495
	andl	$2, %eax	#, D.21959
	testl	%eax, %eax	# D.21959
	je	.L1010	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.496
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.497
	cmpq	%rax, %rdx	# PL_debstash.497, PL_curstash.496
	je	.L1010	#,
.LBB54:
	.loc 1 3475 0 is_stmt 1
	movl	72(%rbx), %eax	# cop_3->cop_line, D.21959
	movl	%eax, %ecx	# D.21959, D.21962
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.499
	movq	56(%rax), %rax	# PL_curcop.499_63->cop_filegv, D.21964
	testq	%rax, %rax	# D.21964
	je	.L1011	#,
	.loc 1 3475 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.500
	movq	56(%rax), %rax	# PL_curcop.500_65->cop_filegv, D.21964
	movq	(%rax), %rax	# _66->sv_any, D.21965
	movq	56(%rax), %rax	# _67->xgv_gp, D.21966
	movq	32(%rax), %rax	# _68->gp_av, iftmp.498
	jmp	.L1012	#
.L1011:
	.loc 1 3475 0 discriminator 2
	movl	$0, %eax	#, iftmp.498
.L1012:
	.loc 1 3475 0 discriminator 3
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.21962,
	movq	%rax, %rdi	# iftmp.498,
	call	Perl_av_fetch	#
	movq	%rax, -24(%rbp)	# tmp145, svp
	.loc 1 3476 0 is_stmt 1 discriminator 3
	cmpq	$0, -24(%rbp)	#, svp
	je	.L1010	#,
	.loc 1 3476 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# svp, tmp146
	movq	(%rax), %rax	# *svp_71, D.21963
	cmpq	$PL_sv_undef, %rax	#, D.21963
	je	.L1010	#,
	.loc 1 3477 0 is_stmt 1
	movq	-24(%rbp), %rax	# svp, tmp147
	movq	(%rax), %rax	# *svp_71, D.21963
	movl	12(%rax), %eax	# _73->sv_flags, D.21959
	andl	$2097152, %eax	#, D.21959
	testl	%eax, %eax	# D.21959
	je	.L1014	#,
	.loc 1 3477 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# svp, tmp148
	movq	(%rax), %rax	# *svp_71, D.21963
	movq	%rax, %rdi	# D.21963,
	call	Perl_sv_backoff	#
	testl	%eax, %eax	# D.21962
	je	.L1014	#,
	.loc 1 3477 0
	nop
.L1014:
	.loc 1 3477 0 discriminator 3
	movq	-24(%rbp), %rax	# svp, tmp149
	movq	(%rax), %rax	# *svp_71, D.21963
	movq	-24(%rbp), %rdx	# svp, tmp150
	movq	(%rdx), %rdx	# *svp_71, D.21963
	movl	12(%rdx), %edx	# _81->sv_flags, D.21959
	orl	$16842752, %edx	#, D.21959
	movl	%edx, 12(%rax)	# D.21959, _80->sv_flags
	.loc 1 3478 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# svp, tmp151
	movq	(%rax), %rax	# *svp_71, D.21963
	movq	(%rax), %rax	# _84->sv_any, D.21967
	movq	%rbx, %rdx	# cop, cop.502
	movq	%rdx, 24(%rax)	# cop.502, MEM[(struct XPVIV *)_85].xiv_iv
.L1010:
.LBE54:
	.loc 1 3482 0
	movq	-56(%rbp), %rax	# o, tmp152
	movq	%rax, %rdx	# tmp152,
	movq	%rbx, %rsi	# cop,
	movl	$173, %edi	#,
	call	Perl_prepend_elem	#
	.loc 1 3483 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE75:
	.size	Perl_newSTATEOP, .-Perl_newSTATEOP
	.globl	Perl_newLOGOP
	.type	Perl_newLOGOP, @function
Perl_newLOGOP:
.LFB76:
	.loc 1 3488 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movl	%esi, -8(%rbp)	# flags, flags
	movq	%rdx, -16(%rbp)	# first, first
	movq	%rcx, -24(%rbp)	# other, other
	.loc 1 3489 0
	leaq	-24(%rbp), %rcx	#, tmp61
	leaq	-16(%rbp), %rdx	#, tmp62
	movl	-8(%rbp), %esi	# flags, tmp63
	movl	-4(%rbp), %eax	# type, tmp64
	movl	%eax, %edi	# tmp64,
	call	S_new_logop	#
	.loc 1 3490 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE76:
	.size	Perl_newLOGOP, .-Perl_newLOGOP
	.section	.rodata
.LC65:
	.string	"Bareword found in conditional"
.LC66:
	.string	" construct"
.LC67:
	.string	"() operator"
	.align 8
.LC68:
	.string	"Value of %s%s can be \"0\"; test with defined()"
	.text
	.type	S_new_logop, @function
S_new_logop:
.LFB77:
	.loc 1 3494 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$104, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -84(%rbp)	# type, type
	movl	%esi, -88(%rbp)	# flags, flags
	movq	%rdx, -96(%rbp)	# firstp, firstp
	movq	%rcx, -104(%rbp)	# otherp, otherp
	.loc 1 3497 0
	movq	-96(%rbp), %rax	# firstp, tmp208
	movq	(%rax), %rax	# *firstp_17(D), tmp209
	movq	%rax, -64(%rbp)	# tmp209, first
	.loc 1 3498 0
	movq	-104(%rbp), %rax	# otherp, tmp210
	movq	(%rax), %rax	# *otherp_19(D), tmp211
	movq	%rax, -56(%rbp)	# tmp211, other
	.loc 1 3500 0
	cmpl	$161, -84(%rbp)	#, type
	jne	.L1019	#,
	.loc 1 3501 0
	movq	-56(%rbp), %rax	# other, tmp212
	movq	%rax, %rdi	# tmp212,
	call	Perl_scalar	#
	movq	%rax, %rbx	#, D.21970
	movq	-64(%rbp), %rax	# first, tmp213
	movq	%rax, %rdi	# tmp213,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.21970
	movl	-88(%rbp), %esi	# flags, tmp214
	movl	-84(%rbp), %eax	# type, tmp215
	movq	%rbx, %rcx	# D.21970,
	movl	%eax, %edi	# tmp215,
	call	Perl_newBINOP	#
	jmp	.L1020	#
.L1019:
	.loc 1 3503 0
	movq	-64(%rbp), %rax	# first, tmp216
	movq	%rax, %rdi	# tmp216,
	call	S_scalarboolean	#
	.loc 1 3505 0
	movq	-64(%rbp), %rax	# first, tmp217
	movzwl	32(%rax), %eax	# first_18->op_type, D.21971
	cmpw	$96, %ax	#, D.21971
	jne	.L1021	#,
	.loc 1 3505 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# first, tmp218
	movzbl	36(%rax), %eax	# first_18->op_flags, D.21972
	testb	%al, %al	# D.21973
	jns	.L1021	#,
	.loc 1 3506 0 is_stmt 1
	cmpl	$159, -84(%rbp)	#, type
	je	.L1022	#,
	.loc 1 3506 0 is_stmt 0 discriminator 1
	cmpl	$160, -84(%rbp)	#, type
	jne	.L1021	#,
.L1022:
	.loc 1 3507 0 is_stmt 1
	cmpl	$159, -84(%rbp)	#, type
	jne	.L1023	#,
	.loc 1 3508 0
	movl	$160, -84(%rbp)	#, type
	jmp	.L1024	#
.L1023:
	.loc 1 3510 0
	movl	$159, -84(%rbp)	#, type
.L1024:
	.loc 1 3511 0
	movq	-64(%rbp), %rax	# first, tmp219
	movq	%rax, -48(%rbp)	# tmp219, o
	.loc 1 3512 0
	movq	-48(%rbp), %rax	# o, tmp220
	movq	40(%rax), %rdx	# MEM[(struct UNOP *)o_31].op_first, D.21970
	movq	-96(%rbp), %rax	# firstp, tmp221
	movq	%rdx, (%rax)	# D.21970, *firstp_17(D)
	movq	-96(%rbp), %rax	# firstp, tmp222
	movq	(%rax), %rax	# *firstp_17(D), tmp223
	movq	%rax, -64(%rbp)	# tmp223, first
	.loc 1 3513 0
	movq	-48(%rbp), %rax	# o, tmp224
	movq	(%rax), %rax	# o_31->op_next, D.21970
	testq	%rax, %rax	# D.21970
	je	.L1025	#,
	.loc 1 3514 0
	movq	-48(%rbp), %rax	# o, tmp225
	movq	(%rax), %rdx	# o_31->op_next, D.21970
	movq	-64(%rbp), %rax	# first, tmp226
	movq	%rdx, (%rax)	# D.21970, first_33->op_next
.L1025:
	.loc 1 3515 0
	movq	-48(%rbp), %rax	# o, tmp227
	movq	$0, 40(%rax)	#, MEM[(struct UNOP *)o_31].op_first
	.loc 1 3516 0
	movq	-48(%rbp), %rax	# o, tmp228
	movq	%rax, %rdi	# tmp228,
	call	Perl_op_free	#
.L1021:
	.loc 1 3519 0
	movq	-64(%rbp), %rax	# first, tmp229
	movzwl	32(%rax), %eax	# first_3->op_type, D.21971
	cmpw	$5, %ax	#, D.21971
	jne	.L1026	#,
	.loc 1 3520 0
	movq	-64(%rbp), %rax	# first, tmp230
	movzbl	37(%rax), %eax	# first_3->op_private, D.21972
	movzbl	%al, %eax	# D.21972, D.21974
	andl	$8, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1027	#,
	.loc 1 3521 0
	movq	-64(%rbp), %rax	# first, tmp231
	movq	%rax, %rdi	# tmp231,
	call	S_no_bareword_allowed	#
	jmp	.L1028	#
.L1027:
	.loc 1 3522 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.503
	movq	80(%rax), %rax	# PL_curcop.503_40->cop_warnings, D.21975
	testq	%rax, %rax	# D.21975
	je	.L1029	#,
	.loc 1 3522 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.504
	movq	80(%rax), %rax	# PL_curcop.504_42->cop_warnings, D.21975
	cmpq	$32, %rax	#, D.21975
	je	.L1029	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.505
	movq	80(%rax), %rax	# PL_curcop.505_44->cop_warnings, D.21975
	cmpq	$16, %rax	#, D.21975
	je	.L1030	#,
	.loc 1 3522 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.506
	movq	80(%rax), %rax	# PL_curcop.506_46->cop_warnings, D.21975
	movq	(%rax), %rax	# _47->sv_any, D.21976
	movq	(%rax), %rax	# MEM[(struct XPV *)_48].xpv_pv, D.21977
	addq	$7, %rax	#, D.21977
	movzbl	(%rax), %eax	# *_50, D.21978
	movsbl	%al, %eax	# D.21978, D.21974
	andl	$16, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	jne	.L1030	#,
.L1029:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.507
	movq	80(%rax), %rax	# PL_curcop.507_54->cop_warnings, D.21975
	testq	%rax, %rax	# D.21975
	jne	.L1028	#,
	.loc 1 3522 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.508
	movzbl	%al, %eax	# PL_dowarn.508, D.21974
	andl	$1, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1028	#,
.L1030:
	movq	-64(%rbp), %rax	# first, tmp232
	movzbl	37(%rax), %eax	# first_3->op_private, D.21972
	movzbl	%al, %eax	# D.21972, D.21974
	andl	$64, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1028	#,
	.loc 1 3523 0 is_stmt 1
	movl	$.LC65, %esi	#,
	movl	$30, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1028:
	.loc 1 3524 0
	cmpl	$159, -84(%rbp)	#, type
	sete	%al	#, D.21979
	movzbl	%al, %ebx	# D.21979, D.21974
	movq	-64(%rbp), %rax	# first, tmp233
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	testq	%rax, %rax	# D.21975
	je	.L1031	#,
	.loc 1 3524 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# first, tmp234
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movl	12(%rax), %eax	# _65->sv_flags, D.21980
	andl	$262144, %eax	#, D.21980
	testl	%eax, %eax	# D.21980
	je	.L1032	#,
	movq	-64(%rbp), %rax	# first, tmp235
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movq	(%rax), %rax	# _68->sv_any, PL_Xpv.512
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.512, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.513
	testq	%rax, %rax	# PL_Xpv.513
	je	.L1033	#,
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.514
	movq	8(%rax), %rax	# PL_Xpv.514_71->xpv_cur, D.21981
	cmpq	$1, %rax	#, D.21981
	ja	.L1034	#,
	.loc 1 3524 0 discriminator 4
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.515
	movq	8(%rax), %rax	# PL_Xpv.515_73->xpv_cur, D.21981
	testq	%rax, %rax	# D.21981
	je	.L1033	#,
	.loc 1 3524 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.516
	movq	(%rax), %rax	# PL_Xpv.516_75->xpv_pv, D.21977
	movzbl	(%rax), %eax	# *_76, D.21978
	cmpb	$48, %al	#, D.21978
	je	.L1033	#,
.L1034:
	.loc 1 3524 0 discriminator 3
	movl	$1, %eax	#, iftmp.511
	jmp	.L1035	#
.L1033:
	.loc 1 3524 0 discriminator 2
	movl	$0, %eax	#, iftmp.511
.L1035:
	jmp	.L1041	#
.L1032:
	movq	-64(%rbp), %rax	# first, tmp236
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movl	12(%rax), %eax	# _81->sv_flags, D.21980
	andl	$65536, %eax	#, D.21980
	testl	%eax, %eax	# D.21980
	je	.L1037	#,
	.loc 1 3524 0 discriminator 1
	movq	-64(%rbp), %rax	# first, tmp237
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movq	(%rax), %rax	# _84->sv_any, D.21976
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_85].xiv_iv, D.21982
	testq	%rax, %rax	# D.21982
	setne	%al	#, D.21979
	movzbl	%al, %eax	# D.21979, iftmp.517
	jmp	.L1041	#
.L1037:
	.loc 1 3524 0 discriminator 2
	movq	-64(%rbp), %rax	# first, tmp238
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movl	12(%rax), %eax	# _89->sv_flags, D.21980
	andl	$131072, %eax	#, D.21980
	testl	%eax, %eax	# D.21980
	je	.L1039	#,
	.loc 1 3524 0 discriminator 1
	movq	-64(%rbp), %rax	# first, tmp239
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movq	(%rax), %rax	# _92->sv_any, D.21976
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_93].xnv_nv, D.21983
	xorpd	%xmm1, %xmm1	# tmp241
	ucomisd	%xmm1, %xmm0	# tmp241, D.21983
	setp	%dl	#, tmp240
	movl	$1, %eax	#, tmp243
	xorpd	%xmm1, %xmm1	# tmp242
	ucomisd	%xmm1, %xmm0	# tmp242, D.21983
	cmove	%edx, %eax	# tmp240,, D.21979
	movzbl	%al, %eax	# D.21979, iftmp.518
	jmp	.L1041	#
.L1039:
	.loc 1 3524 0 discriminator 2
	movq	-64(%rbp), %rax	# first, tmp244
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_3].op_sv, D.21975
	movq	%rax, %rdi	# D.21975,
	call	Perl_sv_2bool	#
	movsbl	%al, %eax	# D.21978, iftmp.518
	jmp	.L1041	#
.L1031:
	movl	$0, %eax	#, iftmp.509
.L1041:
	.loc 1 3524 0 discriminator 3
	cmpl	%eax, %ebx	# iftmp.509, D.21974
	jne	.L1042	#,
	.loc 1 3525 0 is_stmt 1
	movq	-64(%rbp), %rax	# first, tmp245
	movq	%rax, %rdi	# tmp245,
	call	Perl_op_free	#
	.loc 1 3526 0
	movq	-96(%rbp), %rax	# firstp, tmp246
	movq	$0, (%rax)	#, *firstp_17(D)
	.loc 1 3527 0
	movq	-56(%rbp), %rax	# other, tmp247
	movzwl	32(%rax), %eax	# other_20->op_type, D.21971
	cmpw	$5, %ax	#, D.21971
	jne	.L1043	#,
	.loc 1 3528 0
	movq	-56(%rbp), %rax	# other, tmp248
	movzbl	37(%rax), %eax	# other_20->op_private, D.21972
	orl	$4, %eax	#, D.21972
	movl	%eax, %edx	# D.21972, D.21972
	movq	-56(%rbp), %rax	# other, tmp249
	movb	%dl, 37(%rax)	# D.21972, other_20->op_private
.L1043:
	.loc 1 3529 0
	movq	-56(%rbp), %rax	# other, D.21970
	jmp	.L1020	#
.L1042:
	.loc 1 3532 0
	movq	-56(%rbp), %rax	# other, tmp250
	movq	%rax, %rdi	# tmp250,
	call	Perl_op_free	#
	.loc 1 3533 0
	movq	-104(%rbp), %rax	# otherp, tmp251
	movq	$0, (%rax)	#, *otherp_19(D)
	.loc 1 3534 0
	movq	-64(%rbp), %rax	# first, tmp252
	movzwl	32(%rax), %eax	# first_3->op_type, D.21971
	cmpw	$5, %ax	#, D.21971
	jne	.L1044	#,
	.loc 1 3535 0
	movq	-64(%rbp), %rax	# first, tmp253
	movzbl	37(%rax), %eax	# first_3->op_private, D.21972
	orl	$4, %eax	#, D.21972
	movl	%eax, %edx	# D.21972, D.21972
	movq	-64(%rbp), %rax	# first, tmp254
	movb	%dl, 37(%rax)	# D.21972, first_3->op_private
.L1044:
	.loc 1 3536 0
	movq	-64(%rbp), %rax	# first, D.21970
	jmp	.L1020	#
.L1026:
	.loc 1 3539 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.519
	movq	80(%rax), %rax	# PL_curcop.519_112->cop_warnings, D.21975
	testq	%rax, %rax	# D.21975
	je	.L1045	#,
	.loc 1 3539 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.520
	movq	80(%rax), %rax	# PL_curcop.520_114->cop_warnings, D.21975
	cmpq	$32, %rax	#, D.21975
	je	.L1045	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.521
	movq	80(%rax), %rax	# PL_curcop.521_116->cop_warnings, D.21975
	cmpq	$16, %rax	#, D.21975
	je	.L1046	#,
	.loc 1 3539 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.522
	movq	80(%rax), %rax	# PL_curcop.522_118->cop_warnings, D.21975
	movq	(%rax), %rax	# _119->sv_any, D.21976
	movq	(%rax), %rax	# MEM[(struct XPV *)_120].xpv_pv, D.21977
	addq	$3, %rax	#, D.21977
	movzbl	(%rax), %eax	# *_122, D.21978
	movsbl	%al, %eax	# D.21978, D.21974
	andl	$1, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	jne	.L1046	#,
.L1045:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.523
	movq	80(%rax), %rax	# PL_curcop.523_126->cop_warnings, D.21975
	testq	%rax, %rax	# D.21975
	jne	.L1047	#,
	.loc 1 3539 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.524
	movzbl	%al, %eax	# PL_dowarn.524, D.21974
	andl	$1, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1047	#,
.L1046:
	movq	-64(%rbp), %rax	# first, tmp255
	movzbl	36(%rax), %eax	# first_3->op_flags, D.21972
	movzbl	%al, %eax	# D.21972, D.21974
	andl	$4, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1047	#,
.LBB55:
	.loc 1 3540 0 is_stmt 1
	movq	-64(%rbp), %rax	# first, tmp256
	movq	40(%rax), %rax	# MEM[(struct UNOP *)first_3].op_first, tmp257
	movq	%rax, -40(%rbp)	# tmp257, k1
	.loc 1 3541 0
	movq	-40(%rbp), %rax	# k1, tmp258
	movq	8(%rax), %rax	# k1_134->op_sibling, tmp259
	movq	%rax, -32(%rbp)	# tmp259, k2
	.loc 1 3542 0
	movw	$0, -70(%rbp)	#, warnop
	.loc 1 3543 0
	movq	-64(%rbp), %rax	# first, tmp260
	movzwl	32(%rax), %eax	# first_3->op_type, D.21971
	movzwl	%ax, %eax	# D.21971, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1049	#,
	cmpl	$36, %eax	#, D.21974
	je	.L1050	#,
	jmp	.L1048	#
.L1049:
	.loc 1 3546 0
	cmpq	$0, -32(%rbp)	#, k2
	je	.L1051	#,
	.loc 1 3546 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# k2, tmp261
	movzwl	32(%rax), %eax	# k2_135->op_type, D.21971
	cmpw	$26, %ax	#, D.21971
	jne	.L1051	#,
	.loc 1 3547 0 is_stmt 1
	movq	-32(%rbp), %rax	# k2, tmp262
	movzbl	36(%rax), %eax	# k2_135->op_flags, D.21972
	movzbl	%al, %eax	# D.21972, D.21974
	andl	$64, %eax	#, D.21974
	testl	%eax, %eax	# D.21974
	je	.L1051	#,
	.loc 1 3548 0
	movq	-40(%rbp), %rax	# k1, tmp263
	movzbl	36(%rax), %eax	# k1_134->op_flags, D.21972
	movzbl	%al, %eax	# D.21972, D.21974
	andl	$3, %eax	#, D.21974
	cmpl	$2, %eax	#, D.21974
	jne	.L1051	#,
	.loc 1 3550 0
	movq	-32(%rbp), %rax	# k2, tmp264
	movzwl	32(%rax), %eax	# k2_135->op_type, tmp265
	movw	%ax, -70(%rbp)	# tmp265, warnop
	.loc 1 3552 0
	jmp	.L1048	#
.L1051:
	jmp	.L1048	#
.L1050:
	.loc 1 3555 0
	movq	-40(%rbp), %rax	# k1, tmp266
	movzwl	32(%rax), %eax	# k1_134->op_type, D.21971
	cmpw	$276, %ax	#, D.21971
	je	.L1052	#,
	.loc 1 3556 0
	movq	-40(%rbp), %rax	# k1, tmp267
	movzwl	32(%rax), %eax	# k1_134->op_type, D.21971
	cmpw	$25, %ax	#, D.21971
	je	.L1052	#,
	.loc 1 3557 0
	movq	-40(%rbp), %rax	# k1, tmp268
	movzwl	32(%rax), %eax	# k1_134->op_type, D.21971
	testw	%ax, %ax	# D.21971
	jne	.L1053	#,
	.loc 1 3557 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# k1, tmp269
	movq	24(%rax), %rax	# k1_134->op_targ, D.21981
	cmpq	$25, %rax	#, D.21981
	je	.L1052	#,
.L1053:
	.loc 1 3558 0 is_stmt 1
	movq	-40(%rbp), %rax	# k1, tmp270
	movzwl	32(%rax), %eax	# k1_134->op_type, D.21971
	cmpw	$129, %ax	#, D.21971
	jne	.L1054	#,
.L1052:
	.loc 1 3560 0
	movq	-40(%rbp), %rax	# k1, tmp271
	movzwl	32(%rax), %eax	# k1_134->op_type, D.21971
	testw	%ax, %ax	# D.21971
	jne	.L1055	#,
	.loc 1 3561 0
	movq	-40(%rbp), %rax	# k1, tmp272
	movq	24(%rax), %rax	# k1_134->op_targ, D.21981
	jmp	.L1056	#
.L1055:
	.loc 1 3560 0 discriminator 1
	movq	-40(%rbp), %rax	# k1, tmp273
	movzwl	32(%rax), %eax	# k1_134->op_type, iftmp.525
.L1056:
	.loc 1 3560 0 is_stmt 0 discriminator 2
	movw	%ax, -70(%rbp)	# iftmp.525, warnop
	.loc 1 3563 0 is_stmt 1 discriminator 2
	jmp	.L1069	#
.L1054:
.L1069:
	.loc 1 3563 0 is_stmt 0
	nop
.L1048:
	.loc 1 3565 0 is_stmt 1
	cmpw	$0, -70(%rbp)	#, warnop
	je	.L1047	#,
.LBB56:
	.loc 1 3566 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.526
	movl	72(%rax), %eax	# PL_curcop.526_157->cop_line, tmp274
	movl	%eax, -68(%rbp)	# tmp274, oldline
	.loc 1 3567 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.527
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.528
	movl	%edx, 72(%rax)	# PL_copline.528, PL_curcop.527_159->cop_line
	.loc 1 3568 0
	cmpw	$26, -70(%rbp)	#, warnop
	je	.L1057	#,
	.loc 1 3571 0
	cmpw	$25, -70(%rbp)	#, warnop
	jne	.L1058	#,
.L1057:
	.loc 1 3568 0 discriminator 1
	movl	$.LC66, %eax	#, iftmp.529
	jmp	.L1059	#
.L1058:
	.loc 1 3568 0 is_stmt 0
	movl	$.LC67, %eax	#, iftmp.529
.L1059:
	.loc 1 3568 0 discriminator 2
	movzwl	-70(%rbp), %edx	# warnop, D.21974
	movslq	%edx, %rdx	# D.21974, tmp275
	movq	PL_op_desc(,%rdx,8), %rdx	# PL_op_desc, D.21977
	movq	%rax, %rcx	# iftmp.529,
	movl	$.LC68, %esi	#,
	movl	$12, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 3573 0 is_stmt 1 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.530
	movl	-68(%rbp), %edx	# oldline, tmp276
	movl	%edx, 72(%rax)	# tmp276, PL_curcop.530_165->cop_line
.L1047:
.LBE56:
.LBE55:
	.loc 1 3577 0
	cmpq	$0, -56(%rbp)	#, other
	jne	.L1060	#,
	.loc 1 3578 0
	movq	-64(%rbp), %rax	# first, D.21970
	jmp	.L1020	#
.L1060:
	.loc 1 3580 0
	cmpl	$163, -84(%rbp)	#, type
	je	.L1061	#,
	.loc 1 3580 0 is_stmt 0 discriminator 1
	cmpl	$164, -84(%rbp)	#, type
	jne	.L1062	#,
.L1061:
	.loc 1 3581 0 is_stmt 1
	movq	-56(%rbp), %rax	# other, tmp277
	movzbl	37(%rax), %eax	# other_20->op_private, D.21972
	orl	$64, %eax	#, D.21972
	movl	%eax, %edx	# D.21972, D.21972
	movq	-56(%rbp), %rax	# other, tmp278
	movb	%dl, 37(%rax)	# D.21972, other_20->op_private
.L1062:
	.loc 1 3583 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp279, logop
	movq	-24(%rbp), %rax	# logop, tmp280
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp280,
	call	memset	#
	.loc 1 3585 0
	movl	-84(%rbp), %eax	# type, tmp281
	movl	%eax, %edx	# tmp281, D.21971
	movq	-24(%rbp), %rax	# logop, tmp282
	movw	%dx, 32(%rax)	# D.21971, logop_169->op_type
	.loc 1 3586 0
	movl	-84(%rbp), %eax	# type, tmp284
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.21984
	movq	-24(%rbp), %rax	# logop, tmp285
	movq	%rdx, 16(%rax)	# D.21984, logop_169->op_ppaddr
	.loc 1 3587 0
	movq	-24(%rbp), %rax	# logop, tmp286
	movq	-64(%rbp), %rdx	# first, tmp287
	movq	%rdx, 40(%rax)	# tmp287, logop_169->op_first
	.loc 1 3588 0
	movl	-88(%rbp), %eax	# flags, tmp288
	orl	$4, %eax	#, D.21973
	movl	%eax, %edx	# D.21973, D.21972
	movq	-24(%rbp), %rax	# logop, tmp289
	movb	%dl, 36(%rax)	# D.21972, logop_169->op_flags
	.loc 1 3589 0
	movq	-56(%rbp), %rax	# other, tmp290
	movq	(%rax), %rax	# other_20->op_next, D.21970
	testq	%rax, %rax	# D.21970
	je	.L1063	#,
	.loc 1 3589 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# other, tmp291
	movq	(%rax), %rax	# other_20->op_next, iftmp.531
	jmp	.L1064	#
.L1063:
	.loc 1 3589 0 discriminator 2
	movq	-56(%rbp), %rax	# other, tmp292
	movq	%rax, %rdi	# tmp292,
	call	Perl_linklist	#
.L1064:
	.loc 1 3589 0 discriminator 3
	movq	-24(%rbp), %rdx	# logop, tmp293
	movq	%rax, 48(%rdx)	# iftmp.531, logop_169->op_other
	.loc 1 3590 0 is_stmt 1 discriminator 3
	movl	-88(%rbp), %eax	# flags, tmp294
	sarl	$8, %eax	#, D.21974
	orl	$1, %eax	#, D.21973
	movl	%eax, %edx	# D.21973, D.21972
	movq	-24(%rbp), %rax	# logop, tmp295
	movb	%dl, 37(%rax)	# D.21972, logop_169->op_private
	.loc 1 3593 0 discriminator 3
	movq	-64(%rbp), %rax	# first, tmp296
	movq	(%rax), %rax	# first_3->op_next, D.21970
	testq	%rax, %rax	# D.21970
	je	.L1065	#,
	.loc 1 3593 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# first, tmp297
	movq	(%rax), %rax	# first_3->op_next, iftmp.532
	jmp	.L1066	#
.L1065:
	.loc 1 3593 0 discriminator 2
	movq	-64(%rbp), %rax	# first, tmp298
	movq	%rax, %rdi	# tmp298,
	call	Perl_linklist	#
.L1066:
	.loc 1 3593 0 discriminator 3
	movq	-24(%rbp), %rdx	# logop, tmp299
	movq	%rax, (%rdx)	# iftmp.532, logop_169->op_next
	.loc 1 3594 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rax	# first, tmp300
	movq	-24(%rbp), %rdx	# logop, tmp301
	movq	%rdx, (%rax)	# tmp301, first_3->op_next
	.loc 1 3595 0 discriminator 3
	movq	-64(%rbp), %rax	# first, tmp302
	movq	-56(%rbp), %rdx	# other, tmp303
	movq	%rdx, 8(%rax)	# tmp303, first_3->op_sibling
	.loc 1 3597 0 discriminator 3
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.534
	testq	%rax, %rax	# PL_op_mask.534
	je	.L1067	#,
	.loc 1 3597 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rdx	# PL_op_mask, PL_op_mask.535
	movl	-84(%rbp), %eax	# type, tmp304
	cltq
	addq	%rdx, %rax	# PL_op_mask.535, D.21977
	movzbl	(%rax), %eax	# *_188, D.21978
	testb	%al, %al	# D.21978
	je	.L1067	#,
	movq	-24(%rbp), %rax	# logop, tmp305
	movq	%rax, %rdi	# tmp305,
	call	Perl_op_free	#
	movl	-84(%rbp), %eax	# type, tmp307
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.21977
	movq	%rax, %rsi	# D.21977,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1068	#
.L1067:
	.loc 1 3597 0 discriminator 2
	movl	-84(%rbp), %eax	# type, tmp309
	cltq
	movq	PL_check(,%rax,8), %rax	# PL_check, D.21986
	movq	-24(%rbp), %rdx	# logop, tmp310
	movq	%rdx, %rdi	# tmp310,
	call	*%rax	# D.21986
.L1068:
	.loc 1 3599 0 is_stmt 1
	movq	-24(%rbp), %rax	# logop, tmp311
	movq	%rax, %rdx	# tmp311,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -48(%rbp)	# tmp312, o
	.loc 1 3600 0
	movq	-56(%rbp), %rax	# other, tmp313
	movq	-48(%rbp), %rdx	# o, tmp314
	movq	%rdx, (%rax)	# tmp314, other_20->op_next
	.loc 1 3602 0
	movq	-48(%rbp), %rax	# o, D.21970
.L1020:
	.loc 1 3603 0
	addq	$104, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE77:
	.size	S_new_logop, .-S_new_logop
	.globl	Perl_newCONDOP
	.type	Perl_newCONDOP, @function
Perl_newCONDOP:
.LFB78:
	.loc 1 3607 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$64, %rsp	#,
	movl	%edi, -36(%rbp)	# flags, flags
	movq	%rsi, -48(%rbp)	# first, first
	movq	%rdx, -56(%rbp)	# trueop, trueop
	movq	%rcx, -64(%rbp)	# falseop, falseop
	.loc 1 3612 0
	cmpq	$0, -64(%rbp)	#, falseop
	jne	.L1071	#,
	.loc 1 3613 0
	movq	-56(%rbp), %rdx	# trueop, tmp124
	movq	-48(%rbp), %rax	# first, tmp125
	movq	%rdx, %rcx	# tmp124,
	movq	%rax, %rdx	# tmp125,
	movl	$0, %esi	#,
	movl	$159, %edi	#,
	call	Perl_newLOGOP	#
	jmp	.L1072	#
.L1071:
	.loc 1 3614 0
	cmpq	$0, -56(%rbp)	#, trueop
	jne	.L1073	#,
	.loc 1 3615 0
	movq	-64(%rbp), %rdx	# falseop, tmp126
	movq	-48(%rbp), %rax	# first, tmp127
	movq	%rdx, %rcx	# tmp126,
	movq	%rax, %rdx	# tmp127,
	movl	$0, %esi	#,
	movl	$160, %edi	#,
	call	Perl_newLOGOP	#
	jmp	.L1072	#
.L1073:
	.loc 1 3617 0
	movq	-48(%rbp), %rax	# first, tmp128
	movq	%rax, %rdi	# tmp128,
	call	S_scalarboolean	#
	.loc 1 3618 0
	movq	-48(%rbp), %rax	# first, tmp129
	movzwl	32(%rax), %eax	# first_11(D)->op_type, D.21992
	cmpw	$5, %ax	#, D.21992
	jne	.L1074	#,
	.loc 1 3619 0
	movq	-48(%rbp), %rax	# first, tmp130
	movzbl	37(%rax), %eax	# first_11(D)->op_private, D.21993
	movzbl	%al, %eax	# D.21993, D.21994
	andl	$64, %eax	#, D.21994
	testl	%eax, %eax	# D.21994
	je	.L1075	#,
	.loc 1 3620 0 discriminator 1
	movq	-48(%rbp), %rax	# first, tmp131
	movzbl	37(%rax), %eax	# first_11(D)->op_private, D.21993
	movzbl	%al, %eax	# D.21993, D.21994
	andl	$8, %eax	#, D.21994
	.loc 1 3619 0 discriminator 1
	testl	%eax, %eax	# D.21994
	je	.L1075	#,
	.loc 1 3621 0
	movq	-48(%rbp), %rax	# first, tmp132
	movq	%rax, %rdi	# tmp132,
	call	S_no_bareword_allowed	#
.L1075:
	.loc 1 3623 0
	movq	-48(%rbp), %rax	# first, tmp133
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	testq	%rax, %rax	# D.21995
	je	.L1076	#,
	.loc 1 3623 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# first, tmp134
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movl	12(%rax), %eax	# _23->sv_flags, D.21996
	andl	$262144, %eax	#, D.21996
	testl	%eax, %eax	# D.21996
	je	.L1077	#,
	.loc 1 3623 0 discriminator 3
	movq	-48(%rbp), %rax	# first, tmp135
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movq	(%rax), %rax	# _26->sv_any, PL_Xpv.539
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.539, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.540
	testq	%rax, %rax	# PL_Xpv.540
	je	.L1078	#,
	.loc 1 3623 0 discriminator 5
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.541
	movq	8(%rax), %rax	# PL_Xpv.541_29->xpv_cur, D.21997
	cmpq	$1, %rax	#, D.21997
	ja	.L1079	#,
	.loc 1 3623 0 discriminator 8
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.542
	movq	8(%rax), %rax	# PL_Xpv.542_31->xpv_cur, D.21997
	testq	%rax, %rax	# D.21997
	je	.L1078	#,
	.loc 1 3623 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.543
	movq	(%rax), %rax	# PL_Xpv.543_33->xpv_pv, D.21998
	movzbl	(%rax), %eax	# *_34, D.21999
	cmpb	$48, %al	#, D.21999
	je	.L1078	#,
.L1079:
	.loc 1 3623 0 discriminator 7
	movl	$1, %eax	#, iftmp.538
	jmp	.L1080	#
.L1078:
	.loc 1 3623 0 discriminator 6
	movl	$0, %eax	#, iftmp.538
.L1080:
	.loc 1 3623 0 discriminator 9
	andl	$1, %eax	#, iftmp.537
	jmp	.L1086	#
.L1077:
	.loc 1 3623 0 discriminator 4
	movq	-48(%rbp), %rax	# first, tmp136
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movl	12(%rax), %eax	# _39->sv_flags, D.21996
	andl	$65536, %eax	#, D.21996
	testl	%eax, %eax	# D.21996
	je	.L1082	#,
	.loc 1 3623 0 discriminator 10
	movq	-48(%rbp), %rax	# first, tmp137
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movq	(%rax), %rax	# _42->sv_any, D.22000
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_43].xiv_iv, D.22001
	testq	%rax, %rax	# D.22001
	setne	%al	#, iftmp.544
	jmp	.L1086	#
.L1082:
	.loc 1 3623 0 discriminator 11
	movq	-48(%rbp), %rax	# first, tmp138
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movl	12(%rax), %eax	# _46->sv_flags, D.21996
	andl	$131072, %eax	#, D.21996
	testl	%eax, %eax	# D.21996
	je	.L1084	#,
	.loc 1 3623 0 discriminator 12
	movq	-48(%rbp), %rax	# first, tmp139
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movq	(%rax), %rax	# _49->sv_any, D.22000
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_50].xnv_nv, D.22002
	xorpd	%xmm1, %xmm1	# tmp141
	ucomisd	%xmm1, %xmm0	# tmp141, D.22002
	setp	%dl	#, tmp140
	movl	$1, %eax	#, tmp143
	xorpd	%xmm1, %xmm1	# tmp142
	ucomisd	%xmm1, %xmm0	# tmp142, D.22002
	cmove	%edx, %eax	# tmp140,, iftmp.545
	jmp	.L1086	#
.L1084:
	.loc 1 3623 0 discriminator 13
	movq	-48(%rbp), %rax	# first, tmp144
	movq	40(%rax), %rax	# MEM[(struct SVOP *)first_11(D)].op_sv, D.21995
	movq	%rax, %rdi	# D.21995,
	call	Perl_sv_2bool	#
	testb	%al, %al	# D.21999
	setne	%al	#, iftmp.545
	jmp	.L1086	#
.L1076:
	.loc 1 3623 0 discriminator 2
	movl	$0, %eax	#, iftmp.536
.L1086:
	.loc 1 3623 0 discriminator 16
	testb	%al, %al	# iftmp.536
	je	.L1087	#,
	.loc 1 3624 0 is_stmt 1
	movq	-48(%rbp), %rax	# first, tmp145
	movq	%rax, %rdi	# tmp145,
	call	Perl_op_free	#
	.loc 1 3625 0
	movq	-64(%rbp), %rax	# falseop, tmp146
	movq	%rax, %rdi	# tmp146,
	call	Perl_op_free	#
	.loc 1 3626 0
	movq	-56(%rbp), %rax	# trueop, D.21991
	jmp	.L1072	#
.L1087:
	.loc 1 3629 0
	movq	-48(%rbp), %rax	# first, tmp147
	movq	%rax, %rdi	# tmp147,
	call	Perl_op_free	#
	.loc 1 3630 0
	movq	-56(%rbp), %rax	# trueop, tmp148
	movq	%rax, %rdi	# tmp148,
	call	Perl_op_free	#
	.loc 1 3631 0
	movq	-64(%rbp), %rax	# falseop, D.21991
	jmp	.L1072	#
.L1074:
	.loc 1 3634 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -24(%rbp)	# tmp149, logop
	movq	-24(%rbp), %rax	# logop, tmp150
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp150,
	call	memset	#
	.loc 1 3635 0
	movq	-24(%rbp), %rax	# logop, tmp151
	movw	$162, 32(%rax)	#, logop_62->op_type
	.loc 1 3636 0
	movq	PL_ppaddr+1296(%rip), %rdx	# PL_ppaddr, D.22003
	movq	-24(%rbp), %rax	# logop, tmp152
	movq	%rdx, 16(%rax)	# D.22003, logop_62->op_ppaddr
	.loc 1 3637 0
	movq	-24(%rbp), %rax	# logop, tmp153
	movq	-48(%rbp), %rdx	# first, tmp154
	movq	%rdx, 40(%rax)	# tmp154, logop_62->op_first
	.loc 1 3638 0
	movl	-36(%rbp), %eax	# flags, tmp155
	orl	$4, %eax	#, D.22004
	movl	%eax, %edx	# D.22004, D.21993
	movq	-24(%rbp), %rax	# logop, tmp156
	movb	%dl, 36(%rax)	# D.21993, logop_62->op_flags
	.loc 1 3639 0
	movl	-36(%rbp), %eax	# flags, tmp157
	sarl	$8, %eax	#, D.21994
	orl	$1, %eax	#, D.22004
	movl	%eax, %edx	# D.22004, D.21993
	movq	-24(%rbp), %rax	# logop, tmp158
	movb	%dl, 37(%rax)	# D.21993, logop_62->op_private
	.loc 1 3640 0
	movq	-56(%rbp), %rax	# trueop, tmp159
	movq	(%rax), %rax	# trueop_12(D)->op_next, D.21991
	testq	%rax, %rax	# D.21991
	je	.L1088	#,
	.loc 1 3640 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# trueop, tmp160
	movq	(%rax), %rax	# trueop_12(D)->op_next, iftmp.546
	jmp	.L1089	#
.L1088:
	.loc 1 3640 0 discriminator 2
	movq	-56(%rbp), %rax	# trueop, tmp161
	movq	%rax, %rdi	# tmp161,
	call	Perl_linklist	#
.L1089:
	.loc 1 3640 0 discriminator 3
	movq	-24(%rbp), %rdx	# logop, tmp162
	movq	%rax, 48(%rdx)	# iftmp.546, logop_62->op_other
	.loc 1 3641 0 is_stmt 1 discriminator 3
	movq	-64(%rbp), %rax	# falseop, tmp163
	movq	(%rax), %rax	# falseop_10(D)->op_next, D.21991
	testq	%rax, %rax	# D.21991
	je	.L1090	#,
	.loc 1 3641 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# falseop, tmp164
	movq	(%rax), %rax	# falseop_10(D)->op_next, iftmp.547
	jmp	.L1091	#
.L1090:
	.loc 1 3641 0 discriminator 2
	movq	-64(%rbp), %rax	# falseop, tmp165
	movq	%rax, %rdi	# tmp165,
	call	Perl_linklist	#
.L1091:
	.loc 1 3641 0 discriminator 3
	movq	-24(%rbp), %rdx	# logop, tmp166
	movq	%rax, (%rdx)	# iftmp.547, logop_62->op_next
	.loc 1 3643 0 is_stmt 1 discriminator 3
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.549
	testq	%rax, %rax	# PL_op_mask.549
	je	.L1092	#,
	.loc 1 3643 0 is_stmt 0 discriminator 1
	movq	PL_op_mask(%rip), %rax	# PL_op_mask, PL_op_mask.550
	addq	$162, %rax	#, D.21998
	movzbl	(%rax), %eax	# *_80, D.21999
	testb	%al, %al	# D.21999
	je	.L1092	#,
	movq	-24(%rbp), %rax	# logop, tmp167
	movq	%rax, %rdi	# tmp167,
	call	Perl_op_free	#
	movq	PL_op_desc+1296(%rip), %rax	# PL_op_desc, D.21998
	movq	%rax, %rsi	# D.21998,
	movl	$.LC44, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1093	#
.L1092:
	.loc 1 3643 0 discriminator 2
	movq	PL_check+1296(%rip), %rax	# PL_check, D.22005
	movq	-24(%rbp), %rdx	# logop, tmp168
	movq	%rdx, %rdi	# tmp168,
	call	*%rax	# D.22005
.L1093:
	.loc 1 3647 0 is_stmt 1
	movq	-48(%rbp), %rax	# first, tmp169
	movq	(%rax), %rax	# first_11(D)->op_next, D.21991
	testq	%rax, %rax	# D.21991
	je	.L1094	#,
	.loc 1 3647 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# first, tmp170
	movq	(%rax), %rax	# first_11(D)->op_next, iftmp.551
	jmp	.L1095	#
.L1094:
	.loc 1 3647 0 discriminator 2
	movq	-48(%rbp), %rax	# first, tmp171
	movq	%rax, %rdi	# tmp171,
	call	Perl_linklist	#
.L1095:
	.loc 1 3647 0 discriminator 3
	movq	%rax, -16(%rbp)	# iftmp.551, start
	.loc 1 3648 0 is_stmt 1 discriminator 3
	movq	-48(%rbp), %rax	# first, tmp172
	movq	-24(%rbp), %rdx	# logop, tmp173
	movq	%rdx, (%rax)	# tmp173, first_11(D)->op_next
	.loc 1 3650 0 discriminator 3
	movq	-48(%rbp), %rax	# first, tmp174
	movq	-56(%rbp), %rdx	# trueop, tmp175
	movq	%rdx, 8(%rax)	# tmp175, first_11(D)->op_sibling
	.loc 1 3651 0 discriminator 3
	movq	-56(%rbp), %rax	# trueop, tmp176
	movq	-64(%rbp), %rdx	# falseop, tmp177
	movq	%rdx, 8(%rax)	# tmp177, trueop_12(D)->op_sibling
	.loc 1 3652 0 discriminator 3
	movq	-24(%rbp), %rax	# logop, tmp178
	movq	%rax, %rdx	# tmp178,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -8(%rbp)	# tmp179, o
	.loc 1 3654 0 discriminator 3
	movq	-64(%rbp), %rax	# falseop, tmp180
	movq	-8(%rbp), %rdx	# o, tmp181
	movq	%rdx, (%rax)	# tmp181, falseop_10(D)->op_next
	movq	-64(%rbp), %rax	# falseop, tmp182
	movq	(%rax), %rdx	# falseop_10(D)->op_next, D.21991
	movq	-56(%rbp), %rax	# trueop, tmp183
	movq	%rdx, (%rax)	# D.21991, trueop_12(D)->op_next
	.loc 1 3656 0 discriminator 3
	movq	-8(%rbp), %rax	# o, tmp184
	movq	-16(%rbp), %rdx	# start, tmp185
	movq	%rdx, (%rax)	# tmp185, o_90->op_next
	.loc 1 3657 0 discriminator 3
	movq	-8(%rbp), %rax	# o, D.21991
.L1072:
	.loc 1 3658 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE78:
	.size	Perl_newCONDOP, .-Perl_newCONDOP
	.globl	Perl_newRANGE
	.type	Perl_newRANGE, @function
Perl_newRANGE:
.LFB79:
	.loc 1 3662 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movl	%edi, -52(%rbp)	# flags, flags
	movq	%rsi, -64(%rbp)	# left, left
	movq	%rdx, -72(%rbp)	# right, right
	.loc 1 3669 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -40(%rbp)	# tmp88, range
	movq	-40(%rbp), %rax	# range, tmp89
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp89,
	call	memset	#
	.loc 1 3671 0
	movq	-40(%rbp), %rax	# range, tmp90
	movw	$156, 32(%rax)	#, range_5->op_type
	.loc 1 3672 0
	movq	PL_ppaddr+1248(%rip), %rdx	# PL_ppaddr, D.22006
	movq	-40(%rbp), %rax	# range, tmp91
	movq	%rdx, 16(%rax)	# D.22006, range_5->op_ppaddr
	.loc 1 3673 0
	movq	-40(%rbp), %rax	# range, tmp92
	movq	-64(%rbp), %rdx	# left, tmp93
	movq	%rdx, 40(%rax)	# tmp93, range_5->op_first
	.loc 1 3674 0
	movq	-40(%rbp), %rax	# range, tmp94
	movb	$4, 36(%rax)	#, range_5->op_flags
	.loc 1 3675 0
	movq	-64(%rbp), %rax	# left, tmp95
	movq	(%rax), %rax	# left_7(D)->op_next, D.22007
	testq	%rax, %rax	# D.22007
	je	.L1097	#,
	.loc 1 3675 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# left, tmp96
	movq	(%rax), %rax	# left_7(D)->op_next, iftmp.552
	jmp	.L1098	#
.L1097:
	.loc 1 3675 0 discriminator 2
	movq	-64(%rbp), %rax	# left, tmp97
	movq	%rax, %rdi	# tmp97,
	call	Perl_linklist	#
.L1098:
	.loc 1 3675 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.552, leftstart
	.loc 1 3676 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# right, tmp98
	movq	(%rax), %rax	# right_12(D)->op_next, D.22007
	testq	%rax, %rax	# D.22007
	je	.L1099	#,
	.loc 1 3676 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# right, tmp99
	movq	(%rax), %rax	# right_12(D)->op_next, iftmp.553
	jmp	.L1100	#
.L1099:
	.loc 1 3676 0 discriminator 2
	movq	-72(%rbp), %rax	# right, tmp100
	movq	%rax, %rdi	# tmp100,
	call	Perl_linklist	#
.L1100:
	.loc 1 3676 0 discriminator 3
	movq	-40(%rbp), %rdx	# range, tmp101
	movq	%rax, 48(%rdx)	# iftmp.553, range_5->op_other
	.loc 1 3677 0 is_stmt 1 discriminator 3
	movl	-52(%rbp), %eax	# flags, tmp102
	sarl	$8, %eax	#, D.22008
	orl	$1, %eax	#, D.22009
	movl	%eax, %edx	# D.22009, D.22010
	movq	-40(%rbp), %rax	# range, tmp103
	movb	%dl, 37(%rax)	# D.22010, range_5->op_private
	.loc 1 3679 0 discriminator 3
	movq	-64(%rbp), %rax	# left, tmp104
	movq	-72(%rbp), %rdx	# right, tmp105
	movq	%rdx, 8(%rax)	# tmp105, left_7(D)->op_sibling
	.loc 1 3681 0 discriminator 3
	movq	-40(%rbp), %rax	# range, tmp106
	movq	-40(%rbp), %rdx	# range, tmp107
	movq	%rdx, (%rax)	# tmp107, range_5->op_next
	.loc 1 3682 0 discriminator 3
	movq	-40(%rbp), %rdx	# range, tmp108
	movl	-52(%rbp), %eax	# flags, tmp109
	movl	%eax, %esi	# tmp109,
	movl	$157, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -24(%rbp)	# tmp110, flip
	.loc 1 3683 0 discriminator 3
	movq	-24(%rbp), %rax	# flip, tmp111
	movq	%rax, %rdx	# tmp111,
	movl	$0, %esi	#,
	movl	$158, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -16(%rbp)	# tmp112, flop
	.loc 1 3684 0 discriminator 3
	movq	-16(%rbp), %rax	# flop, tmp113
	movq	%rax, %rdx	# tmp113,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -8(%rbp)	# tmp114, o
	.loc 1 3685 0 discriminator 3
	movq	-16(%rbp), %rax	# flop, tmp115
	movq	%rax, %rdi	# tmp115,
	call	Perl_linklist	#
	.loc 1 3686 0 discriminator 3
	movq	-40(%rbp), %rax	# range, tmp116
	movq	-32(%rbp), %rdx	# leftstart, tmp117
	movq	%rdx, (%rax)	# tmp117, range_5->op_next
	.loc 1 3688 0 discriminator 3
	movq	-64(%rbp), %rax	# left, tmp118
	movq	-24(%rbp), %rdx	# flip, tmp119
	movq	%rdx, (%rax)	# tmp119, left_7(D)->op_next
	.loc 1 3689 0 discriminator 3
	movq	-72(%rbp), %rax	# right, tmp120
	movq	-16(%rbp), %rdx	# flop, tmp121
	movq	%rdx, (%rax)	# tmp121, right_12(D)->op_next
	.loc 1 3691 0 discriminator 3
	movl	$1024, %esi	#,
	movl	$156, %edi	#,
	call	Perl_pad_alloc	#
	movq	-40(%rbp), %rdx	# range, tmp122
	movq	%rax, 24(%rdx)	# D.22011, range_5->op_targ
	.loc 1 3692 0 discriminator 3
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.554
	movq	-40(%rbp), %rax	# range, tmp123
	movq	24(%rax), %rax	# range_5->op_targ, D.22011
	salq	$3, %rax	#, D.22011
	addq	%rdx, %rax	# PL_curpad.554, D.22012
	movq	(%rax), %rax	# *_28, D.22013
	movl	$6, %esi	#,
	movq	%rax, %rdi	# D.22013,
	call	Perl_sv_upgrade	#
	.loc 1 3693 0 discriminator 3
	movl	$1024, %esi	#,
	movl	$156, %edi	#,
	call	Perl_pad_alloc	#
	movq	-24(%rbp), %rdx	# flip, tmp124
	movq	%rax, 24(%rdx)	# D.22011, flip_21->op_targ
	.loc 1 3694 0 discriminator 3
	movq	PL_curpad(%rip), %rdx	# PL_curpad, PL_curpad.555
	movq	-24(%rbp), %rax	# flip, tmp125
	movq	24(%rax), %rax	# flip_21->op_targ, D.22011
	salq	$3, %rax	#, D.22011
	addq	%rdx, %rax	# PL_curpad.555, D.22012
	movq	(%rax), %rax	# *_34, D.22013
	movl	$6, %esi	#,
	movq	%rax, %rdi	# D.22013,
	call	Perl_sv_upgrade	#
	.loc 1 3696 0 discriminator 3
	movq	-64(%rbp), %rax	# left, tmp126
	movzwl	32(%rax), %eax	# left_7(D)->op_type, D.22014
	cmpw	$5, %ax	#, D.22014
	jne	.L1101	#,
	.loc 1 3696 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.556
	jmp	.L1102	#
.L1101:
	.loc 1 3696 0 discriminator 2
	movl	$0, %eax	#, iftmp.556
.L1102:
	.loc 1 3696 0 discriminator 3
	movq	-24(%rbp), %rdx	# flip, tmp127
	movb	%al, 37(%rdx)	# iftmp.556, flip_21->op_private
	.loc 1 3697 0 is_stmt 1 discriminator 3
	movq	-72(%rbp), %rax	# right, tmp128
	movzwl	32(%rax), %eax	# right_12(D)->op_type, D.22014
	cmpw	$5, %ax	#, D.22014
	jne	.L1103	#,
	.loc 1 3697 0 is_stmt 0 discriminator 1
	movl	$64, %eax	#, iftmp.557
	jmp	.L1104	#
.L1103:
	.loc 1 3697 0 discriminator 2
	movl	$0, %eax	#, iftmp.557
.L1104:
	.loc 1 3697 0 discriminator 3
	movq	-16(%rbp), %rdx	# flop, tmp129
	movb	%al, 37(%rdx)	# iftmp.557, flop_22->op_private
	.loc 1 3699 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# flip, tmp130
	movq	-8(%rbp), %rdx	# o, tmp131
	movq	%rdx, (%rax)	# tmp131, flip_21->op_next
	.loc 1 3700 0 discriminator 3
	movq	-24(%rbp), %rax	# flip, tmp132
	movzbl	37(%rax), %eax	# flip_21->op_private, D.22010
	testb	%al, %al	# D.22010
	je	.L1105	#,
	.loc 1 3700 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# flop, tmp133
	movzbl	37(%rax), %eax	# flop_22->op_private, D.22010
	testb	%al, %al	# D.22010
	jne	.L1106	#,
.L1105:
	.loc 1 3701 0 is_stmt 1
	movq	-8(%rbp), %rax	# o, tmp134
	movq	%rax, %rdi	# tmp134,
	call	Perl_linklist	#
.L1106:
	.loc 1 3703 0
	movq	-8(%rbp), %rax	# o, D.22007
	.loc 1 3704 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE79:
	.size	Perl_newRANGE, .-Perl_newRANGE
	.globl	Perl_newLOOPOP
	.type	Perl_newLOOPOP, @function
Perl_newLOOPOP:
.LFB80:
	.loc 1 3708 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -68(%rbp)	# flags, flags
	movl	%esi, -72(%rbp)	# debuggable, debuggable
	movq	%rdx, -80(%rbp)	# expr, expr
	movq	%rcx, -88(%rbp)	# block, block
	.loc 1 3711 0
	cmpq	$0, -88(%rbp)	#, block
	je	.L1109	#,
	.loc 1 3711 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# block, tmp165
	movzbl	36(%rax), %eax	# block_12(D)->op_flags, D.22016
	testb	%al, %al	# D.22017
	jns	.L1109	#,
	.loc 1 3712 0 is_stmt 1 discriminator 1
	movq	-88(%rbp), %rax	# block, tmp166
	movzwl	32(%rax), %eax	# block_12(D)->op_type, D.22018
	.loc 1 3711 0 discriminator 1
	cmpw	$166, %ax	#, D.22018
	je	.L1110	#,
	.loc 1 3712 0
	movq	-88(%rbp), %rax	# block, tmp167
	movzwl	32(%rax), %eax	# block_12(D)->op_type, D.22018
	testw	%ax, %ax	# D.22018
	jne	.L1109	#,
.L1110:
	.loc 1 3711 0 discriminator 3
	movl	$1, %eax	#, iftmp.558
	jmp	.L1111	#
.L1109:
	.loc 1 3711 0 is_stmt 0 discriminator 2
	movl	$0, %eax	#, iftmp.558
.L1111:
	.loc 1 3711 0 discriminator 4
	movl	%eax, -52(%rbp)	# iftmp.558, once
	.loc 1 3714 0 is_stmt 1 discriminator 4
	movq	-80(%rbp), %rax	# expr, expr.559
	testq	%rax, %rax	# expr.559
	je	.L1112	#,
	.loc 1 3715 0
	cmpl	$0, -52(%rbp)	#, once
	je	.L1113	#,
	.loc 1 3715 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# expr, expr.560
	movzwl	32(%rax), %eax	# expr.560_21->op_type, D.22018
	cmpw	$5, %ax	#, D.22018
	jne	.L1113	#,
	movq	-80(%rbp), %rax	# expr, expr.562
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.562_23].op_sv, D.22019
	testq	%rax, %rax	# D.22019
	je	.L1114	#,
	movq	-80(%rbp), %rax	# expr, expr.564
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.564_25].op_sv, D.22019
	movl	12(%rax), %eax	# _26->sv_flags, D.22020
	andl	$262144, %eax	#, D.22020
	testl	%eax, %eax	# D.22020
	je	.L1115	#,
	.loc 1 3715 0 discriminator 3
	movq	-80(%rbp), %rax	# expr, expr.566
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.566_29].op_sv, D.22019
	movq	(%rax), %rax	# _30->sv_any, PL_Xpv.567
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.567, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.568
	testq	%rax, %rax	# PL_Xpv.568
	je	.L1116	#,
	.loc 1 3715 0 discriminator 6
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.569
	movq	8(%rax), %rax	# PL_Xpv.569_33->xpv_cur, D.22021
	cmpq	$1, %rax	#, D.22021
	ja	.L1117	#,
	.loc 1 3715 0 discriminator 7
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.570
	movq	8(%rax), %rax	# PL_Xpv.570_35->xpv_cur, D.22021
	testq	%rax, %rax	# D.22021
	je	.L1116	#,
	.loc 1 3715 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.571
	movq	(%rax), %rax	# PL_Xpv.571_37->xpv_pv, D.22022
	movzbl	(%rax), %eax	# *_38, D.22023
	cmpb	$48, %al	#, D.22023
	jne	.L1117	#,
.L1116:
	.loc 1 3715 0 discriminator 5
	movl	$1, %eax	#, iftmp.565
	jmp	.L1118	#
.L1117:
	.loc 1 3715 0 discriminator 8
	movl	$0, %eax	#, iftmp.565
.L1118:
	.loc 1 3715 0 discriminator 9
	andl	$1, %eax	#, iftmp.563
	jmp	.L1124	#
.L1115:
	.loc 1 3715 0 discriminator 4
	movq	-80(%rbp), %rax	# expr, expr.573
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.573_43].op_sv, D.22019
	movl	12(%rax), %eax	# _44->sv_flags, D.22020
	andl	$65536, %eax	#, D.22020
	testl	%eax, %eax	# D.22020
	je	.L1120	#,
	.loc 1 3715 0 discriminator 10
	movq	-80(%rbp), %rax	# expr, expr.574
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.574_47].op_sv, D.22019
	movq	(%rax), %rax	# _48->sv_any, D.22024
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_49].xiv_iv, D.22025
	testq	%rax, %rax	# D.22025
	sete	%al	#, iftmp.572
	jmp	.L1124	#
.L1120:
	.loc 1 3715 0 discriminator 11
	movq	-80(%rbp), %rax	# expr, expr.576
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.576_52].op_sv, D.22019
	movl	12(%rax), %eax	# _53->sv_flags, D.22020
	andl	$131072, %eax	#, D.22020
	testl	%eax, %eax	# D.22020
	je	.L1122	#,
	.loc 1 3715 0 discriminator 12
	movq	-80(%rbp), %rax	# expr, expr.577
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.577_56].op_sv, D.22019
	movq	(%rax), %rax	# _57->sv_any, D.22024
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_58].xnv_nv, D.22026
	xorpd	%xmm1, %xmm1	# tmp169
	ucomisd	%xmm1, %xmm0	# tmp169, D.22026
	setnp	%dl	#, tmp168
	movl	$0, %eax	#, tmp171
	xorpd	%xmm1, %xmm1	# tmp170
	ucomisd	%xmm1, %xmm0	# tmp170, D.22026
	cmove	%edx, %eax	# tmp168,, iftmp.575
	jmp	.L1124	#
.L1122:
	.loc 1 3715 0 discriminator 13
	movq	-80(%rbp), %rax	# expr, expr.578
	movq	40(%rax), %rax	# MEM[(struct SVOP *)expr.578_61].op_sv, D.22019
	movq	%rax, %rdi	# D.22019,
	call	Perl_sv_2bool	#
	testb	%al, %al	# D.22023
	sete	%al	#, iftmp.575
	jmp	.L1124	#
.L1114:
	.loc 1 3715 0 discriminator 2
	movl	$1, %eax	#, iftmp.561
.L1124:
	.loc 1 3715 0 discriminator 16
	testb	%al, %al	# iftmp.561
	je	.L1113	#,
	.loc 1 3716 0 is_stmt 1
	movq	-88(%rbp), %rax	# block, D.22015
	jmp	.L1142	#
.L1113:
	.loc 1 3717 0
	movq	-80(%rbp), %rax	# expr, expr.579
	movzwl	32(%rax), %eax	# expr.579_70->op_type, D.22018
	cmpw	$26, %ax	#, D.22018
	je	.L1126	#,
	.loc 1 3717 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# expr, expr.580
	movzwl	32(%rax), %eax	# expr.580_72->op_type, D.22018
	cmpw	$25, %ax	#, D.22018
	je	.L1126	#,
	.loc 1 3718 0 is_stmt 1
	movq	-80(%rbp), %rax	# expr, expr.581
	movzwl	32(%rax), %eax	# expr.581_74->op_type, D.22018
	testw	%ax, %ax	# D.22018
	jne	.L1127	#,
	.loc 1 3718 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# expr, expr.582
	movq	24(%rax), %rax	# expr.582_76->op_targ, D.22021
	cmpq	$25, %rax	#, D.22021
	jne	.L1127	#,
.L1126:
	.loc 1 3719 0 is_stmt 1
	movq	-80(%rbp), %rbx	# expr, expr.583
	call	S_newDEFSVOP	#
	movq	%rbx, %rcx	# expr.583,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.22015,
	movl	$0, %edi	#,
	call	Perl_newASSIGNOP	#
	movq	%rax, %rdx	# D.22015,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -80(%rbp)	# expr.584, expr
	jmp	.L1112	#
.L1127:
	.loc 1 3721 0
	movq	-80(%rbp), %rax	# expr, expr.585
	movzbl	36(%rax), %eax	# expr.585_78->op_flags, D.22016
	movzbl	%al, %eax	# D.22016, D.22027
	andl	$4, %eax	#, D.22027
	testl	%eax, %eax	# D.22027
	je	.L1112	#,
.LBB57:
	.loc 1 3722 0
	movq	-80(%rbp), %rax	# expr, expr.586
	movq	40(%rax), %rax	# MEM[(struct UNOP *)expr.586_82].op_first, tmp172
	movq	%rax, -32(%rbp)	# tmp172, k1
	.loc 1 3723 0
	cmpq	$0, -32(%rbp)	#, k1
	je	.L1128	#,
	.loc 1 3723 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# k1, tmp173
	movq	8(%rax), %rax	# k1_83->op_sibling, iftmp.587
	jmp	.L1129	#
.L1128:
	.loc 1 3723 0 discriminator 2
	movl	$0, %eax	#, iftmp.587
.L1129:
	.loc 1 3723 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.587, k2
	.loc 1 3724 0 is_stmt 1 discriminator 3
	movq	-80(%rbp), %rax	# expr, expr.588
	movzwl	32(%rax), %eax	# expr.588_87->op_type, D.22018
	movzwl	%ax, %eax	# D.22018, D.22027
	testl	%eax, %eax	# D.22027
	je	.L1130	#,
	cmpl	$36, %eax	#, D.22027
	je	.L1131	#,
	.loc 1 3724 0 is_stmt 0
	jmp	.L1112	#
.L1130:
	.loc 1 3726 0 is_stmt 1
	cmpq	$0, -24(%rbp)	#, k2
	je	.L1132	#,
	.loc 1 3726 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# k2, tmp174
	movzwl	32(%rax), %eax	# k2_86->op_type, D.22018
	cmpw	$26, %ax	#, D.22018
	jne	.L1132	#,
	.loc 1 3727 0 is_stmt 1
	movq	-24(%rbp), %rax	# k2, tmp175
	movzbl	36(%rax), %eax	# k2_86->op_flags, D.22016
	movzbl	%al, %eax	# D.22016, D.22027
	andl	$64, %eax	#, D.22027
	testl	%eax, %eax	# D.22027
	je	.L1132	#,
	.loc 1 3728 0
	movq	-32(%rbp), %rax	# k1, tmp176
	movzbl	36(%rax), %eax	# k1_83->op_flags, D.22016
	movzbl	%al, %eax	# D.22016, D.22027
	andl	$3, %eax	#, D.22027
	cmpl	$2, %eax	#, D.22027
	jne	.L1132	#,
	.loc 1 3729 0
	movq	-80(%rbp), %rax	# expr, expr.589
	movq	%rax, %rdx	# expr.589,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -80(%rbp)	# expr.590, expr
	.loc 1 3730 0
	jmp	.L1112	#
.L1132:
	jmp	.L1112	#
.L1131:
	.loc 1 3733 0
	movq	-32(%rbp), %rax	# k1, tmp177
	movzwl	32(%rax), %eax	# k1_83->op_type, D.22018
	cmpw	$276, %ax	#, D.22018
	je	.L1133	#,
	.loc 1 3734 0
	movq	-32(%rbp), %rax	# k1, tmp178
	movzwl	32(%rax), %eax	# k1_83->op_type, D.22018
	cmpw	$25, %ax	#, D.22018
	je	.L1133	#,
	.loc 1 3735 0
	movq	-32(%rbp), %rax	# k1, tmp179
	movzwl	32(%rax), %eax	# k1_83->op_type, D.22018
	testw	%ax, %ax	# D.22018
	jne	.L1134	#,
	.loc 1 3735 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# k1, tmp180
	movq	24(%rax), %rax	# k1_83->op_targ, D.22021
	cmpq	$25, %rax	#, D.22021
	je	.L1133	#,
.L1134:
	.loc 1 3736 0 is_stmt 1
	movq	-32(%rbp), %rax	# k1, tmp181
	movzwl	32(%rax), %eax	# k1_83->op_type, D.22018
	cmpw	$129, %ax	#, D.22018
	jne	.L1135	#,
.L1133:
	.loc 1 3737 0
	movq	-80(%rbp), %rax	# expr, expr.591
	movq	%rax, %rdx	# expr.591,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -80(%rbp)	# expr.592, expr
	.loc 1 3738 0
	jmp	.L1143	#
.L1135:
.L1143:
	nop
.L1112:
.LBE57:
	.loc 1 3745 0
	cmpq	$0, -88(%rbp)	#, block
	jne	.L1136	#,
	.loc 1 3746 0
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -88(%rbp)	# tmp182, block
.L1136:
	.loc 1 3747 0
	movl	$0, %esi	#,
	movl	$176, %edi	#,
	call	Perl_newOP	#
	movq	%rax, %rdx	#, D.22015
	movq	-88(%rbp), %rax	# block, tmp183
	movq	%rax, %rsi	# tmp183,
	movl	$173, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, -48(%rbp)	# listop.593, listop
	.loc 1 3748 0
	leaq	-48(%rbp), %rdx	#, tmp184
	leaq	-80(%rbp), %rax	#, tmp185
	movq	%rdx, %rcx	# tmp184,
	movq	%rax, %rdx	# tmp185,
	movl	$0, %esi	#,
	movl	$159, %edi	#,
	call	S_new_logop	#
	movq	%rax, -40(%rbp)	# tmp186, o
	.loc 1 3750 0
	movq	-48(%rbp), %rax	# listop, listop.594
	testq	%rax, %rax	# listop.594
	je	.L1137	#,
	.loc 1 3751 0
	movq	-48(%rbp), %rax	# listop, listop.595
	movq	48(%rax), %rbx	# MEM[(struct LISTOP *)listop.595_115].op_last, D.22015
	movq	-40(%rbp), %rax	# o, tmp187
	movq	(%rax), %rax	# o_113->op_next, D.22015
	testq	%rax, %rax	# D.22015
	je	.L1138	#,
	.loc 1 3751 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp188
	movq	(%rax), %rax	# o_113->op_next, iftmp.596
	jmp	.L1139	#
.L1138:
	.loc 1 3751 0 discriminator 2
	movq	-40(%rbp), %rax	# o, tmp189
	movq	%rax, %rdi	# tmp189,
	call	Perl_linklist	#
.L1139:
	.loc 1 3751 0 discriminator 3
	movq	%rax, (%rbx)	# iftmp.596, _116->op_next
.L1137:
	.loc 1 3753 0 is_stmt 1
	cmpl	$0, -52(%rbp)	#, once
	je	.L1140	#,
	.loc 1 3753 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# listop, listop.597
	cmpq	%rax, -40(%rbp)	# listop.597, o
	je	.L1140	#,
	.loc 1 3754 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp190
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_113].op_first, D.22015
	movq	48(%rax), %rdx	# MEM[(struct LOGOP *)_121].op_other, D.22015
	movq	-40(%rbp), %rax	# o, tmp191
	movq	%rdx, (%rax)	# D.22015, o_113->op_next
.L1140:
	.loc 1 3756 0
	movq	-48(%rbp), %rax	# listop, listop.598
	cmpq	%rax, -40(%rbp)	# listop.598, o
	jne	.L1141	#,
	.loc 1 3757 0
	movq	-40(%rbp), %rax	# o, tmp192
	movq	%rax, %rdx	# tmp192,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -40(%rbp)	# tmp193, o
.L1141:
	.loc 1 3759 0
	movq	-40(%rbp), %rax	# o, tmp194
	movzbl	36(%rax), %eax	# o_2->op_flags, D.22016
	movl	%eax, %edx	# D.22016, D.22017
	movl	-68(%rbp), %eax	# flags, tmp195
	orl	%edx, %eax	# D.22017, D.22017
	movl	%eax, %edx	# D.22017, D.22016
	movq	-40(%rbp), %rax	# o, tmp196
	movb	%dl, 36(%rax)	# D.22016, o_2->op_flags
	.loc 1 3760 0
	movq	-40(%rbp), %rax	# o, tmp197
	movq	%rax, %rdi	# tmp197,
	call	Perl_scope	#
	movq	%rax, -40(%rbp)	# tmp198, o
	.loc 1 3761 0
	movq	-40(%rbp), %rax	# o, tmp199
	movzbl	36(%rax), %eax	# o_131->op_flags, D.22016
	orl	$-128, %eax	#, D.22016
	movl	%eax, %edx	# D.22016, D.22016
	movq	-40(%rbp), %rax	# o, tmp200
	movb	%dl, 36(%rax)	# D.22016, o_131->op_flags
	.loc 1 3762 0
	movq	-40(%rbp), %rax	# o, D.22015
.L1142:
	.loc 1 3763 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE80:
	.size	Perl_newLOOPOP, .-Perl_newLOOPOP
	.globl	Perl_newWHILEOP
	.type	Perl_newWHILEOP, @function
Perl_newWHILEOP:
.LFB81:
	.loc 1 3767 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$120, %rsp	#,
	.cfi_offset 3, -24
	movl	%edi, -84(%rbp)	# flags, flags
	movl	%esi, -88(%rbp)	# debuggable, debuggable
	movq	%rdx, -96(%rbp)	# loop, loop
	movl	%ecx, -100(%rbp)	# whileline, whileline
	movq	%r8, -112(%rbp)	# expr, expr
	movq	%r9, -120(%rbp)	# block, block
	.loc 1 3769 0
	movq	$0, -64(%rbp)	#, next
	.loc 1 3772 0
	movb	$0, -73(%rbp)	#, loopflags
	.loc 1 3774 0
	movq	-112(%rbp), %rax	# expr, expr.599
	testq	%rax, %rax	# expr.599
	je	.L1145	#,
	.loc 1 3774 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# expr, expr.600
	movzwl	32(%rax), %eax	# expr.600_22->op_type, D.22029
	cmpw	$26, %ax	#, D.22029
	je	.L1146	#,
	movq	-112(%rbp), %rax	# expr, expr.601
	movzwl	32(%rax), %eax	# expr.601_24->op_type, D.22029
	cmpw	$25, %ax	#, D.22029
	je	.L1146	#,
	.loc 1 3775 0 is_stmt 1
	movq	-112(%rbp), %rax	# expr, expr.602
	movzwl	32(%rax), %eax	# expr.602_26->op_type, D.22029
	testw	%ax, %ax	# D.22029
	jne	.L1145	#,
	.loc 1 3775 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# expr, expr.603
	movq	24(%rax), %rax	# expr.603_28->op_targ, D.22030
	cmpq	$25, %rax	#, D.22030
	jne	.L1145	#,
.L1146:
	.loc 1 3776 0 is_stmt 1
	movq	-112(%rbp), %rbx	# expr, expr.604
	call	S_newDEFSVOP	#
	movq	%rbx, %rcx	# expr.604,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.22028,
	movl	$0, %edi	#,
	call	Perl_newASSIGNOP	#
	movq	%rax, %rdx	# D.22028,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -112(%rbp)	# expr.605, expr
	jmp	.L1147	#
.L1145:
	.loc 1 3778 0
	movq	-112(%rbp), %rax	# expr, expr.606
	testq	%rax, %rax	# expr.606
	je	.L1147	#,
	.loc 1 3778 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# expr, expr.607
	movzbl	36(%rax), %eax	# expr.607_35->op_flags, D.22031
	movzbl	%al, %eax	# D.22031, D.22032
	andl	$4, %eax	#, D.22032
	testl	%eax, %eax	# D.22032
	je	.L1147	#,
.LBB58:
	.loc 1 3779 0 is_stmt 1
	movq	-112(%rbp), %rax	# expr, expr.608
	movq	40(%rax), %rax	# MEM[(struct UNOP *)expr.608_39].op_first, tmp169
	movq	%rax, -48(%rbp)	# tmp169, k1
	.loc 1 3780 0
	cmpq	$0, -48(%rbp)	#, k1
	je	.L1148	#,
	.loc 1 3780 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# k1, tmp170
	movq	8(%rax), %rax	# k1_40->op_sibling, iftmp.609
	jmp	.L1149	#
.L1148:
	.loc 1 3780 0 discriminator 2
	movl	$0, %eax	#, iftmp.609
.L1149:
	.loc 1 3780 0 discriminator 3
	movq	%rax, -40(%rbp)	# iftmp.609, k2
	.loc 1 3781 0 is_stmt 1 discriminator 3
	movq	-112(%rbp), %rax	# expr, expr.610
	movzwl	32(%rax), %eax	# expr.610_44->op_type, D.22029
	movzwl	%ax, %eax	# D.22029, D.22032
	testl	%eax, %eax	# D.22032
	je	.L1150	#,
	cmpl	$36, %eax	#, D.22032
	je	.L1151	#,
	.loc 1 3781 0 is_stmt 0
	jmp	.L1147	#
.L1150:
	.loc 1 3783 0 is_stmt 1
	cmpq	$0, -40(%rbp)	#, k2
	je	.L1152	#,
	.loc 1 3783 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# k2, tmp171
	movzwl	32(%rax), %eax	# k2_43->op_type, D.22029
	cmpw	$26, %ax	#, D.22029
	jne	.L1152	#,
	.loc 1 3784 0 is_stmt 1
	movq	-40(%rbp), %rax	# k2, tmp172
	movzbl	36(%rax), %eax	# k2_43->op_flags, D.22031
	movzbl	%al, %eax	# D.22031, D.22032
	andl	$64, %eax	#, D.22032
	testl	%eax, %eax	# D.22032
	je	.L1152	#,
	.loc 1 3785 0
	movq	-48(%rbp), %rax	# k1, tmp173
	movzbl	36(%rax), %eax	# k1_40->op_flags, D.22031
	movzbl	%al, %eax	# D.22031, D.22032
	andl	$3, %eax	#, D.22032
	cmpl	$2, %eax	#, D.22032
	jne	.L1152	#,
	.loc 1 3786 0
	movq	-112(%rbp), %rax	# expr, expr.611
	movq	%rax, %rdx	# expr.611,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -112(%rbp)	# expr.612, expr
	.loc 1 3787 0
	jmp	.L1147	#
.L1152:
	jmp	.L1147	#
.L1151:
	.loc 1 3790 0
	movq	-48(%rbp), %rax	# k1, tmp174
	movzwl	32(%rax), %eax	# k1_40->op_type, D.22029
	cmpw	$276, %ax	#, D.22029
	je	.L1153	#,
	.loc 1 3791 0
	movq	-48(%rbp), %rax	# k1, tmp175
	movzwl	32(%rax), %eax	# k1_40->op_type, D.22029
	cmpw	$25, %ax	#, D.22029
	je	.L1153	#,
	.loc 1 3792 0
	movq	-48(%rbp), %rax	# k1, tmp176
	movzwl	32(%rax), %eax	# k1_40->op_type, D.22029
	testw	%ax, %ax	# D.22029
	jne	.L1154	#,
	.loc 1 3792 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# k1, tmp177
	movq	24(%rax), %rax	# k1_40->op_targ, D.22030
	cmpq	$25, %rax	#, D.22030
	je	.L1153	#,
.L1154:
	.loc 1 3793 0 is_stmt 1
	movq	-48(%rbp), %rax	# k1, tmp178
	movzwl	32(%rax), %eax	# k1_40->op_type, D.22029
	cmpw	$129, %ax	#, D.22029
	jne	.L1155	#,
.L1153:
	.loc 1 3794 0
	movq	-112(%rbp), %rax	# expr, expr.613
	movq	%rax, %rdx	# expr.613,
	movl	$0, %esi	#,
	movl	$42, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -112(%rbp)	# expr.614, expr
	.loc 1 3795 0
	jmp	.L1189	#
.L1155:
.L1189:
	nop
.L1147:
.LBE58:
	.loc 1 3799 0
	cmpq	$0, -120(%rbp)	#, block
	jne	.L1156	#,
	.loc 1 3800 0
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -120(%rbp)	# tmp179, block
	jmp	.L1157	#
.L1156:
	.loc 1 3801 0
	cmpq	$0, 16(%rbp)	#, cont
	je	.L1157	#,
	.loc 1 3802 0
	movq	-120(%rbp), %rax	# block, tmp180
	movq	%rax, %rdi	# tmp180,
	call	Perl_scope	#
	movq	%rax, -120(%rbp)	# tmp181, block
.L1157:
	.loc 1 3805 0
	cmpq	$0, 16(%rbp)	#, cont
	je	.L1158	#,
	.loc 1 3806 0
	movq	16(%rbp), %rax	# cont, tmp182
	movq	(%rax), %rax	# cont_65(D)->op_next, D.22028
	testq	%rax, %rax	# D.22028
	je	.L1159	#,
	.loc 1 3806 0 is_stmt 0 discriminator 1
	movq	16(%rbp), %rax	# cont, tmp183
	movq	(%rax), %rax	# cont_65(D)->op_next, iftmp.615
	jmp	.L1160	#
.L1159:
	.loc 1 3806 0 discriminator 2
	movq	16(%rbp), %rdi	# cont,
	call	Perl_linklist	#
.L1160:
	.loc 1 3806 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.615, next
.L1158:
	.loc 1 3808 0 is_stmt 1
	movq	-112(%rbp), %rax	# expr, expr.616
	testq	%rax, %rax	# expr.616
	je	.L1161	#,
.LBB59:
	.loc 1 3809 0
	movl	$0, %esi	#,
	movl	$176, %edi	#,
	call	Perl_newOP	#
	movq	%rax, -32(%rbp)	# tmp184, unstack
	.loc 1 3810 0
	cmpq	$0, -64(%rbp)	#, next
	jne	.L1162	#,
	.loc 1 3811 0
	movq	-32(%rbp), %rax	# unstack, tmp185
	movq	%rax, -64(%rbp)	# tmp185, next
.L1162:
	.loc 1 3812 0
	movq	-32(%rbp), %rax	# unstack, tmp186
	movq	%rax, %rdx	# tmp186,
	movq	16(%rbp), %rsi	# cont,
	movl	$173, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, 16(%rbp)	# tmp187, cont
.L1161:
.LBE59:
	.loc 1 3815 0
	movq	-120(%rbp), %rax	# block, tmp188
	movq	16(%rbp), %rdx	# cont,
	movq	%rax, %rsi	# tmp188,
	movl	$173, %edi	#,
	call	Perl_append_list	#
	movq	%rax, -72(%rbp)	# listop.617, listop
	.loc 1 3816 0
	movq	-72(%rbp), %rax	# listop, listop.619
	movq	(%rax), %rax	# listop.619_76->op_next, D.22028
	testq	%rax, %rax	# D.22028
	je	.L1163	#,
	.loc 1 3816 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# listop, listop.620
	movq	(%rax), %rax	# listop.620_78->op_next, iftmp.618
	jmp	.L1164	#
.L1163:
	.loc 1 3816 0 discriminator 2
	movq	-72(%rbp), %rax	# listop, listop.621
	movq	%rax, %rdi	# listop.621,
	call	Perl_linklist	#
.L1164:
	.loc 1 3816 0 discriminator 3
	movq	%rax, -24(%rbp)	# iftmp.618, redo
	.loc 1 3818 0 is_stmt 1 discriminator 3
	movq	-112(%rbp), %rax	# expr, expr.622
	testq	%rax, %rax	# expr.622
	je	.L1165	#,
	.loc 1 3819 0
	movl	-100(%rbp), %eax	# whileline, whileline.623
	movl	%eax, PL_copline(%rip)	# whileline.623, PL_copline
	.loc 1 3820 0
	movq	-72(%rbp), %rax	# listop, listop.624
	movq	%rax, %rdi	# listop.624,
	call	Perl_scalar	#
	.loc 1 3821 0
	leaq	-72(%rbp), %rdx	#, tmp189
	leaq	-112(%rbp), %rax	#, tmp190
	movq	%rdx, %rcx	# tmp189,
	movq	%rax, %rdx	# tmp190,
	movl	$0, %esi	#,
	movl	$159, %edi	#,
	call	S_new_logop	#
	movq	%rax, -56(%rbp)	# tmp191, o
	.loc 1 3822 0
	movq	-112(%rbp), %rax	# expr, expr.625
	cmpq	%rax, -56(%rbp)	# expr.625, o
	jne	.L1166	#,
	.loc 1 3822 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# o, tmp192
	movzwl	32(%rax), %eax	# o_87->op_type, D.22029
	cmpw	$5, %ax	#, D.22029
	jne	.L1166	#,
	movq	-56(%rbp), %rax	# o, tmp193
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	testq	%rax, %rax	# D.22033
	je	.L1167	#,
	movq	-56(%rbp), %rax	# o, tmp194
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movl	12(%rax), %eax	# _91->sv_flags, D.22034
	andl	$262144, %eax	#, D.22034
	testl	%eax, %eax	# D.22034
	je	.L1168	#,
	.loc 1 3822 0 discriminator 3
	movq	-56(%rbp), %rax	# o, tmp195
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movq	(%rax), %rax	# _94->sv_any, PL_Xpv.629
	movq	%rax, PL_Xpv(%rip)	# PL_Xpv.629, PL_Xpv
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.630
	testq	%rax, %rax	# PL_Xpv.630
	je	.L1169	#,
	.loc 1 3822 0 discriminator 6
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.631
	movq	8(%rax), %rax	# PL_Xpv.631_97->xpv_cur, D.22030
	cmpq	$1, %rax	#, D.22030
	ja	.L1170	#,
	.loc 1 3822 0 discriminator 7
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.632
	movq	8(%rax), %rax	# PL_Xpv.632_99->xpv_cur, D.22030
	testq	%rax, %rax	# D.22030
	je	.L1169	#,
	.loc 1 3822 0 discriminator 1
	movq	PL_Xpv(%rip), %rax	# PL_Xpv, PL_Xpv.633
	movq	(%rax), %rax	# PL_Xpv.633_101->xpv_pv, D.22035
	movzbl	(%rax), %eax	# *_102, D.22036
	cmpb	$48, %al	#, D.22036
	jne	.L1170	#,
.L1169:
	.loc 1 3822 0 discriminator 5
	movl	$1, %eax	#, iftmp.628
	jmp	.L1171	#
.L1170:
	.loc 1 3822 0 discriminator 8
	movl	$0, %eax	#, iftmp.628
.L1171:
	.loc 1 3822 0 discriminator 9
	andl	$1, %eax	#, iftmp.627
	jmp	.L1177	#
.L1168:
	.loc 1 3822 0 discriminator 4
	movq	-56(%rbp), %rax	# o, tmp196
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movl	12(%rax), %eax	# _107->sv_flags, D.22034
	andl	$65536, %eax	#, D.22034
	testl	%eax, %eax	# D.22034
	je	.L1173	#,
	.loc 1 3822 0 discriminator 10
	movq	-56(%rbp), %rax	# o, tmp197
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movq	(%rax), %rax	# _110->sv_any, D.22037
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_111].xiv_iv, D.22038
	testq	%rax, %rax	# D.22038
	sete	%al	#, iftmp.634
	jmp	.L1177	#
.L1173:
	.loc 1 3822 0 discriminator 11
	movq	-56(%rbp), %rax	# o, tmp198
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movl	12(%rax), %eax	# _114->sv_flags, D.22034
	andl	$131072, %eax	#, D.22034
	testl	%eax, %eax	# D.22034
	je	.L1175	#,
	.loc 1 3822 0 discriminator 12
	movq	-56(%rbp), %rax	# o, tmp199
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movq	(%rax), %rax	# _117->sv_any, D.22037
	movsd	32(%rax), %xmm0	# MEM[(struct XPVNV *)_118].xnv_nv, D.22039
	xorpd	%xmm1, %xmm1	# tmp201
	ucomisd	%xmm1, %xmm0	# tmp201, D.22039
	setnp	%dl	#, tmp200
	movl	$0, %eax	#, tmp203
	xorpd	%xmm1, %xmm1	# tmp202
	ucomisd	%xmm1, %xmm0	# tmp202, D.22039
	cmove	%edx, %eax	# tmp200,, iftmp.635
	jmp	.L1177	#
.L1175:
	.loc 1 3822 0 discriminator 13
	movq	-56(%rbp), %rax	# o, tmp204
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_87].op_sv, D.22033
	movq	%rax, %rdi	# D.22033,
	call	Perl_sv_2bool	#
	testb	%al, %al	# D.22036
	sete	%al	#, iftmp.635
	jmp	.L1177	#
.L1167:
	.loc 1 3822 0 discriminator 2
	movl	$1, %eax	#, iftmp.626
.L1177:
	.loc 1 3822 0 discriminator 16
	testb	%al, %al	# iftmp.626
	je	.L1166	#,
	.loc 1 3823 0 is_stmt 1
	movq	-112(%rbp), %rax	# expr, expr.636
	movq	%rax, %rdi	# expr.636,
	call	Perl_op_free	#
	.loc 1 3824 0
	movq	-96(%rbp), %rax	# loop, tmp205
	movq	%rax, %rdi	# tmp205,
	call	Perl_op_free	#
	.loc 1 3825 0
	movl	$0, %eax	#, D.22028
	jmp	.L1188	#
.L1166:
	.loc 1 3827 0
	movq	-72(%rbp), %rax	# listop, listop.637
	testq	%rax, %rax	# listop.637
	je	.L1184	#,
	.loc 1 3828 0
	movq	-72(%rbp), %rax	# listop, listop.638
	movq	48(%rax), %rbx	# MEM[(struct LISTOP *)listop.638_132].op_last, D.22028
	.loc 1 3829 0
	movq	-72(%rbp), %rax	# listop, listop.640
	cmpq	%rax, -56(%rbp)	# listop.640, o
	je	.L1180	#,
	.loc 1 3829 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# o, tmp206
	movq	(%rax), %rax	# o_87->op_next, D.22028
	testq	%rax, %rax	# D.22028
	je	.L1181	#,
	movq	-56(%rbp), %rax	# o, tmp207
	movq	(%rax), %rax	# o_87->op_next, iftmp.641
	jmp	.L1183	#
.L1181:
	.loc 1 3829 0 discriminator 2
	movq	-56(%rbp), %rax	# o, tmp208
	movq	%rax, %rdi	# tmp208,
	call	Perl_linklist	#
	jmp	.L1183	#
.L1180:
	movq	-24(%rbp), %rax	# redo, iftmp.639
.L1183:
	.loc 1 3828 0 is_stmt 1
	movq	%rax, (%rbx)	# iftmp.639, _133->op_next
	jmp	.L1184	#
.L1165:
	.loc 1 3832 0
	movq	-72(%rbp), %rax	# listop, tmp209
	movq	%rax, -56(%rbp)	# tmp209, o
.L1184:
	.loc 1 3834 0
	cmpq	$0, -96(%rbp)	#, loop
	jne	.L1185	#,
	.loc 1 3835 0
	movl	$80, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -96(%rbp)	# tmp210, loop
	movq	-96(%rbp), %rax	# loop, tmp211
	movl	$80, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp211,
	call	memset	#
	.loc 1 3836 0
	movq	-96(%rbp), %rax	# loop, tmp212
	movw	$182, 32(%rax)	#, loop_141->op_type
	.loc 1 3837 0
	movq	PL_ppaddr+1456(%rip), %rdx	# PL_ppaddr, D.22040
	movq	-96(%rbp), %rax	# loop, tmp213
	movq	%rdx, 16(%rax)	# D.22040, loop_141->op_ppaddr
	.loc 1 3838 0
	movq	-96(%rbp), %rax	# loop, tmp214
	movb	$0, 37(%rax)	#, loop_141->op_private
	.loc 1 3839 0
	movq	-96(%rbp), %rax	# loop, tmp215
	movq	-96(%rbp), %rdx	# loop, tmp216
	movq	%rdx, (%rax)	# tmp216, loop_141->op_next
.L1185:
	.loc 1 3842 0
	movq	-56(%rbp), %rdx	# o, tmp217
	movq	-96(%rbp), %rax	# loop, tmp218
	movq	%rdx, %rcx	# tmp217,
	movq	%rax, %rdx	# tmp218,
	movl	$0, %esi	#,
	movl	$183, %edi	#,
	call	Perl_newBINOP	#
	movq	%rax, -56(%rbp)	# tmp219, o
	.loc 1 3844 0
	movq	-96(%rbp), %rax	# loop, tmp220
	movq	-24(%rbp), %rdx	# redo, tmp221
	movq	%rdx, 56(%rax)	# tmp221, loop_1->op_redoop
	.loc 1 3845 0
	movq	-96(%rbp), %rax	# loop, tmp222
	movq	-56(%rbp), %rdx	# o, tmp223
	movq	%rdx, 72(%rax)	# tmp223, loop_1->op_lastop
	.loc 1 3846 0
	movq	-56(%rbp), %rax	# o, tmp224
	movzbl	37(%rax), %eax	# o_143->op_private, D.22031
	orb	-73(%rbp), %al	# loopflags, D.22031
	movl	%eax, %edx	# D.22031, D.22031
	movq	-56(%rbp), %rax	# o, tmp225
	movb	%dl, 37(%rax)	# D.22031, o_143->op_private
	.loc 1 3848 0
	cmpq	$0, -64(%rbp)	#, next
	je	.L1186	#,
	.loc 1 3849 0
	movq	-96(%rbp), %rax	# loop, tmp226
	movq	-64(%rbp), %rdx	# next, tmp227
	movq	%rdx, 64(%rax)	# tmp227, loop_1->op_nextop
	jmp	.L1187	#
.L1186:
	.loc 1 3851 0
	movq	-96(%rbp), %rax	# loop, tmp228
	movq	-56(%rbp), %rdx	# o, tmp229
	movq	%rdx, 64(%rax)	# tmp229, loop_1->op_nextop
.L1187:
	.loc 1 3853 0
	movq	-56(%rbp), %rax	# o, tmp230
	movzbl	36(%rax), %eax	# o_143->op_flags, D.22031
	movl	%eax, %edx	# D.22031, D.22041
	movl	-84(%rbp), %eax	# flags, tmp231
	orl	%edx, %eax	# D.22041, D.22041
	movl	%eax, %edx	# D.22041, D.22031
	movq	-56(%rbp), %rax	# o, tmp232
	movb	%dl, 36(%rax)	# D.22031, o_143->op_flags
	.loc 1 3854 0
	movq	-56(%rbp), %rax	# o, tmp233
	movzbl	37(%rax), %eax	# o_143->op_private, D.22031
	movl	%eax, %edx	# D.22031, D.22041
	movl	-84(%rbp), %eax	# flags, tmp234
	sarl	$8, %eax	#, D.22032
	orl	%edx, %eax	# D.22041, D.22041
	movl	%eax, %edx	# D.22041, D.22031
	movq	-56(%rbp), %rax	# o, tmp235
	movb	%dl, 37(%rax)	# D.22031, o_143->op_private
	.loc 1 3855 0
	movq	-56(%rbp), %rax	# o, D.22028
.L1188:
	.loc 1 3856 0
	addq	$120, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE81:
	.size	Perl_newWHILEOP, .-Perl_newWHILEOP
	.section	.rodata
	.align 8
.LC69:
	.string	"Can't use %s for loop variable"
	.text
	.globl	Perl_newFOROP
	.type	Perl_newFOROP, @function
Perl_newFOROP:
.LFB82:
	.loc 1 3860 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	addq	$-128, %rsp	#,
	movl	%edi, -84(%rbp)	# flags, flags
	movq	%rsi, -96(%rbp)	# label, label
	movl	%edx, -88(%rbp)	# forline, forline
	movq	%rcx, -104(%rbp)	# sv, sv
	movq	%r8, -112(%rbp)	# expr, expr
	movq	%r9, -120(%rbp)	# block, block
	.loc 1 3863 0
	movq	$0, -64(%rbp)	#, padoff
	.loc 1 3864 0
	movl	$0, -72(%rbp)	#, iterflags
	.loc 1 3865 0
	movl	$0, -68(%rbp)	#, iterpflags
	.loc 1 3867 0
	cmpq	$0, -104(%rbp)	#, sv
	je	.L1191	#,
	.loc 1 3868 0
	movq	-104(%rbp), %rax	# sv, tmp98
	movzwl	32(%rax), %eax	# sv_14(D)->op_type, D.22042
	cmpw	$15, %ax	#, D.22042
	jne	.L1192	#,
	.loc 1 3869 0
	movq	-104(%rbp), %rax	# sv, tmp99
	movzbl	37(%rax), %eax	# sv_14(D)->op_private, D.22043
	movzbl	%al, %eax	# D.22043, D.22044
	andl	$16, %eax	#, tmp100
	movl	%eax, -68(%rbp)	# tmp100, iterpflags
	.loc 1 3870 0
	movq	-104(%rbp), %rax	# sv, tmp101
	movw	$14, 32(%rax)	#, sv_14(D)->op_type
	.loc 1 3871 0
	movq	PL_ppaddr+112(%rip), %rdx	# PL_ppaddr, D.22045
	movq	-104(%rbp), %rax	# sv, tmp102
	movq	%rdx, 16(%rax)	# D.22045, sv_14(D)->op_ppaddr
	jmp	.L1196	#
.L1192:
	.loc 1 3873 0
	movq	-104(%rbp), %rax	# sv, tmp103
	movzwl	32(%rax), %eax	# sv_14(D)->op_type, D.22042
	cmpw	$9, %ax	#, D.22042
	jne	.L1194	#,
	.loc 1 3874 0
	movq	-104(%rbp), %rax	# sv, tmp104
	movzbl	37(%rax), %eax	# sv_14(D)->op_private, D.22043
	movzbl	%al, %eax	# D.22043, D.22044
	andl	$128, %eax	#, tmp105
	movl	%eax, -68(%rbp)	# tmp105, iterpflags
	.loc 1 3875 0
	movq	-104(%rbp), %rax	# sv, tmp106
	movq	24(%rax), %rax	# sv_14(D)->op_targ, tmp107
	movq	%rax, -64(%rbp)	# tmp107, padoff
	.loc 1 3876 0
	movq	-104(%rbp), %rax	# sv, tmp108
	movq	$0, 24(%rax)	#, sv_14(D)->op_targ
	.loc 1 3877 0
	movq	-104(%rbp), %rax	# sv, tmp109
	movq	%rax, %rdi	# tmp109,
	call	Perl_op_free	#
	.loc 1 3878 0
	movq	$0, -104(%rbp)	#, sv
	jmp	.L1196	#
.L1194:
	.loc 1 3880 0
	movq	-104(%rbp), %rax	# sv, tmp110
	movzwl	32(%rax), %eax	# sv_14(D)->op_type, D.22042
	cmpw	$348, %ax	#, D.22042
	jne	.L1195	#,
	.loc 1 3881 0
	movq	-104(%rbp), %rax	# sv, tmp111
	movq	24(%rax), %rax	# sv_14(D)->op_targ, tmp112
	movq	%rax, -64(%rbp)	# tmp112, padoff
	.loc 1 3882 0
	movq	-104(%rbp), %rax	# sv, tmp113
	movq	$0, 24(%rax)	#, sv_14(D)->op_targ
	.loc 1 3883 0
	orl	$128, -72(%rbp)	#, iterflags
	.loc 1 3884 0
	movq	-104(%rbp), %rax	# sv, tmp114
	movq	%rax, %rdi	# tmp114,
	call	Perl_op_free	#
	.loc 1 3885 0
	movq	$0, -104(%rbp)	#, sv
	jmp	.L1196	#
.L1195:
	.loc 1 3888 0
	movq	-104(%rbp), %rax	# sv, tmp115
	movzwl	32(%rax), %eax	# sv_14(D)->op_type, D.22042
	movzwl	%ax, %eax	# D.22042, D.22044
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.22046
	movq	%rax, %rsi	# D.22046,
	movl	$.LC69, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1196	#
.L1191:
	.loc 1 3895 0
	movq	PL_defgv(%rip), %rax	# PL_defgv, PL_defgv.642
	movq	%rax, %rdx	# PL_defgv.642,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, -104(%rbp)	# tmp117, sv
.L1196:
	.loc 1 3898 0
	movq	-112(%rbp), %rax	# expr, tmp118
	movzwl	32(%rax), %eax	# expr_35(D)->op_type, D.22042
	cmpw	$125, %ax	#, D.22042
	je	.L1197	#,
	.loc 1 3898 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# expr, tmp119
	movzwl	32(%rax), %eax	# expr_35(D)->op_type, D.22042
	cmpw	$10, %ax	#, D.22042
	jne	.L1198	#,
.L1197:
	.loc 1 3899 0 is_stmt 1
	movq	-112(%rbp), %rax	# expr, tmp120
	movl	$181, %esi	#,
	movq	%rax, %rdi	# tmp120,
	call	Perl_ref	#
	movq	%rax, %rdi	# D.22047,
	call	Perl_scalar	#
	movq	%rax, %rdi	# D.22047,
	call	Perl_force_list	#
	movl	$152, %esi	#,
	movq	%rax, %rdi	# D.22047,
	call	Perl_mod	#
	movq	%rax, -112(%rbp)	# tmp121, expr
	.loc 1 3900 0
	orl	$64, -72(%rbp)	#, iterflags
	jmp	.L1199	#
.L1198:
	.loc 1 3902 0
	movq	-112(%rbp), %rax	# expr, tmp122
	movzwl	32(%rax), %eax	# expr_35(D)->op_type, D.22042
	testw	%ax, %ax	# D.22042
	jne	.L1200	#,
	.loc 1 3903 0 discriminator 1
	movq	-112(%rbp), %rax	# expr, tmp123
	movzbl	36(%rax), %eax	# expr_35(D)->op_flags, D.22043
	movzbl	%al, %eax	# D.22043, D.22044
	andl	$4, %eax	#, D.22044
	.loc 1 3902 0 discriminator 1
	testl	%eax, %eax	# D.22044
	je	.L1200	#,
	.loc 1 3904 0
	movq	-112(%rbp), %rax	# expr, tmp124
	movq	40(%rax), %rax	# MEM[(struct BINOP *)expr_35(D)].op_first, D.22047
	movzwl	32(%rax), %eax	# _42->op_type, D.22042
	.loc 1 3903 0
	cmpw	$158, %ax	#, D.22042
	jne	.L1200	#,
.LBB60:
	.loc 1 3910 0
	movq	-112(%rbp), %rax	# expr, tmp125
	movq	40(%rax), %rax	# MEM[(struct BINOP *)expr_35(D)].op_first, D.22047
	movq	40(%rax), %rax	# MEM[(struct UNOP *)_44].op_first, tmp126
	movq	%rax, -56(%rbp)	# tmp126, flip
	.loc 1 3911 0
	movq	-56(%rbp), %rax	# flip, tmp127
	movq	40(%rax), %rax	# flip_45->op_first, tmp128
	movq	%rax, -48(%rbp)	# tmp128, range
	.loc 1 3912 0
	movq	-48(%rbp), %rax	# range, tmp129
	movq	40(%rax), %rax	# range_46->op_first, tmp130
	movq	%rax, -40(%rbp)	# tmp130, left
	.loc 1 3913 0
	movq	-40(%rbp), %rax	# left, tmp131
	movq	8(%rax), %rax	# left_47->op_sibling, tmp132
	movq	%rax, -32(%rbp)	# tmp132, right
	.loc 1 3916 0
	movq	-48(%rbp), %rax	# range, tmp133
	movzbl	36(%rax), %eax	# range_46->op_flags, D.22043
	andl	$-5, %eax	#, D.22043
	movl	%eax, %edx	# D.22043, D.22043
	movq	-48(%rbp), %rax	# range, tmp134
	movb	%dl, 36(%rax)	# D.22043, range_46->op_flags
	.loc 1 3917 0
	movq	-48(%rbp), %rax	# range, tmp135
	movq	$0, 40(%rax)	#, range_46->op_first
	.loc 1 3919 0
	movq	-32(%rbp), %rdx	# right, tmp136
	movq	-40(%rbp), %rax	# left, tmp137
	movq	%rdx, %rcx	# tmp136,
	movq	%rax, %rdx	# tmp137,
	movl	$0, %esi	#,
	movl	$141, %edi	#,
	call	Perl_newLISTOP	#
	movq	%rax, -24(%rbp)	# tmp138, listop
	.loc 1 3920 0
	movq	-24(%rbp), %rax	# listop, tmp139
	movq	40(%rax), %rax	# listop_51->op_first, D.22047
	movq	-48(%rbp), %rdx	# range, tmp140
	movq	(%rdx), %rdx	# range_46->op_next, D.22047
	movq	%rdx, (%rax)	# D.22047, _52->op_next
	.loc 1 3921 0
	movq	-48(%rbp), %rax	# range, tmp141
	movq	48(%rax), %rdx	# range_46->op_other, D.22047
	movq	-40(%rbp), %rax	# left, tmp142
	movq	%rdx, (%rax)	# D.22047, left_47->op_next
	.loc 1 3922 0
	movq	-32(%rbp), %rax	# right, tmp143
	movq	-24(%rbp), %rdx	# listop, tmp144
	movq	%rdx, (%rax)	# tmp144, right_48->op_next
	.loc 1 3923 0
	movq	-24(%rbp), %rax	# listop, tmp145
	movq	40(%rax), %rdx	# listop_51->op_first, D.22047
	movq	-24(%rbp), %rax	# listop, tmp146
	movq	%rdx, (%rax)	# D.22047, listop_51->op_next
	.loc 1 3925 0
	movq	-112(%rbp), %rax	# expr, tmp147
	movq	%rax, %rdi	# tmp147,
	call	Perl_op_free	#
	.loc 1 3926 0
	movq	-24(%rbp), %rax	# listop, tmp148
	movq	%rax, -112(%rbp)	# tmp148, expr
	.loc 1 3927 0
	movq	-112(%rbp), %rax	# expr, tmp149
	movq	%rax, %rdi	# tmp149,
	call	Perl_op_null	#
	.loc 1 3928 0
	orl	$64, -72(%rbp)	#, iterflags
.LBE60:
	.loc 1 3905 0
	jmp	.L1199	#
.L1200:
	.loc 1 3931 0
	movq	-112(%rbp), %rax	# expr, tmp150
	movq	%rax, %rdi	# tmp150,
	call	Perl_force_list	#
	movl	$152, %esi	#,
	movq	%rax, %rdi	# D.22047,
	call	Perl_mod	#
	movq	%rax, -112(%rbp)	# tmp151, expr
.L1199:
	.loc 1 3934 0
	movq	-104(%rbp), %rax	# sv, tmp152
	movq	%rax, %rdi	# tmp152,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22047
	movq	-112(%rbp), %rax	# expr, tmp153
	movq	%rax, %rsi	# tmp153,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	#, D.22047
	movl	-72(%rbp), %eax	# iterflags, tmp154
	movl	%eax, %esi	# tmp154,
	movl	$180, %edi	#,
	call	Perl_convert	#
	movq	%rax, %rdi	# D.22047,
	call	Perl_list	#
	movq	%rax, -16(%rbp)	# tmp155, loop
	.loc 1 3939 0
	movl	-68(%rbp), %eax	# iterpflags, tmp156
	movl	%eax, %edx	# tmp156, D.22043
	movq	-16(%rbp), %rax	# loop, tmp157
	movb	%dl, 37(%rax)	# D.22043, loop_68->op_private
	.loc 1 3949 0
	movq	-16(%rbp), %rax	# loop, tmp158
	movl	$80, %esi	#,
	movq	%rax, %rdi	# tmp158,
	call	Perl_safesysrealloc	#
	movq	%rax, -16(%rbp)	# tmp159, loop
	.loc 1 3951 0
	movq	-16(%rbp), %rax	# loop, tmp160
	movq	-64(%rbp), %rdx	# padoff, tmp161
	movq	%rdx, 24(%rax)	# tmp161, loop_70->op_targ
	.loc 1 3952 0
	movl	$0, %esi	#,
	movl	$181, %edi	#,
	call	Perl_newOP	#
	movq	%rax, %rsi	#, D.22047
	movl	-88(%rbp), %ecx	# forline, forline.643
	movq	-120(%rbp), %r8	# block, tmp162
	movq	-16(%rbp), %rdx	# loop, tmp163
	movl	-84(%rbp), %eax	# flags, tmp164
	movq	16(%rbp), %rdi	# cont, tmp165
	movq	%rdi, (%rsp)	# tmp165,
	movq	%r8, %r9	# tmp162,
	movq	%rsi, %r8	# D.22047,
	movl	$1, %esi	#,
	movl	%eax, %edi	# tmp164,
	call	Perl_newWHILEOP	#
	movq	%rax, -8(%rbp)	# tmp166, wop
	.loc 1 3953 0
	movl	-88(%rbp), %eax	# forline, tmp167
	movl	%eax, PL_copline(%rip)	# tmp167, PL_copline
	.loc 1 3954 0
	movq	-8(%rbp), %rdx	# wop, tmp168
	movq	-96(%rbp), %rax	# label, tmp169
	movq	%rax, %rsi	# tmp169,
	movl	$0, %edi	#,
	call	Perl_newSTATEOP	#
	.loc 1 3955 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE82:
	.size	Perl_newFOROP, .-Perl_newFOROP
	.globl	Perl_newLOOPEX
	.type	Perl_newLOOPEX, @function
Perl_newLOOPEX:
.LFB83:
	.loc 1 3959 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -20(%rbp)	# type, type
	movq	%rsi, -32(%rbp)	# label, label
	.loc 1 3963 0
	cmpl	$189, -20(%rbp)	#, type
	jne	.L1203	#,
	.loc 1 3963 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# label, tmp87
	movzwl	32(%rax), %eax	# label_7(D)->op_type, D.22049
	cmpw	$5, %ax	#, D.22049
	jne	.L1204	#,
.L1203:
	.loc 1 3965 0 is_stmt 1
	movq	-32(%rbp), %rax	# label, tmp88
	movzwl	32(%rax), %eax	# label_7(D)->op_type, D.22049
	cmpw	$1, %ax	#, D.22049
	jne	.L1205	#,
	.loc 1 3965 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# label, tmp89
	movzbl	36(%rax), %eax	# label_7(D)->op_flags, D.22050
	movzbl	%al, %eax	# D.22050, D.22051
	andl	$8, %eax	#, D.22051
	testl	%eax, %eax	# D.22051
	je	.L1205	#,
	.loc 1 3966 0 is_stmt 1
	movl	-20(%rbp), %eax	# type, tmp90
	movl	$128, %esi	#,
	movl	%eax, %edi	# tmp90,
	call	Perl_newOP	#
	movq	%rax, -8(%rbp)	# tmp91, o
	jmp	.L1206	#
.L1205:
	.loc 1 3968 0
	movq	-32(%rbp), %rax	# label, tmp92
	movzwl	32(%rax), %eax	# label_7(D)->op_type, D.22049
	cmpw	$5, %ax	#, D.22049
	jne	.L1207	#,
	.loc 1 3969 0
	movq	-32(%rbp), %rax	# label, tmp93
	movq	40(%rax), %rax	# MEM[(struct SVOP *)label_7(D)].op_sv, PL_Sv.645
	movq	%rax, PL_Sv(%rip)	# PL_Sv.645, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.647
	movl	12(%rax), %eax	# PL_Sv.647_23->sv_flags, D.22053
	andl	$262144, %eax	#, D.22053
	.loc 1 3970 0
	testl	%eax, %eax	# D.22053
	je	.L1208	#,
	.loc 1 3969 0
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.648
	movq	(%rax), %rax	# PL_Sv.648_26->sv_any, D.22054
	movq	8(%rax), %rax	# MEM[(struct XPV *)_27].xpv_cur, n_a.649
	movq	%rax, -16(%rbp)	# n_a.649, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.650
	movq	(%rax), %rax	# PL_Sv.650_29->sv_any, D.22054
	.loc 1 3970 0
	movq	(%rax), %rax	# MEM[(struct XPV *)_30].xpv_pv, iftmp.646
	jmp	.L1210	#
.L1208:
	.loc 1 3969 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.651
	.loc 1 3970 0 discriminator 1
	leaq	-16(%rbp), %rcx	#, tmp94
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp94,
	movq	%rax, %rdi	# PL_Sv.651,
	call	Perl_sv_2pv_flags	#
	jmp	.L1210	#
.L1207:
	.loc 1 3968 0 discriminator 1
	movl	$.LC46, %eax	#, iftmp.644
.L1210:
	.loc 1 3968 0 is_stmt 0 discriminator 2
	movq	%rax, %rdi	# iftmp.644,
	call	Perl_savepv	#
	movq	%rax, %rdx	#, D.22055
	movl	-20(%rbp), %eax	# type, tmp95
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp95,
	call	Perl_newPVOP	#
	movq	%rax, -8(%rbp)	# tmp96, o
.L1206:
	.loc 1 3972 0 is_stmt 1
	movq	-32(%rbp), %rax	# label, tmp97
	movq	%rax, %rdi	# tmp97,
	call	Perl_op_free	#
	jmp	.L1211	#
.L1204:
	.loc 1 3976 0
	movq	-32(%rbp), %rax	# label, tmp98
	movzwl	32(%rax), %eax	# label_7(D)->op_type, D.22049
	cmpw	$166, %ax	#, D.22049
	jne	.L1212	#,
	.loc 1 3977 0
	movq	-32(%rbp), %rax	# label, tmp99
	movzbl	36(%rax), %eax	# label_7(D)->op_flags, D.22050
	movzbl	%al, %eax	# D.22050, D.22051
	andl	$64, %eax	#, D.22051
	testl	%eax, %eax	# D.22051
	jne	.L1212	#,
	.loc 1 3978 0
	movq	-32(%rbp), %rax	# label, tmp100
	movl	$20, %esi	#,
	movq	%rax, %rdi	# tmp100,
	call	Perl_mod	#
	movq	%rax, %rdx	# D.22052,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -32(%rbp)	# tmp101, label
.L1212:
	.loc 1 3979 0
	movq	-32(%rbp), %rdx	# label, tmp102
	movl	-20(%rbp), %eax	# type, tmp103
	movl	$64, %esi	#,
	movl	%eax, %edi	# tmp103,
	call	Perl_newUNOP	#
	movq	%rax, -8(%rbp)	# tmp104, o
.L1211:
	.loc 1 3981 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.652
	orb	$1, %ah	#, PL_hints.653
	movl	%eax, PL_hints(%rip)	# PL_hints.653, PL_hints
	.loc 1 3982 0
	movq	-8(%rbp), %rax	# o, D.22052
	.loc 1 3983 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE83:
	.size	Perl_newLOOPEX, .-Perl_newLOOPEX
	.section	.rodata
.LC70:
	.string	"Can't undef active subroutine"
	.text
	.globl	Perl_cv_undef
	.type	Perl_cv_undef, @function
Perl_cv_undef:
.LFB84:
	.loc 1 3998 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# cv, cv
	.loc 1 4015 0
	movq	-8(%rbp), %rax	# cv, tmp117
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	80(%rax), %rax	# _2->xcv_xsub, D.22057
	testq	%rax, %rax	# D.22057
	jne	.L1215	#,
	.loc 1 4015 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# cv, tmp118
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	72(%rax), %rax	# _4->xcv_root, D.22058
	testq	%rax, %rax	# D.22058
	je	.L1215	#,
	.loc 1 4020 0 is_stmt 1
	movq	-8(%rbp), %rax	# cv, tmp119
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	112(%rax), %rax	# _6->xcv_depth, D.22059
	testq	%rax, %rax	# D.22059
	je	.L1216	#,
	.loc 1 4021 0
	movl	$.LC70, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1216:
	.loc 1 4023 0
	call	Perl_push_scope	#
.LBB61:
	.loc 1 4025 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.654
	leal	2(%rax), %edx	#, D.22060
	movl	PL_savestack_max(%rip), %eax	# PL_savestack_max, PL_savestack_max.655
	cmpl	%eax, %edx	# PL_savestack_max.655, D.22060
	jle	.L1217	#,
	.loc 1 4025 0 is_stmt 0 discriminator 1
	call	Perl_savestack_grow	#
.L1217:
	.loc 1 4025 0 discriminator 2
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.656
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.657
	leal	1(%rax), %edx	#, PL_savestack_ix.659
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.659, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.22061
	leaq	(%rcx,%rax), %rdx	#, D.22062
	movq	PL_comppad(%rip), %rax	# PL_comppad, PL_comppad.660
	movq	%rax, (%rdx)	# PL_comppad.660, _17->any_ptr
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.661
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.662
	leal	1(%rax), %edx	#, PL_savestack_ix.664
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.664, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.22061
	addq	%rcx, %rax	# PL_savestack.661, D.22062
	movl	$33, (%rax)	#, _25->any_i32
.LBE61:
	movq	$0, PL_comppad(%rip)	#, PL_comppad
	movq	$0, PL_curpad(%rip)	#, PL_curpad
	.loc 1 4027 0 is_stmt 1 discriminator 2
	movq	-8(%rbp), %rax	# cv, tmp120
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	72(%rax), %rax	# _27->xcv_root, D.22058
	movq	%rax, %rdi	# D.22058,
	call	Perl_op_free	#
	.loc 1 4028 0 discriminator 2
	movq	-8(%rbp), %rax	# cv, tmp121
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	$0, 72(%rax)	#, _29->xcv_root
	.loc 1 4029 0 discriminator 2
	call	Perl_pop_scope	#
.L1215:
	.loc 1 4031 0
	movq	-8(%rbp), %rax	# cv, tmp122
	movl	12(%rax), %eax	# MEM[(struct SV *)cv_1(D)].sv_flags, D.22064
	andl	$-67371009, %eax	#, D.22064
	movl	%eax, %edx	# D.22064, D.22064
	movq	-8(%rbp), %rax	# cv, tmp123
	movl	%edx, 12(%rax)	# D.22064, MEM[(struct SV *)cv_1(D)].sv_flags
	.loc 1 4032 0
	movq	-8(%rbp), %rax	# cv, tmp124
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	$0, 96(%rax)	#, _32->xcv_gv
	.loc 1 4034 0
	movq	-8(%rbp), %rax	# cv, tmp125
	movq	%rax, %rdi	# tmp125,
	call	Perl_pad_undef	#
	.loc 1 4037 0
	movq	-8(%rbp), %rax	# cv, tmp126
	movl	8(%rax), %eax	# cv_1(D)->sv_refcnt, D.22064
	testl	%eax, %eax	# D.22064
	jne	.L1218	#,
	.loc 1 4037 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# cv, tmp127
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	128(%rax), %rax	# _34->xcv_outside, D.22065
	testq	%rax, %rax	# D.22065
	je	.L1218	#,
	.loc 1 4038 0 is_stmt 1
	movq	-8(%rbp), %rax	# cv, tmp128
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movzwl	136(%rax), %eax	# _36->xcv_flags, D.22066
	movzwl	%ax, %eax	# D.22066, D.22060
	andl	$1024, %eax	#, D.22060
	testl	%eax, %eax	# D.22060
	jne	.L1219	#,
	.loc 1 4039 0
	movq	-8(%rbp), %rax	# cv, tmp129
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	128(%rax), %rax	# _40->xcv_outside, D.22065
	movq	%rax, %rdi	# D.22065,
	call	Perl_sv_free	#
.L1219:
	.loc 1 4040 0
	movq	-8(%rbp), %rax	# cv, tmp130
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	$0, 128(%rax)	#, _42->xcv_outside
.L1218:
	.loc 1 4042 0
	movq	-8(%rbp), %rax	# cv, tmp131
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movzwl	136(%rax), %eax	# _43->xcv_flags, D.22066
	movzwl	%ax, %eax	# D.22066, D.22060
	andl	$512, %eax	#, D.22060
	testl	%eax, %eax	# D.22060
	je	.L1220	#,
	.loc 1 4043 0
	movq	-8(%rbp), %rax	# cv, tmp132
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	88(%rax), %rax	# _47->xcv_xsubany.any_ptr, D.22067
	movq	%rax, %rdi	# D.22067,
	call	Perl_sv_free	#
	.loc 1 4044 0
	movq	-8(%rbp), %rax	# cv, tmp133
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	-8(%rbp), %rdx	# cv, tmp134
	movq	(%rdx), %rdx	# cv_1(D)->sv_any, D.22056
	movzwl	136(%rdx), %edx	# _50->xcv_flags, D.22066
	andb	$253, %dh	#, D.22066
	movw	%dx, 136(%rax)	# D.22066, _49->xcv_flags
.L1220:
	.loc 1 4046 0
	movq	-8(%rbp), %rax	# cv, tmp135
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	80(%rax), %rax	# _53->xcv_xsub, D.22057
	testq	%rax, %rax	# D.22057
	je	.L1221	#,
	.loc 1 4047 0
	movq	-8(%rbp), %rax	# cv, tmp136
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	$0, 80(%rax)	#, _55->xcv_xsub
.L1221:
	.loc 1 4050 0
	movq	-8(%rbp), %rax	# cv, tmp137
	movq	(%rax), %rax	# cv_1(D)->sv_any, D.22056
	movq	-8(%rbp), %rdx	# cv, tmp138
	movq	(%rdx), %rdx	# cv_1(D)->sv_any, D.22056
	movzwl	136(%rdx), %edx	# _57->xcv_flags, D.22066
	andw	$1024, %dx	#, D.22066
	movw	%dx, 136(%rax)	# D.22066, _56->xcv_flags
	.loc 1 4051 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE84:
	.size	Perl_cv_undef, .-Perl_cv_undef
	.section	.rodata
.LC71:
	.string	"Prototype mismatch:"
.LC72:
	.string	" sub %_"
.LC73:
	.string	" (%_)"
.LC74:
	.string	": none"
.LC75:
	.string	" vs "
.LC76:
	.string	"(%s)"
.LC77:
	.string	"none"
.LC78:
	.string	"%_"
	.text
	.globl	Perl_cv_ckproto
	.type	Perl_cv_ckproto, @function
Perl_cv_ckproto:
.LFB85:
	.loc 1 4055 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -24(%rbp)	# cv, cv
	movq	%rsi, -32(%rbp)	# gv, gv
	movq	%rdx, -40(%rbp)	# p, p
	.loc 1 4056 0
	cmpq	$0, -40(%rbp)	#, p
	sete	%dl	#, D.22069
	movq	-24(%rbp), %rax	# cv, tmp83
	movl	12(%rax), %eax	# cv_4(D)->sv_flags, D.22070
	andl	$262144, %eax	#, D.22070
	testl	%eax, %eax	# D.22070
	sete	%al	#, D.22069
	xorl	%edx, %eax	# D.22069, D.22069
	testb	%al, %al	# D.22069
	jne	.L1223	#,
	.loc 1 4056 0 is_stmt 0 discriminator 2
	cmpq	$0, -40(%rbp)	#, p
	je	.L1222	#,
	.loc 1 4056 0 discriminator 1
	movq	-24(%rbp), %rax	# cv, tmp84
	movq	(%rax), %rax	# cv_4(D)->sv_any, D.22071
	movq	(%rax), %rdx	# MEM[(struct XPV *)_9].xpv_pv, D.22072
	movq	-40(%rbp), %rax	# p, tmp85
	movq	%rdx, %rsi	# D.22072,
	movq	%rax, %rdi	# tmp85,
	call	strcmp	#
	testl	%eax, %eax	# D.22073
	je	.L1222	#,
.L1223:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.665
	movq	80(%rax), %rax	# PL_curcop.665_12->cop_warnings, D.22074
	testq	%rax, %rax	# D.22074
	je	.L1225	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.666
	movq	80(%rax), %rax	# PL_curcop.666_14->cop_warnings, D.22074
	cmpq	$16, %rax	#, D.22074
	je	.L1225	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.667
	movq	80(%rax), %rax	# PL_curcop.667_16->cop_warnings, D.22074
	cmpq	$32, %rax	#, D.22074
	je	.L1222	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.668
	movq	80(%rax), %rax	# PL_curcop.668_18->cop_warnings, D.22074
	movq	(%rax), %rax	# _19->sv_any, D.22075
	movq	(%rax), %rax	# MEM[(struct XPV *)_20].xpv_pv, D.22072
	addq	$8, %rax	#, D.22072
	movzbl	(%rax), %eax	# *_22, D.22076
	movsbl	%al, %eax	# D.22076, D.22073
	andl	$64, %eax	#, D.22073
	testl	%eax, %eax	# D.22073
	je	.L1222	#,
.L1225:
.LBB62:
	.loc 1 4057 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -8(%rbp)	# tmp86, msg
	.loc 1 4058 0
	movq	$0, -16(%rbp)	#, name
	.loc 1 4060 0
	cmpq	$0, -32(%rbp)	#, gv
	je	.L1226	#,
	.loc 1 4061 0
	call	Perl_sv_newmortal	#
	movq	%rax, -16(%rbp)	# tmp87, name
	movq	-32(%rbp), %rsi	# gv, tmp88
	movq	-16(%rbp), %rax	# name, tmp89
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp89,
	call	Perl_gv_efullname4	#
.L1226:
	.loc 1 4062 0
	movq	-8(%rbp), %rax	# msg, tmp90
	movl	$.LC71, %esi	#,
	movq	%rax, %rdi	# tmp90,
	call	Perl_sv_setpv	#
	.loc 1 4063 0
	cmpq	$0, -16(%rbp)	#, name
	je	.L1227	#,
	.loc 1 4064 0
	movq	-16(%rbp), %rdx	# name, tmp91
	movq	-8(%rbp), %rax	# msg, tmp92
	movl	$.LC72, %esi	#,
	movq	%rax, %rdi	# tmp92,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
.L1227:
	.loc 1 4065 0
	movq	-24(%rbp), %rax	# cv, tmp93
	movl	12(%rax), %eax	# cv_4(D)->sv_flags, D.22070
	andl	$262144, %eax	#, D.22070
	testl	%eax, %eax	# D.22070
	je	.L1228	#,
	.loc 1 4066 0
	movq	-24(%rbp), %rdx	# cv, tmp94
	movq	-8(%rbp), %rax	# msg, tmp95
	movl	$.LC73, %esi	#,
	movq	%rax, %rdi	# tmp95,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L1229	#
.L1228:
	.loc 1 4068 0
	movq	-8(%rbp), %rax	# msg, tmp96
	movl	$.LC74, %esi	#,
	movq	%rax, %rdi	# tmp96,
	call	Perl_sv_catpv	#
.L1229:
	.loc 1 4069 0
	movq	-8(%rbp), %rax	# msg, tmp97
	movl	$.LC75, %esi	#,
	movq	%rax, %rdi	# tmp97,
	call	Perl_sv_catpv	#
	.loc 1 4070 0
	cmpq	$0, -40(%rbp)	#, p
	je	.L1230	#,
	.loc 1 4071 0
	movq	-40(%rbp), %rdx	# p, tmp98
	movq	-8(%rbp), %rax	# msg, tmp99
	movl	$.LC76, %esi	#,
	movq	%rax, %rdi	# tmp99,
	movl	$0, %eax	#,
	call	Perl_sv_catpvf	#
	jmp	.L1231	#
.L1230:
	.loc 1 4073 0
	movq	-8(%rbp), %rax	# msg, tmp100
	movl	$.LC77, %esi	#,
	movq	%rax, %rdi	# tmp100,
	call	Perl_sv_catpv	#
.L1231:
	.loc 1 4074 0
	movq	-8(%rbp), %rax	# msg, tmp101
	movq	%rax, %rdx	# tmp101,
	movl	$.LC78, %esi	#,
	movl	$35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1222:
.LBE62:
	.loc 1 4076 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE85:
	.size	Perl_cv_ckproto, .-Perl_cv_ckproto
	.globl	Perl_cv_const_sv
	.type	Perl_cv_const_sv, @function
Perl_cv_const_sv:
.LFB86:
	.loc 1 4096 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# cv, cv
	.loc 1 4097 0
	cmpq	$0, -8(%rbp)	#, cv
	je	.L1233	#,
	.loc 1 4097 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# cv, tmp66
	movq	(%rax), %rax	# cv_2(D)->sv_any, D.22086
	movzwl	136(%rax), %eax	# _3->xcv_flags, D.22087
	movzwl	%ax, %eax	# D.22087, D.22088
	andl	$512, %eax	#, D.22088
	testl	%eax, %eax	# D.22088
	jne	.L1234	#,
.L1233:
	.loc 1 4098 0 is_stmt 1
	movl	$0, %eax	#, D.22085
	jmp	.L1235	#
.L1234:
	.loc 1 4099 0
	movq	-8(%rbp), %rax	# cv, tmp67
	movq	(%rax), %rax	# cv_2(D)->sv_any, D.22086
	movq	88(%rax), %rax	# _7->xcv_xsubany.any_ptr, D.22085
.L1235:
	.loc 1 4100 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE86:
	.size	Perl_cv_const_sv, .-Perl_cv_const_sv
	.globl	Perl_op_const_sv
	.type	Perl_op_const_sv, @function
Perl_op_const_sv:
.LFB87:
	.loc 1 4104 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	movq	%rsi, -32(%rbp)	# cv, cv
	.loc 1 4105 0
	movq	$0, -8(%rbp)	#, sv
	.loc 1 4107 0
	cmpq	$0, -24(%rbp)	#, o
	jne	.L1237	#,
	.loc 1 4108 0
	movl	$0, %eax	#, D.22089
	jmp	.L1238	#
.L1237:
	.loc 1 4110 0
	movq	-24(%rbp), %rax	# o, tmp94
	movzwl	32(%rax), %eax	# o_9(D)->op_type, D.22090
	cmpw	$173, %ax	#, D.22090
	jne	.L1239	#,
	.loc 1 4110 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp95
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_9(D)].op_first, D.22091
	testq	%rax, %rax	# D.22091
	je	.L1239	#,
	.loc 1 4111 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp96
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_9(D)].op_first, D.22091
	movq	8(%rax), %rax	# _13->op_sibling, tmp97
	movq	%rax, -24(%rbp)	# tmp97, o
	.loc 1 4113 0
	jmp	.L1240	#
.L1239:
	jmp	.L1240	#
.L1256:
.LBB63:
	.loc 1 4114 0
	movq	-24(%rbp), %rax	# o, tmp98
	movzwl	32(%rax), %eax	# o_2->op_type, tmp99
	movw	%ax, -10(%rbp)	# tmp99, type
	.loc 1 4116 0
	cmpq	$0, -8(%rbp)	#, sv
	je	.L1241	#,
	.loc 1 4116 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp100
	movq	(%rax), %rax	# o_2->op_next, D.22091
	cmpq	-24(%rbp), %rax	# o, D.22091
	jne	.L1241	#,
	.loc 1 4117 0 is_stmt 1
	movq	-8(%rbp), %rax	# sv, D.22089
	jmp	.L1238	#
.L1241:
	.loc 1 4118 0
	movq	-24(%rbp), %rax	# o, tmp101
	movq	(%rax), %rax	# o_2->op_next, D.22091
	cmpq	-24(%rbp), %rax	# o, D.22091
	je	.L1242	#,
	.loc 1 4119 0
	cmpw	$174, -10(%rbp)	#, type
	je	.L1243	#,
	.loc 1 4119 0 is_stmt 0 discriminator 1
	cmpw	$0, -10(%rbp)	#, type
	je	.L1243	#,
	cmpw	$3, -10(%rbp)	#, type
	jne	.L1244	#,
.L1243:
	.loc 1 4120 0 is_stmt 1
	jmp	.L1245	#
.L1244:
	.loc 1 4121 0
	cmpw	$175, -10(%rbp)	#, type
	jne	.L1242	#,
	.loc 1 4122 0
	jmp	.L1245	#
.L1242:
	.loc 1 4124 0
	cmpw	$167, -10(%rbp)	#, type
	je	.L1246	#,
	.loc 1 4124 0 is_stmt 0 discriminator 1
	cmpw	$184, -10(%rbp)	#, type
	je	.L1246	#,
	.loc 1 4126 0 is_stmt 1
	cmpq	$0, -8(%rbp)	#, sv
	je	.L1247	#,
	.loc 1 4127 0
	movl	$0, %eax	#, D.22089
	jmp	.L1238	#
.L1247:
	.loc 1 4128 0
	cmpw	$5, -10(%rbp)	#, type
	jne	.L1248	#,
	.loc 1 4128 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp102
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_2].op_sv, D.22089
	testq	%rax, %rax	# D.22089
	je	.L1248	#,
	.loc 1 4129 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp103
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_2].op_sv, tmp104
	movq	%rax, -8(%rbp)	# tmp104, sv
	jmp	.L1245	#
.L1248:
	.loc 1 4130 0
	cmpw	$9, -10(%rbp)	#, type
	je	.L1249	#,
	.loc 1 4130 0 is_stmt 0 discriminator 2
	cmpw	$5, -10(%rbp)	#, type
	jne	.L1250	#,
.L1249:
	.loc 1 4130 0 discriminator 1
	cmpq	$0, -32(%rbp)	#, cv
	je	.L1250	#,
	.loc 1 4131 0 is_stmt 1
	movq	-32(%rbp), %rax	# cv, tmp105
	movq	(%rax), %rax	# cv_22(D)->sv_any, D.22092
	movq	120(%rax), %rax	# _23->xcv_padlist, D.22093
	movq	(%rax), %rax	# _24->sv_any, D.22094
	movq	(%rax), %rax	# _25->xav_array, D.22095
	addq	$8, %rax	#, D.22096
	movq	(%rax), %rax	# *_27, D.22089
	testq	%rax, %rax	# D.22089
	je	.L1251	#,
	.loc 1 4131 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# cv, tmp106
	movq	(%rax), %rax	# cv_22(D)->sv_any, D.22092
	movq	120(%rax), %rax	# _29->xcv_padlist, D.22093
	movq	(%rax), %rax	# _30->sv_any, D.22094
	movq	(%rax), %rax	# _31->xav_array, D.22095
	addq	$8, %rax	#, D.22096
	movq	(%rax), %rax	# *_33, D.22089
	movq	(%rax), %rax	# MEM[(struct AV *)_34].sv_any, D.22094
	movq	(%rax), %rdx	# _35->xav_array, D.22095
	movq	-24(%rbp), %rax	# o, tmp107
	movq	24(%rax), %rax	# o_2->op_targ, D.22097
	salq	$3, %rax	#, D.22097
	addq	%rdx, %rax	# D.22095, D.22096
	movq	(%rax), %rax	# *_39, iftmp.669
	jmp	.L1252	#
.L1251:
	.loc 1 4131 0 discriminator 2
	movl	$0, %eax	#, iftmp.669
.L1252:
	.loc 1 4131 0 discriminator 3
	movq	%rax, -8(%rbp)	# iftmp.669, sv
	.loc 1 4132 0 is_stmt 1 discriminator 3
	cmpq	$0, -8(%rbp)	#, sv
	jne	.L1253	#,
	.loc 1 4133 0
	movl	$0, %eax	#, D.22089
	jmp	.L1238	#
.L1253:
	.loc 1 4134 0
	movq	-32(%rbp), %rax	# cv, tmp108
	movq	(%rax), %rax	# cv_22(D)->sv_any, D.22092
	movzwl	136(%rax), %eax	# _44->xcv_flags, D.22090
	movzwl	%ax, %eax	# D.22090, D.22098
	andl	$512, %eax	#, D.22098
	testl	%eax, %eax	# D.22098
	je	.L1254	#,
	.loc 1 4140 0
	movq	-8(%rbp), %rax	# sv, tmp109
	movq	%rax, %rdi	# tmp109,
	call	Perl_newSVsv	#
	movq	%rax, -8(%rbp)	# tmp110, sv
.L1254:
	.loc 1 4142 0
	movq	-8(%rbp), %rax	# sv, tmp111
	movl	12(%rax), %eax	# sv_3->sv_flags, D.22099
	andl	$8388608, %eax	#, D.22099
	testl	%eax, %eax	# D.22099
	jne	.L1255	#,
	.loc 1 4142 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# sv, tmp112
	movl	8(%rax), %eax	# sv_3->sv_refcnt, D.22099
	cmpl	$1, %eax	#, D.22099
	jbe	.L1255	#,
	.loc 1 4143 0 is_stmt 1
	movl	$0, %eax	#, D.22089
	jmp	.L1238	#
.L1255:
	.loc 1 4142 0 discriminator 2
	jmp	.L1245	#
.L1250:
	.loc 1 4146 0
	movl	$0, %eax	#, D.22089
	jmp	.L1238	#
.L1245:
.LBE63:
	.loc 1 4113 0
	movq	-24(%rbp), %rax	# o, tmp113
	movq	(%rax), %rax	# o_2->op_next, tmp114
	movq	%rax, -24(%rbp)	# tmp114, o
.L1240:
	.loc 1 4113 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, o
	jne	.L1256	#,
.L1246:
	.loc 1 4148 0 is_stmt 1
	cmpq	$0, -8(%rbp)	#, sv
	je	.L1257	#,
	.loc 1 4149 0
	movq	-8(%rbp), %rax	# sv, tmp115
	movl	12(%rax), %eax	# sv_5->sv_flags, D.22099
	orl	$8388608, %eax	#, D.22099
	movl	%eax, %edx	# D.22099, D.22099
	movq	-8(%rbp), %rax	# sv, tmp116
	movl	%edx, 12(%rax)	# D.22099, sv_5->sv_flags
.L1257:
	.loc 1 4150 0
	movq	-8(%rbp), %rax	# sv, D.22089
.L1238:
	.loc 1 4151 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE87:
	.size	Perl_op_const_sv, .-Perl_op_const_sv
	.section	.rodata
.LC79:
	.string	"\"my sub\" not yet implemented"
	.text
	.globl	Perl_newMYSUB
	.type	Perl_newMYSUB, @function
Perl_newMYSUB:
.LFB88:
	.loc 1 4155 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movl	%edi, -4(%rbp)	# floor, floor
	movq	%rsi, -16(%rbp)	# o, o
	movq	%rdx, -24(%rbp)	# proto, proto
	movq	%rcx, -32(%rbp)	# attrs, attrs
	movq	%r8, -40(%rbp)	# block, block
	.loc 1 4156 0
	cmpq	$0, -16(%rbp)	#, o
	je	.L1259	#,
	.loc 1 4157 0
	movq	-16(%rbp), %rax	# o, tmp59
	movq	%rax, %rdi	# tmp59,
	call	Perl_save_freeop	#
.L1259:
	.loc 1 4158 0
	cmpq	$0, -24(%rbp)	#, proto
	je	.L1260	#,
	.loc 1 4159 0
	movq	-24(%rbp), %rax	# proto, tmp60
	movq	%rax, %rdi	# tmp60,
	call	Perl_save_freeop	#
.L1260:
	.loc 1 4160 0
	cmpq	$0, -32(%rbp)	#, attrs
	je	.L1261	#,
	.loc 1 4161 0
	movq	-32(%rbp), %rax	# attrs, tmp61
	movq	%rax, %rdi	# tmp61,
	call	Perl_save_freeop	#
.L1261:
	.loc 1 4162 0
	cmpq	$0, -40(%rbp)	#, block
	je	.L1262	#,
	.loc 1 4163 0
	movq	-40(%rbp), %rax	# block, tmp62
	movq	%rax, %rdi	# tmp62,
	call	Perl_save_freeop	#
.L1262:
	.loc 1 4164 0
	movl	$.LC79, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 4165 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE88:
	.size	Perl_newMYSUB, .-Perl_newMYSUB
	.globl	Perl_newSUB
	.type	Perl_newSUB, @function
Perl_newSUB:
.LFB89:
	.loc 1 4169 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# floor, floor
	movq	%rsi, -16(%rbp)	# o, o
	movq	%rdx, -24(%rbp)	# proto, proto
	movq	%rcx, -32(%rbp)	# block, block
	.loc 1 4170 0
	movq	-32(%rbp), %rcx	# block, tmp61
	movq	-24(%rbp), %rdx	# proto, tmp62
	movq	-16(%rbp), %rsi	# o, tmp63
	movl	-4(%rbp), %eax	# floor, tmp64
	movq	%rcx, %r8	# tmp61,
	movl	$0, %ecx	#,
	movl	%eax, %edi	# tmp64,
	call	Perl_newATTRSUB	#
	.loc 1 4171 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE89:
	.size	Perl_newSUB, .-Perl_newSUB
	.section	.rodata
.LC80:
	.string	"__ANON__"
.LC81:
	.string	"__ANON__::__ANON__"
.LC82:
	.string	"%s[%s:%ld]"
.LC83:
	.string	"Runaway prototype"
	.align 8
.LC84:
	.string	"Can't redefine active sort subroutine %s"
	.align 8
.LC85:
	.string	"Constant subroutine %s redefined"
.LC86:
	.string	"Subroutine %s redefined"
	.align 8
.LC87:
	.string	"BEGIN not safe after errors--compilation aborted"
.LC88:
	.string	"%s:%ld-%ld"
.LC89:
	.string	"END"
.LC90:
	.string	"CHECK"
.LC91:
	.string	"Too late to run CHECK block"
.LC92:
	.string	"INIT"
.LC93:
	.string	"Too late to run INIT block"
	.text
	.globl	Perl_newATTRSUB
	.type	Perl_newATTRSUB, @function
Perl_newATTRSUB:
.LFB90:
	.loc 1 4175 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$208, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movl	%edi, -180(%rbp)	# floor, floor
	movq	%rsi, -192(%rbp)	# o, o
	movq	%rdx, -200(%rbp)	# proto, proto
	movq	%rcx, -208(%rbp)	# attrs, attrs
	movq	%r8, -216(%rbp)	# block, block
	.loc 1 4181 0
	movl	$0, %ebx	#, cv
	.loc 1 4184 0
	cmpq	$0, -192(%rbp)	#, o
	je	.L1266	#,
	.loc 1 4184 0 is_stmt 0 discriminator 1
	movq	-192(%rbp), %rax	# o, tmp536
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_38(D)].op_sv, PL_Sv.671
	movq	%rax, PL_Sv(%rip)	# PL_Sv.671, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.673
	movl	12(%rax), %eax	# PL_Sv.673_40->sv_flags, D.22102
	andl	$262144, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1267	#,
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.674
	movq	(%rax), %rax	# PL_Sv.674_43->sv_any, D.22103
	movq	8(%rax), %rax	# MEM[(struct XPV *)_44].xpv_cur, n_a.675
	movq	%rax, -160(%rbp)	# n_a.675, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.676
	movq	(%rax), %rax	# PL_Sv.676_46->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_47].xpv_pv, iftmp.672
	jmp	.L1269	#
.L1267:
	.loc 1 4184 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.677
	leaq	-160(%rbp), %rcx	#, tmp537
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp537,
	movq	%rax, %rdi	# PL_Sv.677,
	call	Perl_sv_2pv_flags	#
	jmp	.L1269	#
.L1266:
	movl	$0, %eax	#, iftmp.670
.L1269:
	.loc 1 4184 0 discriminator 3
	movq	%rax, -104(%rbp)	# iftmp.670, name
	.loc 1 4186 0 is_stmt 1 discriminator 3
	cmpq	$0, -200(%rbp)	#, proto
	je	.L1270	#,
	.loc 1 4188 0
	movq	-200(%rbp), %rax	# proto, tmp538
	movq	40(%rax), %rax	# MEM[(struct SVOP *)proto_54(D)].op_sv, PL_Sv.678
	movq	%rax, PL_Sv(%rip)	# PL_Sv.678, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.680
	movl	12(%rax), %eax	# PL_Sv.680_56->sv_flags, D.22102
	andl	$262144, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1271	#,
	.loc 1 4188 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.681
	movq	(%rax), %rax	# PL_Sv.681_59->sv_any, D.22103
	movq	8(%rax), %rax	# MEM[(struct XPV *)_60].xpv_cur, n_a.682
	movq	%rax, -160(%rbp)	# n_a.682, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.683
	movq	(%rax), %rax	# PL_Sv.683_62->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_63].xpv_pv, iftmp.679
	jmp	.L1272	#
.L1271:
	.loc 1 4188 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.684
	leaq	-160(%rbp), %rcx	#, tmp539
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp539,
	movq	%rax, %rdi	# PL_Sv.684,
	call	Perl_sv_2pv_flags	#
.L1272:
	movq	%rax, -144(%rbp)	# iftmp.679, ps
	jmp	.L1273	#
.L1270:
	.loc 1 4191 0 is_stmt 1
	movq	$0, -144(%rbp)	#, ps
.L1273:
	.loc 1 4193 0
	cmpq	$0, -104(%rbp)	#, name
	jne	.L1274	#,
	.loc 1 4193 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.685
	testl	%eax, %eax	# PL_perldb.685
	je	.L1274	#,
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.686
	andl	$512, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1274	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.687
	movl	72(%rax), %eax	# PL_curcop.687_72->cop_line, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1274	#,
.LBB64:
	.loc 1 4194 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -96(%rbp)	# tmp540, sv
	.loc 1 4197 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.688
	movl	72(%rax), %eax	# PL_curcop.688_75->cop_line, D.22102
	.loc 1 4195 0
	movl	%eax, %ecx	# D.22102, D.22104
	.loc 1 4197 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.690
	movq	56(%rax), %rax	# PL_curcop.690_78->cop_filegv, D.22105
	.loc 1 4195 0
	testq	%rax, %rax	# D.22105
	je	.L1275	#,
	.loc 1 4197 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.691
	movq	56(%rax), %rax	# PL_curcop.691_80->cop_filegv, D.22105
	movq	(%rax), %rax	# _81->sv_any, D.22106
	movq	56(%rax), %rax	# _82->xgv_gp, D.22107
	movq	(%rax), %rax	# _83->gp_sv, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1275	#,
	.loc 1 4197 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.693
	movq	56(%rax), %rax	# PL_curcop.693_85->cop_filegv, D.22105
	testq	%rax, %rax	# D.22105
	je	.L1276	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.694
	movq	56(%rax), %rax	# PL_curcop.694_87->cop_filegv, D.22105
	movq	(%rax), %rax	# _88->sv_any, D.22106
	movq	56(%rax), %rax	# _89->xgv_gp, D.22107
	movq	(%rax), %rax	# _90->gp_sv, iftmp.692
	jmp	.L1277	#
.L1276:
	.loc 1 4197 0 discriminator 2
	movl	$0, %eax	#, iftmp.692
.L1277:
	.loc 1 4197 0 discriminator 3
	movq	(%rax), %rax	# iftmp.692_20->sv_any, D.22103
	.loc 1 4195 0 is_stmt 1 discriminator 3
	movq	(%rax), %rdx	# MEM[(struct XPV *)_93].xpv_pv, iftmp.689
	jmp	.L1278	#
.L1275:
	.loc 1 4195 0 is_stmt 0 discriminator 1
	movl	$0, %edx	#, iftmp.689
.L1278:
	.loc 1 4196 0 is_stmt 1 discriminator 2
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.696
	.loc 1 4195 0 discriminator 2
	testq	%rax, %rax	# PL_curstash.696
	je	.L1279	#,
	.loc 1 4195 0 is_stmt 0 discriminator 3
	movl	$.LC80, %eax	#, iftmp.695
	jmp	.L1280	#
.L1279:
	.loc 1 4195 0 discriminator 4
	movl	$.LC81, %eax	#, iftmp.695
.L1280:
	.loc 1 4195 0 discriminator 5
	movq	-96(%rbp), %rdi	# sv, tmp541
	movq	%rcx, %r8	# D.22104,
	movq	%rdx, %rcx	# iftmp.689,
	movq	%rax, %rdx	# iftmp.695,
	movl	$.LC82, %esi	#,
	movl	$0, %eax	#,
	call	Perl_sv_setpvf	#
	.loc 1 4198 0 is_stmt 1 discriminator 5
	movq	-96(%rbp), %rax	# sv, tmp542
	movq	(%rax), %rax	# sv_74->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_99].xpv_pv, tmp543
	movq	%rax, -152(%rbp)	# tmp543, aname
.LBE64:
	.loc 1 4193 0 discriminator 5
	jmp	.L1281	#
.L1274:
	.loc 1 4201 0
	movq	$0, -152(%rbp)	#, aname
.L1281:
	.loc 1 4202 0
	cmpq	$0, -216(%rbp)	#, block
	jne	.L1282	#,
	.loc 1 4204 0
	cmpq	$0, -208(%rbp)	#, attrs
	je	.L1283	#,
.L1282:
	.loc 1 4202 0 discriminator 1
	movl	$2, %ecx	#, iftmp.697
	jmp	.L1284	#
.L1283:
	.loc 1 4202 0 is_stmt 0
	movl	$18, %ecx	#, iftmp.697
.L1284:
	.loc 1 4202 0 discriminator 2
	cmpq	$0, -104(%rbp)	#, name
	jne	.L1285	#,
	.loc 1 4202 0 discriminator 3
	cmpq	$0, -152(%rbp)	#, aname
	jne	.L1286	#,
	.loc 1 4203 0 is_stmt 1 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.701
	.loc 1 4202 0 discriminator 1
	testq	%rax, %rax	# PL_curstash.701
	je	.L1287	#,
	.loc 1 4202 0 is_stmt 0 discriminator 3
	movl	$.LC80, %eax	#, iftmp.700
	jmp	.L1290	#
.L1287:
	.loc 1 4202 0 discriminator 4
	movl	$.LC81, %eax	#, iftmp.700
	jmp	.L1290	#
.L1286:
	.loc 1 4202 0 discriminator 2
	movq	-152(%rbp), %rax	# aname, iftmp.699
	jmp	.L1290	#
.L1285:
	.loc 1 4202 0 discriminator 4
	movq	-104(%rbp), %rax	# name, iftmp.698
.L1290:
	.loc 1 4202 0 discriminator 5
	movl	$12, %edx	#,
	movl	%ecx, %esi	# iftmp.697,
	movq	%rax, %rdi	# iftmp.698,
	call	Perl_gv_fetchpv	#
	movq	%rax, -88(%rbp)	# tmp544, gv
	.loc 1 4207 0 is_stmt 1 discriminator 5
	cmpq	$0, -192(%rbp)	#, o
	je	.L1291	#,
	.loc 1 4208 0
	movq	-192(%rbp), %rax	# o, tmp545
	movq	%rax, %rdi	# tmp545,
	call	Perl_save_freeop	#
.L1291:
	.loc 1 4209 0
	cmpq	$0, -200(%rbp)	#, proto
	je	.L1292	#,
	.loc 1 4210 0
	movq	-200(%rbp), %rax	# proto, tmp546
	movq	%rax, %rdi	# tmp546,
	call	Perl_save_freeop	#
.L1292:
	.loc 1 4211 0
	cmpq	$0, -208(%rbp)	#, attrs
	je	.L1293	#,
	.loc 1 4212 0
	movq	-208(%rbp), %rax	# attrs, tmp547
	movq	%rax, %rdi	# tmp547,
	call	Perl_save_freeop	#
.L1293:
	.loc 1 4214 0
	movq	-88(%rbp), %rax	# gv, tmp548
	movl	12(%rax), %eax	# gv_113->sv_flags, D.22102
	movzbl	%al, %eax	# D.22102, D.22102
	cmpl	$13, %eax	#, D.22102
	je	.L1294	#,
	.loc 1 4216 0
	movq	-88(%rbp), %rax	# gv, tmp549
	movl	12(%rax), %eax	# gv_113->sv_flags, D.22102
	movzbl	%al, %eax	# D.22102, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1295	#,
	.loc 1 4217 0
	movq	-88(%rbp), %rax	# gv, tmp550
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_113].sv_flags, D.22102
	andl	$262144, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	jne	.L1296	#,
	.loc 1 4217 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# gv, tmp551
	movl	12(%rax), %eax	# MEM[(struct SV *)gv_113].sv_flags, D.22102
	andl	$65536, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1297	#,
	movq	-88(%rbp), %rax	# gv, tmp552
	movq	(%rax), %rax	# MEM[(struct SV *)gv_113].sv_any, D.22103
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_122].xiv_iv, D.22104
	cmpq	$-1, %rax	#, D.22104
	je	.L1296	#,
.L1297:
	.loc 1 4218 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.702
	movq	80(%rax), %rax	# PL_curcop.702_124->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1298	#,
	.loc 1 4218 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.703
	movq	80(%rax), %rax	# PL_curcop.703_126->cop_warnings, D.22108
	cmpq	$16, %rax	#, D.22108
	je	.L1298	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.704
	movq	80(%rax), %rax	# PL_curcop.704_128->cop_warnings, D.22108
	cmpq	$32, %rax	#, D.22108
	je	.L1296	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.705
	movq	80(%rax), %rax	# PL_curcop.705_130->cop_warnings, D.22108
	movq	(%rax), %rax	# _131->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_132].xpv_pv, D.22109
	addq	$8, %rax	#, D.22109
	movzbl	(%rax), %eax	# *_134, D.22110
	movsbl	%al, %eax	# D.22110, D.22111
	andl	$64, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1296	#,
.L1298:
	.loc 1 4220 0 is_stmt 1
	movl	$.LC83, %esi	#,
	movl	$35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1296:
	.loc 1 4222 0
	movq	-144(%rbp), %rdx	# ps, tmp553
	movq	-88(%rbp), %rax	# gv, tmp554
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp554,
	call	Perl_cv_ckproto	#
.L1295:
	.loc 1 4224 0
	cmpq	$0, -144(%rbp)	#, ps
	je	.L1299	#,
	.loc 1 4225 0
	movq	-144(%rbp), %rdx	# ps, tmp555
	movq	-88(%rbp), %rax	# gv, tmp556
	movq	%rdx, %rsi	# tmp555,
	movq	%rax, %rdi	# tmp556,
	call	Perl_sv_setpv	#
	jmp	.L1300	#
.L1299:
	.loc 1 4227 0
	movq	-88(%rbp), %rax	# gv, tmp557
	movq	$-1, %rsi	#,
	movq	%rax, %rdi	# tmp557,
	call	Perl_sv_setiv	#
.L1300:
	.loc 1 4228 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.706
	movq	%rax, %rdi	# PL_compcv.706,
	call	Perl_sv_free	#
	.loc 1 4229 0
	movq	$0, PL_compcv(%rip)	#, PL_compcv
	movq	PL_compcv(%rip), %rbx	# PL_compcv, cv
	.loc 1 4230 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.707
	addl	$1, %eax	#, PL_sub_generation.708
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.708, PL_sub_generation
	.loc 1 4231 0
	jmp	.L1301	#
.L1294:
	.loc 1 4234 0
	cmpq	$0, -104(%rbp)	#, name
	je	.L1302	#,
	.loc 1 4234 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# gv, tmp558
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _142->xgv_gp, D.22107
	movl	64(%rax), %eax	# _143->gp_cvgen, D.22102
	testl	%eax, %eax	# D.22102
	jne	.L1302	#,
	movq	-88(%rbp), %rax	# gv, tmp559
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _145->xgv_gp, D.22107
	movq	56(%rax), %rax	# _146->gp_cv, iftmp.709
	jmp	.L1303	#
.L1302:
	.loc 1 4234 0 discriminator 2
	movl	$0, %eax	#, iftmp.709
.L1303:
	.loc 1 4234 0 discriminator 3
	movq	%rax, %rbx	# iftmp.709, cv
	.loc 1 4242 0 is_stmt 1 discriminator 3
	cmpq	$0, -216(%rbp)	#, block
	je	.L1304	#,
	.loc 1 4242 0 is_stmt 0 discriminator 1
	cmpq	$0, -144(%rbp)	#, ps
	je	.L1304	#,
	movq	-144(%rbp), %rax	# ps, tmp560
	movzbl	(%rax), %eax	# *ps_5, D.22110
	testb	%al, %al	# D.22110
	jne	.L1304	#,
	cmpq	$0, -208(%rbp)	#, attrs
	je	.L1305	#,
.L1304:
	.loc 1 4243 0 is_stmt 1
	movq	$0, -136(%rbp)	#, const_sv
	jmp	.L1306	#
.L1305:
	.loc 1 4245 0
	movq	-216(%rbp), %rax	# block, tmp561
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp561,
	call	Perl_op_const_sv	#
	movq	%rax, -136(%rbp)	# tmp562, const_sv
.L1306:
	.loc 1 4247 0
	testq	%rbx, %rbx	# cv
	je	.L1307	#,
.LBB65:
	.loc 1 4248 0
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movq	72(%rax), %rax	# _153->xcv_root, D.22113
	testq	%rax, %rax	# D.22113
	jne	.L1308	#,
	.loc 1 4248 0 is_stmt 0 discriminator 2
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movq	80(%rax), %rax	# _155->xcv_xsub, D.22114
	testq	%rax, %rax	# D.22114
	je	.L1309	#,
.L1308:
	.loc 1 4248 0 discriminator 1
	movl	$1, %eax	#, iftmp.710
	jmp	.L1310	#
.L1309:
	.loc 1 4248 0 discriminator 3
	movl	$0, %eax	#, iftmp.710
.L1310:
	.loc 1 4248 0 discriminator 4
	movb	%al, -169(%rbp)	# iftmp.710, exists
	.loc 1 4260 0 is_stmt 1 discriminator 4
	cmpb	$0, -169(%rbp)	#, exists
	jne	.L1311	#,
	.loc 1 4260 0 is_stmt 0 discriminator 1
	movl	12(%rbx), %eax	# cv_149->sv_flags, D.22102
	andl	$262144, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1312	#,
.L1311:
	.loc 1 4261 0 is_stmt 1
	movq	-144(%rbp), %rdx	# ps, tmp563
	movq	-88(%rbp), %rax	# gv, tmp564
	movq	%rax, %rsi	# tmp564,
	movq	%rbx, %rdi	# cv,
	call	Perl_cv_ckproto	#
.L1312:
	.loc 1 4263 0
	cmpb	$0, -169(%rbp)	#, exists
	jne	.L1313	#,
	.loc 1 4263 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# gv, tmp565
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movzbl	88(%rax), %eax	# _162->xgv_flags, D.22115
	movzbl	%al, %eax	# D.22115, D.22111
	andl	$4, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1307	#,
.L1313:
	.loc 1 4264 0 is_stmt 1
	cmpq	$0, -216(%rbp)	#, block
	jne	.L1314	#,
	.loc 1 4264 0 is_stmt 0 discriminator 1
	cmpq	$0, -208(%rbp)	#, attrs
	jne	.L1314	#,
	.loc 1 4265 0 is_stmt 1
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.711
	movq	(%rax), %rax	# PL_compcv.711_166->sv_any, D.22112
	movzwl	136(%rax), %eax	# _167->xcv_flags, D.22116
	testw	%ax, %ax	# D.22116
	je	.L1315	#,
	.loc 1 4267 0
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movq	(%rbx), %rdx	# cv_149->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _170->xcv_flags, D.22116
	movl	%edx, %ecx	# D.22116, D.22117
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.712
	movq	(%rdx), %rdx	# PL_compcv.712_173->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _174->xcv_flags, D.22116
	andw	$448, %dx	#, D.22117
	orl	%ecx, %edx	# D.22117, D.22117
	movw	%dx, 136(%rax)	# D.22116, _169->xcv_flags
.L1315:
	.loc 1 4270 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.713
	movq	%rax, %rdi	# PL_compcv.713,
	call	Perl_save_freesv	#
	.loc 1 4271 0
	jmp	.L1301	#
.L1314:
	.loc 1 4274 0
	movq	PL_curstackinfo(%rip), %rax	# PL_curstackinfo, PL_curstackinfo.714
	movl	24(%rax), %eax	# PL_curstackinfo.714_181->si_type, D.22111
	cmpl	$3, %eax	#, D.22111
	jne	.L1316	#,
	.loc 1 4274 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movq	64(%rax), %rdx	# _183->xcv_start, D.22113
	movq	PL_sortcop(%rip), %rax	# PL_sortcop, PL_sortcop.715
	cmpq	%rax, %rdx	# PL_sortcop.715, D.22113
	jne	.L1316	#,
	.loc 1 4275 0 is_stmt 1
	movq	-104(%rbp), %rax	# name, tmp566
	movq	%rax, %rsi	# tmp566,
	movl	$.LC84, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1316:
	.loc 1 4276 0
	cmpq	$0, -216(%rbp)	#, block
	je	.L1307	#,
	.loc 1 4277 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.716
	movq	80(%rax), %rax	# PL_curcop.716_186->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1317	#,
	.loc 1 4277 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.717
	movq	80(%rax), %rax	# PL_curcop.717_188->cop_warnings, D.22108
	cmpq	$32, %rax	#, D.22108
	je	.L1317	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.718
	movq	80(%rax), %rax	# PL_curcop.718_190->cop_warnings, D.22108
	cmpq	$16, %rax	#, D.22108
	je	.L1318	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.719
	movq	80(%rax), %rax	# PL_curcop.719_192->cop_warnings, D.22108
	movq	(%rax), %rax	# _193->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_194].xpv_pv, D.22109
	addq	$4, %rax	#, D.22109
	movzbl	(%rax), %eax	# *_196, D.22110
	movsbl	%al, %eax	# D.22110, D.22111
	andl	$64, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	jne	.L1318	#,
.L1317:
	.loc 1 4277 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.720
	movq	80(%rax), %rax	# PL_curcop.720_200->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	jne	.L1319	#,
	.loc 1 4277 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.721
	movzbl	%al, %eax	# PL_dowarn.721, D.22111
	andl	$1, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	jne	.L1318	#,
.L1319:
	.loc 1 4278 0 is_stmt 1
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movzwl	136(%rax), %eax	# _205->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$512, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1320	#,
	.loc 1 4279 0
	cmpq	$0, -136(%rbp)	#, const_sv
	je	.L1318	#,
	.loc 1 4279 0 is_stmt 0 discriminator 1
	movq	%rbx, %rdi	# cv,
	call	Perl_cv_const_sv	#
	movq	-136(%rbp), %rdx	# const_sv, tmp567
	movq	%rdx, %rsi	# tmp567,
	movq	%rax, %rdi	# D.22108,
	call	Perl_sv_cmp	#
	testl	%eax, %eax	# D.22111
	je	.L1320	#,
.L1318:
.LBB66:
	.loc 1 4281 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.722
	movl	72(%rax), %eax	# PL_curcop.722_211->cop_line, tmp568
	movl	%eax, -168(%rbp)	# tmp568, oldline
	.loc 1 4282 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.723
	cmpl	$-1, %eax	#, PL_copline.723
	je	.L1321	#,
	.loc 1 4283 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.724
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.725
	movl	%edx, 72(%rax)	# PL_copline.725, PL_curcop.724_214->cop_line
.L1321:
	.loc 1 4285 0
	movq	(%rbx), %rax	# cv_149->sv_any, D.22112
	movzwl	136(%rax), %eax	# _216->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$512, %eax	#, D.22111
	.loc 1 4284 0
	testl	%eax, %eax	# D.22111
	je	.L1322	#,
	.loc 1 4284 0 is_stmt 0 discriminator 1
	movl	$.LC85, %eax	#, iftmp.726
	jmp	.L1323	#
.L1322:
	.loc 1 4284 0 discriminator 2
	movl	$.LC86, %eax	#, iftmp.726
.L1323:
	.loc 1 4284 0 discriminator 3
	movq	-104(%rbp), %rdx	# name, tmp569
	movq	%rax, %rsi	# iftmp.726,
	movl	$19, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4287 0 is_stmt 1 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.727
	movl	-168(%rbp), %edx	# oldline, tmp570
	movl	%edx, 72(%rax)	# tmp570, PL_curcop.727_222->cop_line
.L1320:
.LBE66:
	.loc 1 4289 0
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_free	#
	.loc 1 4290 0
	movl	$0, %ebx	#, cv
.L1307:
.LBE65:
	.loc 1 4294 0
	cmpq	$0, -136(%rbp)	#, const_sv
	je	.L1324	#,
	.loc 1 4295 0
	movq	-136(%rbp), %rax	# const_sv, tmp571
	movq	%rax, PL_Sv(%rip)	# tmp571, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.729
	testq	%rax, %rax	# PL_Sv.729
	je	.L1326	#,
	.loc 1 4295 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.730
	movl	8(%rax), %edx	# PL_Sv.730_225->sv_refcnt, D.22102
	addl	$1, %edx	#, D.22102
	movl	%edx, 8(%rax)	# D.22102, PL_Sv.730_225->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.730_225->sv_refcnt, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1326	#,
	.loc 1 4295 0
	nop
.L1326:
	.loc 1 4296 0 is_stmt 1
	testq	%rbx, %rbx	# cv
	je	.L1327	#,
	.loc 1 4298 0
	movl	$.LC46, %esi	#,
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_setpv	#
	.loc 1 4299 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	-136(%rbp), %rdx	# const_sv, tmp572
	movq	%rdx, 88(%rax)	# tmp572, _231->xcv_xsubany.any_ptr
	.loc 1 4300 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	$const_sv_xsub, 80(%rax)	#, _232->xcv_xsub
	.loc 1 4301 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	(%rbx), %rdx	# cv_6->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _234->xcv_flags, D.22116
	orb	$2, %dh	#, D.22116
	movw	%dx, 136(%rax)	# D.22116, _233->xcv_flags
	jmp	.L1328	#
.L1327:
	.loc 1 4304 0
	movq	-88(%rbp), %rax	# gv, tmp573
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _237->xgv_gp, D.22107
	movq	$0, 56(%rax)	#, _238->gp_cv
	.loc 1 4305 0
	movq	-136(%rbp), %rdx	# const_sv, tmp574
	movq	-104(%rbp), %rax	# name, tmp575
	movq	%rax, %rsi	# tmp575,
	movl	$0, %edi	#,
	call	Perl_newCONSTSUB	#
	movq	%rax, %rbx	#, cv
.L1328:
	.loc 1 4307 0
	movq	-216(%rbp), %rax	# block, tmp576
	movq	%rax, %rdi	# tmp576,
	call	Perl_op_free	#
	.loc 1 4308 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.731
	movq	%rax, %rdi	# PL_compcv.731,
	call	Perl_sv_free	#
	.loc 1 4309 0
	movq	$0, PL_compcv(%rip)	#, PL_compcv
	.loc 1 4310 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.732
	addl	$1, %eax	#, PL_sub_generation.733
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.733, PL_sub_generation
	.loc 1 4311 0
	jmp	.L1301	#
.L1324:
	.loc 1 4313 0
	cmpq	$0, -208(%rbp)	#, attrs
	je	.L1329	#,
.LBB67:
	.loc 1 4320 0
	testq	%rbx, %rbx	# cv
	je	.L1330	#,
	.loc 1 4320 0 is_stmt 0 discriminator 1
	cmpq	$0, -216(%rbp)	#, block
	jne	.L1330	#,
	.loc 1 4321 0 is_stmt 1
	movq	%rbx, -120(%rbp)	# cv, rcv
	.loc 1 4323 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	(%rbx), %rdx	# cv_6->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _245->xcv_flags, D.22116
	movl	%edx, %ecx	# D.22116, D.22117
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.734
	movq	(%rdx), %rdx	# PL_compcv.734_248->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _249->xcv_flags, D.22116
	andw	$448, %dx	#, D.22117
	orl	%ecx, %edx	# D.22117, D.22117
	movw	%dx, 136(%rax)	# D.22116, _244->xcv_flags
	.loc 1 4324 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	96(%rax), %rax	# _255->xcv_gv, D.22105
	testq	%rax, %rax	# D.22105
	je	.L1331	#,
	.loc 1 4324 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	96(%rax), %rax	# _257->xcv_gv, D.22105
	movq	(%rax), %rax	# _258->sv_any, D.22106
	movq	80(%rax), %rax	# _259->xgv_stash, D.22118
	testq	%rax, %rax	# D.22118
	je	.L1331	#,
	.loc 1 4325 0 is_stmt 1
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	96(%rax), %rax	# _261->xcv_gv, D.22105
	movq	(%rax), %rax	# _262->sv_any, D.22106
	movq	80(%rax), %rax	# _263->xgv_stash, tmp577
	movq	%rax, -128(%rbp)	# tmp577, stash
	jmp	.L1332	#
.L1331:
	.loc 1 4326 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	56(%rax), %rax	# _265->xcv_stash, D.22118
	testq	%rax, %rax	# D.22118
	je	.L1333	#,
	.loc 1 4327 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	56(%rax), %rax	# _267->xcv_stash, tmp578
	movq	%rax, -128(%rbp)	# tmp578, stash
	jmp	.L1332	#
.L1333:
	.loc 1 4329 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, tmp579
	movq	%rax, -128(%rbp)	# tmp579, stash
	.loc 1 4324 0
	jmp	.L1334	#
.L1332:
	jmp	.L1334	#
.L1330:
	.loc 1 4333 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, tmp580
	movq	%rax, -120(%rbp)	# tmp580, rcv
	.loc 1 4334 0
	cmpq	$0, -104(%rbp)	#, name
	je	.L1335	#,
	.loc 1 4334 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# gv, tmp581
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	80(%rax), %rax	# _271->xgv_stash, D.22118
	testq	%rax, %rax	# D.22118
	je	.L1335	#,
	.loc 1 4335 0 is_stmt 1
	movq	-88(%rbp), %rax	# gv, tmp582
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	80(%rax), %rax	# _273->xgv_stash, tmp583
	movq	%rax, -128(%rbp)	# tmp583, stash
	jmp	.L1334	#
.L1335:
	.loc 1 4337 0
	movq	PL_curstash(%rip), %rax	# PL_curstash, tmp584
	movq	%rax, -128(%rbp)	# tmp584, stash
.L1334:
	.loc 1 4339 0
	movq	-208(%rbp), %rdx	# attrs, tmp585
	movq	-120(%rbp), %rsi	# rcv, tmp586
	movq	-128(%rbp), %rax	# stash, tmp587
	movl	$0, %ecx	#,
	movq	%rax, %rdi	# tmp587,
	call	S_apply_attrs	#
.L1329:
.LBE67:
	.loc 1 4341 0
	testq	%rbx, %rbx	# cv
	je	.L1336	#,
	.loc 1 4342 0
	cmpq	$0, -216(%rbp)	#, block
	jne	.L1337	#,
	.loc 1 4344 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.735
	movq	%rax, %rdi	# PL_compcv.735,
	call	Perl_save_freesv	#
	.loc 1 4345 0
	jmp	.L1301	#
.L1337:
	.loc 1 4348 0
	movq	%rbx, %rdi	# cv,
	call	Perl_cv_undef	#
	.loc 1 4349 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.736
	movq	(%rdx), %rdx	# PL_compcv.736_278->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _279->xcv_flags, D.22116
	movw	%dx, 136(%rax)	# D.22116, _277->xcv_flags
	.loc 1 4350 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movzwl	136(%rax), %eax	# _281->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$1024, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	jne	.L1338	#,
	.loc 1 4351 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	128(%rax), %rax	# _285->xcv_outside, D.22119
	movq	%rax, %rdi	# D.22119,
	call	Perl_sv_free	#
.L1338:
	.loc 1 4352 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.737
	movq	(%rdx), %rdx	# PL_compcv.737_288->sv_any, D.22112
	movq	128(%rdx), %rdx	# _289->xcv_outside, D.22119
	movq	%rdx, 128(%rax)	# D.22119, _287->xcv_outside
	.loc 1 4353 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.738
	movq	(%rdx), %rdx	# PL_compcv.738_292->sv_any, D.22112
	movl	140(%rdx), %edx	# _293->xcv_outside_seq, D.22102
	movl	%edx, 140(%rax)	# D.22102, _291->xcv_outside_seq
	.loc 1 4354 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.739
	movq	(%rax), %rax	# PL_compcv.739_295->sv_any, D.22112
	movq	$0, 128(%rax)	#, _296->xcv_outside
	.loc 1 4355 0
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	PL_compcv(%rip), %rdx	# PL_compcv, PL_compcv.740
	movq	(%rdx), %rdx	# PL_compcv.740_298->sv_any, D.22112
	movq	120(%rdx), %rdx	# _299->xcv_padlist, D.22120
	movq	%rdx, 120(%rax)	# D.22120, _297->xcv_padlist
	.loc 1 4356 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.741
	movq	(%rax), %rax	# PL_compcv.741_301->sv_any, D.22112
	movq	$0, 120(%rax)	#, _302->xcv_padlist
	.loc 1 4358 0
	movq	PL_compcv(%rip), %rcx	# PL_compcv, PL_compcv.742
	movq	(%rbx), %rax	# cv_6->sv_any, D.22112
	movq	120(%rax), %rax	# _304->xcv_padlist, D.22120
	movq	%rbx, %rdx	# cv,
	movq	%rcx, %rsi	# PL_compcv.742,
	movq	%rax, %rdi	# D.22120,
	call	Perl_pad_fixup_inner_anons	#
	.loc 1 4360 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.743
	movq	%rax, %rdi	# PL_compcv.743,
	call	Perl_sv_free	#
	.loc 1 4361 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.744
	testl	%eax, %eax	# PL_perldb.744
	je	.L1340	#,
	.loc 1 4361 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.745
	andl	$8, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1340	#,
	.loc 1 4362 0 is_stmt 1
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.746
	addl	$1, %eax	#, PL_sub_generation.747
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.747, PL_sub_generation
	jmp	.L1340	#
.L1336:
	.loc 1 4365 0
	movq	PL_compcv(%rip), %rbx	# PL_compcv, cv
	.loc 1 4366 0
	cmpq	$0, -104(%rbp)	#, name
	je	.L1340	#,
	.loc 1 4367 0
	movq	-88(%rbp), %rax	# gv, tmp588
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _313->xgv_gp, D.22107
	movq	%rbx, 56(%rax)	# cv, _314->gp_cv
	.loc 1 4368 0
	movq	-88(%rbp), %rax	# gv, tmp589
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _315->xgv_gp, D.22107
	movl	$0, 64(%rax)	#, _316->gp_cvgen
	.loc 1 4369 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.748
	addl	$1, %eax	#, PL_sub_generation.749
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.749, PL_sub_generation
.L1340:
	.loc 1 4372 0
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	-88(%rbp), %rdx	# gv, tmp590
	movq	%rdx, 96(%rax)	# tmp590, _319->xcv_gv
	.loc 1 4373 0
	movq	(%rbx), %rdx	# cv_8->sv_any, D.22112
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.751
	movq	56(%rax), %rax	# PL_curcop.751_321->cop_filegv, D.22105
	testq	%rax, %rax	# D.22105
	je	.L1341	#,
	.loc 1 4373 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.752
	movq	56(%rax), %rax	# PL_curcop.752_323->cop_filegv, D.22105
	movq	(%rax), %rax	# _324->sv_any, D.22106
	movq	56(%rax), %rax	# _325->xgv_gp, D.22107
	movq	(%rax), %rax	# _326->gp_sv, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1341	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.754
	movq	56(%rax), %rax	# PL_curcop.754_328->cop_filegv, D.22105
	testq	%rax, %rax	# D.22105
	je	.L1342	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.755
	movq	56(%rax), %rax	# PL_curcop.755_330->cop_filegv, D.22105
	movq	(%rax), %rax	# _331->sv_any, D.22106
	movq	56(%rax), %rax	# _332->xgv_gp, D.22107
	movq	(%rax), %rax	# _333->gp_sv, iftmp.753
	jmp	.L1343	#
.L1342:
	.loc 1 4373 0 discriminator 2
	movl	$0, %eax	#, iftmp.753
.L1343:
	.loc 1 4373 0 discriminator 3
	movq	(%rax), %rax	# iftmp.753_30->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_336].xpv_pv, iftmp.750
	jmp	.L1344	#
.L1341:
	.loc 1 4373 0 discriminator 2
	movl	$0, %eax	#, iftmp.750
.L1344:
	.loc 1 4373 0 discriminator 3
	movq	%rax, 104(%rdx)	# iftmp.750, _320->xcv_file
	.loc 1 4374 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.756
	movq	%rdx, 56(%rax)	# PL_curstash.756, _339->xcv_stash
	.loc 1 4383 0 discriminator 3
	cmpq	$0, -144(%rbp)	#, ps
	je	.L1345	#,
	.loc 1 4384 0
	movq	-144(%rbp), %rax	# ps, tmp591
	movq	%rax, %rsi	# tmp591,
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_setpv	#
.L1345:
	.loc 1 4386 0
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.757
	testl	%eax, %eax	# PL_error_count.757
	je	.L1346	#,
	.loc 1 4387 0
	movq	-216(%rbp), %rax	# block, tmp592
	movq	%rax, %rdi	# tmp592,
	call	Perl_op_free	#
	.loc 1 4388 0
	movq	$0, -216(%rbp)	#, block
	.loc 1 4389 0
	cmpq	$0, -104(%rbp)	#, name
	je	.L1346	#,
.LBB68:
	.loc 1 4390 0
	movq	-104(%rbp), %rax	# name, tmp593
	movl	$58, %esi	#,
	movq	%rax, %rdi	# tmp593,
	call	strrchr	#
	movq	%rax, -80(%rbp)	# tmp594, s
	.loc 1 4391 0
	cmpq	$0, -80(%rbp)	#, s
	je	.L1347	#,
	.loc 1 4391 0 is_stmt 0 discriminator 1
	movq	-80(%rbp), %rax	# s, tmp595
	addq	$1, %rax	#, iftmp.758
	jmp	.L1348	#
.L1347:
	.loc 1 4391 0 discriminator 2
	movq	-104(%rbp), %rax	# name, iftmp.758
.L1348:
	.loc 1 4391 0 discriminator 3
	movq	%rax, -80(%rbp)	# iftmp.758, s
	.loc 1 4392 0 is_stmt 1 discriminator 3
	movq	-80(%rbp), %rax	# s, tmp596
	movl	$.LC61, %esi	#,
	movq	%rax, %rdi	# tmp596,
	call	strcmp	#
	testl	%eax, %eax	# D.22111
	jne	.L1346	#,
.LBB69:
	.loc 1 4393 0
	movq	$.LC87, -72(%rbp)	#, not_safe
	.loc 1 4395 0
	movl	PL_in_eval(%rip), %eax	# PL_in_eval, PL_in_eval.759
	andl	$4, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1349	#,
	.loc 1 4396 0
	movq	-72(%rbp), %rax	# not_safe, tmp597
	movq	%rax, %rdi	# tmp597,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1346	#
.L1349:
	.loc 1 4399 0
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.760
	movq	(%rax), %rax	# PL_errgv.760_351->sv_any, D.22106
	movq	56(%rax), %rax	# _352->xgv_gp, D.22107
	movq	(%rax), %rax	# _353->gp_sv, D.22108
	movq	-72(%rbp), %rdx	# not_safe, tmp598
	movq	%rdx, %rsi	# tmp598,
	movq	%rax, %rdi	# D.22108,
	call	Perl_sv_catpv	#
	.loc 1 4400 0
	movq	PL_errgv(%rip), %rax	# PL_errgv, PL_errgv.761
	movq	(%rax), %rax	# PL_errgv.761_355->sv_any, D.22106
	movq	56(%rax), %rax	# _356->xgv_gp, D.22107
	movq	(%rax), %rax	# _357->gp_sv, D.22108
	movq	%rax, %rsi	# D.22108,
	movl	$.LC78, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1346:
.LBE69:
.LBE68:
	.loc 1 4405 0
	cmpq	$0, -216(%rbp)	#, block
	jne	.L1350	#,
	.loc 1 4406 0
	jmp	.L1301	#
.L1350:
	.loc 1 4408 0
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movzwl	136(%rax), %eax	# _359->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$256, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1351	#,
	.loc 1 4409 0
	movq	(%rbx), %r12	# cv_8->sv_any, D.22112
	movq	-216(%rbp), %rax	# block, tmp599
	movq	%rax, %rdi	# tmp599,
	call	Perl_scalarseq	#
	movl	$168, %esi	#,
	movq	%rax, %rdi	# D.22113,
	call	Perl_mod	#
	movq	%rax, %rdx	# D.22113,
	movl	$0, %esi	#,
	movl	$168, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, 72(%r12)	# D.22113, _363->xcv_root
	jmp	.L1352	#
.L1351:
	.loc 1 4414 0
	movq	-216(%rbp), %rax	# block, tmp600
	movzwl	32(%rax), %eax	# block_1->op_type, D.22116
	cmpw	$1, %ax	#, D.22116
	jne	.L1353	#,
	.loc 1 4415 0
	movq	-216(%rbp), %rax	# block, tmp601
	movq	%rax, %rdi	# tmp601,
	call	Perl_op_free	#
	.loc 1 4416 0
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newSTATEOP	#
	movq	%rax, -216(%rbp)	# tmp602, block
.L1353:
	.loc 1 4418 0
	movq	(%rbx), %r12	# cv_8->sv_any, D.22112
	movq	-216(%rbp), %rax	# block, tmp603
	movq	%rax, %rdi	# tmp603,
	call	Perl_scalarseq	#
	movq	%rax, %rdx	# D.22113,
	movl	$0, %esi	#,
	movl	$167, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, 72(%r12)	# D.22113, _369->xcv_root
.L1352:
	.loc 1 4420 0
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _372->xcv_root, D.22113
	movq	(%rbx), %rdx	# cv_8->sv_any, D.22112
	movq	72(%rdx), %rdx	# _374->xcv_root, D.22113
	movzbl	37(%rdx), %edx	# _375->op_private, D.22115
	orl	$64, %edx	#, D.22115
	movb	%dl, 37(%rax)	# D.22115, _373->op_private
	.loc 1 4421 0
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _378->xcv_root, D.22113
	movq	$1, 24(%rax)	#, _379->op_targ
	.loc 1 4422 0
	movq	(%rbx), %r12	# cv_8->sv_any, D.22112
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _381->xcv_root, D.22113
	movq	(%rax), %rax	# _382->op_next, D.22113
	testq	%rax, %rax	# D.22113
	je	.L1354	#,
	.loc 1 4422 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _384->xcv_root, D.22113
	movq	(%rax), %rax	# _385->op_next, iftmp.762
	jmp	.L1355	#
.L1354:
	.loc 1 4422 0 discriminator 2
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _387->xcv_root, D.22113
	movq	%rax, %rdi	# D.22113,
	call	Perl_linklist	#
.L1355:
	.loc 1 4422 0 discriminator 3
	movq	%rax, 64(%r12)	# iftmp.762, _380->xcv_start
	.loc 1 4423 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	72(%rax), %rax	# _390->xcv_root, D.22113
	movq	$0, (%rax)	#, _391->op_next
	.loc 1 4424 0 discriminator 3
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.763
	movq	(%rbx), %rdx	# cv_8->sv_any, D.22112
	movq	64(%rdx), %rdx	# _393->xcv_start, D.22113
	movq	%rdx, %rdi	# D.22113,
	call	*%rax	# PL_peepp.763
	.loc 1 4428 0 discriminator 3
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movzwl	136(%rax), %eax	# _395->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$1, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	setne	%al	#, D.22121
	movzbl	%al, %eax	# D.22121, D.22122
	movl	%eax, %edi	# D.22122,
	call	Perl_pad_tidy	#
	.loc 1 4430 0 discriminator 3
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movzwl	136(%rax), %eax	# _401->xcv_flags, D.22116
	movzwl	%ax, %eax	# D.22116, D.22111
	andl	$1, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1356	#,
	.loc 1 4432 0
	cmpq	$0, -144(%rbp)	#, ps
	je	.L1356	#,
	.loc 1 4432 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# ps, tmp604
	movzbl	(%rax), %eax	# *ps_5, D.22110
	testb	%al, %al	# D.22110
	jne	.L1356	#,
	movq	-216(%rbp), %rax	# block, tmp605
	movq	%rbx, %rsi	# cv,
	movq	%rax, %rdi	# tmp605,
	call	Perl_op_const_sv	#
	testq	%rax, %rax	# D.22108
	je	.L1356	#,
	.loc 1 4433 0 is_stmt 1
	movq	(%rbx), %rax	# cv_8->sv_any, D.22112
	movq	(%rbx), %rdx	# cv_8->sv_any, D.22112
	movzwl	136(%rdx), %edx	# _408->xcv_flags, D.22116
	orb	$2, %dh	#, D.22116
	movw	%dx, 136(%rax)	# D.22116, _407->xcv_flags
.L1356:
	.loc 1 4436 0
	cmpq	$0, -104(%rbp)	#, name
	jne	.L1357	#,
	.loc 1 4436 0 is_stmt 0 discriminator 1
	cmpq	$0, -152(%rbp)	#, aname
	je	.L1301	#,
.L1357:
.LBB70:
	.loc 1 4438 0 is_stmt 1
	cmpq	$0, -104(%rbp)	#, name
	je	.L1358	#,
	.loc 1 4438 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# name, iftmp.764
	jmp	.L1359	#
.L1358:
	.loc 1 4438 0 discriminator 2
	movq	-152(%rbp), %rax	# aname, iftmp.764
.L1359:
	.loc 1 4438 0 discriminator 3
	movq	%rax, -64(%rbp)	# iftmp.764, tname
	.loc 1 4440 0 is_stmt 1 discriminator 3
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.765
	testl	%eax, %eax	# PL_perldb.765
	je	.L1360	#,
	.loc 1 4440 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.766
	andl	$16, %eax	#, D.22102
	testl	%eax, %eax	# D.22102
	je	.L1360	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.767
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.768
	cmpq	%rax, %rdx	# PL_debstash.768, PL_curstash.767
	je	.L1360	#,
.LBB71:
	.loc 1 4441 0 is_stmt 1
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, -56(%rbp)	# tmp606, sv
	.loc 1 4442 0
	call	Perl_sv_newmortal	#
	movq	%rax, -48(%rbp)	# tmp607, tmpstr
	.loc 1 4443 0
	movl	$11, %edx	#,
	movl	$2, %esi	#,
	movl	$.LC39, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -40(%rbp)	# tmp608, db_postponed
	.loc 1 4449 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.769
	movl	72(%rax), %eax	# PL_curcop.769_422->cop_line, D.22102
	.loc 1 4447 0
	movl	%eax, %ecx	# D.22102, D.22104
	movl	PL_subline(%rip), %eax	# PL_subline, PL_subline.770
	movslq	%eax, %rdx	# PL_subline.770, D.22104
	.loc 1 4448 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.772
	movq	56(%rax), %rax	# PL_curcop.772_427->cop_filegv, D.22105
	.loc 1 4447 0
	testq	%rax, %rax	# D.22105
	je	.L1361	#,
	.loc 1 4448 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.773
	movq	56(%rax), %rax	# PL_curcop.773_429->cop_filegv, D.22105
	movq	(%rax), %rax	# _430->sv_any, D.22106
	movq	56(%rax), %rax	# _431->xgv_gp, D.22107
	movq	(%rax), %rax	# _432->gp_sv, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1361	#,
	.loc 1 4448 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.775
	movq	56(%rax), %rax	# PL_curcop.775_434->cop_filegv, D.22105
	testq	%rax, %rax	# D.22105
	je	.L1362	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.776
	movq	56(%rax), %rax	# PL_curcop.776_436->cop_filegv, D.22105
	movq	(%rax), %rax	# _437->sv_any, D.22106
	movq	56(%rax), %rax	# _438->xgv_gp, D.22107
	movq	(%rax), %rax	# _439->gp_sv, iftmp.774
	jmp	.L1363	#
.L1362:
	.loc 1 4448 0 discriminator 2
	movl	$0, %eax	#, iftmp.774
.L1363:
	.loc 1 4448 0 discriminator 3
	movq	(%rax), %rax	# iftmp.774_35->sv_any, D.22103
	.loc 1 4447 0 is_stmt 1 discriminator 3
	movq	(%rax), %rax	# MEM[(struct XPV *)_442].xpv_pv, iftmp.771
	jmp	.L1364	#
.L1361:
	.loc 1 4447 0 is_stmt 0 discriminator 1
	movl	$0, %eax	#, iftmp.771
.L1364:
	.loc 1 4447 0 discriminator 2
	movq	-56(%rbp), %rdi	# sv, tmp609
	movq	%rcx, %r8	# D.22104,
	movq	%rdx, %rcx	# D.22104,
	movq	%rax, %rdx	# iftmp.771,
	movl	$.LC88, %esi	#,
	movl	$0, %eax	#,
	call	Perl_sv_setpvf	#
	.loc 1 4450 0 is_stmt 1 discriminator 2
	movq	-88(%rbp), %rsi	# gv, tmp610
	movq	-48(%rbp), %rax	# tmpstr, tmp611
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp611,
	call	Perl_gv_efullname4	#
	.loc 1 4451 0 discriminator 2
	movq	-48(%rbp), %rax	# tmpstr, tmp612
	movq	(%rax), %rax	# tmpstr_420->sv_any, D.22103
	movq	8(%rax), %rax	# MEM[(struct XPV *)_445].xpv_cur, D.22123
	movl	%eax, %edx	# D.22123, D.22111
	movq	-48(%rbp), %rax	# tmpstr, tmp613
	movq	(%rax), %rax	# tmpstr_420->sv_any, D.22103
	movq	(%rax), %rsi	# MEM[(struct XPV *)_448].xpv_pv, D.22109
	movq	PL_DBsub(%rip), %rax	# PL_DBsub, PL_DBsub.777
	movq	(%rax), %rax	# PL_DBsub.777_450->sv_any, D.22106
	movq	56(%rax), %rax	# _451->xgv_gp, D.22107
	movq	40(%rax), %rax	# _452->gp_hv, D.22118
	movq	-56(%rbp), %rcx	# sv, tmp614
	movl	$0, %r8d	#,
	movq	%rax, %rdi	# D.22118,
	call	Perl_hv_store	#
	.loc 1 4452 0 discriminator 2
	movq	-40(%rbp), %rax	# db_postponed, tmp615
	movq	(%rax), %rax	# db_postponed_421->sv_any, D.22106
	movq	56(%rax), %rax	# _454->xgv_gp, D.22107
	movq	40(%rax), %rax	# _455->gp_hv, D.22118
	testq	%rax, %rax	# D.22118
	je	.L1365	#,
	.loc 1 4452 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# db_postponed, tmp616
	movq	(%rax), %rax	# db_postponed_421->sv_any, D.22106
	movq	56(%rax), %rax	# _457->xgv_gp, D.22107
	movq	40(%rax), %rax	# _458->gp_hv, iftmp.778
	jmp	.L1366	#
.L1365:
	.loc 1 4452 0 discriminator 2
	movq	-40(%rbp), %rax	# db_postponed, tmp617
	movq	%rax, %rdi	# tmp617,
	call	Perl_gv_HVadd	#
	movq	(%rax), %rax	# _460->sv_any, D.22106
	movq	56(%rax), %rax	# _461->xgv_gp, D.22107
	movq	40(%rax), %rax	# _462->gp_hv, iftmp.778
.L1366:
	.loc 1 4452 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.778, hv
	.loc 1 4453 0 is_stmt 1 discriminator 3
	movq	-32(%rbp), %rax	# hv, tmp618
	movq	(%rax), %rax	# hv_464->sv_any, D.22124
	movq	8(%rax), %rax	# _465->xhv_fill, D.22123
	testq	%rax, %rax	# D.22123
	je	.L1360	#,
	.loc 1 4453 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# tmpstr, tmp619
	movq	(%rax), %rax	# tmpstr_420->sv_any, D.22103
	movq	8(%rax), %rax	# MEM[(struct XPV *)_467].xpv_cur, D.22123
	movl	%eax, %edx	# D.22123, D.22111
	movq	-48(%rbp), %rax	# tmpstr, tmp620
	movq	(%rax), %rax	# tmpstr_420->sv_any, D.22103
	movq	(%rax), %rcx	# MEM[(struct XPV *)_470].xpv_pv, D.22109
	movq	-32(%rbp), %rax	# hv, tmp621
	movq	%rcx, %rsi	# D.22109,
	movq	%rax, %rdi	# tmp621,
	call	Perl_hv_exists	#
	testb	%al, %al	# D.22110
	je	.L1360	#,
	.loc 1 4454 0 is_stmt 1
	movq	-40(%rbp), %rax	# db_postponed, tmp622
	movq	(%rax), %rax	# db_postponed_421->sv_any, D.22106
	movq	56(%rax), %rax	# _473->xgv_gp, D.22107
	movq	56(%rax), %rax	# _474->gp_cv, tmp623
	movq	%rax, -24(%rbp)	# tmp623, pcv
	cmpq	$0, -24(%rbp)	#, pcv
	je	.L1360	#,
.LBB72:
	.loc 1 4456 0
	movq	PL_stack_sp(%rip), %r12	# PL_stack_sp, sp
.LBB73:
	.loc 1 4457 0
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.779
	addq	$4, %rax	#, PL_markstack_ptr.780
	movq	%rax, PL_markstack_ptr(%rip)	# PL_markstack_ptr.780, PL_markstack_ptr
	movq	PL_markstack_ptr(%rip), %rdx	# PL_markstack_ptr, PL_markstack_ptr.781
	movq	PL_markstack_max(%rip), %rax	# PL_markstack_max, PL_markstack_max.782
	cmpq	%rax, %rdx	# PL_markstack_max.782, PL_markstack_ptr.781
	jne	.L1367	#,
	.loc 1 4457 0 is_stmt 0 discriminator 1
	call	Perl_markstack_grow	#
.L1367:
	.loc 1 4457 0 discriminator 2
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.783
	movq	%r12, %rcx	# sp, sp.784
	movq	PL_stack_base(%rip), %rdx	# PL_stack_base, PL_stack_base.785
	subq	%rdx, %rcx	# PL_stack_base.786, D.22104
	movq	%rcx, %rdx	# D.22104, D.22104
	sarq	$3, %rdx	#, tmp624
	movl	%edx, (%rax)	# D.22111, *PL_markstack_ptr.783_481
.LBE73:
.LBB74:
	.loc 1 4458 0 is_stmt 1 discriminator 2
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.787
	movq	%rax, %rdx	# PL_stack_max.787, PL_stack_max.788
	movq	%r12, %rax	# sp, sp.789
	subq	%rax, %rdx	# sp.789, D.22104
	movq	%rdx, %rax	# D.22104, D.22104
	cmpq	$7, %rax	#, D.22104
	jg	.L1368	#,
	.loc 1 4458 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%r12, %rsi	# sp,
	movq	%r12, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %r12	#, sp
.L1368:
	.loc 1 4458 0 discriminator 2
	addq	$8, %r12	#, sp
	movq	-48(%rbp), %rax	# tmpstr, tmp625
	movq	%rax, (%r12)	# tmp625, *sp_494
.LBE74:
	.loc 1 4459 0 is_stmt 1 discriminator 2
	movq	%r12, PL_stack_sp(%rip)	# sp, PL_stack_sp
	.loc 1 4460 0 discriminator 2
	movq	-24(%rbp), %rax	# pcv, tmp626
	movl	$2, %esi	#,
	movq	%rax, %rdi	# tmp626,
	call	Perl_call_sv	#
.L1360:
.LBE72:
.LBE71:
	.loc 1 4464 0
	movq	-64(%rbp), %rax	# tname, tmp627
	movl	$58, %esi	#,
	movq	%rax, %rdi	# tmp627,
	call	strrchr	#
	movq	%rax, -112(%rbp)	# tmp628, s
	cmpq	$0, -112(%rbp)	#, s
	je	.L1369	#,
	.loc 1 4465 0
	addq	$1, -112(%rbp)	#, s
	jmp	.L1370	#
.L1369:
	.loc 1 4467 0
	movq	-64(%rbp), %rax	# tname, tmp629
	movq	%rax, -112(%rbp)	# tmp629, s
.L1370:
	.loc 1 4469 0
	movq	-112(%rbp), %rax	# s, tmp630
	movzbl	(%rax), %eax	# *s_14, D.22110
	cmpb	$66, %al	#, D.22110
	je	.L1371	#,
	.loc 1 4469 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# s, tmp631
	movzbl	(%rax), %eax	# *s_14, D.22110
	cmpb	$69, %al	#, D.22110
	je	.L1371	#,
	movq	-112(%rbp), %rax	# s, tmp632
	movzbl	(%rax), %eax	# *s_14, D.22110
	cmpb	$67, %al	#, D.22110
	je	.L1371	#,
	movq	-112(%rbp), %rax	# s, tmp633
	movzbl	(%rax), %eax	# *s_14, D.22110
	cmpb	$73, %al	#, D.22110
	je	.L1371	#,
	.loc 1 4470 0 is_stmt 1
	jmp	.L1301	#
.L1371:
	.loc 1 4472 0
	movq	-112(%rbp), %rax	# s, tmp634
	movl	$.LC61, %esi	#,
	movq	%rax, %rdi	# tmp634,
	call	strcmp	#
	testl	%eax, %eax	# D.22111
	jne	.L1372	#,
.LBB75:
	.loc 1 4473 0
	movl	PL_scopestack_ix(%rip), %eax	# PL_scopestack_ix, tmp635
	movl	%eax, -164(%rbp)	# tmp635, oldscope
	.loc 1 4474 0
	call	Perl_push_scope	#
	.loc 1 4475 0
	movl	$PL_compiling+56, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 4476 0
	movl	$PL_compiling+72, %edi	#,
	call	Perl_save_I32	#
	.loc 1 4478 0
	movq	PL_beginav(%rip), %rax	# PL_beginav, PL_beginav.790
	testq	%rax, %rax	# PL_beginav.790
	jne	.L1373	#,
	.loc 1 4479 0
	call	Perl_newAV	#
	movq	%rax, PL_beginav(%rip)	# PL_beginav.791, PL_beginav
.L1373:
	.loc 1 4481 0
	movq	PL_beginav(%rip), %rax	# PL_beginav, PL_beginav.792
	movq	%rbx, %rsi	# cv,
	movq	%rax, %rdi	# PL_beginav.792,
	call	Perl_av_push	#
	.loc 1 4482 0
	movq	-88(%rbp), %rax	# gv, tmp636
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _508->xgv_gp, D.22107
	movq	$0, 56(%rax)	#, _509->gp_cv
	.loc 1 4483 0
	movq	PL_beginav(%rip), %rdx	# PL_beginav, PL_beginav.793
	movl	-164(%rbp), %eax	# oldscope, tmp637
	movq	%rdx, %rsi	# PL_beginav.793,
	movl	%eax, %edi	# tmp637,
	call	Perl_call_list	#
	.loc 1 4485 0
	movq	$PL_compiling, PL_curcop(%rip)	#, PL_curcop
	.loc 1 4486 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.794
	movb	%al, PL_compiling+37(%rip)	# D.22115, PL_compiling.op_private
	.loc 1 4487 0
	call	Perl_pop_scope	#
.LBE75:
	jmp	.L1301	#
.L1372:
	.loc 1 4489 0
	movq	-112(%rbp), %rax	# s, tmp638
	movl	$.LC89, %esi	#,
	movq	%rax, %rdi	# tmp638,
	call	strcmp	#
	testl	%eax, %eax	# D.22111
	jne	.L1374	#,
	.loc 1 4489 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.795
	testl	%eax, %eax	# PL_error_count.795
	jne	.L1374	#,
	.loc 1 4490 0 is_stmt 1
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.796
	testq	%rax, %rax	# PL_endav.796
	jne	.L1375	#,
	.loc 1 4491 0
	call	Perl_newAV	#
	movq	%rax, PL_endav(%rip)	# PL_endav.797, PL_endav
.L1375:
	.loc 1 4493 0
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.798
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_endav.798,
	call	Perl_av_unshift	#
	.loc 1 4494 0
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.799
	movq	%rbx, %rdx	# cv,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_endav.799,
	call	Perl_av_store	#
	.loc 1 4495 0
	movq	-88(%rbp), %rax	# gv, tmp639
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _519->xgv_gp, D.22107
	movq	$0, 56(%rax)	#, _520->gp_cv
	jmp	.L1301	#
.L1374:
	.loc 1 4497 0
	movq	-112(%rbp), %rax	# s, tmp640
	movl	$.LC90, %esi	#,
	movq	%rax, %rdi	# tmp640,
	call	strcmp	#
	testl	%eax, %eax	# D.22111
	jne	.L1376	#,
	.loc 1 4497 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.800
	testl	%eax, %eax	# PL_error_count.800
	jne	.L1376	#,
	.loc 1 4498 0 is_stmt 1
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.801
	testq	%rax, %rax	# PL_checkav.801
	jne	.L1377	#,
	.loc 1 4499 0
	call	Perl_newAV	#
	movq	%rax, PL_checkav(%rip)	# PL_checkav.802, PL_checkav
.L1377:
	.loc 1 4501 0
	movq	PL_main_start(%rip), %rax	# PL_main_start, PL_main_start.803
	testq	%rax, %rax	# PL_main_start.803
	je	.L1378	#,
	.loc 1 4501 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.804
	movq	80(%rax), %rax	# PL_curcop.804_526->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1379	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.805
	movq	80(%rax), %rax	# PL_curcop.805_528->cop_warnings, D.22108
	cmpq	$32, %rax	#, D.22108
	je	.L1379	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.806
	movq	80(%rax), %rax	# PL_curcop.806_530->cop_warnings, D.22108
	cmpq	$16, %rax	#, D.22108
	je	.L1380	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.807
	movq	80(%rax), %rax	# PL_curcop.807_532->cop_warnings, D.22108
	movq	(%rax), %rax	# _533->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_534].xpv_pv, D.22109
	addq	$11, %rax	#, D.22109
	movzbl	(%rax), %eax	# *_536, D.22110
	movsbl	%al, %eax	# D.22110, D.22111
	andl	$4, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	jne	.L1380	#,
.L1379:
	.loc 1 4501 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.808
	movq	80(%rax), %rax	# PL_curcop.808_540->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	jne	.L1378	#,
	.loc 1 4501 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.809
	movzbl	%al, %eax	# PL_dowarn.809, D.22111
	andl	$1, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1378	#,
.L1380:
	.loc 1 4502 0 is_stmt 1
	movl	$.LC91, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1378:
	.loc 1 4503 0
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.810
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_checkav.810,
	call	Perl_av_unshift	#
	.loc 1 4504 0
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.811
	movq	%rbx, %rdx	# cv,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_checkav.811,
	call	Perl_av_store	#
	.loc 1 4505 0
	movq	-88(%rbp), %rax	# gv, tmp641
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _547->xgv_gp, D.22107
	movq	$0, 56(%rax)	#, _548->gp_cv
	jmp	.L1301	#
.L1376:
	.loc 1 4507 0
	movq	-112(%rbp), %rax	# s, tmp642
	movl	$.LC92, %esi	#,
	movq	%rax, %rdi	# tmp642,
	call	strcmp	#
	testl	%eax, %eax	# D.22111
	jne	.L1301	#,
	.loc 1 4507 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.812
	testl	%eax, %eax	# PL_error_count.812
	jne	.L1301	#,
	.loc 1 4508 0 is_stmt 1
	movq	PL_initav(%rip), %rax	# PL_initav, PL_initav.813
	testq	%rax, %rax	# PL_initav.813
	jne	.L1381	#,
	.loc 1 4509 0
	call	Perl_newAV	#
	movq	%rax, PL_initav(%rip)	# PL_initav.814, PL_initav
.L1381:
	.loc 1 4511 0
	movq	PL_main_start(%rip), %rax	# PL_main_start, PL_main_start.815
	testq	%rax, %rax	# PL_main_start.815
	je	.L1382	#,
	.loc 1 4511 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.816
	movq	80(%rax), %rax	# PL_curcop.816_554->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	je	.L1383	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.817
	movq	80(%rax), %rax	# PL_curcop.817_556->cop_warnings, D.22108
	cmpq	$32, %rax	#, D.22108
	je	.L1383	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.818
	movq	80(%rax), %rax	# PL_curcop.818_558->cop_warnings, D.22108
	cmpq	$16, %rax	#, D.22108
	je	.L1384	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.819
	movq	80(%rax), %rax	# PL_curcop.819_560->cop_warnings, D.22108
	movq	(%rax), %rax	# _561->sv_any, D.22103
	movq	(%rax), %rax	# MEM[(struct XPV *)_562].xpv_pv, D.22109
	addq	$11, %rax	#, D.22109
	movzbl	(%rax), %eax	# *_564, D.22110
	movsbl	%al, %eax	# D.22110, D.22111
	andl	$4, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	jne	.L1384	#,
.L1383:
	.loc 1 4511 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.820
	movq	80(%rax), %rax	# PL_curcop.820_568->cop_warnings, D.22108
	testq	%rax, %rax	# D.22108
	jne	.L1382	#,
	.loc 1 4511 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.821
	movzbl	%al, %eax	# PL_dowarn.821, D.22111
	andl	$1, %eax	#, D.22111
	testl	%eax, %eax	# D.22111
	je	.L1382	#,
.L1384:
	.loc 1 4512 0 is_stmt 1
	movl	$.LC93, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1382:
	.loc 1 4513 0
	movq	PL_initav(%rip), %rax	# PL_initav, PL_initav.822
	movq	%rbx, %rsi	# cv,
	movq	%rax, %rdi	# PL_initav.822,
	call	Perl_av_push	#
	.loc 1 4514 0
	movq	-88(%rbp), %rax	# gv, tmp643
	movq	(%rax), %rax	# gv_113->sv_any, D.22106
	movq	56(%rax), %rax	# _574->xgv_gp, D.22107
	movq	$0, 56(%rax)	#, _575->gp_cv
.L1301:
.LBE70:
	.loc 1 4519 0
	movl	$-1, PL_copline(%rip)	#, PL_copline
	.loc 1 4520 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.823
	cmpl	-180(%rbp), %eax	# floor, PL_savestack_ix.823
	jle	.L1385	#,
	.loc 1 4520 0 is_stmt 0 discriminator 1
	movl	-180(%rbp), %eax	# floor, tmp644
	movl	%eax, %edi	# tmp644,
	call	Perl_leave_scope	#
.L1385:
	.loc 1 4521 0 is_stmt 1
	movq	%rbx, %rax	# cv, D.22119
	.loc 1 4522 0
	addq	$208, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE90:
	.size	Perl_newATTRSUB, .-Perl_newATTRSUB
	.globl	Perl_newCONSTSUB
	.type	Perl_newCONSTSUB, @function
Perl_newCONSTSUB:
.LFB91:
	.loc 1 4536 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# stash, stash
	movq	%rsi, -48(%rbp)	# name, name
	movq	%rdx, -56(%rbp)	# sv, sv
	.loc 1 4539 0
	call	Perl_push_scope	#
	.loc 1 4541 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.824
	addq	$72, %rax	#, D.22140
	movq	%rax, %rdi	# D.22140,
	call	Perl_save_I32	#
	.loc 1 4542 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.825
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.826
	movl	%edx, 72(%rax)	# PL_copline.826, PL_curcop.825_5->cop_line
.LBB76:
	.loc 1 4544 0
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.827
	leal	3(%rax), %edx	#, D.22141
	movl	PL_savestack_max(%rip), %eax	# PL_savestack_max, PL_savestack_max.828
	cmpl	%eax, %edx	# PL_savestack_max.828, D.22141
	jle	.L1388	#,
	.loc 1 4544 0 is_stmt 0 discriminator 1
	call	Perl_savestack_grow	#
.L1388:
	.loc 1 4544 0 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.829
	andl	$131072, %eax	#, D.22142
	testl	%eax, %eax	# D.22142
	je	.L1389	#,
	.loc 1 4544 0 discriminator 1
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.830
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.831
	leal	1(%rax), %edx	#, PL_savestack_ix.833
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.833, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.22143
	leaq	(%rcx,%rax), %rdx	#, D.22144
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.834
	movq	(%rax), %rax	# PL_hintgv.834_19->sv_any, D.22145
	movq	56(%rax), %rax	# _20->xgv_gp, D.22146
	movq	40(%rax), %rax	# _21->gp_hv, D.22147
	movq	%rax, (%rdx)	# D.22147, _18->any_ptr
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.835
	movq	(%rax), %rax	# PL_hintgv.835_23->sv_any, D.22145
	movq	56(%rax), %rbx	# _24->xgv_gp, D.22146
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.836
	movq	(%rax), %rax	# PL_hintgv.836_26->sv_any, D.22145
	movq	56(%rax), %rax	# _27->xgv_gp, D.22146
	movq	40(%rax), %rax	# _28->gp_hv, D.22147
	movq	%rax, %rdi	# D.22147,
	call	Perl_newHVhv	#
	movq	%rax, 40(%rbx)	# D.22147, _25->gp_hv
.L1389:
	.loc 1 4544 0 discriminator 2
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.837
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.838
	leal	1(%rax), %edx	#, PL_savestack_ix.840
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.840, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.22143
	leaq	(%rcx,%rax), %rdx	#, D.22144
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.841
	movl	%eax, (%rdx)	# PL_hints.842, _37->any_i32
	movq	PL_savestack(%rip), %rcx	# PL_savestack, PL_savestack.843
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.844
	leal	1(%rax), %edx	#, PL_savestack_ix.846
	movl	%edx, PL_savestack_ix(%rip)	# PL_savestack_ix.846, PL_savestack_ix
	cltq
	salq	$3, %rax	#, D.22143
	addq	%rcx, %rax	# PL_savestack.843, D.22144
	movl	$27, (%rax)	#, _46->any_i32
.LBE76:
	.loc 1 4545 0 is_stmt 1 discriminator 2
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.847
	andb	$254, %ah	#, PL_hints.848
	movl	%eax, PL_hints(%rip)	# PL_hints.848, PL_hints
	.loc 1 4547 0 discriminator 2
	cmpq	$0, -40(%rbp)	#, stash
	je	.L1390	#,
	.loc 1 4548 0
	movl	$PL_curstash, %edi	#,
	call	Perl_save_sptr	#
	.loc 1 4549 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.849
	addq	$48, %rax	#, D.22149
	movq	%rax, %rdi	# D.22149,
	call	Perl_save_sptr	#
	.loc 1 4550 0
	movq	-40(%rbp), %rax	# stash, tmp133
	movq	%rax, PL_curstash(%rip)	# tmp133, PL_curstash
	.loc 1 4551 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.850
	movq	-40(%rbp), %rdx	# stash, tmp134
	movq	%rdx, 48(%rax)	# tmp134, PL_curcop.850_53->cop_stash
.L1390:
	.loc 1 4554 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.852
	movq	56(%rax), %rax	# PL_curcop.852_54->cop_filegv, D.22150
	testq	%rax, %rax	# D.22150
	je	.L1391	#,
	.loc 1 4554 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.853
	movq	56(%rax), %rax	# PL_curcop.853_56->cop_filegv, D.22150
	movq	(%rax), %rax	# _57->sv_any, D.22145
	movq	56(%rax), %rax	# _58->xgv_gp, D.22146
	movq	(%rax), %rax	# _59->gp_sv, D.22151
	testq	%rax, %rax	# D.22151
	je	.L1391	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.855
	movq	56(%rax), %rax	# PL_curcop.855_61->cop_filegv, D.22150
	testq	%rax, %rax	# D.22150
	je	.L1392	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.856
	movq	56(%rax), %rax	# PL_curcop.856_63->cop_filegv, D.22150
	movq	(%rax), %rax	# _64->sv_any, D.22145
	movq	56(%rax), %rax	# _65->xgv_gp, D.22146
	movq	(%rax), %rax	# _66->gp_sv, iftmp.854
	jmp	.L1393	#
.L1392:
	.loc 1 4554 0 discriminator 2
	movl	$0, %eax	#, iftmp.854
.L1393:
	.loc 1 4554 0 discriminator 3
	movq	(%rax), %rax	# iftmp.854_2->sv_any, D.22152
	movq	(%rax), %rax	# MEM[(struct XPV *)_69].xpv_pv, iftmp.851
	jmp	.L1394	#
.L1391:
	.loc 1 4554 0 discriminator 2
	movl	$0, %eax	#, iftmp.851
.L1394:
	.loc 1 4554 0 discriminator 3
	movq	%rax, %rdi	# iftmp.851,
	call	Perl_savepv	#
	movq	%rax, %rdx	#, D.22153
	movq	-48(%rbp), %rax	# name, tmp135
	movl	$const_sv_xsub, %esi	#,
	movq	%rax, %rdi	# tmp135,
	call	Perl_newXS	#
	movq	%rax, -24(%rbp)	# tmp136, cv
	.loc 1 4555 0 is_stmt 1 discriminator 3
	movq	-24(%rbp), %rax	# cv, tmp137
	movq	(%rax), %rax	# cv_74->sv_any, D.22154
	movq	-56(%rbp), %rdx	# sv, tmp138
	movq	%rdx, 88(%rax)	# tmp138, _75->xcv_xsubany.any_ptr
	.loc 1 4556 0 discriminator 3
	movq	-24(%rbp), %rax	# cv, tmp139
	movq	(%rax), %rax	# cv_74->sv_any, D.22154
	movq	-24(%rbp), %rdx	# cv, tmp140
	movq	(%rdx), %rdx	# cv_74->sv_any, D.22154
	movzwl	136(%rdx), %edx	# _78->xcv_flags, D.22155
	orb	$2, %dh	#, D.22155
	movw	%dx, 136(%rax)	# D.22155, _77->xcv_flags
	.loc 1 4557 0 discriminator 3
	movq	-24(%rbp), %rax	# cv, tmp141
	movl	$.LC46, %esi	#,
	movq	%rax, %rdi	# tmp141,
	call	Perl_sv_setpv	#
	.loc 1 4562 0 discriminator 3
	call	Perl_pop_scope	#
	.loc 1 4564 0 discriminator 3
	movq	-24(%rbp), %rax	# cv, D.22156
	.loc 1 4565 0 discriminator 3
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE91:
	.size	Perl_newCONSTSUB, .-Perl_newCONSTSUB
	.section	.rodata
.LC94:
	.string	"autouse"
	.text
	.globl	Perl_newXS
	.type	Perl_newXS, @function
Perl_newXS:
.LFB92:
	.loc 1 4577 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$72, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# name, name
	movq	%rsi, -64(%rbp)	# subaddr, subaddr
	movq	%rdx, -72(%rbp)	# filename, filename
	.loc 1 4578 0
	cmpq	$0, -56(%rbp)	#, name
	jne	.L1397	#,
	.loc 1 4579 0 discriminator 1
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.859
	.loc 1 4578 0 discriminator 1
	testq	%rax, %rax	# PL_curstash.859
	je	.L1398	#,
	movl	$.LC80, %eax	#, iftmp.858
	jmp	.L1400	#
.L1398:
	.loc 1 4578 0 is_stmt 0 discriminator 2
	movl	$.LC81, %eax	#, iftmp.858
	jmp	.L1400	#
.L1397:
	movq	-56(%rbp), %rax	# name, iftmp.857
.L1400:
	.loc 1 4578 0 discriminator 3
	movl	$12, %edx	#,
	movl	$2, %esi	#,
	movq	%rax, %rdi	# iftmp.857,
	call	Perl_gv_fetchpv	#
	movq	%rax, -24(%rbp)	# tmp204, gv
	.loc 1 4583 0 is_stmt 1 discriminator 3
	cmpq	$0, -56(%rbp)	#, name
	je	.L1401	#,
	.loc 1 4583 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# gv, tmp205
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _15->xgv_gp, D.22158
	movq	56(%rax), %rax	# _16->gp_cv, iftmp.860
	jmp	.L1402	#
.L1401:
	.loc 1 4583 0 discriminator 2
	movl	$0, %eax	#, iftmp.860
.L1402:
	.loc 1 4583 0 discriminator 3
	movq	%rax, %rbx	# iftmp.860, cv
	testq	%rbx, %rbx	# cv
	je	.L1403	#,
	.loc 1 4584 0 is_stmt 1
	movq	-24(%rbp), %rax	# gv, tmp206
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _20->xgv_gp, D.22158
	movl	64(%rax), %eax	# _21->gp_cvgen, D.22159
	testl	%eax, %eax	# D.22159
	je	.L1404	#,
	.loc 1 4586 0
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_free	#
	.loc 1 4587 0
	movl	$0, %ebx	#, cv
	jmp	.L1403	#
.L1404:
	.loc 1 4589 0
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movq	72(%rax), %rax	# _24->xcv_root, D.22161
	testq	%rax, %rax	# D.22161
	jne	.L1405	#,
	.loc 1 4589 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movq	80(%rax), %rax	# _26->xcv_xsub, D.22162
	testq	%rax, %rax	# D.22162
	jne	.L1405	#,
	movq	-24(%rbp), %rax	# gv, tmp207
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movzbl	88(%rax), %eax	# _28->xgv_flags, D.22163
	movzbl	%al, %eax	# D.22163, D.22164
	andl	$4, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	je	.L1403	#,
.L1405:
	.loc 1 4591 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.861
	movq	80(%rax), %rax	# PL_curcop.861_32->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	je	.L1406	#,
	.loc 1 4591 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.862
	movq	80(%rax), %rax	# PL_curcop.862_34->cop_warnings, D.22165
	cmpq	$32, %rax	#, D.22165
	je	.L1406	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.863
	movq	80(%rax), %rax	# PL_curcop.863_36->cop_warnings, D.22165
	cmpq	$16, %rax	#, D.22165
	je	.L1407	#,
	.loc 1 4591 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.864
	movq	80(%rax), %rax	# PL_curcop.864_38->cop_warnings, D.22165
	movq	(%rax), %rax	# _39->sv_any, D.22166
	movq	(%rax), %rax	# MEM[(struct XPV *)_40].xpv_pv, D.22167
	addq	$4, %rax	#, D.22167
	movzbl	(%rax), %eax	# *_42, D.22168
	movsbl	%al, %eax	# D.22168, D.22164
	andl	$64, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	jne	.L1407	#,
.L1406:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.865
	movq	80(%rax), %rax	# PL_curcop.865_46->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	jne	.L1408	#,
	.loc 1 4591 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.866
	movzbl	%al, %eax	# PL_dowarn.866, D.22164
	andl	$1, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	je	.L1408	#,
.L1407:
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movq	96(%rax), %rax	# _51->xcv_gv, D.22169
	testq	%rax, %rax	# D.22169
	je	.L1409	#,
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movq	96(%rax), %rax	# _53->xcv_gv, D.22169
	movq	(%rax), %rax	# _54->sv_any, D.22157
	movq	80(%rax), %rax	# _55->xgv_stash, D.22170
	testq	%rax, %rax	# D.22170
	je	.L1409	#,
	.loc 1 4592 0 is_stmt 1 discriminator 1
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movq	96(%rax), %rax	# _57->xcv_gv, D.22169
	movq	(%rax), %rax	# _58->sv_any, D.22157
	movq	80(%rax), %rax	# _59->xgv_stash, D.22170
	movq	(%rax), %rax	# _60->sv_any, D.22171
	movq	80(%rax), %rax	# _61->xhv_name, D.22167
	movl	$.LC94, %esi	#,
	movq	%rax, %rdi	# D.22167,
	call	strcmp	#
	.loc 1 4591 0 discriminator 1
	testl	%eax, %eax	# D.22164
	je	.L1408	#,
.L1409:
.LBB77:
	.loc 1 4593 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.867
	movl	72(%rax), %eax	# PL_curcop.867_64->cop_line, tmp208
	movl	%eax, -36(%rbp)	# tmp208, oldline
	.loc 1 4594 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.868
	cmpl	$-1, %eax	#, PL_copline.868
	je	.L1410	#,
	.loc 1 4595 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.869
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.870
	movl	%edx, 72(%rax)	# PL_copline.870, PL_curcop.869_67->cop_line
.L1410:
	.loc 1 4597 0
	movq	(%rbx), %rax	# cv_19->sv_any, D.22160
	movzwl	136(%rax), %eax	# _69->xcv_flags, D.22172
	movzwl	%ax, %eax	# D.22172, D.22164
	andl	$512, %eax	#, D.22164
	.loc 1 4596 0
	testl	%eax, %eax	# D.22164
	je	.L1411	#,
	.loc 1 4596 0 is_stmt 0 discriminator 1
	movl	$.LC85, %eax	#, iftmp.871
	jmp	.L1412	#
.L1411:
	.loc 1 4596 0 discriminator 2
	movl	$.LC86, %eax	#, iftmp.871
.L1412:
	.loc 1 4596 0 discriminator 3
	movq	-56(%rbp), %rdx	# name, tmp209
	movq	%rax, %rsi	# iftmp.871,
	movl	$19, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4600 0 is_stmt 1 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.872
	movl	-36(%rbp), %edx	# oldline, tmp210
	movl	%edx, 72(%rax)	# tmp210, PL_curcop.872_75->cop_line
.L1408:
.LBE77:
	.loc 1 4602 0
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_free	#
	.loc 1 4603 0
	movl	$0, %ebx	#, cv
.L1403:
	.loc 1 4607 0
	testq	%rbx, %rbx	# cv
	je	.L1413	#,
	.loc 1 4608 0
	movq	%rbx, %rdi	# cv,
	call	Perl_cv_undef	#
	jmp	.L1414	#
.L1413:
	.loc 1 4610 0
	movl	$0, %edi	#,
	call	Perl_newSV	#
	movq	%rax, %rbx	#, cv
	.loc 1 4611 0
	movl	$12, %esi	#,
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_upgrade	#
	.loc 1 4612 0
	cmpq	$0, -56(%rbp)	#, name
	je	.L1414	#,
	.loc 1 4613 0
	movq	-24(%rbp), %rax	# gv, tmp211
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _78->xgv_gp, D.22158
	movq	%rbx, 56(%rax)	# cv, _79->gp_cv
	.loc 1 4614 0
	movq	-24(%rbp), %rax	# gv, tmp212
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _80->xgv_gp, D.22158
	movl	$0, 64(%rax)	#, _81->gp_cvgen
	.loc 1 4615 0
	movl	PL_sub_generation(%rip), %eax	# PL_sub_generation, PL_sub_generation.873
	addl	$1, %eax	#, PL_sub_generation.874
	movl	%eax, PL_sub_generation(%rip)	# PL_sub_generation.874, PL_sub_generation
.L1414:
	.loc 1 4618 0
	movq	(%rbx), %rax	# cv_2->sv_any, D.22160
	movq	-24(%rbp), %rdx	# gv, tmp213
	movq	%rdx, 96(%rax)	# tmp213, _84->xcv_gv
	.loc 1 4624 0
	movq	-72(%rbp), %rax	# filename, tmp214
	movq	%rax, %rdi	# tmp214,
	call	Perl_gv_fetchfile	#
	.loc 1 4625 0
	movq	(%rbx), %rax	# cv_2->sv_any, D.22160
	movq	-72(%rbp), %rdx	# filename, tmp215
	movq	%rdx, 104(%rax)	# tmp215, _86->xcv_file
	.loc 1 4627 0
	movq	(%rbx), %rax	# cv_2->sv_any, D.22160
	movq	-64(%rbp), %rdx	# subaddr, tmp216
	movq	%rdx, 80(%rax)	# tmp216, _87->xcv_xsub
	.loc 1 4629 0
	cmpq	$0, -56(%rbp)	#, name
	je	.L1415	#,
.LBB78:
	.loc 1 4630 0
	movq	-56(%rbp), %rax	# name, tmp217
	movl	$58, %esi	#,
	movq	%rax, %rdi	# tmp217,
	call	strrchr	#
	movq	%rax, -32(%rbp)	# tmp218, s
	.loc 1 4631 0
	cmpq	$0, -32(%rbp)	#, s
	je	.L1416	#,
	.loc 1 4632 0
	addq	$1, -32(%rbp)	#, s
	jmp	.L1417	#
.L1416:
	.loc 1 4634 0
	movq	-56(%rbp), %rax	# name, tmp219
	movq	%rax, -32(%rbp)	# tmp219, s
.L1417:
	.loc 1 4636 0
	movq	-32(%rbp), %rax	# s, tmp220
	movzbl	(%rax), %eax	# *s_3, D.22168
	cmpb	$66, %al	#, D.22168
	je	.L1418	#,
	.loc 1 4636 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# s, tmp221
	movzbl	(%rax), %eax	# *s_3, D.22168
	cmpb	$69, %al	#, D.22168
	je	.L1418	#,
	movq	-32(%rbp), %rax	# s, tmp222
	movzbl	(%rax), %eax	# *s_3, D.22168
	cmpb	$67, %al	#, D.22168
	je	.L1418	#,
	movq	-32(%rbp), %rax	# s, tmp223
	movzbl	(%rax), %eax	# *s_3, D.22168
	cmpb	$73, %al	#, D.22168
	je	.L1418	#,
	.loc 1 4637 0 is_stmt 1
	jmp	.L1419	#
.L1418:
	.loc 1 4639 0
	movq	-32(%rbp), %rax	# s, tmp224
	movl	$.LC61, %esi	#,
	movq	%rax, %rdi	# tmp224,
	call	strcmp	#
	testl	%eax, %eax	# D.22164
	jne	.L1420	#,
	.loc 1 4640 0
	movq	PL_beginav(%rip), %rax	# PL_beginav, PL_beginav.875
	testq	%rax, %rax	# PL_beginav.875
	jne	.L1421	#,
	.loc 1 4641 0
	call	Perl_newAV	#
	movq	%rax, PL_beginav(%rip)	# PL_beginav.876, PL_beginav
.L1421:
	.loc 1 4642 0
	movq	PL_beginav(%rip), %rax	# PL_beginav, PL_beginav.877
	movq	%rbx, %rsi	# cv,
	movq	%rax, %rdi	# PL_beginav.877,
	call	Perl_av_push	#
	.loc 1 4643 0
	movq	-24(%rbp), %rax	# gv, tmp225
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _100->xgv_gp, D.22158
	movq	$0, 56(%rax)	#, _101->gp_cv
	jmp	.L1422	#
.L1420:
	.loc 1 4645 0
	movq	-32(%rbp), %rax	# s, tmp226
	movl	$.LC89, %esi	#,
	movq	%rax, %rdi	# tmp226,
	call	strcmp	#
	testl	%eax, %eax	# D.22164
	jne	.L1423	#,
	.loc 1 4646 0
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.878
	testq	%rax, %rax	# PL_endav.878
	jne	.L1424	#,
	.loc 1 4647 0
	call	Perl_newAV	#
	movq	%rax, PL_endav(%rip)	# PL_endav.879, PL_endav
.L1424:
	.loc 1 4648 0
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.880
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_endav.880,
	call	Perl_av_unshift	#
	.loc 1 4649 0
	movq	PL_endav(%rip), %rax	# PL_endav, PL_endav.881
	movq	%rbx, %rdx	# cv,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_endav.881,
	call	Perl_av_store	#
	.loc 1 4650 0
	movq	-24(%rbp), %rax	# gv, tmp227
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _107->xgv_gp, D.22158
	movq	$0, 56(%rax)	#, _108->gp_cv
	jmp	.L1422	#
.L1423:
	.loc 1 4652 0
	movq	-32(%rbp), %rax	# s, tmp228
	movl	$.LC90, %esi	#,
	movq	%rax, %rdi	# tmp228,
	call	strcmp	#
	testl	%eax, %eax	# D.22164
	jne	.L1425	#,
	.loc 1 4653 0
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.882
	testq	%rax, %rax	# PL_checkav.882
	jne	.L1426	#,
	.loc 1 4654 0
	call	Perl_newAV	#
	movq	%rax, PL_checkav(%rip)	# PL_checkav.883, PL_checkav
.L1426:
	.loc 1 4655 0
	movq	PL_main_start(%rip), %rax	# PL_main_start, PL_main_start.884
	testq	%rax, %rax	# PL_main_start.884
	je	.L1427	#,
	.loc 1 4655 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.885
	movq	80(%rax), %rax	# PL_curcop.885_113->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	je	.L1428	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.886
	movq	80(%rax), %rax	# PL_curcop.886_115->cop_warnings, D.22165
	cmpq	$32, %rax	#, D.22165
	je	.L1428	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.887
	movq	80(%rax), %rax	# PL_curcop.887_117->cop_warnings, D.22165
	cmpq	$16, %rax	#, D.22165
	je	.L1429	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.888
	movq	80(%rax), %rax	# PL_curcop.888_119->cop_warnings, D.22165
	movq	(%rax), %rax	# _120->sv_any, D.22166
	movq	(%rax), %rax	# MEM[(struct XPV *)_121].xpv_pv, D.22167
	addq	$11, %rax	#, D.22167
	movzbl	(%rax), %eax	# *_123, D.22168
	movsbl	%al, %eax	# D.22168, D.22164
	andl	$4, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	jne	.L1429	#,
.L1428:
	.loc 1 4655 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.889
	movq	80(%rax), %rax	# PL_curcop.889_127->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	jne	.L1427	#,
	.loc 1 4655 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.890
	movzbl	%al, %eax	# PL_dowarn.890, D.22164
	andl	$1, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	je	.L1427	#,
.L1429:
	.loc 1 4656 0 is_stmt 1
	movl	$.LC91, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1427:
	.loc 1 4657 0
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.891
	movl	$1, %esi	#,
	movq	%rax, %rdi	# PL_checkav.891,
	call	Perl_av_unshift	#
	.loc 1 4658 0
	movq	PL_checkav(%rip), %rax	# PL_checkav, PL_checkav.892
	movq	%rbx, %rdx	# cv,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# PL_checkav.892,
	call	Perl_av_store	#
	.loc 1 4659 0
	movq	-24(%rbp), %rax	# gv, tmp229
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _134->xgv_gp, D.22158
	movq	$0, 56(%rax)	#, _135->gp_cv
	jmp	.L1422	#
.L1425:
	.loc 1 4661 0
	movq	-32(%rbp), %rax	# s, tmp230
	movl	$.LC92, %esi	#,
	movq	%rax, %rdi	# tmp230,
	call	strcmp	#
	testl	%eax, %eax	# D.22164
	jne	.L1422	#,
	.loc 1 4662 0
	movq	PL_initav(%rip), %rax	# PL_initav, PL_initav.893
	testq	%rax, %rax	# PL_initav.893
	jne	.L1430	#,
	.loc 1 4663 0
	call	Perl_newAV	#
	movq	%rax, PL_initav(%rip)	# PL_initav.894, PL_initav
.L1430:
	.loc 1 4664 0
	movq	PL_main_start(%rip), %rax	# PL_main_start, PL_main_start.895
	testq	%rax, %rax	# PL_main_start.895
	je	.L1431	#,
	.loc 1 4664 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.896
	movq	80(%rax), %rax	# PL_curcop.896_140->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	je	.L1432	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.897
	movq	80(%rax), %rax	# PL_curcop.897_142->cop_warnings, D.22165
	cmpq	$32, %rax	#, D.22165
	je	.L1432	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.898
	movq	80(%rax), %rax	# PL_curcop.898_144->cop_warnings, D.22165
	cmpq	$16, %rax	#, D.22165
	je	.L1433	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.899
	movq	80(%rax), %rax	# PL_curcop.899_146->cop_warnings, D.22165
	movq	(%rax), %rax	# _147->sv_any, D.22166
	movq	(%rax), %rax	# MEM[(struct XPV *)_148].xpv_pv, D.22167
	addq	$11, %rax	#, D.22167
	movzbl	(%rax), %eax	# *_150, D.22168
	movsbl	%al, %eax	# D.22168, D.22164
	andl	$4, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	jne	.L1433	#,
.L1432:
	.loc 1 4664 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.900
	movq	80(%rax), %rax	# PL_curcop.900_154->cop_warnings, D.22165
	testq	%rax, %rax	# D.22165
	jne	.L1431	#,
	.loc 1 4664 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.901
	movzbl	%al, %eax	# PL_dowarn.901, D.22164
	andl	$1, %eax	#, D.22164
	testl	%eax, %eax	# D.22164
	je	.L1431	#,
.L1433:
	.loc 1 4665 0 is_stmt 1
	movl	$.LC93, %esi	#,
	movl	$45, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1431:
	.loc 1 4666 0
	movq	PL_initav(%rip), %rax	# PL_initav, PL_initav.902
	movq	%rbx, %rsi	# cv,
	movq	%rax, %rdi	# PL_initav.902,
	call	Perl_av_push	#
	.loc 1 4667 0
	movq	-24(%rbp), %rax	# gv, tmp231
	movq	(%rax), %rax	# gv_14->sv_any, D.22157
	movq	56(%rax), %rax	# _160->xgv_gp, D.22158
	movq	$0, 56(%rax)	#, _161->gp_cv
.LBE78:
	jmp	.L1419	#
.L1422:
	jmp	.L1419	#
.L1415:
	.loc 1 4671 0
	movq	(%rbx), %rax	# cv_2->sv_any, D.22160
	movq	(%rbx), %rdx	# cv_2->sv_any, D.22160
	movzwl	136(%rdx), %edx	# _163->xcv_flags, D.22172
	orl	$4, %edx	#, D.22172
	movw	%dx, 136(%rax)	# D.22172, _162->xcv_flags
.L1419:
	.loc 1 4674 0
	movq	%rbx, %rax	# cv, D.22173
	.loc 1 4675 0
	addq	$72, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE92:
	.size	Perl_newXS, .-Perl_newXS
	.section	.rodata
.LC95:
	.string	"STDOUT"
.LC96:
	.string	"Format %s redefined"
	.text
	.globl	Perl_newFORM
	.type	Perl_newFORM, @function
Perl_newFORM:
.LFB93:
	.loc 1 4679 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$64, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movl	%edi, -52(%rbp)	# floor, floor
	movq	%rsi, -64(%rbp)	# o, o
	movq	%rdx, -72(%rbp)	# block, block
	.loc 1 4685 0
	cmpq	$0, -64(%rbp)	#, o
	je	.L1436	#,
	.loc 1 4686 0
	movq	-64(%rbp), %rax	# o, tmp147
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_6(D)].op_sv, PL_Sv.903
	movq	%rax, PL_Sv(%rip)	# PL_Sv.903, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.905
	movl	12(%rax), %eax	# PL_Sv.905_8->sv_flags, D.22175
	andl	$262144, %eax	#, D.22175
	testl	%eax, %eax	# D.22175
	je	.L1437	#,
	.loc 1 4686 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.906
	movq	(%rax), %rax	# PL_Sv.906_11->sv_any, D.22176
	movq	8(%rax), %rax	# MEM[(struct XPV *)_12].xpv_cur, n_a.907
	movq	%rax, -40(%rbp)	# n_a.907, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.908
	movq	(%rax), %rax	# PL_Sv.908_14->sv_any, D.22176
	movq	(%rax), %rax	# MEM[(struct XPV *)_15].xpv_pv, iftmp.904
	jmp	.L1438	#
.L1437:
	.loc 1 4686 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.909
	leaq	-40(%rbp), %rcx	#, tmp148
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp148,
	movq	%rax, %rdi	# PL_Sv.909,
	call	Perl_sv_2pv_flags	#
.L1438:
	.loc 1 4686 0 discriminator 1
	movq	%rax, -32(%rbp)	# iftmp.904, name
	jmp	.L1439	#
.L1436:
	.loc 1 4688 0 is_stmt 1
	movq	$.LC95, -32(%rbp)	#, name
.L1439:
	.loc 1 4689 0
	movq	-32(%rbp), %rax	# name, tmp149
	movl	$14, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp149,
	call	Perl_gv_fetchpv	#
	movq	%rax, -24(%rbp)	# tmp150, gv
	.loc 1 4695 0
	movq	-24(%rbp), %rax	# gv, tmp151
	movq	(%rax), %rax	# gv_21->sv_any, D.22177
	movq	-24(%rbp), %rdx	# gv, tmp152
	movq	(%rdx), %rdx	# gv_21->sv_any, D.22177
	movzbl	88(%rdx), %edx	# _23->xgv_flags, D.22178
	orl	$2, %edx	#, D.22178
	movb	%dl, 88(%rax)	# D.22178, _22->xgv_flags
	.loc 1 4696 0
	movq	-24(%rbp), %rax	# gv, tmp153
	movq	(%rax), %rax	# gv_21->sv_any, D.22177
	movq	56(%rax), %rax	# _26->xgv_gp, D.22179
	movq	24(%rax), %rbx	# _27->gp_form, cv
	testq	%rbx, %rbx	# cv
	je	.L1440	#,
	.loc 1 4697 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.910
	movq	80(%rax), %rax	# PL_curcop.910_29->cop_warnings, D.22180
	testq	%rax, %rax	# D.22180
	je	.L1441	#,
	.loc 1 4697 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.911
	movq	80(%rax), %rax	# PL_curcop.911_31->cop_warnings, D.22180
	cmpq	$32, %rax	#, D.22180
	je	.L1441	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.912
	movq	80(%rax), %rax	# PL_curcop.912_33->cop_warnings, D.22180
	cmpq	$16, %rax	#, D.22180
	je	.L1442	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.913
	movq	80(%rax), %rax	# PL_curcop.913_35->cop_warnings, D.22180
	movq	(%rax), %rax	# _36->sv_any, D.22176
	movq	(%rax), %rax	# MEM[(struct XPV *)_37].xpv_pv, D.22181
	addq	$4, %rax	#, D.22181
	movzbl	(%rax), %eax	# *_39, D.22182
	movsbl	%al, %eax	# D.22182, D.22183
	andl	$64, %eax	#, D.22183
	testl	%eax, %eax	# D.22183
	jne	.L1442	#,
.L1441:
	.loc 1 4697 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.914
	movq	80(%rax), %rax	# PL_curcop.914_43->cop_warnings, D.22180
	testq	%rax, %rax	# D.22180
	jne	.L1443	#,
	.loc 1 4697 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.915
	movzbl	%al, %eax	# PL_dowarn.915, D.22183
	andl	$1, %eax	#, D.22183
	testl	%eax, %eax	# D.22183
	je	.L1443	#,
.L1442:
.LBB79:
	.loc 1 4698 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.916
	movl	72(%rax), %eax	# PL_curcop.916_48->cop_line, tmp154
	movl	%eax, -44(%rbp)	# tmp154, oldline
	.loc 1 4699 0
	movl	PL_copline(%rip), %eax	# PL_copline, PL_copline.917
	cmpl	$-1, %eax	#, PL_copline.917
	je	.L1444	#,
	.loc 1 4700 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.918
	movl	PL_copline(%rip), %edx	# PL_copline, PL_copline.919
	movl	%edx, 72(%rax)	# PL_copline.919, PL_curcop.918_51->cop_line
.L1444:
	.loc 1 4701 0
	movq	-32(%rbp), %rax	# name, tmp155
	movq	%rax, %rdx	# tmp155,
	movl	$.LC96, %esi	#,
	movl	$19, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4702 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.920
	movl	-44(%rbp), %edx	# oldline, tmp156
	movl	%edx, 72(%rax)	# tmp156, PL_curcop.920_53->cop_line
.L1443:
.LBE79:
	.loc 1 4704 0
	movq	%rbx, %rdi	# cv,
	call	Perl_sv_free	#
.L1440:
	.loc 1 4706 0
	movq	PL_compcv(%rip), %rbx	# PL_compcv, cv
	.loc 1 4707 0
	movq	-24(%rbp), %rax	# gv, tmp157
	movq	(%rax), %rax	# gv_21->sv_any, D.22177
	movq	56(%rax), %rax	# _55->xgv_gp, D.22179
	movq	%rbx, 24(%rax)	# cv, _56->gp_form
	.loc 1 4708 0
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	-24(%rbp), %rdx	# gv, tmp158
	movq	%rdx, 96(%rax)	# tmp158, _57->xcv_gv
	.loc 1 4709 0
	movq	(%rbx), %rdx	# cv_54->sv_any, D.22184
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.922
	movq	56(%rax), %rax	# PL_curcop.922_59->cop_filegv, D.22185
	testq	%rax, %rax	# D.22185
	je	.L1445	#,
	.loc 1 4709 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.923
	movq	56(%rax), %rax	# PL_curcop.923_61->cop_filegv, D.22185
	movq	(%rax), %rax	# _62->sv_any, D.22177
	movq	56(%rax), %rax	# _63->xgv_gp, D.22179
	movq	(%rax), %rax	# _64->gp_sv, D.22180
	testq	%rax, %rax	# D.22180
	je	.L1445	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.925
	movq	56(%rax), %rax	# PL_curcop.925_66->cop_filegv, D.22185
	testq	%rax, %rax	# D.22185
	je	.L1446	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.926
	movq	56(%rax), %rax	# PL_curcop.926_68->cop_filegv, D.22185
	movq	(%rax), %rax	# _69->sv_any, D.22177
	movq	56(%rax), %rax	# _70->xgv_gp, D.22179
	movq	(%rax), %rax	# _71->gp_sv, iftmp.924
	jmp	.L1447	#
.L1446:
	.loc 1 4709 0 discriminator 2
	movl	$0, %eax	#, iftmp.924
.L1447:
	.loc 1 4709 0 discriminator 3
	movq	(%rax), %rax	# iftmp.924_4->sv_any, D.22176
	movq	(%rax), %rax	# MEM[(struct XPV *)_74].xpv_pv, iftmp.921
	jmp	.L1448	#
.L1445:
	.loc 1 4709 0 discriminator 2
	movl	$0, %eax	#, iftmp.921
.L1448:
	.loc 1 4709 0 discriminator 3
	movq	%rax, 104(%rdx)	# iftmp.921, _58->xcv_file
	.loc 1 4712 0 is_stmt 1 discriminator 3
	movl	$2, %edi	#,
	call	Perl_pad_tidy	#
	.loc 1 4713 0 discriminator 3
	movq	(%rbx), %r12	# cv_54->sv_any, D.22184
	movq	-72(%rbp), %rax	# block, tmp159
	movq	%rax, %rdi	# tmp159,
	call	Perl_scalarseq	#
	movq	%rax, %rdx	# D.22186,
	movl	$0, %esi	#,
	movl	$207, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, 72(%r12)	# D.22186, _77->xcv_root
	.loc 1 4714 0 discriminator 3
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _81->xcv_root, D.22186
	movq	(%rbx), %rdx	# cv_54->sv_any, D.22184
	movq	72(%rdx), %rdx	# _83->xcv_root, D.22186
	movzbl	37(%rdx), %edx	# _84->op_private, D.22178
	orl	$64, %edx	#, D.22178
	movb	%dl, 37(%rax)	# D.22178, _82->op_private
	.loc 1 4715 0 discriminator 3
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _87->xcv_root, D.22186
	movq	$1, 24(%rax)	#, _88->op_targ
	.loc 1 4716 0 discriminator 3
	movq	(%rbx), %r12	# cv_54->sv_any, D.22184
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _90->xcv_root, D.22186
	movq	(%rax), %rax	# _91->op_next, D.22186
	testq	%rax, %rax	# D.22186
	je	.L1449	#,
	.loc 1 4716 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _93->xcv_root, D.22186
	movq	(%rax), %rax	# _94->op_next, iftmp.927
	jmp	.L1450	#
.L1449:
	.loc 1 4716 0 discriminator 2
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _96->xcv_root, D.22186
	movq	%rax, %rdi	# D.22186,
	call	Perl_linklist	#
.L1450:
	.loc 1 4716 0 discriminator 3
	movq	%rax, 64(%r12)	# iftmp.927, _89->xcv_start
	.loc 1 4717 0 is_stmt 1 discriminator 3
	movq	(%rbx), %rax	# cv_54->sv_any, D.22184
	movq	72(%rax), %rax	# _99->xcv_root, D.22186
	movq	$0, (%rax)	#, _100->op_next
	.loc 1 4718 0 discriminator 3
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.928
	movq	(%rbx), %rdx	# cv_54->sv_any, D.22184
	movq	64(%rdx), %rdx	# _102->xcv_start, D.22186
	movq	%rdx, %rdi	# D.22186,
	call	*%rax	# PL_peepp.928
	.loc 1 4719 0 discriminator 3
	movq	-64(%rbp), %rax	# o, tmp160
	movq	%rax, %rdi	# tmp160,
	call	Perl_op_free	#
	.loc 1 4720 0 discriminator 3
	movl	$-1, PL_copline(%rip)	#, PL_copline
	.loc 1 4721 0 discriminator 3
	movl	PL_savestack_ix(%rip), %eax	# PL_savestack_ix, PL_savestack_ix.929
	cmpl	-52(%rbp), %eax	# floor, PL_savestack_ix.929
	jle	.L1435	#,
	.loc 1 4721 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax	# floor, tmp161
	movl	%eax, %edi	# tmp161,
	call	Perl_leave_scope	#
.L1435:
	.loc 1 4722 0 is_stmt 1
	addq	$64, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE93:
	.size	Perl_newFORM, .-Perl_newFORM
	.globl	Perl_newANONLIST
	.type	Perl_newANONLIST, @function
Perl_newANONLIST:
.LFB94:
	.loc 1 4726 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4727 0
	movq	-8(%rbp), %rax	# o, tmp64
	movq	%rax, %rdx	# tmp64,
	movl	$0, %esi	#,
	movl	$143, %edi	#,
	call	Perl_convert	#
	movq	%rax, %rdi	# D.22189,
	call	Perl_list	#
	movl	$20, %esi	#,
	movq	%rax, %rdi	# D.22189,
	call	Perl_mod	#
	movq	%rax, %rdx	# D.22189,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	.loc 1 4729 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE94:
	.size	Perl_newANONLIST, .-Perl_newANONLIST
	.globl	Perl_newANONHASH
	.type	Perl_newANONHASH, @function
Perl_newANONHASH:
.LFB95:
	.loc 1 4733 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4734 0
	movq	-8(%rbp), %rax	# o, tmp64
	movq	%rax, %rdx	# tmp64,
	movl	$0, %esi	#,
	movl	$144, %edi	#,
	call	Perl_convert	#
	movq	%rax, %rdi	# D.22190,
	call	Perl_list	#
	movl	$20, %esi	#,
	movq	%rax, %rdi	# D.22190,
	call	Perl_mod	#
	movq	%rax, %rdx	# D.22190,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	.loc 1 4736 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE95:
	.size	Perl_newANONHASH, .-Perl_newANONHASH
	.globl	Perl_newANONSUB
	.type	Perl_newANONSUB, @function
Perl_newANONSUB:
.LFB96:
	.loc 1 4740 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# floor, floor
	movq	%rsi, -16(%rbp)	# proto, proto
	movq	%rdx, -24(%rbp)	# block, block
	.loc 1 4741 0
	movq	-24(%rbp), %rdx	# block, tmp61
	movq	-16(%rbp), %rsi	# proto, tmp62
	movl	-4(%rbp), %eax	# floor, tmp63
	movq	%rdx, %rcx	# tmp61,
	movl	$0, %edx	#,
	movl	%eax, %edi	# tmp63,
	call	Perl_newANONATTRSUB	#
	.loc 1 4742 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE96:
	.size	Perl_newANONSUB, .-Perl_newANONSUB
	.globl	Perl_newANONATTRSUB
	.type	Perl_newANONATTRSUB, @function
Perl_newANONATTRSUB:
.LFB97:
	.loc 1 4746 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movl	%edi, -4(%rbp)	# floor, floor
	movq	%rsi, -16(%rbp)	# proto, proto
	movq	%rdx, -24(%rbp)	# attrs, attrs
	movq	%rcx, -32(%rbp)	# block, block
	.loc 1 4749 0
	movq	-32(%rbp), %rsi	# block, tmp63
	movq	-24(%rbp), %rcx	# attrs, tmp64
	movq	-16(%rbp), %rdx	# proto, tmp65
	movl	-4(%rbp), %eax	# floor, tmp66
	movq	%rsi, %r8	# tmp63,
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp66,
	call	Perl_newATTRSUB	#
	.loc 1 4747 0
	movq	%rax, %rdx	# D.22192,
	movl	$0, %esi	#,
	movl	$18, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	# D.22193,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	.loc 1 4750 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	Perl_newANONATTRSUB, .-Perl_newANONATTRSUB
	.section	.rodata
.LC97:
	.string	"oops: oopsAV"
	.text
	.globl	Perl_oopsAV
	.type	Perl_oopsAV, @function
Perl_oopsAV:
.LFB98:
	.loc 1 4754 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4755 0
	movq	-8(%rbp), %rax	# o, tmp79
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22195
	movzwl	%ax, %eax	# D.22195, D.22196
	cmpl	$9, %eax	#, D.22196
	je	.L1462	#,
	cmpl	$15, %eax	#, D.22196
	je	.L1463	#,
	jmp	.L1468	#
.L1462:
	.loc 1 4757 0
	movq	-8(%rbp), %rax	# o, tmp80
	movw	$10, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4758 0
	movq	PL_ppaddr+80(%rip), %rdx	# PL_ppaddr, D.22197
	movq	-8(%rbp), %rax	# o, tmp81
	movq	%rdx, 16(%rax)	# D.22197, o_2(D)->op_ppaddr
	.loc 1 4759 0
	movq	-8(%rbp), %rax	# o, tmp82
	movl	$125, %esi	#,
	movq	%rax, %rdi	# tmp82,
	call	Perl_ref	#
	jmp	.L1464	#
.L1463:
	.loc 1 4762 0
	movq	-8(%rbp), %rax	# o, tmp83
	movw	$125, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4763 0
	movq	PL_ppaddr+1000(%rip), %rdx	# PL_ppaddr, D.22197
	movq	-8(%rbp), %rax	# o, tmp84
	movq	%rdx, 16(%rax)	# D.22197, o_2(D)->op_ppaddr
	.loc 1 4764 0
	movq	-8(%rbp), %rax	# o, tmp85
	movl	$125, %esi	#,
	movq	%rax, %rdi	# tmp85,
	call	Perl_ref	#
	.loc 1 4765 0
	jmp	.L1465	#
.L1468:
	.loc 1 4768 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.930
	movq	80(%rax), %rax	# PL_curcop.930_8->cop_warnings, D.22198
	testq	%rax, %rax	# D.22198
	je	.L1466	#,
	.loc 1 4768 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.931
	movq	80(%rax), %rax	# PL_curcop.931_10->cop_warnings, D.22198
	cmpq	$16, %rax	#, D.22198
	je	.L1466	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.932
	movq	80(%rax), %rax	# PL_curcop.932_12->cop_warnings, D.22198
	cmpq	$32, %rax	#, D.22198
	je	.L1467	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.933
	movq	80(%rax), %rax	# PL_curcop.933_14->cop_warnings, D.22198
	movq	(%rax), %rax	# _15->sv_any, D.22199
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.22200
	addq	$6, %rax	#, D.22200
	movzbl	(%rax), %eax	# *_18, D.22201
	movsbl	%al, %eax	# D.22201, D.22196
	andl	$1, %eax	#, D.22196
	testl	%eax, %eax	# D.22196
	je	.L1467	#,
.L1466:
	.loc 1 4769 0 is_stmt 1
	movl	$.LC97, %esi	#,
	movl	$24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4770 0
	jmp	.L1469	#
.L1467:
.L1469:
	nop
.L1465:
	.loc 1 4772 0
	movq	-8(%rbp), %rax	# o, D.22194
.L1464:
	.loc 1 4773 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE98:
	.size	Perl_oopsAV, .-Perl_oopsAV
	.section	.rodata
.LC98:
	.string	"oops: oopsHV"
	.text
	.globl	Perl_oopsHV
	.type	Perl_oopsHV, @function
Perl_oopsHV:
.LFB99:
	.loc 1 4777 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4778 0
	movq	-8(%rbp), %rax	# o, tmp79
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22204
	movzwl	%ax, %eax	# D.22204, D.22205
	cmpl	$15, %eax	#, D.22205
	je	.L1472	#,
	cmpl	$15, %eax	#, D.22205
	jg	.L1473	#,
	subl	$9, %eax	#, tmp80
	cmpl	$1, %eax	#, tmp80
	ja	.L1471	#,
	jmp	.L1479	#
.L1473:
	cmpl	$125, %eax	#, D.22205
	je	.L1472	#,
	jmp	.L1471	#
.L1479:
	.loc 1 4781 0
	movq	-8(%rbp), %rax	# o, tmp81
	movw	$11, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4782 0
	movq	PL_ppaddr+88(%rip), %rdx	# PL_ppaddr, D.22206
	movq	-8(%rbp), %rax	# o, tmp82
	movq	%rdx, 16(%rax)	# D.22206, o_2(D)->op_ppaddr
	.loc 1 4783 0
	movq	-8(%rbp), %rax	# o, tmp83
	movl	$134, %esi	#,
	movq	%rax, %rdi	# tmp83,
	call	Perl_ref	#
	jmp	.L1475	#
.L1472:
	.loc 1 4787 0
	movq	-8(%rbp), %rax	# o, tmp84
	movw	$134, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4788 0
	movq	PL_ppaddr+1072(%rip), %rdx	# PL_ppaddr, D.22206
	movq	-8(%rbp), %rax	# o, tmp85
	movq	%rdx, 16(%rax)	# D.22206, o_2(D)->op_ppaddr
	.loc 1 4789 0
	movq	-8(%rbp), %rax	# o, tmp86
	movl	$134, %esi	#,
	movq	%rax, %rdi	# tmp86,
	call	Perl_ref	#
	.loc 1 4790 0
	jmp	.L1476	#
.L1471:
	.loc 1 4793 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.934
	movq	80(%rax), %rax	# PL_curcop.934_8->cop_warnings, D.22207
	testq	%rax, %rax	# D.22207
	je	.L1477	#,
	.loc 1 4793 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.935
	movq	80(%rax), %rax	# PL_curcop.935_10->cop_warnings, D.22207
	cmpq	$16, %rax	#, D.22207
	je	.L1477	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.936
	movq	80(%rax), %rax	# PL_curcop.936_12->cop_warnings, D.22207
	cmpq	$32, %rax	#, D.22207
	je	.L1478	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.937
	movq	80(%rax), %rax	# PL_curcop.937_14->cop_warnings, D.22207
	movq	(%rax), %rax	# _15->sv_any, D.22208
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.22209
	addq	$6, %rax	#, D.22209
	movzbl	(%rax), %eax	# *_18, D.22210
	movsbl	%al, %eax	# D.22210, D.22205
	andl	$1, %eax	#, D.22205
	testl	%eax, %eax	# D.22205
	je	.L1478	#,
.L1477:
	.loc 1 4794 0 is_stmt 1
	movl	$.LC98, %esi	#,
	movl	$24, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 4795 0
	jmp	.L1480	#
.L1478:
.L1480:
	nop
.L1476:
	.loc 1 4797 0
	movq	-8(%rbp), %rax	# o, D.22203
.L1475:
	.loc 1 4798 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE99:
	.size	Perl_oopsHV, .-Perl_oopsHV
	.section	.rodata
	.align 8
.LC99:
	.string	"Using an array as a reference is deprecated"
	.text
	.globl	Perl_newAVREF
	.type	Perl_newAVREF, @function
Perl_newAVREF:
.LFB100:
	.loc 1 4802 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4803 0
	movq	-8(%rbp), %rax	# o, tmp84
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22214
	cmpw	$12, %ax	#, D.22214
	jne	.L1482	#,
	.loc 1 4804 0
	movq	-8(%rbp), %rax	# o, tmp85
	movw	$10, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4805 0
	movq	PL_ppaddr+80(%rip), %rdx	# PL_ppaddr, D.22215
	movq	-8(%rbp), %rax	# o, tmp86
	movq	%rdx, 16(%rax)	# D.22215, o_2(D)->op_ppaddr
	.loc 1 4806 0
	movq	-8(%rbp), %rax	# o, D.22213
	jmp	.L1483	#
.L1482:
	.loc 1 4808 0
	movq	-8(%rbp), %rax	# o, tmp87
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22214
	cmpw	$125, %ax	#, D.22214
	je	.L1484	#,
	.loc 1 4808 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# o, tmp88
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22214
	cmpw	$10, %ax	#, D.22214
	jne	.L1485	#,
.L1484:
	.loc 1 4809 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.938
	movq	80(%rax), %rax	# PL_curcop.938_8->cop_warnings, D.22216
	testq	%rax, %rax	# D.22216
	je	.L1486	#,
	.loc 1 4809 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.939
	movq	80(%rax), %rax	# PL_curcop.939_10->cop_warnings, D.22216
	cmpq	$32, %rax	#, D.22216
	je	.L1486	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.940
	movq	80(%rax), %rax	# PL_curcop.940_12->cop_warnings, D.22216
	cmpq	$16, %rax	#, D.22216
	je	.L1487	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.941
	movq	80(%rax), %rax	# PL_curcop.941_14->cop_warnings, D.22216
	movq	(%rax), %rax	# _15->sv_any, D.22217
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.22218
	movzbl	(%rax), %eax	# *_17, D.22219
	movsbl	%al, %eax	# D.22219, D.22220
	andl	$16, %eax	#, D.22220
	testl	%eax, %eax	# D.22220
	jne	.L1487	#,
.L1486:
	.loc 1 4809 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.942
	movq	80(%rax), %rax	# PL_curcop.942_21->cop_warnings, D.22216
	testq	%rax, %rax	# D.22216
	jne	.L1485	#,
	.loc 1 4809 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.943
	movzbl	%al, %eax	# PL_dowarn.943, D.22220
	andl	$1, %eax	#, D.22220
	testl	%eax, %eax	# D.22220
	je	.L1485	#,
.L1487:
	.loc 1 4810 0 is_stmt 1
	movl	$.LC99, %esi	#,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1485:
	.loc 1 4813 0
	movq	-8(%rbp), %rax	# o, tmp89
	movq	%rax, %rdi	# tmp89,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.22213,
	movl	$0, %esi	#,
	movl	$125, %edi	#,
	call	Perl_newUNOP	#
.L1483:
	.loc 1 4814 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE100:
	.size	Perl_newAVREF, .-Perl_newAVREF
	.globl	Perl_newGVREF
	.type	Perl_newGVREF, @function
Perl_newGVREF:
.LFB101:
	.loc 1 4818 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movl	%edi, -4(%rbp)	# type, type
	movq	%rsi, -16(%rbp)	# o, o
	.loc 1 4819 0
	cmpl	$154, -4(%rbp)	#, type
	je	.L1489	#,
	.loc 1 4819 0 is_stmt 0 discriminator 1
	cmpl	$152, -4(%rbp)	#, type
	je	.L1489	#,
	cmpl	$150, -4(%rbp)	#, type
	jne	.L1490	#,
.L1489:
	.loc 1 4820 0 is_stmt 1
	movq	-16(%rbp), %rax	# o, tmp62
	movq	%rax, %rdx	# tmp62,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	jmp	.L1491	#
.L1490:
	.loc 1 4821 0
	movq	-16(%rbp), %rax	# o, tmp63
	movq	%rax, %rdx	# tmp63,
	movl	$16, %esi	#,
	movl	$14, %edi	#,
	call	Perl_newUNOP	#
	movl	-4(%rbp), %edx	# type, tmp64
	movl	%edx, %esi	# tmp64,
	movq	%rax, %rdi	# D.22222,
	call	Perl_ref	#
.L1491:
	.loc 1 4822 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE101:
	.size	Perl_newGVREF, .-Perl_newGVREF
	.section	.rodata
	.align 8
.LC100:
	.string	"Using a hash as a reference is deprecated"
	.text
	.globl	Perl_newHVREF
	.type	Perl_newHVREF, @function
Perl_newHVREF:
.LFB102:
	.loc 1 4826 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4827 0
	movq	-8(%rbp), %rax	# o, tmp84
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22224
	cmpw	$12, %ax	#, D.22224
	jne	.L1493	#,
	.loc 1 4828 0
	movq	-8(%rbp), %rax	# o, tmp85
	movw	$11, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4829 0
	movq	PL_ppaddr+88(%rip), %rdx	# PL_ppaddr, D.22225
	movq	-8(%rbp), %rax	# o, tmp86
	movq	%rdx, 16(%rax)	# D.22225, o_2(D)->op_ppaddr
	.loc 1 4830 0
	movq	-8(%rbp), %rax	# o, D.22223
	jmp	.L1494	#
.L1493:
	.loc 1 4832 0
	movq	-8(%rbp), %rax	# o, tmp87
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22224
	cmpw	$134, %ax	#, D.22224
	je	.L1495	#,
	.loc 1 4832 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# o, tmp88
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22224
	cmpw	$11, %ax	#, D.22224
	jne	.L1496	#,
.L1495:
	.loc 1 4833 0 is_stmt 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.944
	movq	80(%rax), %rax	# PL_curcop.944_8->cop_warnings, D.22226
	testq	%rax, %rax	# D.22226
	je	.L1497	#,
	.loc 1 4833 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.945
	movq	80(%rax), %rax	# PL_curcop.945_10->cop_warnings, D.22226
	cmpq	$32, %rax	#, D.22226
	je	.L1497	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.946
	movq	80(%rax), %rax	# PL_curcop.946_12->cop_warnings, D.22226
	cmpq	$16, %rax	#, D.22226
	je	.L1498	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.947
	movq	80(%rax), %rax	# PL_curcop.947_14->cop_warnings, D.22226
	movq	(%rax), %rax	# _15->sv_any, D.22227
	movq	(%rax), %rax	# MEM[(struct XPV *)_16].xpv_pv, D.22228
	movzbl	(%rax), %eax	# *_17, D.22229
	movsbl	%al, %eax	# D.22229, D.22230
	andl	$16, %eax	#, D.22230
	testl	%eax, %eax	# D.22230
	jne	.L1498	#,
.L1497:
	.loc 1 4833 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.948
	movq	80(%rax), %rax	# PL_curcop.948_21->cop_warnings, D.22226
	testq	%rax, %rax	# D.22226
	jne	.L1496	#,
	.loc 1 4833 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.949
	movzbl	%al, %eax	# PL_dowarn.949, D.22230
	andl	$1, %eax	#, D.22230
	testl	%eax, %eax	# D.22230
	je	.L1496	#,
.L1498:
	.loc 1 4834 0 is_stmt 1
	movl	$.LC100, %esi	#,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1496:
	.loc 1 4837 0
	movq	-8(%rbp), %rax	# o, tmp89
	movq	%rax, %rdi	# tmp89,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.22223,
	movl	$0, %esi	#,
	movl	$134, %edi	#,
	call	Perl_newUNOP	#
.L1494:
	.loc 1 4838 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE102:
	.size	Perl_newHVREF, .-Perl_newHVREF
	.section	.rodata
.LC101:
	.string	"NOT IMPL LINE %d"
	.text
	.globl	Perl_oopsCV
	.type	Perl_oopsCV, @function
Perl_oopsCV:
.LFB103:
	.loc 1 4842 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4843 0
	movl	$4843, %esi	#,
	movl	$.LC101, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	.loc 1 4845 0
	movq	-8(%rbp), %rax	# o, D.22232
	.loc 1 4846 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE103:
	.size	Perl_oopsCV, .-Perl_oopsCV
	.globl	Perl_newCVREF
	.type	Perl_newCVREF, @function
Perl_newCVREF:
.LFB104:
	.loc 1 4850 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movl	%edi, -4(%rbp)	# flags, flags
	movq	%rsi, -16(%rbp)	# o, o
	.loc 1 4851 0
	movq	-16(%rbp), %rax	# o, tmp62
	movq	%rax, %rdi	# tmp62,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22234
	movl	-4(%rbp), %eax	# flags, tmp63
	movl	%eax, %esi	# tmp63,
	movl	$17, %edi	#,
	call	Perl_newUNOP	#
	.loc 1 4852 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE104:
	.size	Perl_newCVREF, .-Perl_newCVREF
	.globl	Perl_newSVREF
	.type	Perl_newSVREF, @function
Perl_newSVREF:
.LFB105:
	.loc 1 4856 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4857 0
	movq	-8(%rbp), %rax	# o, tmp70
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22236
	cmpw	$12, %ax	#, D.22236
	jne	.L1504	#,
	.loc 1 4858 0
	movq	-8(%rbp), %rax	# o, tmp71
	movw	$9, 32(%rax)	#, o_2(D)->op_type
	.loc 1 4859 0
	movq	PL_ppaddr+72(%rip), %rdx	# PL_ppaddr, D.22237
	movq	-8(%rbp), %rax	# o, tmp72
	movq	%rdx, 16(%rax)	# D.22237, o_2(D)->op_ppaddr
	.loc 1 4860 0
	movq	-8(%rbp), %rax	# o, D.22235
	jmp	.L1505	#
.L1504:
	.loc 1 4862 0
	movq	-8(%rbp), %rax	# o, tmp73
	movzwl	32(%rax), %eax	# o_2(D)->op_type, D.22236
	cmpw	$348, %ax	#, D.22236
	jne	.L1506	#,
	.loc 1 4862 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# o, tmp74
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22238
	movzbl	%al, %eax	# D.22238, D.22239
	andl	$64, %eax	#, D.22239
	testl	%eax, %eax	# D.22239
	jne	.L1506	#,
	.loc 1 4863 0 is_stmt 1
	movq	-8(%rbp), %rax	# o, tmp75
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22238
	orl	$64, %eax	#, D.22238
	movl	%eax, %edx	# D.22238, D.22238
	movq	-8(%rbp), %rax	# o, tmp76
	movb	%dl, 36(%rax)	# D.22238, o_2(D)->op_flags
	.loc 1 4864 0
	movq	-8(%rbp), %rax	# o, D.22235
	jmp	.L1505	#
.L1506:
	.loc 1 4866 0
	movq	-8(%rbp), %rax	# o, tmp77
	movq	%rax, %rdi	# tmp77,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.22235,
	movl	$0, %esi	#,
	movl	$15, %edi	#,
	call	Perl_newUNOP	#
.L1505:
	.loc 1 4867 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE105:
	.size	Perl_newSVREF, .-Perl_newSVREF
	.globl	Perl_ck_anoncode
	.type	Perl_ck_anoncode, @function
Perl_ck_anoncode:
.LFB106:
	.loc 1 4874 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4875 0
	movq	-8(%rbp), %rax	# o, tmp65
	movzwl	32(%rax), %eax	# o_1(D)->op_type, D.22240
	movzwl	%ax, %edx	# D.22240, D.22241
	movq	-8(%rbp), %rax	# o, tmp66
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_1(D)].op_sv, D.22242
	movl	%edx, %esi	# D.22241,
	movq	%rax, %rdi	# D.22242,
	call	Perl_pad_add_anon	#
	movq	-8(%rbp), %rdx	# o, tmp67
	movq	%rax, 24(%rdx)	# D.22243, MEM[(struct SVOP *)o_1(D)].op_targ
	.loc 1 4876 0
	movq	-8(%rbp), %rax	# o, tmp68
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)o_1(D)].op_sv
	.loc 1 4877 0
	movq	-8(%rbp), %rax	# o, D.22244
	.loc 1 4878 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE106:
	.size	Perl_ck_anoncode, .-Perl_ck_anoncode
	.section	.rodata
	.align 8
.LC102:
	.string	"Possible precedence problem on bitwise %c operator"
	.text
	.globl	Perl_ck_bitop
	.type	Perl_ck_bitop, @function
Perl_ck_bitop:
.LFB107:
	.loc 1 4882 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 4891 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.950
	movl	%eax, %edx	# PL_hints.950, D.22245
	movq	-24(%rbp), %rax	# o, tmp126
	movb	%dl, 37(%rax)	# D.22245, o_5(D)->op_private
	.loc 1 4892 0
	movq	-24(%rbp), %rax	# o, tmp127
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22245
	movzbl	%al, %eax	# D.22245, D.22246
	andl	$64, %eax	#, D.22246
	testl	%eax, %eax	# D.22246
	jne	.L1510	#,
	.loc 1 4893 0
	movq	-24(%rbp), %rax	# o, tmp128
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22247
	cmpw	$93, %ax	#, D.22247
	je	.L1511	#,
	.loc 1 4894 0
	movq	-24(%rbp), %rax	# o, tmp129
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22247
	cmpw	$91, %ax	#, D.22247
	je	.L1511	#,
	.loc 1 4895 0
	movq	-24(%rbp), %rax	# o, tmp130
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22247
	cmpw	$92, %ax	#, D.22247
	jne	.L1510	#,
.L1511:
.LBB80:
	.loc 1 4897 0
	movq	-24(%rbp), %rax	# o, tmp131
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_5(D)].op_first, tmp132
	movq	%rax, -16(%rbp)	# tmp132, left
	.loc 1 4898 0
	movq	-16(%rbp), %rax	# left, tmp133
	movq	8(%rax), %rax	# left_12->op_sibling, tmp134
	movq	%rax, -8(%rbp)	# tmp134, right
	.loc 1 4899 0
	movq	-16(%rbp), %rax	# left, tmp135
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$70, %ax	#, D.22247
	je	.L1512	#,
	.loc 1 4899 0 is_stmt 0 discriminator 2
	movq	-16(%rbp), %rax	# left, tmp136
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$71, %ax	#, D.22247
	je	.L1512	#,
	.loc 1 4899 0 discriminator 1
	movq	-16(%rbp), %rax	# left, tmp137
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$72, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp138
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$73, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp139
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$74, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp140
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$75, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp141
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$76, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp142
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$77, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp143
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$78, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp144
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$79, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp145
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$80, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp146
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$81, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp147
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$82, %ax	#, D.22247
	je	.L1512	#,
	movq	-16(%rbp), %rax	# left, tmp148
	movzwl	32(%rax), %eax	# left_12->op_type, D.22247
	cmpw	$83, %ax	#, D.22247
	jne	.L1513	#,
.L1512:
	.loc 1 4900 0 is_stmt 1 discriminator 1
	movq	-16(%rbp), %rax	# left, tmp149
	movzbl	36(%rax), %eax	# left_12->op_flags, D.22245
	movzbl	%al, %eax	# D.22245, D.22246
	andl	$8, %eax	#, D.22246
	.loc 1 4899 0 discriminator 1
	testl	%eax, %eax	# D.22246
	je	.L1514	#,
.L1513:
	.loc 1 4901 0
	movq	-8(%rbp), %rax	# right, tmp150
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	.loc 1 4900 0
	cmpw	$70, %ax	#, D.22247
	je	.L1515	#,
	.loc 1 4901 0
	movq	-8(%rbp), %rax	# right, tmp151
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$71, %ax	#, D.22247
	je	.L1515	#,
	.loc 1 4901 0 is_stmt 0 discriminator 2
	movq	-8(%rbp), %rax	# right, tmp152
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$72, %ax	#, D.22247
	je	.L1515	#,
	.loc 1 4901 0 discriminator 1
	movq	-8(%rbp), %rax	# right, tmp153
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$73, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp154
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$74, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp155
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$75, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp156
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$76, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp157
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$77, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp158
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$78, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp159
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$79, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp160
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$80, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp161
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$81, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp162
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$82, %ax	#, D.22247
	je	.L1515	#,
	movq	-8(%rbp), %rax	# right, tmp163
	movzwl	32(%rax), %eax	# right_13->op_type, D.22247
	cmpw	$83, %ax	#, D.22247
	jne	.L1510	#,
.L1515:
	.loc 1 4902 0 is_stmt 1 discriminator 1
	movq	-8(%rbp), %rax	# right, tmp164
	movzbl	36(%rax), %eax	# right_13->op_flags, D.22245
	movzbl	%al, %eax	# D.22245, D.22246
	andl	$8, %eax	#, D.22246
	.loc 1 4901 0 discriminator 1
	testl	%eax, %eax	# D.22246
	jne	.L1510	#,
.L1514:
	.loc 1 4903 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.951
	movq	80(%rax), %rax	# PL_curcop.951_48->cop_warnings, D.22248
	testq	%rax, %rax	# D.22248
	je	.L1516	#,
	.loc 1 4903 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.952
	movq	80(%rax), %rax	# PL_curcop.952_50->cop_warnings, D.22248
	cmpq	$32, %rax	#, D.22248
	je	.L1516	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.953
	movq	80(%rax), %rax	# PL_curcop.953_52->cop_warnings, D.22248
	cmpq	$16, %rax	#, D.22248
	je	.L1517	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.954
	movq	80(%rax), %rax	# PL_curcop.954_54->cop_warnings, D.22248
	movq	(%rax), %rax	# _55->sv_any, D.22249
	movq	(%rax), %rax	# MEM[(struct XPV *)_56].xpv_pv, D.22250
	addq	$8, %rax	#, D.22250
	movzbl	(%rax), %eax	# *_58, D.22251
	movsbl	%al, %eax	# D.22251, D.22246
	andl	$4, %eax	#, D.22246
	testl	%eax, %eax	# D.22246
	jne	.L1517	#,
.L1516:
	.loc 1 4903 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.955
	movq	80(%rax), %rax	# PL_curcop.955_62->cop_warnings, D.22248
	testq	%rax, %rax	# D.22248
	jne	.L1510	#,
	.loc 1 4903 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.956
	movzbl	%al, %eax	# PL_dowarn.956, D.22246
	andl	$1, %eax	#, D.22246
	testl	%eax, %eax	# D.22246
	je	.L1510	#,
.L1517:
	.loc 1 4906 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp165
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22247
	.loc 1 4904 0
	cmpw	$93, %ax	#, D.22247
	je	.L1518	#,
	.loc 1 4907 0
	movq	-24(%rbp), %rax	# o, tmp166
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22247
	cmpw	$91, %ax	#, D.22247
	jne	.L1519	#,
	.loc 1 4907 0 is_stmt 0 discriminator 1
	movl	$38, %eax	#, iftmp.958
	jmp	.L1521	#
.L1519:
	.loc 1 4907 0 discriminator 2
	movl	$94, %eax	#, iftmp.958
	jmp	.L1521	#
.L1518:
	.loc 1 4904 0 is_stmt 1 discriminator 1
	movl	$124, %eax	#, iftmp.957
.L1521:
	.loc 1 4904 0 is_stmt 0 discriminator 2
	movl	%eax, %edx	# iftmp.957,
	movl	$.LC102, %esi	#,
	movl	$33, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1510:
.LBE80:
	.loc 1 4910 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.22252
	.loc 1 4911 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE107:
	.size	Perl_ck_bitop, .-Perl_ck_bitop
	.globl	Perl_ck_concat
	.type	Perl_ck_concat, @function
Perl_ck_concat:
.LFB108:
	.loc 1 4915 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 4916 0
	movq	-24(%rbp), %rax	# o, tmp71
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_1(D)].op_first, tmp72
	movq	%rax, -8(%rbp)	# tmp72, kid
	.loc 1 4917 0
	movq	-8(%rbp), %rax	# kid, tmp73
	movzwl	32(%rax), %eax	# kid_2->op_type, D.22254
	cmpw	$66, %ax	#, D.22254
	jne	.L1524	#,
	.loc 1 4917 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp74
	movzbl	37(%rax), %eax	# kid_2->op_private, D.22255
	movzbl	%al, %eax	# D.22255, D.22256
	andl	$16, %eax	#, D.22256
	testl	%eax, %eax	# D.22256
	jne	.L1524	#,
	.loc 1 4918 0 is_stmt 1 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp75
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_2].op_first, D.22257
	movzbl	36(%rax), %eax	# _7->op_flags, D.22255
	movzbl	%al, %eax	# D.22255, D.22256
	andl	$32, %eax	#, D.22256
	.loc 1 4917 0 discriminator 1
	testl	%eax, %eax	# D.22256
	jne	.L1524	#,
	.loc 1 4919 0
	movq	-24(%rbp), %rax	# o, tmp76
	movzbl	36(%rax), %eax	# o_1(D)->op_flags, D.22255
	orl	$64, %eax	#, D.22255
	movl	%eax, %edx	# D.22255, D.22255
	movq	-24(%rbp), %rax	# o, tmp77
	movb	%dl, 36(%rax)	# D.22255, o_1(D)->op_flags
.L1524:
	.loc 1 4920 0
	movq	-24(%rbp), %rax	# o, D.22257
	.loc 1 4921 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE108:
	.size	Perl_ck_concat, .-Perl_ck_concat
	.globl	Perl_ck_spair
	.type	Perl_ck_spair, @function
Perl_ck_spair:
.LFB109:
	.loc 1 4925 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# o, o
	.loc 1 4926 0
	movq	-56(%rbp), %rax	# o, tmp82
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.22259
	movzbl	%al, %eax	# D.22259, D.22260
	andl	$4, %eax	#, D.22260
	testl	%eax, %eax	# D.22260
	je	.L1527	#,
.LBB81:
	.loc 1 4929 0
	movq	-56(%rbp), %rax	# o, tmp83
	movzwl	32(%rax), %eax	# o_3(D)->op_type, tmp84
	movw	%ax, -34(%rbp)	# tmp84, type
	.loc 1 4930 0
	movzwl	-34(%rbp), %ebx	# type, D.22260
	movq	-56(%rbp), %rax	# o, tmp85
	movq	%rax, %rdi	# tmp85,
	call	Perl_ck_fun	#
	movl	%ebx, %esi	# D.22260,
	movq	%rax, %rdi	# D.22258,
	call	S_modkids	#
	movq	%rax, -56(%rbp)	# tmp86, o
	.loc 1 4931 0
	movq	-56(%rbp), %rax	# o, tmp87
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_10].op_first, tmp88
	movq	%rax, -32(%rbp)	# tmp88, kid
	.loc 1 4932 0
	movq	-32(%rbp), %rax	# kid, tmp89
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_11].op_first, D.22258
	movq	8(%rax), %rax	# _12->op_sibling, tmp90
	movq	%rax, -24(%rbp)	# tmp90, newop
	.loc 1 4933 0
	cmpq	$0, -24(%rbp)	#, newop
	je	.L1528	#,
	.loc 1 4934 0 discriminator 1
	movq	-24(%rbp), %rax	# newop, tmp91
	movq	8(%rax), %rax	# newop_13->op_sibling, D.22258
	.loc 1 4933 0 discriminator 1
	testq	%rax, %rax	# D.22258
	jne	.L1529	#,
	.loc 1 4935 0
	movq	-24(%rbp), %rax	# newop, tmp92
	movzwl	32(%rax), %eax	# newop_13->op_type, D.22261
	movzwl	%ax, %eax	# D.22261, D.22260
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.22262
	andl	$4, %eax	#, D.22262
	.loc 1 4934 0
	testl	%eax, %eax	# D.22262
	je	.L1529	#,
	.loc 1 4936 0
	movq	-24(%rbp), %rax	# newop, tmp94
	movzwl	32(%rax), %eax	# newop_13->op_type, D.22261
	.loc 1 4935 0
	cmpw	$10, %ax	#, D.22261
	je	.L1529	#,
	.loc 1 4936 0
	movq	-24(%rbp), %rax	# newop, tmp95
	movzwl	32(%rax), %eax	# newop_13->op_type, D.22261
	cmpw	$11, %ax	#, D.22261
	je	.L1529	#,
	.loc 1 4937 0 discriminator 1
	movq	-24(%rbp), %rax	# newop, tmp96
	movzwl	32(%rax), %eax	# newop_13->op_type, D.22261
	.loc 1 4936 0 discriminator 1
	cmpw	$125, %ax	#, D.22261
	je	.L1529	#,
	.loc 1 4937 0
	movq	-24(%rbp), %rax	# newop, tmp97
	movzwl	32(%rax), %eax	# newop_13->op_type, D.22261
	cmpw	$134, %ax	#, D.22261
	jne	.L1528	#,
.L1529:
	.loc 1 4939 0
	movq	-56(%rbp), %rax	# o, D.22258
	jmp	.L1530	#
.L1528:
	.loc 1 4941 0
	movq	-32(%rbp), %rax	# kid, tmp98
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_11].op_first, D.22258
	movq	%rax, %rdi	# D.22258,
	call	Perl_op_free	#
	.loc 1 4942 0
	movq	-32(%rbp), %rax	# kid, tmp99
	movq	-24(%rbp), %rdx	# newop, tmp100
	movq	%rdx, 40(%rax)	# tmp100, MEM[(struct UNOP *)kid_11].op_first
.L1527:
.LBE81:
	.loc 1 4944 0
	movq	-56(%rbp), %rax	# o, tmp101
	movzwl	32(%rax), %eax	# o_1->op_type, D.22261
	leal	1(%rax), %edx	#, D.22261
	movq	-56(%rbp), %rax	# o, tmp102
	movw	%dx, 32(%rax)	# D.22261, o_1->op_type
	movq	-56(%rbp), %rax	# o, tmp103
	movzwl	32(%rax), %eax	# o_1->op_type, D.22261
	movzwl	%ax, %eax	# D.22261, D.22260
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.22263
	movq	-56(%rbp), %rax	# o, tmp105
	movq	%rdx, 16(%rax)	# D.22263, o_1->op_ppaddr
	.loc 1 4945 0
	movq	-56(%rbp), %rax	# o, tmp106
	movq	%rax, %rdi	# tmp106,
	call	Perl_ck_fun	#
.L1530:
	.loc 1 4946 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE109:
	.size	Perl_ck_spair, .-Perl_ck_spair
	.section	.rodata
	.align 8
.LC103:
	.string	"%s argument is not a HASH or ARRAY element or slice"
	.text
	.globl	Perl_ck_delete
	.type	Perl_ck_delete, @function
Perl_ck_delete:
.LFB110:
	.loc 1 4950 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 4951 0
	movq	-24(%rbp), %rax	# o, tmp76
	movq	%rax, %rdi	# tmp76,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp77, o
	.loc 1 4952 0
	movq	-24(%rbp), %rax	# o, tmp78
	movb	$0, 37(%rax)	#, o_3->op_private
	.loc 1 4953 0
	movq	-24(%rbp), %rax	# o, tmp79
	movzbl	36(%rax), %eax	# o_3->op_flags, D.22264
	movzbl	%al, %eax	# D.22264, D.22265
	andl	$4, %eax	#, D.22265
	testl	%eax, %eax	# D.22265
	je	.L1532	#,
.LBB82:
	.loc 1 4954 0
	movq	-24(%rbp), %rax	# o, tmp80
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_3].op_first, tmp81
	movq	%rax, -8(%rbp)	# tmp81, kid
	.loc 1 4955 0
	movq	-8(%rbp), %rax	# kid, tmp82
	movzwl	32(%rax), %eax	# kid_7->op_type, D.22266
	movzwl	%ax, %eax	# D.22266, D.22265
	cmpl	$128, %eax	#, D.22265
	je	.L1534	#,
	cmpl	$128, %eax	#, D.22265
	jg	.L1535	#,
	cmpl	$127, %eax	#, D.22265
	je	.L1536	#,
	jmp	.L1533	#
.L1535:
	cmpl	$135, %eax	#, D.22265
	je	.L1543	#,
	cmpl	$136, %eax	#, D.22265
	je	.L1538	#,
	jmp	.L1533	#
.L1534:
	.loc 1 4957 0
	movq	-24(%rbp), %rax	# o, tmp83
	movzbl	36(%rax), %eax	# o_3->op_flags, D.22264
	orl	$-128, %eax	#, D.22264
	movl	%eax, %edx	# D.22264, D.22264
	movq	-24(%rbp), %rax	# o, tmp84
	movb	%dl, 36(%rax)	# D.22264, o_3->op_flags
.L1538:
	.loc 1 4960 0
	movq	-24(%rbp), %rax	# o, tmp85
	movzbl	37(%rax), %eax	# o_3->op_private, D.22264
	orl	$64, %eax	#, D.22264
	movl	%eax, %edx	# D.22264, D.22264
	movq	-24(%rbp), %rax	# o, tmp86
	movb	%dl, 37(%rax)	# D.22264, o_3->op_private
	.loc 1 4961 0
	jmp	.L1539	#
.L1536:
	.loc 1 4963 0
	movq	-24(%rbp), %rax	# o, tmp87
	movzbl	36(%rax), %eax	# o_3->op_flags, D.22264
	orl	$-128, %eax	#, D.22264
	movl	%eax, %edx	# D.22264, D.22264
	movq	-24(%rbp), %rax	# o, tmp88
	movb	%dl, 36(%rax)	# D.22264, o_3->op_flags
	.loc 1 4966 0
	jmp	.L1543	#
.L1533:
	.loc 1 4969 0
	movq	-24(%rbp), %rax	# o, tmp89
	movzwl	32(%rax), %eax	# o_3->op_type, D.22266
	.loc 1 4968 0
	cmpw	$351, %ax	#, D.22266
	jne	.L1540	#,
	.loc 1 4968 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp90
	movq	%rax, %rdi	# tmp90,
	call	Perl_custom_op_desc	#
	jmp	.L1541	#
.L1540:
	.loc 1 4969 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# o, tmp91
	movzwl	32(%rax), %eax	# o_3->op_type, D.22266
	movzwl	%ax, %eax	# D.22266, D.22265
	.loc 1 4968 0 discriminator 2
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.959
.L1541:
	.loc 1 4968 0 is_stmt 0 discriminator 3
	movq	%rax, %rsi	# iftmp.959,
	movl	$.LC103, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1539	#
.L1543:
	.loc 1 4966 0 is_stmt 1
	nop
.L1539:
	.loc 1 4971 0
	movq	-8(%rbp), %rax	# kid, tmp93
	movq	%rax, %rdi	# tmp93,
	call	Perl_op_null	#
.L1532:
.LBE82:
	.loc 1 4973 0
	movq	-24(%rbp), %rax	# o, D.22267
	.loc 1 4974 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE110:
	.size	Perl_ck_delete, .-Perl_ck_delete
	.globl	Perl_ck_die
	.type	Perl_ck_die, @function
Perl_ck_die:
.LFB111:
	.loc 1 4978 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 4982 0
	movq	-8(%rbp), %rax	# o, tmp61
	movq	%rax, %rdi	# tmp61,
	call	Perl_ck_fun	#
	.loc 1 4983 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE111:
	.size	Perl_ck_die, .-Perl_ck_die
	.globl	Perl_ck_eof
	.type	Perl_ck_eof, @function
Perl_ck_eof:
.LFB112:
	.loc 1 4987 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 4988 0
	movq	-24(%rbp), %rax	# o, tmp69
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.22272
	movzwl	%ax, %eax	# D.22272, tmp70
	movl	%eax, -4(%rbp)	# tmp70, type
	.loc 1 4990 0
	movq	-24(%rbp), %rax	# o, tmp71
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.22273
	movzbl	%al, %eax	# D.22273, D.22274
	andl	$4, %eax	#, D.22274
	testl	%eax, %eax	# D.22274
	je	.L1547	#,
	.loc 1 4991 0
	movq	-24(%rbp), %rax	# o, tmp72
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_3(D)].op_first, D.22271
	movzwl	32(%rax), %eax	# _9->op_type, D.22272
	cmpw	$1, %ax	#, D.22272
	jne	.L1548	#,
	.loc 1 4992 0
	movq	-24(%rbp), %rax	# o, tmp73
	movq	%rax, %rdi	# tmp73,
	call	Perl_op_free	#
	.loc 1 4993 0
	movq	PL_argvgv(%rip), %rax	# PL_argvgv, PL_argvgv.960
	movq	%rax, %rdx	# PL_argvgv.960,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	#, D.22271
	movl	-4(%rbp), %eax	# type, tmp74
	movl	$128, %esi	#,
	movl	%eax, %edi	# tmp74,
	call	Perl_newUNOP	#
	movq	%rax, -24(%rbp)	# tmp75, o
.L1548:
	.loc 1 4995 0
	movq	-24(%rbp), %rax	# o, tmp76
	movq	%rax, %rdi	# tmp76,
	call	Perl_ck_fun	#
	jmp	.L1549	#
.L1547:
	.loc 1 4997 0
	movq	-24(%rbp), %rax	# o, D.22271
.L1549:
	.loc 1 4998 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE112:
	.size	Perl_ck_eof, .-Perl_ck_eof
	.globl	Perl_ck_eval
	.type	Perl_ck_eval, @function
Perl_ck_eval:
.LFB113:
	.loc 1 5002 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5003 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.961
	orb	$1, %ah	#, PL_hints.962
	movl	%eax, PL_hints(%rip)	# PL_hints.962, PL_hints
	.loc 1 5004 0
	movq	-24(%rbp), %rax	# o, tmp75
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22276
	movzbl	%al, %eax	# D.22276, D.22277
	andl	$4, %eax	#, D.22277
	testl	%eax, %eax	# D.22277
	je	.L1551	#,
.LBB83:
	.loc 1 5005 0
	movq	-24(%rbp), %rax	# o, tmp76
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_5(D)].op_first, tmp77
	movq	%rax, -16(%rbp)	# tmp77, kid
	.loc 1 5007 0
	cmpq	$0, -16(%rbp)	#, kid
	jne	.L1552	#,
	.loc 1 5008 0
	movq	-24(%rbp), %rax	# o, tmp78
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22276
	andl	$-5, %eax	#, D.22276
	movl	%eax, %edx	# D.22276, D.22276
	movq	-24(%rbp), %rax	# o, tmp79
	movb	%dl, 36(%rax)	# D.22276, o_5(D)->op_flags
	.loc 1 5009 0
	movq	-24(%rbp), %rax	# o, tmp80
	movq	%rax, %rdi	# tmp80,
	call	Perl_op_null	#
	jmp	.L1557	#
.L1552:
	.loc 1 5011 0
	movq	-16(%rbp), %rax	# kid, tmp81
	movzwl	32(%rax), %eax	# kid_9->op_type, D.22278
	cmpw	$173, %ax	#, D.22278
	je	.L1554	#,
	.loc 1 5011 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# kid, tmp82
	movzwl	32(%rax), %eax	# kid_9->op_type, D.22278
	cmpw	$1, %ax	#, D.22278
	jne	.L1555	#,
.L1554:
.LBB84:
	.loc 1 5014 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp83
	movq	$0, 40(%rax)	#, MEM[(struct UNOP *)o_5(D)].op_first
	.loc 1 5015 0
	movq	-24(%rbp), %rax	# o, tmp84
	movq	%rax, %rdi	# tmp84,
	call	Perl_op_free	#
	.loc 1 5017 0
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp85, enter
	movq	-8(%rbp), %rax	# enter, tmp86
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp86,
	call	memset	#
	.loc 1 5018 0
	movq	-8(%rbp), %rax	# enter, tmp87
	movw	$313, 32(%rax)	#, enter_14->op_type
	.loc 1 5019 0
	movq	PL_ppaddr+2504(%rip), %rdx	# PL_ppaddr, D.22279
	movq	-8(%rbp), %rax	# enter, tmp88
	movq	%rdx, 16(%rax)	# D.22279, enter_14->op_ppaddr
	.loc 1 5020 0
	movq	-8(%rbp), %rax	# enter, tmp89
	movb	$0, 37(%rax)	#, enter_14->op_private
	.loc 1 5023 0
	movq	-8(%rbp), %rax	# enter, tmp90
	movq	-8(%rbp), %rdx	# enter, tmp91
	movq	%rdx, (%rax)	# tmp91, enter_14->op_next
	.loc 1 5025 0
	movq	-16(%rbp), %rdx	# kid, tmp92
	movq	-8(%rbp), %rax	# enter, tmp93
	movq	%rax, %rsi	# tmp93,
	movl	$173, %edi	#,
	call	Perl_prepend_elem	#
	movq	%rax, -24(%rbp)	# tmp94, o
	.loc 1 5026 0
	movq	-24(%rbp), %rax	# o, tmp95
	movw	$314, 32(%rax)	#, o_16->op_type
	.loc 1 5027 0
	movq	PL_ppaddr+2512(%rip), %rdx	# PL_ppaddr, D.22279
	movq	-24(%rbp), %rax	# o, tmp96
	movq	%rdx, 16(%rax)	# D.22279, o_16->op_ppaddr
	.loc 1 5028 0
	movq	-8(%rbp), %rax	# enter, tmp97
	movq	-24(%rbp), %rdx	# o, tmp98
	movq	%rdx, 48(%rax)	# tmp98, enter_14->op_other
	.loc 1 5029 0
	movq	-24(%rbp), %rax	# o, D.22275
	jmp	.L1556	#
.L1555:
.LBE84:
	.loc 1 5032 0
	movq	-16(%rbp), %rax	# kid, tmp99
	movq	%rax, %rdi	# tmp99,
	call	Perl_scalar	#
.LBE83:
	jmp	.L1557	#
.L1551:
	.loc 1 5035 0
	movq	-24(%rbp), %rax	# o, tmp100
	movq	%rax, %rdi	# tmp100,
	call	Perl_op_free	#
	.loc 1 5036 0
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	# D.22275,
	movl	$0, %esi	#,
	movl	$311, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -24(%rbp)	# tmp101, o
.L1557:
	.loc 1 5038 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.963
	movl	%eax, %edx	# PL_hints.963, D.22280
	movq	-24(%rbp), %rax	# o, tmp102
	movq	%rdx, 24(%rax)	# D.22280, o_1->op_targ
	.loc 1 5039 0
	movq	-24(%rbp), %rax	# o, D.22275
.L1556:
	.loc 1 5040 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE113:
	.size	Perl_ck_eval, .-Perl_ck_eval
	.globl	Perl_ck_exit
	.type	Perl_ck_exit, @function
Perl_ck_exit:
.LFB114:
	.loc 1 5044 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5054 0
	movq	-8(%rbp), %rax	# o, tmp61
	movq	%rax, %rdi	# tmp61,
	call	Perl_ck_fun	#
	.loc 1 5055 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE114:
	.size	Perl_ck_exit, .-Perl_ck_exit
	.globl	Perl_ck_exec
	.type	Perl_ck_exec, @function
Perl_ck_exec:
.LFB115:
	.loc 1 5059 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5061 0
	movq	-24(%rbp), %rax	# o, tmp66
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22282
	movzbl	%al, %eax	# D.22282, D.22283
	andl	$64, %eax	#, D.22283
	testl	%eax, %eax	# D.22283
	je	.L1561	#,
	.loc 1 5062 0
	movq	-24(%rbp), %rax	# o, tmp67
	movq	%rax, %rdi	# tmp67,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp68, o
	.loc 1 5063 0
	movq	-24(%rbp), %rax	# o, tmp69
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_6].op_first, D.22284
	movq	8(%rax), %rax	# _7->op_sibling, tmp70
	movq	%rax, -8(%rbp)	# tmp70, kid
	.loc 1 5064 0
	movq	-8(%rbp), %rax	# kid, tmp71
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22285
	cmpw	$14, %ax	#, D.22285
	jne	.L1563	#,
	.loc 1 5065 0
	movq	-8(%rbp), %rax	# kid, tmp72
	movq	%rax, %rdi	# tmp72,
	call	Perl_op_null	#
	jmp	.L1563	#
.L1561:
	.loc 1 5068 0
	movq	-24(%rbp), %rax	# o, tmp73
	movq	%rax, %rdi	# tmp73,
	call	Perl_listkids	#
	movq	%rax, -24(%rbp)	# tmp74, o
.L1563:
	.loc 1 5069 0
	movq	-24(%rbp), %rax	# o, D.22284
	.loc 1 5070 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE115:
	.size	Perl_ck_exec, .-Perl_ck_exec
	.section	.rodata
	.align 8
.LC104:
	.string	"%s argument is not a subroutine name"
	.align 8
.LC105:
	.string	"%s argument is not a HASH or ARRAY element"
	.text
	.globl	Perl_ck_exists
	.type	Perl_ck_exists, @function
Perl_ck_exists:
.LFB116:
	.loc 1 5074 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5075 0
	movq	-24(%rbp), %rax	# o, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp84, o
	.loc 1 5076 0
	movq	-24(%rbp), %rax	# o, tmp85
	movzbl	36(%rax), %eax	# o_4->op_flags, D.22286
	movzbl	%al, %eax	# D.22286, D.22287
	andl	$4, %eax	#, D.22287
	testl	%eax, %eax	# D.22287
	je	.L1566	#,
.LBB85:
	.loc 1 5077 0
	movq	-24(%rbp), %rax	# o, tmp86
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_4].op_first, tmp87
	movq	%rax, -8(%rbp)	# tmp87, kid
	.loc 1 5078 0
	movq	-8(%rbp), %rax	# kid, tmp88
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22288
	cmpw	$166, %ax	#, D.22288
	jne	.L1567	#,
	.loc 1 5079 0
	movq	-24(%rbp), %rax	# o, tmp89
	movzwl	32(%rax), %eax	# o_4->op_type, D.22288
	movzwl	%ax, %edx	# D.22288, D.22287
	movq	-8(%rbp), %rax	# kid, tmp90
	movl	%edx, %esi	# D.22287,
	movq	%rax, %rdi	# tmp90,
	call	Perl_ref	#
	.loc 1 5080 0
	movq	-8(%rbp), %rax	# kid, tmp91
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22288
	cmpw	$17, %ax	#, D.22288
	je	.L1568	#,
	.loc 1 5080 0 is_stmt 0 discriminator 1
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.964
	testl	%eax, %eax	# PL_error_count.964
	jne	.L1568	#,
	.loc 1 5082 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp92
	movzwl	32(%rax), %eax	# o_4->op_type, D.22288
	.loc 1 5081 0
	cmpw	$351, %ax	#, D.22288
	jne	.L1569	#,
	.loc 1 5081 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp93
	movq	%rax, %rdi	# tmp93,
	call	Perl_custom_op_desc	#
	jmp	.L1570	#
.L1569:
	.loc 1 5082 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# o, tmp94
	movzwl	32(%rax), %eax	# o_4->op_type, D.22288
	movzwl	%ax, %eax	# D.22288, D.22287
	.loc 1 5081 0 discriminator 2
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.965
.L1570:
	.loc 1 5081 0 is_stmt 0 discriminator 3
	movq	%rax, %rsi	# iftmp.965,
	movl	$.LC104, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1568:
	.loc 1 5083 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp96
	movzbl	37(%rax), %eax	# o_4->op_private, D.22286
	orl	$64, %eax	#, D.22286
	movl	%eax, %edx	# D.22286, D.22286
	movq	-24(%rbp), %rax	# o, tmp97
	movb	%dl, 37(%rax)	# D.22286, o_4->op_private
	jmp	.L1571	#
.L1567:
	.loc 1 5085 0
	movq	-8(%rbp), %rax	# kid, tmp98
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22288
	cmpw	$127, %ax	#, D.22288
	jne	.L1572	#,
	.loc 1 5086 0
	movq	-24(%rbp), %rax	# o, tmp99
	movzbl	36(%rax), %eax	# o_4->op_flags, D.22286
	orl	$-128, %eax	#, D.22286
	movl	%eax, %edx	# D.22286, D.22286
	movq	-24(%rbp), %rax	# o, tmp100
	movb	%dl, 36(%rax)	# D.22286, o_4->op_flags
	jmp	.L1571	#
.L1572:
	.loc 1 5087 0
	movq	-8(%rbp), %rax	# kid, tmp101
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22288
	cmpw	$135, %ax	#, D.22288
	je	.L1571	#,
	.loc 1 5089 0
	movq	-24(%rbp), %rax	# o, tmp102
	movzwl	32(%rax), %eax	# o_4->op_type, D.22288
	.loc 1 5088 0
	cmpw	$351, %ax	#, D.22288
	jne	.L1573	#,
	.loc 1 5088 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp103
	movq	%rax, %rdi	# tmp103,
	call	Perl_custom_op_desc	#
	jmp	.L1574	#
.L1573:
	.loc 1 5089 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax	# o, tmp104
	movzwl	32(%rax), %eax	# o_4->op_type, D.22288
	movzwl	%ax, %eax	# D.22288, D.22287
	.loc 1 5088 0 discriminator 2
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.966
.L1574:
	.loc 1 5088 0 is_stmt 0 discriminator 3
	movq	%rax, %rsi	# iftmp.966,
	movl	$.LC105, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1571:
	.loc 1 5090 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp106
	movq	%rax, %rdi	# tmp106,
	call	Perl_op_null	#
.L1566:
.LBE85:
	.loc 1 5092 0
	movq	-24(%rbp), %rax	# o, D.22289
	.loc 1 5093 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE116:
	.size	Perl_ck_exists, .-Perl_ck_exists
	.section	.rodata
.LC106:
	.string	"a SCALAR"
.LC107:
	.string	"an ARRAY"
.LC108:
	.string	"a HASH"
.LC109:
	.string	"a CODE"
.LC110:
	.string	"Constant is not %s reference"
	.align 8
.LC111:
	.string	"Can't use bareword (\"%s\") as %s ref while \"strict refs\" in use"
	.text
	.globl	Perl_ck_rvconst
	.type	Perl_ck_rvconst, @function
Perl_ck_rvconst:
.LFB117:
	.loc 1 5108 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$88, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, %rbx	# o, o
	.loc 1 5109 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)o_15(D)].op_first, tmp127
	movq	%rax, -64(%rbp)	# tmp127, kid
	.loc 1 5111 0
	movzbl	37(%rbx), %eax	# o_15(D)->op_private, D.22293
	movl	PL_hints(%rip), %edx	# PL_hints, PL_hints.967
	andl	$2, %edx	#, D.22293
	orl	%edx, %eax	# D.22293, D.22293
	movb	%al, 37(%rbx)	# D.22293, o_15(D)->op_private
	.loc 1 5112 0
	movq	-64(%rbp), %rax	# kid, tmp128
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22294
	cmpw	$5, %ax	#, D.22294
	jne	.L1577	#,
.LBB86:
	.loc 1 5116 0
	movq	-64(%rbp), %rax	# kid, tmp129
	movq	40(%rax), %rax	# kid_16->op_sv, tmp130
	movq	%rax, -56(%rbp)	# tmp130, kidsv
	.loc 1 5120 0
	movq	-56(%rbp), %rax	# kidsv, tmp131
	movl	12(%rax), %eax	# kidsv_23->sv_flags, D.22295
	andl	$524288, %eax	#, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1578	#,
	.loc 1 5120 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# kidsv, tmp132
	movl	12(%rax), %eax	# kidsv_23->sv_flags, D.22295
	andl	$8388608, %eax	#, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1578	#,
.LBB87:
	.loc 1 5121 0 is_stmt 1
	movq	-56(%rbp), %rax	# kidsv, tmp133
	movq	(%rax), %rax	# kidsv_23->sv_any, D.22296
	movq	(%rax), %rax	# MEM[(struct XRV *)_28].xrv_rv, tmp134
	movq	%rax, -48(%rbp)	# tmp134, rsv
	.loc 1 5122 0
	movq	-48(%rbp), %rax	# rsv, tmp135
	movl	12(%rax), %eax	# rsv_29->sv_flags, D.22295
	andl	$255, %eax	#, tmp136
	movl	%eax, -92(%rbp)	# tmp136, svtype
	.loc 1 5123 0
	movq	$0, -80(%rbp)	#, badtype
	.loc 1 5125 0
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	movzwl	%ax, %eax	# D.22294, D.22297
	cmpl	$17, %eax	#, D.22297
	je	.L1580	#,
	cmpl	$17, %eax	#, D.22297
	jg	.L1581	#,
	cmpl	$15, %eax	#, D.22297
	je	.L1582	#,
	jmp	.L1579	#
.L1581:
	cmpl	$125, %eax	#, D.22297
	je	.L1583	#,
	cmpl	$134, %eax	#, D.22297
	je	.L1584	#,
	jmp	.L1579	#
.L1582:
	.loc 1 5127 0
	cmpl	$7, -92(%rbp)	#, svtype
	jle	.L1585	#,
	.loc 1 5128 0
	movq	$.LC106, -80(%rbp)	#, badtype
	.loc 1 5129 0
	jmp	.L1579	#
.L1585:
	jmp	.L1579	#
.L1583:
	.loc 1 5131 0
	cmpl	$10, -92(%rbp)	#, svtype
	je	.L1586	#,
	.loc 1 5132 0
	movq	$.LC107, -80(%rbp)	#, badtype
	.loc 1 5133 0
	jmp	.L1579	#
.L1586:
	jmp	.L1579	#
.L1584:
	.loc 1 5135 0
	cmpl	$11, -92(%rbp)	#, svtype
	je	.L1587	#,
	.loc 1 5136 0
	cmpl	$10, -92(%rbp)	#, svtype
	jne	.L1588	#,
.LBB88:
	.loc 1 5137 0
	movq	-48(%rbp), %rax	# rsv, tmp137
	movl	$0, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp137,
	call	Perl_av_fetch	#
	movq	%rax, -40(%rbp)	# tmp138, ksv
	.loc 1 5138 0
	cmpq	$0, -40(%rbp)	#, ksv
	je	.L1588	#,
	.loc 1 5138 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# ksv, tmp139
	movq	(%rax), %rax	# *ksv_38, D.22298
	movl	12(%rax), %eax	# _39->sv_flags, D.22295
	andl	$524288, %eax	#, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1588	#,
	.loc 1 5139 0 is_stmt 1
	movq	-40(%rbp), %rax	# ksv, tmp140
	movq	(%rax), %rax	# *ksv_38, D.22298
	movq	(%rax), %rax	# _42->sv_any, D.22296
	movq	(%rax), %rax	# MEM[(struct XRV *)_43].xrv_rv, D.22298
	movl	12(%rax), %eax	# _44->sv_flags, D.22295
	movzbl	%al, %eax	# D.22295, D.22295
	cmpl	$11, %eax	#, D.22295
	jne	.L1588	#,
	.loc 1 5141 0
	jmp	.L1579	#
.L1588:
.LBE88:
	.loc 1 5144 0
	movq	$.LC108, -80(%rbp)	#, badtype
	.loc 1 5146 0
	jmp	.L1579	#
.L1587:
	jmp	.L1579	#
.L1580:
	.loc 1 5148 0
	cmpl	$12, -92(%rbp)	#, svtype
	je	.L1589	#,
	.loc 1 5149 0
	movq	$.LC109, -80(%rbp)	#, badtype
	.loc 1 5150 0
	jmp	.L1614	#
.L1589:
.L1614:
	nop
.L1579:
	.loc 1 5152 0
	cmpq	$0, -80(%rbp)	#, badtype
	je	.L1590	#,
	.loc 1 5153 0
	movq	-80(%rbp), %rax	# badtype, tmp141
	movq	%rax, %rsi	# tmp141,
	movl	$.LC110, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1590:
	.loc 1 5154 0
	movq	%rbx, %rax	# o, D.22292
	jmp	.L1591	#
.L1578:
.LBE87:
	.loc 1 5156 0
	movq	-56(%rbp), %rax	# kidsv, tmp142
	movl	12(%rax), %eax	# kidsv_23->sv_flags, D.22295
	andl	$262144, %eax	#, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1592	#,
	.loc 1 5156 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# kidsv, tmp143
	movq	(%rax), %rax	# kidsv_23->sv_any, D.22296
	movq	8(%rax), %rax	# MEM[(struct XPV *)_52].xpv_cur, n_a.969
	movq	%rax, -88(%rbp)	# n_a.969, n_a
	movq	-56(%rbp), %rax	# kidsv, tmp144
	movq	(%rax), %rax	# kidsv_23->sv_any, D.22296
	movq	(%rax), %rax	# MEM[(struct XPV *)_54].xpv_pv, iftmp.968
	jmp	.L1593	#
.L1592:
	.loc 1 5156 0 discriminator 2
	leaq	-88(%rbp), %rcx	#, tmp145
	movq	-56(%rbp), %rax	# kidsv, tmp146
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp145,
	movq	%rax, %rdi	# tmp146,
	call	Perl_sv_2pv_flags	#
.L1593:
	.loc 1 5156 0 discriminator 3
	movq	%rax, -32(%rbp)	# iftmp.968, name
	.loc 1 5157 0 is_stmt 1 discriminator 3
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.970
	andl	$2, %eax	#, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1594	#,
	.loc 1 5157 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# kid, tmp147
	movzbl	37(%rax), %eax	# kid_16->op_private, D.22293
	movzbl	%al, %eax	# D.22293, D.22297
	andl	$64, %eax	#, D.22297
	testl	%eax, %eax	# D.22297
	je	.L1594	#,
.LBB89:
	.loc 1 5158 0 is_stmt 1
	movq	$0, -72(%rbp)	#, badthing
	.loc 1 5159 0
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	movzwl	%ax, %eax	# D.22294, D.22297
	cmpl	$125, %eax	#, D.22297
	je	.L1596	#,
	cmpl	$134, %eax	#, D.22297
	je	.L1597	#,
	cmpl	$15, %eax	#, D.22297
	jne	.L1595	#,
	.loc 1 5161 0
	movq	$.LC106, -72(%rbp)	#, badthing
	.loc 1 5162 0
	jmp	.L1595	#
.L1596:
	.loc 1 5164 0
	movq	$.LC107, -72(%rbp)	#, badthing
	.loc 1 5165 0
	jmp	.L1595	#
.L1597:
	.loc 1 5167 0
	movq	$.LC108, -72(%rbp)	#, badthing
	.loc 1 5168 0
	nop
.L1595:
	.loc 1 5170 0
	cmpq	$0, -72(%rbp)	#, badthing
	je	.L1594	#,
	.loc 1 5171 0
	movq	-72(%rbp), %rdx	# badthing, tmp148
	movq	-32(%rbp), %rax	# name, tmp149
	movq	%rax, %rsi	# tmp149,
	movl	$.LC111, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1594:
.LBE89:
	.loc 1 5183 0
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	cmpw	$17, %ax	#, D.22294
	jne	.L1599	#,
	.loc 1 5183 0 is_stmt 0 discriminator 1
	movl	$2, %eax	#, iftmp.971
	jmp	.L1600	#
.L1599:
	.loc 1 5183 0 discriminator 2
	movl	$0, %eax	#, iftmp.971
.L1600:
	.loc 1 5183 0 discriminator 3
	movl	%eax, -96(%rbp)	# iftmp.971, iscv
.L1610:
	.loc 1 5185 0 is_stmt 1
	cmpl	$0, -96(%rbp)	#, iscv
	jne	.L1601	#,
	.loc 1 5189 0
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	.loc 1 5191 0
	cmpw	$15, %ax	#, D.22294
	je	.L1602	#,
	.loc 1 5191 0 is_stmt 0 discriminator 1
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	.loc 1 5193 0 is_stmt 1 discriminator 1
	cmpw	$125, %ax	#, D.22294
	je	.L1603	#,
	movzwl	32(%rbx), %eax	# o_15(D)->op_type, D.22294
	.loc 1 5195 0 discriminator 1
	cmpw	$134, %ax	#, D.22294
	jne	.L1604	#,
	movl	$11, %eax	#, iftmp.975
	jmp	.L1608	#
.L1604:
	.loc 1 5195 0 is_stmt 0 discriminator 2
	movl	$13, %eax	#, iftmp.975
	jmp	.L1608	#
.L1603:
	.loc 1 5193 0 is_stmt 1 discriminator 2
	movl	$10, %eax	#, iftmp.974
	jmp	.L1608	#
.L1602:
	.loc 1 5191 0 discriminator 2
	movl	$4, %eax	#, iftmp.973
	jmp	.L1608	#
.L1601:
	.loc 1 5185 0 discriminator 1
	movl	$12, %eax	#, iftmp.972
.L1608:
	.loc 1 5186 0
	movq	-64(%rbp), %rdx	# kid, tmp150
	movzbl	37(%rdx), %edx	# kid_16->op_private, D.22293
	movzbl	%dl, %edx	# D.22293, D.22297
	andl	$16, %edx	#, D.22297
	testl	%edx, %edx	# D.22297
	sete	%dl	#, D.22299
	movzbl	%dl, %edx	# D.22299, D.22297
	.loc 1 5185 0
	movl	%edx, %esi	# D.22297, D.22297
	orl	-96(%rbp), %esi	# iscv, D.22297
	movq	-32(%rbp), %rcx	# name, tmp151
	movl	%eax, %edx	# iftmp.972,
	movq	%rcx, %rdi	# tmp151,
	call	Perl_gv_fetchpv	#
	movq	%rax, -24(%rbp)	# tmp152, gv
	.loc 1 5196 0
	cmpq	$0, -24(%rbp)	#, gv
	jne	.L1609	#,
	.loc 1 5196 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# kid, tmp153
	movzbl	37(%rax), %eax	# kid_16->op_private, D.22293
	movzbl	%al, %eax	# D.22293, D.22297
	andl	$16, %eax	#, D.22297
	testl	%eax, %eax	# D.22297
	jne	.L1609	#,
	movl	-96(%rbp), %eax	# iscv, iscv.976
	leal	1(%rax), %edx	#, tmp154
	movl	%edx, -96(%rbp)	# tmp154, iscv
	testl	%eax, %eax	# iscv.976
	je	.L1610	#,
.L1609:
	.loc 1 5197 0 is_stmt 1
	cmpq	$0, -24(%rbp)	#, gv
	je	.L1577	#,
	.loc 1 5198 0
	movq	-64(%rbp), %rax	# kid, tmp155
	movw	$7, 32(%rax)	#, kid_16->op_type
	.loc 1 5199 0
	movq	-64(%rbp), %rax	# kid, tmp156
	movq	40(%rax), %rax	# kid_16->op_sv, D.22298
	movq	%rax, %rdi	# D.22298,
	call	Perl_sv_free	#
	.loc 1 5207 0
	movq	-24(%rbp), %rax	# gv, tmp157
	movq	%rax, PL_Sv(%rip)	# tmp157, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.978
	testq	%rax, %rax	# PL_Sv.978
	je	.L1613	#,
	.loc 1 5207 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.979
	movl	8(%rax), %edx	# PL_Sv.979_98->sv_refcnt, D.22295
	addl	$1, %edx	#, D.22295
	movl	%edx, 8(%rax)	# D.22295, PL_Sv.979_98->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.979_98->sv_refcnt, D.22295
	testl	%eax, %eax	# D.22295
	je	.L1613	#,
	.loc 1 5207 0
	nop
.L1613:
	.loc 1 5207 0 discriminator 4
	movq	PL_Sv(%rip), %rdx	# PL_Sv, PL_Sv.980
	movq	-64(%rbp), %rax	# kid, tmp158
	movq	%rdx, 40(%rax)	# PL_Sv.980, kid_16->op_sv
	.loc 1 5209 0 is_stmt 1 discriminator 4
	movq	-64(%rbp), %rax	# kid, tmp159
	movb	$0, 37(%rax)	#, kid_16->op_private
	.loc 1 5210 0 discriminator 4
	movq	PL_ppaddr+56(%rip), %rdx	# PL_ppaddr, D.22300
	movq	-64(%rbp), %rax	# kid, tmp160
	movq	%rdx, 16(%rax)	# D.22300, kid_16->op_ppaddr
.L1577:
.LBE86:
	.loc 1 5213 0
	movq	%rbx, %rax	# o, D.22292
.L1591:
	.loc 1 5214 0
	addq	$88, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE117:
	.size	Perl_ck_rvconst, .-Perl_ck_rvconst
	.globl	Perl_ck_ftst
	.type	Perl_ck_ftst, @function
Perl_ck_ftst:
.LFB118:
	.loc 1 5218 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5219 0
	movq	-40(%rbp), %rax	# o, tmp98
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	movzwl	%ax, %eax	# D.22308, tmp99
	movl	%eax, -28(%rbp)	# tmp99, type
	.loc 1 5221 0
	movq	-40(%rbp), %rax	# o, tmp100
	movzbl	36(%rax), %eax	# o_4(D)->op_flags, D.22309
	movzbl	%al, %eax	# D.22309, D.22310
	andl	$16, %eax	#, D.22310
	testl	%eax, %eax	# D.22310
	jne	.L1616	#,
	.loc 1 5224 0
	movq	-40(%rbp), %rax	# o, tmp101
	movzbl	36(%rax), %eax	# o_4(D)->op_flags, D.22309
	movzbl	%al, %eax	# D.22309, D.22310
	andl	$4, %eax	#, D.22310
	testl	%eax, %eax	# D.22310
	je	.L1617	#,
	.loc 1 5224 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp102
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_4(D)].op_first, D.22311
	movzwl	32(%rax), %eax	# _13->op_type, D.22308
	cmpw	$1, %ax	#, D.22308
	je	.L1617	#,
.LBB90:
	.loc 1 5225 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp103
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_4(D)].op_first, tmp104
	movq	%rax, -16(%rbp)	# tmp104, kid
	.loc 1 5227 0
	movq	-16(%rbp), %rax	# kid, tmp105
	movzwl	32(%rax), %eax	# kid_15->op_type, D.22308
	cmpw	$5, %ax	#, D.22308
	jne	.L1618	#,
	.loc 1 5227 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# kid, tmp106
	movzbl	37(%rax), %eax	# kid_15->op_private, D.22309
	movzbl	%al, %eax	# D.22309, D.22310
	andl	$64, %eax	#, D.22310
	testl	%eax, %eax	# D.22310
	je	.L1618	#,
.LBB91:
	.loc 1 5230 0 is_stmt 1
	movq	-16(%rbp), %rax	# kid, tmp107
	movq	40(%rax), %rax	# kid_15->op_sv, PL_Sv.981
	movq	%rax, PL_Sv(%rip)	# PL_Sv.981, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.983
	movl	12(%rax), %eax	# PL_Sv.983_21->sv_flags, D.22312
	andl	$262144, %eax	#, D.22312
	testl	%eax, %eax	# D.22312
	je	.L1619	#,
	.loc 1 5230 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.984
	movq	(%rax), %rax	# PL_Sv.984_24->sv_any, D.22313
	movq	8(%rax), %rax	# MEM[(struct XPV *)_25].xpv_cur, n_a.985
	movq	%rax, -24(%rbp)	# n_a.985, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.986
	movq	(%rax), %rax	# PL_Sv.986_27->sv_any, D.22313
	movq	(%rax), %rax	# MEM[(struct XPV *)_28].xpv_pv, iftmp.982
	jmp	.L1620	#
.L1619:
	.loc 1 5230 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.987
	leaq	-24(%rbp), %rcx	#, tmp108
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp108,
	movq	%rax, %rdi	# PL_Sv.987,
	call	Perl_sv_2pv_flags	#
.L1620:
	.loc 1 5229 0 is_stmt 1
	movl	$15, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# iftmp.982,
	call	Perl_gv_fetchpv	#
	movq	%rax, %rdx	#, D.22314
	movl	-28(%rbp), %eax	# type, tmp109
	movl	$16, %esi	#,
	movl	%eax, %edi	# tmp109,
	call	Perl_newGVOP	#
	movq	%rax, -8(%rbp)	# tmp110, newop
	.loc 1 5231 0
	movq	-40(%rbp), %rax	# o, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_op_free	#
	.loc 1 5232 0
	movq	-8(%rbp), %rax	# newop, tmp112
	movq	%rax, -40(%rbp)	# tmp112, o
.LBE91:
	.loc 1 5227 0
	jmp	.L1621	#
.L1618:
	.loc 1 5235 0
	movl	PL_hints(%rip), %eax	# PL_hints, PL_hints.988
	andl	$4194304, %eax	#, D.22312
	testl	%eax, %eax	# D.22312
	je	.L1621	#,
	.loc 1 5236 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp113
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	.loc 1 5235 0 discriminator 1
	cmpw	$236, %ax	#, D.22308
	je	.L1622	#,
	.loc 1 5236 0
	movq	-40(%rbp), %rax	# o, tmp114
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	cmpw	$237, %ax	#, D.22308
	je	.L1622	#,
	.loc 1 5236 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp115
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	cmpw	$238, %ax	#, D.22308
	je	.L1622	#,
	movq	-40(%rbp), %rax	# o, tmp116
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	cmpw	$239, %ax	#, D.22308
	je	.L1622	#,
	movq	-40(%rbp), %rax	# o, tmp117
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	cmpw	$240, %ax	#, D.22308
	je	.L1622	#,
	movq	-40(%rbp), %rax	# o, tmp118
	movzwl	32(%rax), %eax	# o_4(D)->op_type, D.22308
	cmpw	$241, %ax	#, D.22308
	jne	.L1621	#,
.L1622:
	.loc 1 5237 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp119
	movzbl	37(%rax), %eax	# o_4(D)->op_private, D.22309
	orl	$2, %eax	#, D.22309
	movl	%eax, %edx	# D.22309, D.22309
	movq	-40(%rbp), %rax	# o, tmp120
	movb	%dl, 37(%rax)	# D.22309, o_4(D)->op_private
.LBE90:
	.loc 1 5224 0
	jmp	.L1616	#
.L1621:
	jmp	.L1616	#
.L1617:
	.loc 1 5241 0
	movq	-40(%rbp), %rax	# o, tmp121
	movq	%rax, %rdi	# tmp121,
	call	Perl_op_free	#
	.loc 1 5242 0
	cmpl	$260, -28(%rbp)	#, type
	jne	.L1623	#,
	.loc 1 5243 0
	movq	PL_stdingv(%rip), %rdx	# PL_stdingv, PL_stdingv.989
	movl	-28(%rbp), %eax	# type, tmp122
	movl	$16, %esi	#,
	movl	%eax, %edi	# tmp122,
	call	Perl_newGVOP	#
	movq	%rax, -40(%rbp)	# tmp123, o
	jmp	.L1616	#
.L1623:
	.loc 1 5245 0
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	#, D.22311
	movl	-28(%rbp), %eax	# type, tmp124
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp124,
	call	Perl_newUNOP	#
	movq	%rax, -40(%rbp)	# tmp125, o
.L1616:
	.loc 1 5247 0
	movq	-40(%rbp), %rax	# o, D.22311
	.loc 1 5248 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE118:
	.size	Perl_ck_ftst, .-Perl_ck_ftst
	.section	.rodata
	.align 8
.LC112:
	.string	"Useless use of %s with no values"
	.align 8
.LC113:
	.string	"Array @%s missing the @ in argument %ld of %s()"
.LC114:
	.string	"array"
	.align 8
.LC115:
	.string	"Hash %%%s missing the %% in argument %ld of %s()"
.LC116:
	.string	"hash"
.LC117:
	.string	"HANDLE"
.LC118:
	.string	"[]"
.LC119:
	.string	"{}"
.LC120:
	.string	"%s%c...%c"
.LC121:
	.string	"__ANONIO__"
.LC122:
	.string	"$"
	.text
	.globl	Perl_ck_fun
	.type	Perl_ck_fun, @function
Perl_ck_fun:
.LFB119:
	.loc 1 5252 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$192, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -200(%rbp)	# o, o
	.loc 1 5256 0
	movl	$0, -184(%rbp)	#, numargs
	.loc 1 5257 0
	movq	-200(%rbp), %rax	# o, tmp339
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	movzwl	%ax, %eax	# D.22316, tmp340
	movl	%eax, -172(%rbp)	# tmp340, type
	.loc 1 5258 0
	movl	-172(%rbp), %eax	# type, tmp342
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.22317
	shrl	$13, %eax	#, D.22317
	movl	%eax, %r12d	# D.22317, oa
	.loc 1 5260 0
	movq	-200(%rbp), %rax	# o, tmp343
	movzbl	36(%rax), %eax	# o_39(D)->op_flags, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$64, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1626	#,
	.loc 1 5261 0
	movl	%r12d, %eax	# oa, D.22319
	andl	$8, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1627	#,
	.loc 1 5261 0 is_stmt 0 discriminator 1
	movl	%r12d, %eax	# oa, D.22319
	sarl	$4, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1627	#,
	movl	%r12d, %eax	# oa, D.22319
	sarl	$4, %eax	#, D.22319
	andl	$8, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1627	#,
	.loc 1 5262 0 is_stmt 1
	andl	$-9, %r12d	#, oa
	jmp	.L1626	#
.L1627:
	.loc 1 5264 0
	movq	-200(%rbp), %rax	# o, tmp344
	movq	%rax, %rdi	# tmp344,
	call	S_no_fh_allowed	#
	jmp	.L1628	#
.L1626:
	.loc 1 5267 0
	movq	-200(%rbp), %rax	# o, tmp345
	movzbl	36(%rax), %eax	# o_39(D)->op_flags, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$4, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1629	#,
.LBB92:
	.loc 1 5269 0
	movq	-200(%rbp), %rax	# o, tmp349
	addq	$40, %rax	#, tmp348
	movq	%rax, -152(%rbp)	# tmp348, tokid
	.loc 1 5270 0
	movq	-200(%rbp), %rax	# o, tmp350
	movq	40(%rax), %rbx	# MEM[(struct LISTOP *)o_39(D)].op_first, kid
	.loc 1 5271 0
	movzwl	32(%rbx), %eax	# kid_58->op_type, D.22316
	cmpw	$3, %ax	#, D.22316
	je	.L1630	#,
	.loc 1 5272 0 discriminator 1
	movzwl	32(%rbx), %eax	# kid_58->op_type, D.22316
	.loc 1 5271 0 discriminator 1
	testw	%ax, %ax	# D.22316
	jne	.L1631	#,
	.loc 1 5272 0
	movq	24(%rbx), %rax	# kid_58->op_targ, D.22320
	cmpq	$3, %rax	#, D.22320
	jne	.L1631	#,
.L1630:
	.loc 1 5274 0
	leaq	8(%rbx), %rax	#, tmp351
	movq	%rax, -152(%rbp)	# tmp351, tokid
	.loc 1 5275 0
	movq	8(%rbx), %rbx	# kid_58->op_sibling, kid
.L1631:
	.loc 1 5277 0
	testq	%rbx, %rbx	# kid
	jne	.L1632	#,
	.loc 1 5277 0 is_stmt 0 discriminator 1
	movl	-172(%rbp), %eax	# type, tmp353
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.22317
	andl	$128, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1632	#,
	.loc 1 5278 0 is_stmt 1
	call	S_newDEFSVOP	#
	movq	%rax, %rbx	#, kid
	movq	-152(%rbp), %rax	# tokid, tmp354
	movq	%rbx, (%rax)	# kid, *tokid_9
	.loc 1 5280 0
	jmp	.L1633	#
.L1632:
	jmp	.L1633	#
.L1700:
	.loc 1 5281 0
	addl	$1, -184(%rbp)	#, numargs
	.loc 1 5282 0
	movq	8(%rbx), %rax	# kid_8->op_sibling, tmp355
	movq	%rax, -112(%rbp)	# tmp355, sibl
	.loc 1 5283 0
	movl	%r12d, %eax	# oa, D.22319
	andl	$7, %eax	#, D.22319
	cmpl	$7, %eax	#, D.22319
	ja	.L1634	#,
	movl	%eax, %eax	# D.22319, tmp356
	movq	.L1636(,%rax,8), %rax	#, tmp357
	jmp	*%rax	# tmp357
	.section	.rodata
	.align 8
	.align 4
.L1636:
	.quad	.L1634
	.quad	.L1635
	.quad	.L1637
	.quad	.L1638
	.quad	.L1639
	.quad	.L1640
	.quad	.L1641
	.quad	.L1642
	.text
.L1635:
	.loc 1 5286 0
	cmpl	$1, -184(%rbp)	#, numargs
	jne	.L1643	#,
	.loc 1 5286 0 is_stmt 0 discriminator 1
	movl	%r12d, %eax	# oa, D.22319
	sarl	$4, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1643	#,
	.loc 1 5287 0 is_stmt 1
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$141, %ax	#, D.22316
	jne	.L1643	#,
	.loc 1 5287 0 is_stmt 0 discriminator 1
	cmpl	$2, -172(%rbp)	#, type
	je	.L1643	#,
	.loc 1 5289 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp359
	cltq
	movq	PL_op_desc(,%rax,8), %rdx	# PL_op_desc, D.22321
	movq	-200(%rbp), %rax	# o, tmp360
	movq	%rdx, %rsi	# D.22321,
	movq	%rax, %rdi	# tmp360,
	call	S_too_many_arguments	#
	jmp	.L1628	#
.L1643:
	.loc 1 5291 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	.loc 1 5292 0
	jmp	.L1634	#
.L1637:
	.loc 1 5294 0
	cmpl	$15, %r12d	#, oa
	jg	.L1645	#,
	.loc 1 5295 0
	movl	$0, %ebx	#, kid
	.loc 1 5296 0
	jmp	.L1633	#
.L1645:
	.loc 1 5299 0
	movq	%rbx, %rdi	# kid,
	call	Perl_list	#
	.loc 1 5300 0
	jmp	.L1634	#
.L1638:
	.loc 1 5302 0
	cmpl	$146, -172(%rbp)	#, type
	je	.L1646	#,
	.loc 1 5302 0 is_stmt 0 discriminator 1
	cmpl	$149, -172(%rbp)	#, type
	jne	.L1647	#,
.L1646:
	.loc 1 5303 0 is_stmt 1
	movq	8(%rbx), %rax	# kid_8->op_sibling, D.22315
	testq	%rax, %rax	# D.22315
	jne	.L1647	#,
	.loc 1 5303 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.990
	movq	80(%rax), %rax	# PL_curcop.990_76->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	je	.L1648	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.991
	movq	80(%rax), %rax	# PL_curcop.991_78->cop_warnings, D.22322
	cmpq	$32, %rax	#, D.22322
	je	.L1648	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.992
	movq	80(%rax), %rax	# PL_curcop.992_80->cop_warnings, D.22322
	cmpq	$16, %rax	#, D.22322
	je	.L1649	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.993
	movq	80(%rax), %rax	# PL_curcop.993_82->cop_warnings, D.22322
	movq	(%rax), %rax	# _83->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_84].xpv_pv, D.22321
	addq	$7, %rax	#, D.22321
	movzbl	(%rax), %eax	# *_86, D.22324
	movsbl	%al, %eax	# D.22324, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1649	#,
.L1648:
	.loc 1 5303 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.994
	movq	80(%rax), %rax	# PL_curcop.994_90->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	jne	.L1647	#,
	.loc 1 5303 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.995
	movzbl	%al, %eax	# PL_dowarn.995, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1647	#,
.L1649:
	.loc 1 5304 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp362
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, D.22321
	movq	%rax, %rdx	# D.22321,
	movl	$.LC112, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1647:
	.loc 1 5308 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$5, %ax	#, D.22316
	jne	.L1650	#,
	.loc 1 5309 0 discriminator 1
	movzbl	37(%rbx), %eax	# kid_8->op_private, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$64, %eax	#, D.22319
	.loc 1 5308 0 discriminator 1
	testl	%eax, %eax	# D.22319
	je	.L1650	#,
.LBB93:
	.loc 1 5311 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)kid_8].op_sv, PL_Sv.996
	movq	%rax, PL_Sv(%rip)	# PL_Sv.996, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.998
	movl	12(%rax), %eax	# PL_Sv.998_101->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1651	#,
	.loc 1 5311 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.999
	movq	(%rax), %rax	# PL_Sv.999_104->sv_any, D.22323
	movq	8(%rax), %rax	# MEM[(struct XPV *)_105].xpv_cur, n_a.1000
	movq	%rax, -168(%rbp)	# n_a.1000, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1001
	movq	(%rax), %rax	# PL_Sv.1001_107->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_108].xpv_pv, iftmp.997
	jmp	.L1652	#
.L1651:
	.loc 1 5311 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1002
	leaq	-168(%rbp), %rcx	#, tmp363
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp363,
	movq	%rax, %rdi	# PL_Sv.1002,
	call	Perl_sv_2pv_flags	#
.L1652:
	.loc 1 5311 0 discriminator 3
	movq	%rax, -104(%rbp)	# iftmp.997, name
	.loc 1 5312 0 is_stmt 1 discriminator 3
	movq	-104(%rbp), %rax	# name, tmp364
	movl	$10, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp364,
	call	Perl_gv_fetchpv	#
	movq	%rax, %rdx	# D.22325,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdi	# D.22315,
	call	Perl_newAVREF	#
	movq	%rax, -96(%rbp)	# tmp365, newop
	.loc 1 5314 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1003
	movq	80(%rax), %rax	# PL_curcop.1003_116->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	je	.L1653	#,
	.loc 1 5314 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1004
	movq	80(%rax), %rax	# PL_curcop.1004_118->cop_warnings, D.22322
	cmpq	$32, %rax	#, D.22322
	je	.L1653	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1005
	movq	80(%rax), %rax	# PL_curcop.1005_120->cop_warnings, D.22322
	cmpq	$16, %rax	#, D.22322
	je	.L1654	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1006
	movq	80(%rax), %rax	# PL_curcop.1006_122->cop_warnings, D.22322
	movq	(%rax), %rax	# _123->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_124].xpv_pv, D.22321
	movzbl	(%rax), %eax	# *_125, D.22324
	movsbl	%al, %eax	# D.22324, D.22319
	andl	$16, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1654	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1007
	movq	80(%rax), %rax	# PL_curcop.1007_129->cop_warnings, D.22322
	movq	(%rax), %rax	# _130->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_131].xpv_pv, D.22321
	addq	$7, %rax	#, D.22321
	movzbl	(%rax), %eax	# *_133, D.22324
	movsbl	%al, %eax	# D.22324, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1654	#,
.L1653:
	.loc 1 5314 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1008
	movq	80(%rax), %rax	# PL_curcop.1008_137->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	jne	.L1655	#,
	.loc 1 5314 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1009
	movzbl	%al, %eax	# PL_dowarn.1009, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1655	#,
.L1654:
	.loc 1 5315 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp367
	cltq
	movq	PL_op_desc(,%rax,8), %rcx	# PL_op_desc, D.22321
	movl	-184(%rbp), %eax	# numargs, tmp368
	movslq	%eax, %rdx	# tmp368, D.22326
	movq	-104(%rbp), %rax	# name, tmp369
	movq	%rcx, %r8	# D.22321,
	movq	%rdx, %rcx	# D.22326,
	movq	%rax, %rdx	# tmp369,
	movl	$.LC113, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1655:
	.loc 1 5318 0
	movq	%rbx, %rdi	# kid,
	call	Perl_op_free	#
	.loc 1 5319 0
	movq	-96(%rbp), %rbx	# newop, kid
	.loc 1 5320 0
	movq	-112(%rbp), %rax	# sibl, tmp370
	movq	%rax, 8(%rbx)	# tmp370, kid_144->op_sibling
	.loc 1 5321 0
	movq	-152(%rbp), %rax	# tokid, tmp371
	movq	%rbx, (%rax)	# kid, *tokid_10
.LBE93:
	.loc 1 5310 0
	jmp	.L1656	#
.L1650:
	.loc 1 5323 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$125, %ax	#, D.22316
	je	.L1656	#,
	.loc 1 5323 0 is_stmt 0 discriminator 1
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$10, %ax	#, D.22316
	je	.L1656	#,
	.loc 1 5324 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp373
	cltq
	movq	PL_op_desc(,%rax,8), %rdx	# PL_op_desc, D.22321
	movl	-184(%rbp), %eax	# numargs, tmp374
	movq	%rbx, %rcx	# kid,
	movl	$.LC114, %esi	#,
	movl	%eax, %edi	# tmp374,
	call	S_bad_type	#
.L1656:
	.loc 1 5325 0
	movl	-172(%rbp), %eax	# type, tmp375
	movl	%eax, %esi	# tmp375,
	movq	%rbx, %rdi	# kid,
	call	Perl_mod	#
	.loc 1 5326 0
	jmp	.L1634	#
.L1639:
	.loc 1 5328 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$5, %ax	#, D.22316
	jne	.L1657	#,
	.loc 1 5329 0 discriminator 1
	movzbl	37(%rbx), %eax	# kid_8->op_private, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$64, %eax	#, D.22319
	.loc 1 5328 0 discriminator 1
	testl	%eax, %eax	# D.22319
	je	.L1657	#,
.LBB94:
	.loc 1 5331 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)kid_8].op_sv, PL_Sv.1010
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1010, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1012
	movl	12(%rax), %eax	# PL_Sv.1012_153->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1658	#,
	.loc 1 5331 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1013
	movq	(%rax), %rax	# PL_Sv.1013_156->sv_any, D.22323
	movq	8(%rax), %rax	# MEM[(struct XPV *)_157].xpv_cur, n_a.1014
	movq	%rax, -168(%rbp)	# n_a.1014, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1015
	movq	(%rax), %rax	# PL_Sv.1015_159->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_160].xpv_pv, iftmp.1011
	jmp	.L1659	#
.L1658:
	.loc 1 5331 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1016
	leaq	-168(%rbp), %rcx	#, tmp376
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp376,
	movq	%rax, %rdi	# PL_Sv.1016,
	call	Perl_sv_2pv_flags	#
.L1659:
	.loc 1 5331 0 discriminator 3
	movq	%rax, -88(%rbp)	# iftmp.1011, name
	.loc 1 5332 0 is_stmt 1 discriminator 3
	movq	-88(%rbp), %rax	# name, tmp377
	movl	$11, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# tmp377,
	call	Perl_gv_fetchpv	#
	movq	%rax, %rdx	# D.22325,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdi	# D.22315,
	call	Perl_newHVREF	#
	movq	%rax, -80(%rbp)	# tmp378, newop
	.loc 1 5334 0 discriminator 3
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1017
	movq	80(%rax), %rax	# PL_curcop.1017_168->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	je	.L1660	#,
	.loc 1 5334 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1018
	movq	80(%rax), %rax	# PL_curcop.1018_170->cop_warnings, D.22322
	cmpq	$32, %rax	#, D.22322
	je	.L1660	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1019
	movq	80(%rax), %rax	# PL_curcop.1019_172->cop_warnings, D.22322
	cmpq	$16, %rax	#, D.22322
	je	.L1661	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1020
	movq	80(%rax), %rax	# PL_curcop.1020_174->cop_warnings, D.22322
	movq	(%rax), %rax	# _175->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_176].xpv_pv, D.22321
	movzbl	(%rax), %eax	# *_177, D.22324
	movsbl	%al, %eax	# D.22324, D.22319
	andl	$16, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1661	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1021
	movq	80(%rax), %rax	# PL_curcop.1021_181->cop_warnings, D.22322
	movq	(%rax), %rax	# _182->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_183].xpv_pv, D.22321
	addq	$7, %rax	#, D.22321
	movzbl	(%rax), %eax	# *_185, D.22324
	movsbl	%al, %eax	# D.22324, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1661	#,
.L1660:
	.loc 1 5334 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1022
	movq	80(%rax), %rax	# PL_curcop.1022_189->cop_warnings, D.22322
	testq	%rax, %rax	# D.22322
	jne	.L1662	#,
	.loc 1 5334 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1023
	movzbl	%al, %eax	# PL_dowarn.1023, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	je	.L1662	#,
.L1661:
	.loc 1 5335 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp380
	cltq
	movq	PL_op_desc(,%rax,8), %rcx	# PL_op_desc, D.22321
	movl	-184(%rbp), %eax	# numargs, tmp381
	movslq	%eax, %rdx	# tmp381, D.22326
	movq	-88(%rbp), %rax	# name, tmp382
	movq	%rcx, %r8	# D.22321,
	movq	%rdx, %rcx	# D.22326,
	movq	%rax, %rdx	# tmp382,
	movl	$.LC115, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1662:
	.loc 1 5338 0
	movq	%rbx, %rdi	# kid,
	call	Perl_op_free	#
	.loc 1 5339 0
	movq	-80(%rbp), %rbx	# newop, kid
	.loc 1 5340 0
	movq	-112(%rbp), %rax	# sibl, tmp383
	movq	%rax, 8(%rbx)	# tmp383, kid_196->op_sibling
	.loc 1 5341 0
	movq	-152(%rbp), %rax	# tokid, tmp384
	movq	%rbx, (%rax)	# kid, *tokid_10
.LBE94:
	.loc 1 5330 0
	jmp	.L1663	#
.L1657:
	.loc 1 5343 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$134, %ax	#, D.22316
	je	.L1663	#,
	.loc 1 5343 0 is_stmt 0 discriminator 1
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$11, %ax	#, D.22316
	je	.L1663	#,
	.loc 1 5344 0 is_stmt 1
	movl	-172(%rbp), %eax	# type, tmp386
	cltq
	movq	PL_op_desc(,%rax,8), %rdx	# PL_op_desc, D.22321
	movl	-184(%rbp), %eax	# numargs, tmp387
	movq	%rbx, %rcx	# kid,
	movl	$.LC116, %esi	#,
	movl	%eax, %edi	# tmp387,
	call	S_bad_type	#
.L1663:
	.loc 1 5345 0
	movl	-172(%rbp), %eax	# type, tmp388
	movl	%eax, %esi	# tmp388,
	movq	%rbx, %rdi	# kid,
	call	Perl_mod	#
	.loc 1 5346 0
	jmp	.L1634	#
.L1640:
.LBB95:
	.loc 1 5349 0
	movq	%rbx, %rdx	# kid,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -72(%rbp)	# tmp389, newop
	.loc 1 5350 0
	movq	$0, 8(%rbx)	#, kid_8->op_sibling
	.loc 1 5351 0
	movq	%rbx, %rdi	# kid,
	call	Perl_linklist	#
	.loc 1 5352 0
	movq	-72(%rbp), %rax	# newop, tmp390
	movq	-72(%rbp), %rdx	# newop, tmp391
	movq	%rdx, (%rax)	# tmp391, newop_200->op_next
	.loc 1 5353 0
	movq	-72(%rbp), %rbx	# newop, kid
	.loc 1 5354 0
	movq	-112(%rbp), %rax	# sibl, tmp392
	movq	%rax, 8(%rbx)	# tmp392, kid_201->op_sibling
	.loc 1 5355 0
	movq	-152(%rbp), %rax	# tokid, tmp393
	movq	%rbx, (%rax)	# kid, *tokid_10
.LBE95:
	.loc 1 5357 0
	jmp	.L1634	#
.L1641:
	.loc 1 5359 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$7, %ax	#, D.22316
	je	.L1664	#,
	.loc 1 5359 0 is_stmt 0 discriminator 1
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$14, %ax	#, D.22316
	je	.L1664	#,
	.loc 1 5360 0 is_stmt 1
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$5, %ax	#, D.22316
	jne	.L1665	#,
	.loc 1 5361 0 discriminator 1
	movzbl	37(%rbx), %eax	# kid_8->op_private, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$64, %eax	#, D.22319
	.loc 1 5360 0 discriminator 1
	testl	%eax, %eax	# D.22319
	je	.L1665	#,
.LBB96:
	.loc 1 5364 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)kid_8].op_sv, PL_Sv.1024
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1024, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1026
	movl	12(%rax), %eax	# PL_Sv.1026_209->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1666	#,
	.loc 1 5364 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1027
	movq	(%rax), %rax	# PL_Sv.1027_212->sv_any, D.22323
	movq	8(%rax), %rax	# MEM[(struct XPV *)_213].xpv_cur, n_a.1028
	movq	%rax, -168(%rbp)	# n_a.1028, n_a
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1029
	movq	(%rax), %rax	# PL_Sv.1029_215->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_216].xpv_pv, iftmp.1025
	jmp	.L1667	#
.L1666:
	.loc 1 5364 0 discriminator 2
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1030
	leaq	-168(%rbp), %rcx	#, tmp394
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp394,
	movq	%rax, %rdi	# PL_Sv.1030,
	call	Perl_sv_2pv_flags	#
.L1667:
	.loc 1 5363 0 is_stmt 1
	movl	$15, %edx	#,
	movl	$1, %esi	#,
	movq	%rax, %rdi	# iftmp.1025,
	call	Perl_gv_fetchpv	#
	movq	%rax, %rdx	# D.22325,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, -64(%rbp)	# tmp395, newop
	.loc 1 5366 0
	movq	-200(%rbp), %rax	# o, tmp396
	movzbl	37(%rax), %eax	# o_39(D)->op_private, D.22318
	movzbl	%al, %eax	# D.22318, D.22319
	andl	$1, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1668	#,
	.loc 1 5367 0 discriminator 1
	movq	-200(%rbp), %rax	# o, tmp397
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)o_39(D)].op_last, D.22315
	.loc 1 5366 0 discriminator 1
	cmpq	%rbx, %rax	# kid, D.22315
	jne	.L1668	#,
	.loc 1 5368 0
	movq	-200(%rbp), %rax	# o, tmp398
	movq	-64(%rbp), %rdx	# newop, tmp399
	movq	%rdx, 48(%rax)	# tmp399, MEM[(struct LISTOP *)o_39(D)].op_last
.L1668:
	.loc 1 5369 0
	movq	%rbx, %rdi	# kid,
	call	Perl_op_free	#
	.loc 1 5370 0
	movq	-64(%rbp), %rbx	# newop, kid
.LBE96:
	.loc 1 5362 0
	jmp	.L1669	#
.L1665:
	.loc 1 5372 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$26, %ax	#, D.22316
	jne	.L1670	#,
	.loc 1 5374 0
	movq	-200(%rbp), %rax	# o, tmp400
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	cmpw	$351, %ax	#, D.22316
	jne	.L1671	#,
	.loc 1 5374 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# o, tmp401
	movq	%rax, %rdi	# tmp401,
	call	Perl_custom_op_desc	#
	jmp	.L1672	#
.L1671:
	.loc 1 5374 0 discriminator 2
	movq	-200(%rbp), %rax	# o, tmp402
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	movzwl	%ax, %eax	# D.22316, D.22319
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.1031
.L1672:
	.loc 1 5374 0 discriminator 1
	movl	-184(%rbp), %edi	# numargs, tmp404
	movq	%rbx, %rcx	# kid,
	movq	%rax, %rdx	# iftmp.1031,
	movl	$.LC117, %esi	#,
	call	S_bad_type	#
	jmp	.L1669	#
.L1670:
.LBB97:
	.loc 1 5377 0 is_stmt 1
	movl	$128, -180(%rbp)	#, flags
	.loc 1 5378 0
	movl	$0, -176(%rbp)	#, priv
	.loc 1 5379 0
	movq	$0, -144(%rbp)	#, targ
	.loc 1 5382 0
	movl	-184(%rbp), %edx	# numargs, tmp405
	movq	-200(%rbp), %rax	# o, tmp406
	movl	%edx, %esi	# tmp405,
	movq	%rax, %rdi	# tmp406,
	call	S_is_handle_constructor	#
	testb	%al, %al	# D.22324
	je	.L1673	#,
.LBB98:
	.loc 1 5383 0
	movq	$0, -136(%rbp)	#, name
	.loc 1 5384 0
	movq	$0, -160(%rbp)	#, len
	.loc 1 5386 0
	movl	$0, -180(%rbp)	#, flags
	.loc 1 5391 0
	movl	$96, -176(%rbp)	#, priv
	.loc 1 5392 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$9, %ax	#, D.22316
	jne	.L1674	#,
	.loc 1 5397 0
	movq	24(%rbx), %rax	# kid_8->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1033
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1033,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_244, D.22322
	movl	12(%rax), %eax	# _245->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1675	#,
	.loc 1 5397 0 is_stmt 0 discriminator 1
	movq	24(%rbx), %rax	# kid_8->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1034
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1034,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_251, D.22322
	movq	(%rax), %rax	# _252->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_253].xpv_pv, iftmp.1032
	jmp	.L1676	#
.L1675:
	.loc 1 5397 0 discriminator 2
	movq	24(%rbx), %rax	# kid_8->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1035
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1035,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_258, D.22322
	movq	%rax, %rdi	# D.22322,
	call	Perl_sv_2pv_nolen	#
.L1676:
	.loc 1 5397 0 discriminator 3
	movq	%rax, -136(%rbp)	# iftmp.1032, name
	.loc 1 5401 0 is_stmt 1 discriminator 3
	cmpq	$0, -136(%rbp)	#, name
	je	.L1678	#,
	.loc 1 5402 0
	movq	-136(%rbp), %rax	# name, tmp407
	movq	%rax, %rdi	# tmp407,
	call	strlen	#
	movq	%rax, -160(%rbp)	# len.1036, len
	jmp	.L1678	#
.L1674:
	.loc 1 5405 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$15, %ax	#, D.22316
	jne	.L1679	#,
	.loc 1 5406 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)kid_8].op_first, D.22315
	movzwl	32(%rax), %eax	# _264->op_type, D.22316
	cmpw	$7, %ax	#, D.22316
	jne	.L1679	#,
.LBB99:
	.loc 1 5408 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)kid_8].op_first, D.22315
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_266].op_sv, tmp408
	movq	%rax, -56(%rbp)	# tmp408, gv
	.loc 1 5409 0
	movq	-56(%rbp), %rax	# gv, tmp409
	movq	(%rax), %rax	# gv_267->sv_any, D.22328
	movq	64(%rax), %rax	# _268->xgv_name, tmp410
	movq	%rax, -136(%rbp)	# tmp410, name
	.loc 1 5410 0
	movq	-56(%rbp), %rax	# gv, tmp411
	movq	(%rax), %rax	# gv_267->sv_any, D.22328
	movq	72(%rax), %rax	# _270->xgv_namelen, len.1037
	movq	%rax, -160(%rbp)	# len.1037, len
.LBE99:
	.loc 1 5407 0
	jmp	.L1678	#
.L1679:
	.loc 1 5412 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$127, %ax	#, D.22316
	je	.L1680	#,
	.loc 1 5413 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	cmpw	$135, %ax	#, D.22316
	jne	.L1678	#,
.L1680:
.LBB100:
	.loc 1 5417 0
	movq	$0, -136(%rbp)	#, name
	.loc 1 5418 0
	movq	40(%rbx), %rax	# MEM[(struct BINOP *)kid_8].op_first, tmp412
	movq	%rax, -128(%rbp)	# tmp412, op
	cmpq	$0, -128(%rbp)	#, op
	je	.L1681	#,
.LBB101:
	.loc 1 5419 0
	movq	$0, -120(%rbp)	#, tmpstr
	.loc 1 5421 0
	movzwl	32(%rbx), %eax	# kid_8->op_type, D.22316
	.loc 1 5422 0
	cmpw	$127, %ax	#, D.22316
	jne	.L1682	#,
	.loc 1 5422 0 is_stmt 0 discriminator 1
	movl	$.LC118, %eax	#, iftmp.1038
	jmp	.L1683	#
.L1682:
	.loc 1 5422 0 discriminator 2
	movl	$.LC119, %eax	#, iftmp.1038
.L1683:
	.loc 1 5420 0 is_stmt 1
	movq	%rax, -48(%rbp)	# iftmp.1038, a
	.loc 1 5423 0
	movq	-128(%rbp), %rax	# op, tmp413
	movzwl	32(%rax), %eax	# op_275->op_type, D.22316
	cmpw	$125, %ax	#, D.22316
	je	.L1684	#,
	.loc 1 5424 0 discriminator 1
	movq	-128(%rbp), %rax	# op, tmp414
	movzwl	32(%rax), %eax	# op_275->op_type, D.22316
	.loc 1 5423 0 discriminator 1
	cmpw	$134, %ax	#, D.22316
	jne	.L1685	#,
.L1684:
	.loc 1 5425 0
	movq	-128(%rbp), %rax	# op, tmp415
	movq	40(%rax), %rax	# MEM[(struct UNOP *)op_275].op_first, tmp416
	movq	%rax, -128(%rbp)	# tmp416, op
	.loc 1 5424 0
	cmpq	$0, -128(%rbp)	#, op
	je	.L1685	#,
	.loc 1 5426 0
	movq	-128(%rbp), %rax	# op, tmp417
	movzwl	32(%rax), %eax	# op_283->op_type, D.22316
	.loc 1 5425 0
	cmpw	$7, %ax	#, D.22316
	jne	.L1685	#,
.LBB102:
	.loc 1 5428 0
	movq	-128(%rbp), %rax	# op, tmp418
	movq	40(%rax), %rax	# MEM[(struct SVOP *)op_283].op_sv, tmp419
	movq	%rax, -40(%rbp)	# tmp419, gv
	.loc 1 5429 0
	cmpq	$0, -40(%rbp)	#, gv
	je	.L1686	#,
	.loc 1 5434 0
	movq	-48(%rbp), %rax	# a, tmp420
	addq	$1, %rax	#, D.22321
	movzbl	(%rax), %eax	# *_286, D.22324
	.loc 1 5431 0
	movsbl	%al, %ecx	# D.22324, D.22319
	.loc 1 5434 0
	movq	-48(%rbp), %rax	# a, tmp421
	movzbl	(%rax), %eax	# *a_280, D.22324
	.loc 1 5431 0
	movsbl	%al, %edx	# D.22324, D.22319
	.loc 1 5433 0
	movq	-40(%rbp), %rax	# gv, tmp422
	movq	(%rax), %rax	# gv_285->sv_any, D.22328
	.loc 1 5431 0
	movq	64(%rax), %rax	# _291->xgv_name, D.22321
	.loc 1 5430 0
	movq	%rax, %rsi	# D.22321,
	movl	$.LC120, %edi	#,
	movl	$0, %eax	#,
	call	Perl_newSVpvf	#
	movq	%rax, -120(%rbp)	# tmp423, tmpstr
.LBE102:
	.loc 1 5426 0
	jmp	.L1687	#
.L1686:
	jmp	.L1687	#
.L1685:
	.loc 1 5436 0
	movq	-128(%rbp), %rax	# op, tmp424
	movzwl	32(%rax), %eax	# op_23->op_type, D.22316
	cmpw	$10, %ax	#, D.22316
	je	.L1688	#,
	.loc 1 5437 0
	movq	-128(%rbp), %rax	# op, tmp425
	movzwl	32(%rax), %eax	# op_23->op_type, D.22316
	cmpw	$11, %ax	#, D.22316
	jne	.L1687	#,
.L1688:
.LBB103:
	.loc 1 5440 0
	movq	-128(%rbp), %rax	# op, tmp426
	movq	24(%rax), %rax	# op_23->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1040
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1040,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_299, D.22322
	movl	12(%rax), %eax	# _300->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1689	#,
	.loc 1 5440 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# op, tmp427
	movq	24(%rax), %rax	# op_23->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1041
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1041,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_306, D.22322
	movq	(%rax), %rax	# _307->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_308].xpv_pv, iftmp.1039
	jmp	.L1690	#
.L1689:
	.loc 1 5440 0 discriminator 2
	movq	-128(%rbp), %rax	# op, tmp428
	movq	24(%rax), %rax	# op_23->op_targ, D.22320
	movl	%eax, %ecx	# D.22320, D.22319
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1042
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22319,
	movq	%rax, %rdi	# PL_comppad_name.1042,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_313, D.22322
	movq	%rax, %rdi	# D.22322,
	call	Perl_sv_2pv_nolen	#
.L1690:
	.loc 1 5439 0 is_stmt 1
	movq	%rax, -32(%rbp)	# iftmp.1039, padname
	.loc 1 5441 0
	cmpq	$0, -32(%rbp)	#, padname
	je	.L1687	#,
	.loc 1 5446 0
	movq	-48(%rbp), %rax	# a, tmp429
	addq	$1, %rax	#, D.22321
	movzbl	(%rax), %eax	# *_317, D.22324
	.loc 1 5443 0
	movsbl	%al, %edx	# D.22324, D.22319
	.loc 1 5446 0
	movq	-48(%rbp), %rax	# a, tmp430
	movzbl	(%rax), %eax	# *a_280, D.22324
	.loc 1 5443 0
	movsbl	%al, %eax	# D.22324, D.22319
	movq	-32(%rbp), %rcx	# padname, tmp431
	leaq	1(%rcx), %rsi	#, D.22321
	.loc 1 5442 0
	movl	%edx, %ecx	# D.22319,
	movl	%eax, %edx	# D.22319,
	movl	$.LC120, %edi	#,
	movl	$0, %eax	#,
	call	Perl_newSVpvf	#
	movq	%rax, -120(%rbp)	# tmp432, tmpstr
.L1687:
.LBE103:
	.loc 1 5449 0
	cmpq	$0, -120(%rbp)	#, tmpstr
	je	.L1681	#,
	.loc 1 5450 0
	movq	-120(%rbp), %rax	# tmpstr, tmp433
	movl	12(%rax), %eax	# tmpstr_25->sv_flags, D.22317
	andl	$262144, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1691	#,
	.loc 1 5450 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# tmpstr, tmp434
	movq	(%rax), %rax	# tmpstr_25->sv_any, D.22323
	movq	8(%rax), %rax	# MEM[(struct XPV *)_326].xpv_cur, len.1044
	movq	%rax, -160(%rbp)	# len.1044, len
	movq	-120(%rbp), %rax	# tmpstr, tmp435
	movq	(%rax), %rax	# tmpstr_25->sv_any, D.22323
	movq	(%rax), %rax	# MEM[(struct XPV *)_328].xpv_pv, iftmp.1043
	jmp	.L1692	#
.L1691:
	.loc 1 5450 0 discriminator 2
	leaq	-160(%rbp), %rcx	#, tmp436
	movq	-120(%rbp), %rax	# tmpstr, tmp437
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp436,
	movq	%rax, %rdi	# tmp437,
	call	Perl_sv_2pv_flags	#
.L1692:
	.loc 1 5450 0 discriminator 3
	movq	%rax, -136(%rbp)	# iftmp.1043, name
	.loc 1 5451 0 is_stmt 1 discriminator 3
	movq	-120(%rbp), %rax	# tmpstr, tmp438
	movq	%rax, %rdi	# tmp438,
	call	Perl_sv_2mortal	#
.L1681:
.LBE101:
	.loc 1 5454 0
	cmpq	$0, -136(%rbp)	#, name
	jne	.L1693	#,
	.loc 1 5455 0
	movq	$.LC121, -136(%rbp)	#, name
	.loc 1 5456 0
	movq	$10, -160(%rbp)	#, len
.L1693:
	.loc 1 5458 0
	movl	-172(%rbp), %eax	# type, tmp439
	movl	%eax, %esi	# tmp439,
	movq	%rbx, %rdi	# kid,
	call	Perl_mod	#
.L1678:
.LBE100:
	.loc 1 5460 0
	cmpq	$0, -136(%rbp)	#, name
	je	.L1673	#,
.LBB104:
	.loc 1 5462 0
	movl	$512, %esi	#,
	movl	$14, %edi	#,
	call	Perl_pad_alloc	#
	movq	%rax, -144(%rbp)	# tmp440, targ
	.loc 1 5463 0
	movq	PL_curpad(%rip), %rax	# PL_curpad, PL_curpad.1045
	movq	-144(%rbp), %rdx	# targ, tmp441
	salq	$3, %rdx	#, D.22320
	addq	%rdx, %rax	# D.22320, D.22327
	movq	(%rax), %rax	# *_336, tmp442
	movq	%rax, -24(%rbp)	# tmp442, namesv
	.loc 1 5464 0
	movq	-24(%rbp), %rax	# namesv, tmp443
	movl	12(%rax), %eax	# namesv_337->sv_flags, D.22317
	movzbl	%al, %eax	# D.22317, D.22317
	cmpl	$3, %eax	#, D.22317
	ja	.L1695	#,
	.loc 1 5464 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# namesv, tmp444
	movl	$4, %esi	#,
	movq	%rax, %rdi	# tmp444,
	call	Perl_sv_upgrade	#
	testb	%al, %al	# D.22324
	je	.L1697	#,
.L1695:
	.loc 1 5464 0 discriminator 1
	nop
.L1697:
	.loc 1 5465 0 is_stmt 1
	movq	-136(%rbp), %rax	# name, tmp445
	movzbl	(%rax), %eax	# *name_22, D.22324
	cmpb	$36, %al	#, D.22324
	je	.L1698	#,
	.loc 1 5466 0
	movq	-24(%rbp), %rax	# namesv, tmp446
	movl	$1, %edx	#,
	movl	$.LC122, %esi	#,
	movq	%rax, %rdi	# tmp446,
	call	Perl_sv_setpvn	#
.L1698:
	.loc 1 5467 0
	movq	-160(%rbp), %rdx	# len, len.1047
	movq	-136(%rbp), %rsi	# name, tmp447
	movq	-24(%rbp), %rax	# namesv, tmp448
	movl	$2, %ecx	#,
	movq	%rax, %rdi	# tmp448,
	call	Perl_sv_catpvn_flags	#
.L1673:
.LBE104:
.LBE98:
	.loc 1 5470 0
	movq	$0, 8(%rbx)	#, kid_8->op_sibling
	.loc 1 5471 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22315
	movl	-180(%rbp), %eax	# flags, tmp449
	movl	%eax, %esi	# tmp449,
	movl	$14, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rbx	#, kid
	.loc 1 5472 0
	movq	-144(%rbp), %rax	# targ, tmp450
	movq	%rax, 24(%rbx)	# tmp450, kid_346->op_targ
	.loc 1 5473 0
	movzbl	37(%rbx), %eax	# kid_346->op_private, D.22318
	movl	%eax, %edx	# D.22318, D.22329
	movl	-176(%rbp), %eax	# priv, tmp451
	orl	%edx, %eax	# D.22329, D.22329
	movb	%al, 37(%rbx)	# D.22318, kid_346->op_private
.L1669:
.LBE97:
	.loc 1 5475 0
	movq	-112(%rbp), %rax	# sibl, tmp452
	movq	%rax, 8(%rbx)	# tmp452, kid_5->op_sibling
	.loc 1 5476 0
	movq	-152(%rbp), %rax	# tokid, tmp453
	movq	%rbx, (%rax)	# kid, *tokid_10
.L1664:
	.loc 1 5478 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	.loc 1 5479 0
	jmp	.L1634	#
.L1642:
	.loc 1 5481 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	movl	-172(%rbp), %edx	# type, tmp454
	movl	%edx, %esi	# tmp454,
	movq	%rax, %rdi	# D.22315,
	call	Perl_mod	#
	.loc 1 5482 0
	nop
.L1634:
	.loc 1 5484 0
	sarl	$4, %r12d	#, oa
	.loc 1 5485 0
	leaq	8(%rbx), %rax	#, tmp455
	movq	%rax, -152(%rbp)	# tmp455, tokid
	.loc 1 5486 0
	movq	8(%rbx), %rbx	# kid_7->op_sibling, kid
.L1633:
	.loc 1 5280 0 discriminator 1
	testl	%r12d, %r12d	# oa
	je	.L1699	#,
	.loc 1 5280 0 is_stmt 0 discriminator 2
	testq	%rbx, %rbx	# kid
	jne	.L1700	#,
.L1699:
	.loc 1 5488 0 is_stmt 1
	movq	-200(%rbp), %rax	# o, tmp456
	movzbl	37(%rax), %eax	# o_39(D)->op_private, D.22318
	movl	%eax, %edx	# D.22318, D.22329
	movl	-184(%rbp), %eax	# numargs, tmp457
	orl	%edx, %eax	# D.22329, D.22329
	movl	%eax, %edx	# D.22329, D.22318
	movq	-200(%rbp), %rax	# o, tmp458
	movb	%dl, 37(%rax)	# D.22318, o_39(D)->op_private
	.loc 1 5489 0
	testq	%rbx, %rbx	# kid
	je	.L1701	#,
	.loc 1 5490 0
	movq	-200(%rbp), %rax	# o, tmp459
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	cmpw	$351, %ax	#, D.22316
	jne	.L1702	#,
	.loc 1 5490 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# o, tmp460
	movq	%rax, %rdi	# tmp460,
	call	Perl_custom_op_desc	#
	jmp	.L1703	#
.L1702:
	.loc 1 5490 0 discriminator 2
	movq	-200(%rbp), %rax	# o, tmp461
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	movzwl	%ax, %eax	# D.22316, D.22319
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.1048
.L1703:
	.loc 1 5490 0 discriminator 3
	movq	-200(%rbp), %rdx	# o, tmp463
	movq	%rax, %rsi	# iftmp.1048,
	movq	%rdx, %rdi	# tmp463,
	call	S_too_many_arguments	#
	jmp	.L1628	#
.L1701:
	.loc 1 5491 0 is_stmt 1
	movq	-200(%rbp), %rax	# o, tmp464
	movq	%rax, %rdi	# tmp464,
	call	Perl_listkids	#
.LBE92:
	jmp	.L1704	#
.L1629:
	.loc 1 5493 0
	movl	-172(%rbp), %eax	# type, tmp466
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.22317
	andl	$128, %eax	#, D.22317
	testl	%eax, %eax	# D.22317
	je	.L1704	#,
	.loc 1 5494 0
	movq	-200(%rbp), %rax	# o, tmp467
	movq	%rax, %rdi	# tmp467,
	call	Perl_op_free	#
	.loc 1 5495 0
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	#, D.22315
	movl	-172(%rbp), %eax	# type, tmp468
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp468,
	call	Perl_newUNOP	#
	jmp	.L1628	#
.L1704:
	.loc 1 5498 0
	testl	%r12d, %r12d	# oa
	je	.L1705	#,
	.loc 1 5499 0
	jmp	.L1706	#
.L1707:
	.loc 1 5500 0
	sarl	$4, %r12d	#, oa
.L1706:
	.loc 1 5499 0 discriminator 1
	movl	%r12d, %eax	# oa, D.22319
	andl	$8, %eax	#, D.22319
	testl	%eax, %eax	# D.22319
	jne	.L1707	#,
	.loc 1 5501 0
	testl	%r12d, %r12d	# oa
	je	.L1705	#,
	.loc 1 5501 0 is_stmt 0 discriminator 1
	cmpl	$2, %r12d	#, oa
	je	.L1705	#,
	.loc 1 5502 0 is_stmt 1
	movq	-200(%rbp), %rax	# o, tmp469
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	cmpw	$351, %ax	#, D.22316
	jne	.L1708	#,
	.loc 1 5502 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# o, tmp470
	movq	%rax, %rdi	# tmp470,
	call	Perl_custom_op_desc	#
	jmp	.L1709	#
.L1708:
	.loc 1 5502 0 discriminator 2
	movq	-200(%rbp), %rax	# o, tmp471
	movzwl	32(%rax), %eax	# o_39(D)->op_type, D.22316
	movzwl	%ax, %eax	# D.22316, D.22319
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.1049
.L1709:
	.loc 1 5502 0 discriminator 3
	movq	-200(%rbp), %rdx	# o, tmp473
	movq	%rax, %rsi	# iftmp.1049,
	movq	%rdx, %rdi	# tmp473,
	call	S_too_few_arguments	#
	jmp	.L1628	#
.L1705:
	.loc 1 5504 0 is_stmt 1
	movq	-200(%rbp), %rax	# o, D.22315
.L1628:
	.loc 1 5505 0
	addq	$192, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE119:
	.size	Perl_ck_fun, .-Perl_ck_fun
	.section	.rodata
.LC123:
	.string	"glob"
.LC124:
	.string	"CORE::GLOBAL::glob"
.LC125:
	.string	"File::Glob"
.LC126:
	.string	"File::Glob::csh_glob"
.LC127:
	.string	"main"
	.text
	.globl	Perl_ck_glob
	.type	Perl_ck_glob, @function
Perl_ck_glob:
.LFB120:
	.loc 1 5509 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5512 0
	movq	-24(%rbp), %rax	# o, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp132, o
	.loc 1 5513 0
	movq	-24(%rbp), %rax	# o, tmp133
	movzbl	36(%rax), %eax	# o_5->op_flags, D.22342
	movzbl	%al, %eax	# D.22342, D.22343
	andl	$4, %eax	#, D.22343
	testl	%eax, %eax	# D.22343
	je	.L1711	#,
	.loc 1 5513 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp134
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5].op_first, D.22341
	movq	8(%rax), %rax	# _9->op_sibling, D.22341
	testq	%rax, %rax	# D.22341
	jne	.L1711	#,
	.loc 1 5514 0 is_stmt 1
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	#, D.22341
	movq	-24(%rbp), %rax	# o, tmp135
	movq	%rax, %rsi	# tmp135,
	movl	$25, %edi	#,
	call	Perl_append_elem	#
.L1711:
	.loc 1 5516 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC123, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -16(%rbp)	# tmp136, gv
	cmpq	$0, -16(%rbp)	#, gv
	je	.L1712	#,
	.loc 1 5517 0
	movq	-16(%rbp), %rax	# gv, tmp137
	movq	(%rax), %rax	# gv_12->sv_any, D.22344
	movq	56(%rax), %rax	# _13->xgv_gp, D.22345
	movl	64(%rax), %eax	# _14->gp_cvgen, D.22346
	testl	%eax, %eax	# D.22346
	jne	.L1712	#,
	.loc 1 5517 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# gv, tmp138
	movq	(%rax), %rax	# gv_12->sv_any, D.22344
	movq	56(%rax), %rax	# _16->xgv_gp, D.22345
	movq	56(%rax), %rax	# _17->gp_cv, D.22347
	testq	%rax, %rax	# D.22347
	je	.L1712	#,
	.loc 1 5517 0 discriminator 2
	movq	-16(%rbp), %rax	# gv, tmp139
	movq	(%rax), %rax	# gv_12->sv_any, D.22344
	movzbl	88(%rax), %eax	# _19->xgv_flags, D.22342
	.loc 1 5516 0 is_stmt 1 discriminator 2
	testb	%al, %al	# D.22348
	js	.L1713	#,
.L1712:
	.loc 1 5519 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC124, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -16(%rbp)	# tmp140, gv
.L1713:
	.loc 1 5524 0
	cmpq	$0, -16(%rbp)	#, gv
	je	.L1714	#,
	.loc 1 5524 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# gv, tmp141
	movq	(%rax), %rax	# gv_1->sv_any, D.22344
	movq	56(%rax), %rax	# _23->xgv_gp, D.22345
	movl	64(%rax), %eax	# _24->gp_cvgen, D.22346
	testl	%eax, %eax	# D.22346
	jne	.L1714	#,
	movq	-16(%rbp), %rax	# gv, tmp142
	movq	(%rax), %rax	# gv_1->sv_any, D.22344
	movq	56(%rax), %rax	# _26->xgv_gp, D.22345
	movq	56(%rax), %rax	# _27->gp_cv, D.22347
	testq	%rax, %rax	# D.22347
	je	.L1714	#,
	.loc 1 5524 0 discriminator 2
	movq	-16(%rbp), %rax	# gv, tmp143
	movq	(%rax), %rax	# gv_1->sv_any, D.22344
	movzbl	88(%rax), %eax	# _29->xgv_flags, D.22342
	testb	%al, %al	# D.22348
	js	.L1715	#,
.L1714:
.LBB105:
	.loc 1 5526 0 is_stmt 1
	call	Perl_push_scope	#
	.loc 1 5527 0
	movl	$10, %esi	#,
	movl	$.LC125, %edi	#,
	call	Perl_newSVpvn	#
	movl	$0, %r8d	#,
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rsi	# D.22349,
	movl	$2, %edi	#,
	movl	$0, %eax	#,
	call	Perl_load_module	#
	.loc 1 5529 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC124, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -16(%rbp)	# tmp144, gv
	.loc 1 5530 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC126, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -8(%rbp)	# tmp145, glob_gv
	.loc 1 5531 0
	movq	-16(%rbp), %rax	# gv, tmp146
	movq	(%rax), %rax	# gv_33->sv_any, D.22344
	movq	56(%rax), %rax	# _35->xgv_gp, D.22345
	movq	-8(%rbp), %rdx	# glob_gv, tmp147
	movq	(%rdx), %rdx	# glob_gv_34->sv_any, D.22344
	movq	56(%rdx), %rdx	# _37->xgv_gp, D.22345
	movq	56(%rdx), %rdx	# _38->gp_cv, D.22347
	movq	%rdx, 56(%rax)	# D.22347, _36->gp_cv
	.loc 1 5532 0
	movq	-16(%rbp), %rax	# gv, tmp148
	movq	(%rax), %rax	# gv_33->sv_any, D.22344
	movq	56(%rax), %rax	# _40->xgv_gp, D.22345
	movq	56(%rax), %rax	# _41->gp_cv, PL_Sv.1050
	movq	%rax, PL_Sv(%rip)	# PL_Sv.1050, PL_Sv
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1052
	testq	%rax, %rax	# PL_Sv.1052
	je	.L1717	#,
	.loc 1 5532 0 is_stmt 0 discriminator 1
	movq	PL_Sv(%rip), %rax	# PL_Sv, PL_Sv.1053
	movl	8(%rax), %edx	# PL_Sv.1053_44->sv_refcnt, D.22346
	addl	$1, %edx	#, D.22346
	movl	%edx, 8(%rax)	# D.22346, PL_Sv.1053_44->sv_refcnt
	movl	8(%rax), %eax	# PL_Sv.1053_44->sv_refcnt, D.22346
	testl	%eax, %eax	# D.22346
	je	.L1717	#,
	.loc 1 5532 0
	nop
.L1717:
	.loc 1 5533 0 is_stmt 1
	movq	-16(%rbp), %rax	# gv, tmp149
	movq	(%rax), %rax	# gv_33->sv_any, D.22344
	movq	-16(%rbp), %rdx	# gv, tmp150
	movq	(%rdx), %rdx	# gv_33->sv_any, D.22344
	movzbl	88(%rdx), %edx	# _51->xgv_flags, D.22342
	orl	$-128, %edx	#, D.22342
	movb	%dl, 88(%rax)	# D.22342, _50->xgv_flags
	.loc 1 5534 0
	call	Perl_pop_scope	#
.L1715:
.LBE105:
	.loc 1 5538 0
	cmpq	$0, -16(%rbp)	#, gv
	je	.L1718	#,
	.loc 1 5538 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# gv, tmp151
	movq	(%rax), %rax	# gv_2->sv_any, D.22344
	movq	56(%rax), %rax	# _54->xgv_gp, D.22345
	movl	64(%rax), %eax	# _55->gp_cvgen, D.22346
	testl	%eax, %eax	# D.22346
	jne	.L1718	#,
	movq	-16(%rbp), %rax	# gv, tmp152
	movq	(%rax), %rax	# gv_2->sv_any, D.22344
	movq	56(%rax), %rax	# _57->xgv_gp, D.22345
	movq	56(%rax), %rax	# _58->gp_cv, D.22347
	testq	%rax, %rax	# D.22347
	je	.L1718	#,
	.loc 1 5538 0 discriminator 2
	movq	-16(%rbp), %rax	# gv, tmp153
	movq	(%rax), %rax	# gv_2->sv_any, D.22344
	movzbl	88(%rax), %eax	# _60->xgv_flags, D.22342
	testb	%al, %al	# D.22348
	jns	.L1718	#,
	.loc 1 5540 0 is_stmt 1
	movl	PL_glob_index(%rip), %eax	# PL_glob_index, PL_glob_index.1054
	leal	1(%rax), %edx	#, PL_glob_index.1056
	movl	%edx, PL_glob_index(%rip)	# PL_glob_index.1056, PL_glob_index
	.loc 1 5539 0
	cltq
	movq	%rax, %rdi	# D.22350,
	call	Perl_newSViv	#
	movq	%rax, %rdx	# D.22349,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.22341
	movq	-24(%rbp), %rax	# o, tmp154
	movq	%rax, %rsi	# tmp154,
	movl	$25, %edi	#,
	call	Perl_append_elem	#
	.loc 1 5541 0
	movq	-24(%rbp), %rax	# o, tmp155
	movw	$141, 32(%rax)	#, o_5->op_type
	.loc 1 5542 0
	movq	PL_ppaddr+1128(%rip), %rdx	# PL_ppaddr, D.22351
	movq	-24(%rbp), %rax	# o, tmp156
	movq	%rdx, 16(%rax)	# D.22351, o_5->op_ppaddr
	.loc 1 5543 0
	movq	-24(%rbp), %rax	# o, tmp157
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5].op_first, D.22341
	movw	$3, 32(%rax)	#, _70->op_type
	.loc 1 5544 0
	movq	-24(%rbp), %rax	# o, tmp158
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5].op_first, D.22341
	movq	PL_ppaddr+24(%rip), %rdx	# PL_ppaddr, D.22351
	movq	%rdx, 16(%rax)	# D.22351, _71->op_ppaddr
	.loc 1 5545 0
	movq	-24(%rbp), %rax	# o, tmp159
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5].op_first, D.22341
	movq	$0, 24(%rax)	#, _73->op_targ
	.loc 1 5546 0
	movq	-16(%rbp), %rax	# gv, tmp160
	movq	%rax, %rdx	# tmp160,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.22341,
	movl	$0, %esi	#,
	movl	$17, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdi	# D.22341,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22341
	movq	-24(%rbp), %rax	# o, tmp161
	movq	%rax, %rsi	# tmp161,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.22341,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -24(%rbp)	# tmp162, o
	.loc 1 5550 0
	movq	-24(%rbp), %rax	# o, tmp163
	movq	%rax, %rdi	# tmp163,
	call	Perl_ck_subr	#
	movq	%rax, %rdx	# D.22341,
	movl	$0, %esi	#,
	movl	$0, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -24(%rbp)	# tmp164, o
	.loc 1 5551 0
	movq	-24(%rbp), %rax	# o, tmp165
	movq	$25, 24(%rax)	#, o_80->op_targ
	.loc 1 5552 0
	movq	-24(%rbp), %rax	# o, D.22341
	jmp	.L1719	#
.L1718:
	.loc 1 5554 0
	movl	$.LC127, %edi	#,
	call	Perl_newGVgen	#
	movq	%rax, -16(%rbp)	# tmp166, gv
	.loc 1 5555 0
	movq	-16(%rbp), %rax	# gv, tmp167
	movq	%rax, %rdi	# tmp167,
	call	Perl_gv_IOadd	#
	.loc 1 5556 0
	movq	-16(%rbp), %rax	# gv, tmp168
	movq	%rax, %rdx	# tmp168,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	#, D.22341
	movq	-24(%rbp), %rax	# o, tmp169
	movq	%rax, %rsi	# tmp169,
	movl	$25, %edi	#,
	call	Perl_append_elem	#
	.loc 1 5557 0
	movq	-24(%rbp), %rax	# o, tmp170
	movq	%rax, %rdi	# tmp170,
	call	Perl_scalarkids	#
	.loc 1 5558 0
	movq	-24(%rbp), %rax	# o, D.22341
.L1719:
	.loc 1 5559 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE120:
	.size	Perl_ck_glob, .-Perl_ck_glob
	.section	.rodata
.LC128:
	.string	"panic: ck_grep"
	.text
	.globl	Perl_ck_grep
	.type	Perl_ck_grep, @function
Perl_ck_grep:
.LFB121:
	.loc 1 5563 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5566 0
	movq	-40(%rbp), %rax	# o, tmp90
	movzwl	32(%rax), %eax	# o_9(D)->op_type, D.22358
	cmpw	$152, %ax	#, D.22358
	jne	.L1721	#,
	.loc 1 5566 0 is_stmt 0 discriminator 1
	movl	$153, %eax	#, iftmp.1057
	jmp	.L1722	#
.L1721:
	.loc 1 5566 0 discriminator 2
	movl	$155, %eax	#, iftmp.1057
.L1722:
	.loc 1 5566 0 discriminator 3
	movw	%ax, -26(%rbp)	# iftmp.1057, type
	.loc 1 5568 0 is_stmt 1 discriminator 3
	movq	PL_ppaddr+1216(%rip), %rdx	# PL_ppaddr, D.22359
	movq	-40(%rbp), %rax	# o, tmp91
	movq	%rdx, 16(%rax)	# D.22359, o_9(D)->op_ppaddr
	.loc 1 5569 0 discriminator 3
	movl	$56, %edi	#,
	call	Perl_safesysmalloc	#
	movq	%rax, -8(%rbp)	# tmp92, gwop
	movq	-8(%rbp), %rax	# gwop, tmp93
	movl	$56, %edx	#,
	movl	$0, %esi	#,
	movq	%rax, %rdi	# tmp93,
	call	memset	#
	.loc 1 5571 0 discriminator 3
	movq	-40(%rbp), %rax	# o, tmp94
	movzbl	36(%rax), %eax	# o_9(D)->op_flags, D.22360
	movzbl	%al, %eax	# D.22360, D.22361
	andl	$64, %eax	#, D.22361
	testl	%eax, %eax	# D.22361
	je	.L1723	#,
.LBB106:
	.loc 1 5573 0
	movq	-40(%rbp), %rax	# o, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_ck_sort	#
	movq	%rax, -40(%rbp)	# tmp96, o
	.loc 1 5574 0
	movq	-40(%rbp), %rax	# o, tmp97
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_19].op_first, D.22357
	movq	8(%rax), %rax	# _20->op_sibling, tmp98
	movq	%rax, -24(%rbp)	# tmp98, kid
	.loc 1 5575 0
	movq	-24(%rbp), %rax	# kid, tmp99
	movq	(%rax), %rax	# MEM[(struct UNOP *)kid_21].op_next, D.22357
	testq	%rax, %rax	# D.22357
	jne	.L1724	#,
	.loc 1 5576 0
	movl	$.LC128, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1724:
	.loc 1 5577 0
	movq	-24(%rbp), %rax	# kid, tmp100
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_21].op_first, tmp101
	movq	%rax, -16(%rbp)	# tmp101, k
	jmp	.L1725	#
.L1726:
	.loc 1 5578 0 discriminator 2
	movq	-16(%rbp), %rax	# k, tmp102
	movq	%rax, -24(%rbp)	# tmp102, kid
	.loc 1 5577 0 discriminator 2
	movq	-16(%rbp), %rax	# k, tmp103
	movq	(%rax), %rax	# k_4->op_next, tmp104
	movq	%rax, -16(%rbp)	# tmp104, k
.L1725:
	.loc 1 5577 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, k
	jne	.L1726	#,
	.loc 1 5580 0 is_stmt 1
	movq	-24(%rbp), %rax	# kid, tmp105
	movq	-8(%rbp), %rdx	# gwop, tmp106
	movq	%rdx, (%rax)	# tmp106, kid_2->op_next
	.loc 1 5581 0
	movq	-40(%rbp), %rax	# o, tmp107
	movzbl	36(%rax), %eax	# o_19->op_flags, D.22360
	andl	$-65, %eax	#, D.22360
	movl	%eax, %edx	# D.22360, D.22360
	movq	-40(%rbp), %rax	# o, tmp108
	movb	%dl, 36(%rax)	# D.22360, o_19->op_flags
.L1723:
.LBE106:
	.loc 1 5583 0
	movq	-40(%rbp), %rax	# o, tmp109
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_1].op_first, D.22357
	movq	8(%rax), %rax	# _28->op_sibling, tmp110
	movq	%rax, -24(%rbp)	# tmp110, kid
	.loc 1 5584 0
	cmpw	$155, -26(%rbp)	#, type
	jne	.L1727	#,
	.loc 1 5585 0
	movq	-24(%rbp), %rax	# kid, tmp111
	movq	%rax, %rdi	# tmp111,
	call	Perl_list	#
	jmp	.L1728	#
.L1727:
	.loc 1 5587 0
	movq	-24(%rbp), %rax	# kid, tmp112
	movq	%rax, %rdi	# tmp112,
	call	Perl_scalar	#
.L1728:
	.loc 1 5588 0
	movq	-40(%rbp), %rax	# o, tmp113
	movq	%rax, %rdi	# tmp113,
	call	Perl_ck_fun	#
	movq	%rax, -40(%rbp)	# tmp114, o
	.loc 1 5589 0
	movl	PL_error_count(%rip), %eax	# PL_error_count, PL_error_count.1058
	testl	%eax, %eax	# PL_error_count.1058
	je	.L1729	#,
	.loc 1 5590 0
	movq	-40(%rbp), %rax	# o, D.22357
	jmp	.L1730	#
.L1729:
	.loc 1 5591 0
	movq	-40(%rbp), %rax	# o, tmp115
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_30].op_first, D.22357
	movq	8(%rax), %rax	# _33->op_sibling, tmp116
	movq	%rax, -24(%rbp)	# tmp116, kid
	.loc 1 5592 0
	movq	-24(%rbp), %rax	# kid, tmp117
	movzwl	32(%rax), %eax	# kid_34->op_type, D.22358
	testw	%ax, %ax	# D.22358
	je	.L1731	#,
	.loc 1 5593 0
	movl	$.LC128, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1731:
	.loc 1 5594 0
	movq	-24(%rbp), %rax	# kid, tmp118
	movq	40(%rax), %rax	# MEM[(struct UNOP *)kid_34].op_first, tmp119
	movq	%rax, -24(%rbp)	# tmp119, kid
	.loc 1 5596 0
	movq	-8(%rbp), %rax	# gwop, tmp120
	movzwl	-26(%rbp), %edx	# type, tmp121
	movw	%dx, 32(%rax)	# tmp121, gwop_15->op_type
	.loc 1 5597 0
	movzwl	-26(%rbp), %eax	# type, D.22361
	cltq
	movq	PL_ppaddr(,%rax,8), %rdx	# PL_ppaddr, D.22359
	movq	-8(%rbp), %rax	# gwop, tmp123
	movq	%rdx, 16(%rax)	# D.22359, gwop_15->op_ppaddr
	.loc 1 5598 0
	movq	-40(%rbp), %rax	# o, tmp124
	movq	%rax, %rdi	# tmp124,
	call	Perl_listkids	#
	movq	-8(%rbp), %rdx	# gwop, tmp125
	movq	%rax, 40(%rdx)	# D.22357, gwop_15->op_first
	.loc 1 5599 0
	movq	-8(%rbp), %rax	# gwop, tmp126
	movzbl	36(%rax), %eax	# gwop_15->op_flags, D.22360
	orl	$4, %eax	#, D.22360
	movl	%eax, %edx	# D.22360, D.22360
	movq	-8(%rbp), %rax	# gwop, tmp127
	movb	%dl, 36(%rax)	# D.22360, gwop_15->op_flags
	.loc 1 5600 0
	movq	-8(%rbp), %rax	# gwop, tmp128
	movb	$1, 37(%rax)	#, gwop_15->op_private
	.loc 1 5601 0
	movq	-24(%rbp), %rax	# kid, tmp129
	movq	(%rax), %rax	# kid_36->op_next, D.22357
	testq	%rax, %rax	# D.22357
	je	.L1732	#,
	.loc 1 5601 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# kid, tmp130
	movq	(%rax), %rax	# kid_36->op_next, iftmp.1059
	jmp	.L1733	#
.L1732:
	.loc 1 5601 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_linklist	#
.L1733:
	.loc 1 5601 0 discriminator 3
	movq	-8(%rbp), %rdx	# gwop, tmp132
	movq	%rax, 48(%rdx)	# iftmp.1059, gwop_15->op_other
	.loc 1 5602 0 is_stmt 1 discriminator 3
	movzwl	-26(%rbp), %eax	# type, D.22361
	movl	$512, %esi	#,
	movl	%eax, %edi	# D.22361,
	call	Perl_pad_alloc	#
	movq	-8(%rbp), %rdx	# gwop, tmp133
	movq	%rax, 24(%rdx)	# D.22362, gwop_15->op_targ
	.loc 1 5603 0 discriminator 3
	movq	-24(%rbp), %rax	# kid, tmp134
	movq	-8(%rbp), %rdx	# gwop, tmp135
	movq	%rdx, (%rax)	# tmp135, kid_36->op_next
	.loc 1 5605 0 discriminator 3
	movq	-40(%rbp), %rax	# o, tmp136
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_30].op_first, D.22357
	movq	8(%rax), %rax	# _47->op_sibling, tmp137
	movq	%rax, -24(%rbp)	# tmp137, kid
	.loc 1 5606 0 discriminator 3
	cmpq	$0, -24(%rbp)	#, kid
	je	.L1734	#,
	.loc 1 5606 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# kid, tmp138
	movq	8(%rax), %rax	# kid_48->op_sibling, D.22357
	testq	%rax, %rax	# D.22357
	jne	.L1735	#,
.L1734:
	.loc 1 5607 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp139
	movzwl	32(%rax), %eax	# o_30->op_type, D.22358
	cmpw	$351, %ax	#, D.22358
	jne	.L1736	#,
	.loc 1 5607 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp140
	movq	%rax, %rdi	# tmp140,
	call	Perl_custom_op_desc	#
	jmp	.L1737	#
.L1736:
	.loc 1 5607 0 discriminator 2
	movq	-40(%rbp), %rax	# o, tmp141
	movzwl	32(%rax), %eax	# o_30->op_type, D.22358
	movzwl	%ax, %eax	# D.22358, D.22361
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.1060
.L1737:
	.loc 1 5607 0 discriminator 3
	movq	-40(%rbp), %rdx	# o, tmp143
	movq	%rax, %rsi	# iftmp.1060,
	movq	%rdx, %rdi	# tmp143,
	call	S_too_few_arguments	#
	jmp	.L1730	#
.L1735:
	.loc 1 5608 0 is_stmt 1
	movq	-24(%rbp), %rax	# kid, tmp144
	movq	8(%rax), %rax	# kid_48->op_sibling, tmp145
	movq	%rax, -24(%rbp)	# tmp145, kid
	jmp	.L1738	#
.L1739:
	.loc 1 5609 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp146
	movl	$152, %esi	#,
	movq	%rax, %rdi	# tmp146,
	call	Perl_mod	#
	.loc 1 5608 0 discriminator 2
	movq	-24(%rbp), %rax	# kid, tmp147
	movq	8(%rax), %rax	# kid_3->op_sibling, tmp148
	movq	%rax, -24(%rbp)	# tmp148, kid
.L1738:
	.loc 1 5608 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)	#, kid
	jne	.L1739	#,
	.loc 1 5611 0 is_stmt 1
	movq	-8(%rbp), %rax	# gwop, D.22357
.L1730:
	.loc 1 5612 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE121:
	.size	Perl_ck_grep, .-Perl_ck_grep
	.globl	Perl_ck_index
	.type	Perl_ck_index, @function
Perl_ck_index:
.LFB122:
	.loc 1 5616 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5617 0
	movq	-24(%rbp), %rax	# o, tmp67
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22364
	movzbl	%al, %eax	# D.22364, D.22365
	andl	$4, %eax	#, D.22365
	testl	%eax, %eax	# D.22365
	je	.L1741	#,
.LBB107:
	.loc 1 5618 0
	movq	-24(%rbp), %rax	# o, tmp68
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, D.22366
	movq	8(%rax), %rax	# _6->op_sibling, tmp69
	movq	%rax, -8(%rbp)	# tmp69, kid
	.loc 1 5619 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1742	#,
	.loc 1 5620 0
	movq	-8(%rbp), %rax	# kid, tmp70
	movq	8(%rax), %rax	# kid_7->op_sibling, tmp71
	movq	%rax, -8(%rbp)	# tmp71, kid
.L1742:
	.loc 1 5621 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1741	#,
	.loc 1 5621 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp72
	movzwl	32(%rax), %eax	# kid_1->op_type, D.22367
	cmpw	$5, %ax	#, D.22367
	jne	.L1741	#,
	.loc 1 5622 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp73
	movq	40(%rax), %rax	# MEM[(struct SVOP *)kid_1].op_sv, D.22368
	movl	$0, %esi	#,
	movq	%rax, %rdi	# D.22368,
	call	Perl_fbm_compile	#
.L1741:
.LBE107:
	.loc 1 5624 0
	movq	-24(%rbp), %rax	# o, tmp74
	movq	%rax, %rdi	# tmp74,
	call	Perl_ck_fun	#
	.loc 1 5625 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE122:
	.size	Perl_ck_index, .-Perl_ck_index
	.globl	Perl_ck_lengthconst
	.type	Perl_ck_lengthconst, @function
Perl_ck_lengthconst:
.LFB123:
	.loc 1 5629 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5631 0
	movq	-8(%rbp), %rax	# o, tmp61
	movq	%rax, %rdi	# tmp61,
	call	Perl_ck_fun	#
	.loc 1 5632 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE123:
	.size	Perl_ck_lengthconst, .-Perl_ck_lengthconst
	.globl	Perl_ck_lfun
	.type	Perl_ck_lfun, @function
Perl_ck_lfun:
.LFB124:
	.loc 1 5636 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5637 0
	movq	-40(%rbp), %rax	# o, tmp63
	movzwl	32(%rax), %eax	# o_1(D)->op_type, tmp64
	movw	%ax, -18(%rbp)	# tmp64, type
	.loc 1 5638 0
	movzwl	-18(%rbp), %ebx	# type, D.22370
	movq	-40(%rbp), %rax	# o, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_ck_fun	#
	movl	%ebx, %esi	# D.22370,
	movq	%rax, %rdi	# D.22371,
	call	S_modkids	#
	.loc 1 5639 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE124:
	.size	Perl_ck_lfun, .-Perl_ck_lfun
	.section	.rodata
.LC129:
	.string	"defined(@array) is deprecated"
	.align 8
.LC130:
	.string	"\t(Maybe you should just omit the defined()?)\n"
.LC131:
	.string	"defined(%%hash) is deprecated"
	.text
	.globl	Perl_ck_defined
	.type	Perl_ck_defined, @function
Perl_ck_defined:
.LFB125:
	.loc 1 5643 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5644 0
	movq	-8(%rbp), %rax	# o, tmp93
	movzbl	36(%rax), %eax	# o_1(D)->op_flags, D.22372
	movzbl	%al, %eax	# D.22372, D.22373
	andl	$4, %eax	#, D.22373
	testl	%eax, %eax	# D.22373
	je	.L1749	#,
	.loc 1 5644 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1061
	movq	80(%rax), %rax	# PL_curcop.1061_5->cop_warnings, D.22374
	testq	%rax, %rax	# D.22374
	je	.L1750	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1062
	movq	80(%rax), %rax	# PL_curcop.1062_7->cop_warnings, D.22374
	cmpq	$32, %rax	#, D.22374
	je	.L1750	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1063
	movq	80(%rax), %rax	# PL_curcop.1063_9->cop_warnings, D.22374
	cmpq	$16, %rax	#, D.22374
	je	.L1751	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1064
	movq	80(%rax), %rax	# PL_curcop.1064_11->cop_warnings, D.22374
	movq	(%rax), %rax	# _12->sv_any, D.22375
	movq	(%rax), %rax	# MEM[(struct XPV *)_13].xpv_pv, D.22376
	movzbl	(%rax), %eax	# *_14, D.22377
	movsbl	%al, %eax	# D.22377, D.22373
	andl	$16, %eax	#, D.22373
	testl	%eax, %eax	# D.22373
	jne	.L1751	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1065
	movq	80(%rax), %rax	# PL_curcop.1065_18->cop_warnings, D.22374
	movq	(%rax), %rax	# _19->sv_any, D.22375
	movq	(%rax), %rax	# MEM[(struct XPV *)_20].xpv_pv, D.22376
	addq	$7, %rax	#, D.22376
	movzbl	(%rax), %eax	# *_22, D.22377
	movsbl	%al, %eax	# D.22377, D.22373
	andl	$1, %eax	#, D.22373
	testl	%eax, %eax	# D.22373
	jne	.L1751	#,
.L1750:
	.loc 1 5644 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1066
	movq	80(%rax), %rax	# PL_curcop.1066_26->cop_warnings, D.22374
	testq	%rax, %rax	# D.22374
	jne	.L1749	#,
	.loc 1 5644 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1067
	movzbl	%al, %eax	# PL_dowarn.1067, D.22373
	andl	$1, %eax	#, D.22373
	testl	%eax, %eax	# D.22373
	je	.L1749	#,
.L1751:
	.loc 1 5645 0 is_stmt 1
	movq	-8(%rbp), %rax	# o, tmp94
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_1(D)].op_first, D.22378
	movzwl	32(%rax), %eax	# _31->op_type, D.22379
	movzwl	%ax, %eax	# D.22379, D.22373
	cmpl	$37, %eax	#, D.22373
	je	.L1753	#,
	cmpl	$37, %eax	#, D.22373
	jg	.L1754	#,
	cmpl	$10, %eax	#, D.22373
	je	.L1753	#,
	cmpl	$11, %eax	#, D.22373
	je	.L1755	#,
	.loc 1 5673 0
	jmp	.L1749	#
.L1754:
	.loc 1 5645 0
	cmpl	$125, %eax	#, D.22373
	je	.L1759	#,
	cmpl	$134, %eax	#, D.22373
	je	.L1760	#,
	.loc 1 5673 0
	jmp	.L1749	#
.L1753:
	.loc 1 5654 0
	movl	$.LC129, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 5656 0
	movl	$.LC130, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 5658 0
	jmp	.L1749	#
.L1755:
	.loc 1 5666 0
	movl	$.LC131, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 5668 0
	movl	$.LC130, %esi	#,
	movl	$7170, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 5670 0
	jmp	.L1749	#
.L1759:
	.loc 1 5651 0
	nop
	jmp	.L1749	#
.L1760:
	.loc 1 5664 0
	nop
.L1749:
	.loc 1 5676 0
	movq	-8(%rbp), %rax	# o, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_ck_rfun	#
	.loc 1 5677 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE125:
	.size	Perl_ck_defined, .-Perl_ck_defined
	.globl	Perl_ck_rfun
	.type	Perl_ck_rfun, @function
Perl_ck_rfun:
.LFB126:
	.loc 1 5681 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5682 0
	movq	-40(%rbp), %rax	# o, tmp63
	movzwl	32(%rax), %eax	# o_1(D)->op_type, tmp64
	movw	%ax, -18(%rbp)	# tmp64, type
	.loc 1 5683 0
	movzwl	-18(%rbp), %ebx	# type, D.22384
	movq	-40(%rbp), %rax	# o, tmp65
	movq	%rax, %rdi	# tmp65,
	call	Perl_ck_fun	#
	movl	%ebx, %esi	# D.22384,
	movq	%rax, %rdi	# D.22385,
	call	Perl_refkids	#
	.loc 1 5684 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE126:
	.size	Perl_ck_rfun, .-Perl_ck_rfun
	.globl	Perl_ck_listiob
	.type	Perl_ck_listiob, @function
Perl_ck_listiob:
.LFB127:
	.loc 1 5688 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$24, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5691 0
	movq	-24(%rbp), %rax	# o, tmp78
	movq	40(%rax), %rbx	# MEM[(struct LISTOP *)o_5(D)].op_first, kid
	.loc 1 5692 0
	testq	%rbx, %rbx	# kid
	jne	.L1764	#,
	.loc 1 5693 0
	movq	-24(%rbp), %rax	# o, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_force_list	#
	movq	%rax, -24(%rbp)	# tmp80, o
	.loc 1 5694 0
	movq	-24(%rbp), %rax	# o, tmp81
	movq	40(%rax), %rbx	# MEM[(struct LISTOP *)o_7].op_first, kid
.L1764:
	.loc 1 5696 0
	movzwl	32(%rbx), %eax	# kid_2->op_type, D.22386
	cmpw	$3, %ax	#, D.22386
	jne	.L1765	#,
	.loc 1 5697 0
	movq	8(%rbx), %rbx	# kid_2->op_sibling, kid
.L1765:
	.loc 1 5698 0
	testq	%rbx, %rbx	# kid
	je	.L1766	#,
	.loc 1 5698 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp82
	movzbl	36(%rax), %eax	# o_1->op_flags, D.22387
	movzbl	%al, %eax	# D.22387, D.22388
	andl	$64, %eax	#, D.22388
	testl	%eax, %eax	# D.22388
	je	.L1766	#,
	.loc 1 5699 0 is_stmt 1
	movq	8(%rbx), %rbx	# kid_3->op_sibling, kid
	jmp	.L1767	#
.L1766:
	.loc 1 5700 0
	testq	%rbx, %rbx	# kid
	je	.L1767	#,
	.loc 1 5700 0 is_stmt 0 discriminator 1
	movq	8(%rbx), %rax	# kid_3->op_sibling, D.22389
	testq	%rax, %rax	# D.22389
	jne	.L1767	#,
	.loc 1 5701 0 is_stmt 1
	movzwl	32(%rbx), %eax	# kid_3->op_type, D.22386
	cmpw	$5, %ax	#, D.22386
	jne	.L1767	#,
	.loc 1 5701 0 is_stmt 0 discriminator 1
	movzbl	37(%rbx), %eax	# kid_3->op_private, D.22387
	movzbl	%al, %eax	# D.22387, D.22388
	andl	$64, %eax	#, D.22388
	testl	%eax, %eax	# D.22388
	je	.L1767	#,
	.loc 1 5702 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp83
	movzbl	36(%rax), %eax	# o_1->op_flags, D.22387
	orl	$64, %eax	#, D.22387
	movl	%eax, %edx	# D.22387, D.22387
	movq	-24(%rbp), %rax	# o, tmp84
	movb	%dl, 36(%rax)	# D.22387, o_1->op_flags
	.loc 1 5703 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.22389,
	movl	$16, %esi	#,
	movl	$14, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rbx	#, kid
	.loc 1 5704 0
	movq	-24(%rbp), %rax	# o, tmp85
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_1].op_first, D.22389
	movq	%rbx, 8(%rax)	# kid, _24->op_sibling
	.loc 1 5705 0
	movq	-24(%rbp), %rax	# o, tmp86
	movq	%rbx, 48(%rax)	# kid, MEM[(struct LISTOP *)o_1].op_last
	.loc 1 5706 0
	movq	8(%rbx), %rbx	# kid_23->op_sibling, kid
.L1767:
	.loc 1 5710 0
	testq	%rbx, %rbx	# kid
	jne	.L1768	#,
	.loc 1 5711 0
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	#, D.22389
	movq	-24(%rbp), %rax	# o, tmp87
	movzwl	32(%rax), %eax	# o_1->op_type, D.22386
	movzwl	%ax, %eax	# D.22386, D.22388
	movq	-24(%rbp), %rcx	# o, tmp88
	movq	%rcx, %rsi	# tmp88,
	movl	%eax, %edi	# D.22388,
	call	Perl_append_elem	#
.L1768:
	.loc 1 5713 0
	movq	-24(%rbp), %rax	# o, tmp89
	movq	%rax, %rdi	# tmp89,
	call	Perl_listkids	#
	.loc 1 5714 0
	addq	$24, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE127:
	.size	Perl_ck_listiob, .-Perl_ck_listiob
	.globl	Perl_ck_sassign
	.type	Perl_ck_sassign, @function
Perl_ck_sassign:
.LFB128:
	.loc 1 5718 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5719 0
	movq	-40(%rbp), %rax	# o, tmp82
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, tmp83
	movq	%rax, -24(%rbp)	# tmp83, kid
	.loc 1 5721 0
	movq	-24(%rbp), %rax	# kid, tmp84
	movzwl	32(%rax), %eax	# kid_3->op_type, D.22391
	movzwl	%ax, %eax	# D.22391, D.22392
	cltq
	movl	PL_opargs(,%rax,4), %eax	# PL_opargs, D.22393
	andl	$256, %eax	#, D.22393
	testl	%eax, %eax	# D.22393
	je	.L1771	#,
	.loc 1 5722 0
	movq	-24(%rbp), %rax	# kid, tmp86
	movzbl	36(%rax), %eax	# kid_3->op_flags, D.22394
	movzbl	%al, %eax	# D.22394, D.22392
	andl	$64, %eax	#, D.22392
	testl	%eax, %eax	# D.22392
	jne	.L1771	#,
	.loc 1 5724 0
	movq	-24(%rbp), %rax	# kid, tmp87
	movzbl	37(%rax), %eax	# kid_3->op_private, D.22394
	movzbl	%al, %eax	# D.22394, D.22392
	andl	$16, %eax	#, D.22392
	testl	%eax, %eax	# D.22392
	jne	.L1771	#,
.LBB108:
	.loc 1 5726 0
	movq	-24(%rbp), %rax	# kid, tmp88
	movq	8(%rax), %rax	# kid_3->op_sibling, tmp89
	movq	%rax, -16(%rbp)	# tmp89, kkid
	.loc 1 5729 0
	cmpq	$0, -16(%rbp)	#, kkid
	je	.L1771	#,
	.loc 1 5729 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# kkid, tmp90
	movzwl	32(%rax), %eax	# kkid_14->op_type, D.22391
	cmpw	$9, %ax	#, D.22391
	jne	.L1771	#,
	.loc 1 5730 0 is_stmt 1
	movq	-16(%rbp), %rax	# kkid, tmp91
	movzbl	37(%rax), %eax	# kkid_14->op_private, D.22394
	testb	%al, %al	# D.22395
	js	.L1771	#,
	.loc 1 5732 0
	movq	-16(%rbp), %rax	# kkid, tmp92
	movq	24(%rax), %rdx	# kkid_14->op_targ, D.22396
	movq	-24(%rbp), %rax	# kid, tmp93
	movq	%rdx, 24(%rax)	# D.22396, kid_3->op_targ
	.loc 1 5733 0
	movq	-16(%rbp), %rax	# kkid, tmp94
	movq	$0, 24(%rax)	#, kkid_14->op_targ
	.loc 1 5735 0
	movq	-40(%rbp), %rax	# o, tmp95
	movq	8(%rax), %rdx	# o_2(D)->op_sibling, D.22390
	movq	-24(%rbp), %rax	# kid, tmp96
	movq	%rdx, 8(%rax)	# D.22390, kid_3->op_sibling
	.loc 1 5736 0
	movq	-40(%rbp), %rax	# o, tmp97
	movq	$0, 40(%rax)	#, MEM[(struct LISTOP *)o_2(D)].op_first
	.loc 1 5737 0
	movq	-40(%rbp), %rax	# o, tmp98
	movq	%rax, %rdi	# tmp98,
	call	Perl_op_free	#
	.loc 1 5738 0
	movq	-16(%rbp), %rax	# kkid, tmp99
	movq	%rax, %rdi	# tmp99,
	call	Perl_op_free	#
	.loc 1 5739 0
	movq	-24(%rbp), %rax	# kid, tmp100
	movzbl	37(%rax), %eax	# kid_3->op_private, D.22394
	orl	$16, %eax	#, D.22394
	movl	%eax, %edx	# D.22394, D.22394
	movq	-24(%rbp), %rax	# kid, tmp101
	movb	%dl, 37(%rax)	# D.22394, kid_3->op_private
	.loc 1 5740 0
	movq	-24(%rbp), %rax	# kid, D.22390
	jmp	.L1772	#
.L1771:
.LBE108:
	.loc 1 5744 0
	movq	-24(%rbp), %rax	# kid, tmp102
	movzwl	32(%rax), %eax	# kid_3->op_type, D.22391
	cmpw	$43, %ax	#, D.22391
	jne	.L1773	#,
.LBB109:
	.loc 1 5745 0
	movq	-24(%rbp), %rax	# kid, tmp103
	movq	8(%rax), %rax	# kid_3->op_sibling, tmp104
	movq	%rax, -8(%rbp)	# tmp104, kkid
	.loc 1 5746 0
	cmpq	$0, -8(%rbp)	#, kkid
	je	.L1773	#,
	.loc 1 5746 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kkid, tmp105
	movzwl	32(%rax), %eax	# kkid_24->op_type, D.22391
	cmpw	$9, %ax	#, D.22391
	jne	.L1773	#,
	.loc 1 5747 0 is_stmt 1
	movq	-8(%rbp), %rax	# kkid, tmp106
	movzbl	37(%rax), %eax	# kkid_24->op_private, D.22394
	testb	%al, %al	# D.22395
	jns	.L1773	#,
	.loc 1 5749 0
	movq	-40(%rbp), %rax	# o, tmp107
	movq	$0, 40(%rax)	#, MEM[(struct LISTOP *)o_2(D)].op_first
	.loc 1 5750 0
	movq	-24(%rbp), %rax	# kid, tmp108
	movq	$0, 8(%rax)	#, kid_3->op_sibling
	.loc 1 5751 0
	movq	-40(%rbp), %rax	# o, tmp109
	movq	%rax, %rdi	# tmp109,
	call	Perl_op_free	#
	.loc 1 5752 0
	movq	-24(%rbp), %rax	# kid, tmp110
	movq	%rax, %rdi	# tmp110,
	call	Perl_op_free	#
	.loc 1 5753 0
	movq	-8(%rbp), %rax	# kkid, D.22390
	jmp	.L1772	#
.L1773:
.LBE109:
	.loc 1 5756 0
	movq	-40(%rbp), %rax	# o, D.22390
.L1772:
	.loc 1 5757 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE128:
	.size	Perl_ck_sassign, .-Perl_ck_sassign
	.globl	Perl_ck_match
	.type	Perl_ck_match, @function
Perl_ck_match:
.LFB129:
	.loc 1 5761 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5762 0
	movq	-8(%rbp), %rax	# o, tmp63
	movzbl	37(%rax), %eax	# o_1(D)->op_private, D.22397
	orl	$64, %eax	#, D.22397
	movl	%eax, %edx	# D.22397, D.22397
	movq	-8(%rbp), %rax	# o, tmp64
	movb	%dl, 37(%rax)	# D.22397, o_1(D)->op_private
	.loc 1 5763 0
	movq	-8(%rbp), %rax	# o, D.22398
	.loc 1 5764 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE129:
	.size	Perl_ck_match, .-Perl_ck_match
	.globl	Perl_ck_method
	.type	Perl_ck_method, @function
Perl_ck_method:
.LFB130:
	.loc 1 5768 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5769 0
	movq	-40(%rbp), %rax	# o, tmp77
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_3(D)].op_first, tmp78
	movq	%rax, -16(%rbp)	# tmp78, kid
	.loc 1 5770 0
	movq	-16(%rbp), %rax	# kid, tmp79
	movzwl	32(%rax), %eax	# kid_4->op_type, D.22400
	cmpw	$5, %ax	#, D.22400
	jne	.L1777	#,
.LBB110:
	.loc 1 5771 0
	movq	-16(%rbp), %rax	# kid, tmp80
	movq	40(%rax), %rax	# MEM[(struct SVOP *)kid_4].op_sv, tmp81
	movq	%rax, -24(%rbp)	# tmp81, sv
	.loc 1 5772 0
	movq	-24(%rbp), %rax	# sv, tmp82
	movq	(%rax), %rax	# sv_6->sv_any, D.22401
	movq	(%rax), %rax	# MEM[(struct XPV *)_7].xpv_pv, D.22402
	movl	$58, %esi	#,
	movq	%rax, %rdi	# D.22402,
	call	strchr	#
	testq	%rax, %rax	# D.22402
	jne	.L1777	#,
	.loc 1 5772 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp83
	movq	(%rax), %rax	# sv_6->sv_any, D.22401
	movq	(%rax), %rax	# MEM[(struct XPV *)_10].xpv_pv, D.22402
	movl	$39, %esi	#,
	movq	%rax, %rdi	# D.22402,
	call	strchr	#
	testq	%rax, %rax	# D.22402
	jne	.L1777	#,
.LBB111:
	.loc 1 5774 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp84
	movl	12(%rax), %eax	# sv_6->sv_flags, D.22403
	andl	$8388608, %eax	#, D.22403
	testl	%eax, %eax	# D.22403
	je	.L1778	#,
	.loc 1 5774 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# sv, tmp85
	movl	12(%rax), %eax	# sv_6->sv_flags, D.22403
	andl	$1048576, %eax	#, D.22403
	testl	%eax, %eax	# D.22403
	jne	.L1779	#,
.L1778:
	.loc 1 5775 0 is_stmt 1
	movq	-24(%rbp), %rax	# sv, tmp86
	movq	(%rax), %rax	# sv_6->sv_any, D.22401
	movq	8(%rax), %rax	# MEM[(struct XPV *)_17].xpv_cur, D.22404
	movl	%eax, %ecx	# D.22404, D.22405
	movq	-24(%rbp), %rax	# sv, tmp87
	movq	(%rax), %rax	# sv_6->sv_any, D.22401
	movq	(%rax), %rax	# MEM[(struct XPV *)_20].xpv_pv, D.22402
	movl	$0, %edx	#,
	movl	%ecx, %esi	# D.22405,
	movq	%rax, %rdi	# D.22402,
	call	Perl_newSVpvn_share	#
	movq	%rax, -24(%rbp)	# tmp88, sv
	jmp	.L1780	#
.L1779:
	.loc 1 5778 0
	movq	-16(%rbp), %rax	# kid, tmp89
	movq	$0, 40(%rax)	#, MEM[(struct SVOP *)kid_4].op_sv
.L1780:
	.loc 1 5780 0
	movq	-24(%rbp), %rax	# sv, tmp90
	movq	%rax, %rdx	# tmp90,
	movl	$0, %esi	#,
	movl	$350, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -8(%rbp)	# tmp91, cmop
	.loc 1 5781 0
	movq	-40(%rbp), %rax	# o, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_op_free	#
	.loc 1 5782 0
	movq	-8(%rbp), %rax	# cmop, D.22399
	jmp	.L1781	#
.L1777:
.LBE111:
.LBE110:
	.loc 1 5785 0
	movq	-40(%rbp), %rax	# o, D.22399
.L1781:
	.loc 1 5786 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE130:
	.size	Perl_ck_method, .-Perl_ck_method
	.globl	Perl_ck_null
	.type	Perl_ck_null, @function
Perl_ck_null:
.LFB131:
	.loc 1 5790 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5791 0
	movq	-8(%rbp), %rax	# o, D.22406
	.loc 1 5792 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE131:
	.size	Perl_ck_null, .-Perl_ck_null
	.section	.rodata
.LC132:
	.string	"open_IN"
.LC133:
	.string	"open_OUT"
	.text
	.globl	Perl_ck_open
	.type	Perl_ck_open, @function
Perl_ck_open:
.LFB132:
	.loc 1 5796 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$80, %rsp	#,
	movq	%rdi, -72(%rbp)	# o, o
	.loc 1 5797 0
	movq	PL_hintgv(%rip), %rax	# PL_hintgv, PL_hintgv.1068
	movq	(%rax), %rax	# PL_hintgv.1068_2->sv_any, D.22408
	movq	56(%rax), %rax	# _3->xgv_gp, D.22409
	movq	40(%rax), %rax	# _4->gp_hv, tmp87
	movq	%rax, -48(%rbp)	# tmp87, table
	.loc 1 5798 0
	cmpq	$0, -48(%rbp)	#, table
	je	.L1785	#,
.LBB112:
	.loc 1 5801 0
	movq	-48(%rbp), %rax	# table, tmp88
	movl	$0, %ecx	#,
	movl	$7, %edx	#,
	movl	$.LC132, %esi	#,
	movq	%rax, %rdi	# tmp88,
	call	Perl_hv_fetch	#
	movq	%rax, -40(%rbp)	# tmp89, svp
	.loc 1 5802 0
	cmpq	$0, -40(%rbp)	#, svp
	je	.L1786	#,
	.loc 1 5802 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# svp, tmp90
	movq	(%rax), %rax	# *svp_6, D.22410
	testq	%rax, %rax	# D.22410
	je	.L1786	#,
	.loc 1 5803 0 is_stmt 1
	movq	-40(%rbp), %rax	# svp, tmp91
	movq	(%rax), %rax	# *svp_6, D.22410
	movq	%rax, %rdi	# D.22410,
	call	Perl_mode_from_discipline	#
	movl	%eax, -52(%rbp)	# tmp92, mode
.L1786:
	.loc 1 5810 0
	movq	-48(%rbp), %rax	# table, tmp93
	movl	$0, %ecx	#,
	movl	$8, %edx	#,
	movl	$.LC133, %esi	#,
	movq	%rax, %rdi	# tmp93,
	call	Perl_hv_fetch	#
	movq	%rax, -40(%rbp)	# tmp94, svp
	.loc 1 5811 0
	cmpq	$0, -40(%rbp)	#, svp
	je	.L1785	#,
	.loc 1 5811 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# svp, tmp95
	movq	(%rax), %rax	# *svp_10, D.22410
	testq	%rax, %rax	# D.22410
	je	.L1785	#,
	.loc 1 5812 0 is_stmt 1
	movq	-40(%rbp), %rax	# svp, tmp96
	movq	(%rax), %rax	# *svp_10, D.22410
	movq	%rax, %rdi	# D.22410,
	call	Perl_mode_from_discipline	#
	movl	%eax, -52(%rbp)	# tmp97, mode
.L1785:
.LBE112:
	.loc 1 5819 0
	movq	-72(%rbp), %rax	# o, tmp98
	movzwl	32(%rax), %eax	# o_14(D)->op_type, D.22411
	cmpw	$24, %ax	#, D.22411
	jne	.L1787	#,
	.loc 1 5820 0
	movq	-72(%rbp), %rax	# o, D.22407
	jmp	.L1788	#
.L1787:
.LBB113:
	.loc 1 5824 0
	movq	-72(%rbp), %rax	# o, tmp99
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_14(D)].op_first, tmp100
	movq	%rax, -32(%rbp)	# tmp100, first
	.loc 1 5825 0
	movq	-72(%rbp), %rax	# o, tmp101
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)o_14(D)].op_last, tmp102
	movq	%rax, -24(%rbp)	# tmp102, last
	.loc 1 5829 0
	movq	-24(%rbp), %rax	# last, tmp103
	movzwl	32(%rax), %eax	# last_18->op_type, D.22411
	cmpw	$5, %ax	#, D.22411
	jne	.L1789	#,
	.loc 1 5830 0 discriminator 1
	movq	-24(%rbp), %rax	# last, tmp104
	movzbl	37(%rax), %eax	# last_18->op_private, D.22412
	movzbl	%al, %eax	# D.22412, D.22413
	andl	$64, %eax	#, D.22413
	.loc 1 5829 0 discriminator 1
	testl	%eax, %eax	# D.22413
	je	.L1789	#,
	.loc 1 5831 0
	movq	-24(%rbp), %rax	# last, tmp105
	movzbl	37(%rax), %eax	# last_18->op_private, D.22412
	movzbl	%al, %eax	# D.22412, D.22413
	andl	$8, %eax	#, D.22413
	.loc 1 5830 0
	testl	%eax, %eax	# D.22413
	je	.L1789	#,
	.loc 1 5832 0
	movq	-32(%rbp), %rax	# first, tmp106
	movq	8(%rax), %rax	# first_17->op_sibling, tmp107
	movq	%rax, -16(%rbp)	# tmp107, oa
	.loc 1 5831 0
	cmpq	$0, -16(%rbp)	#, oa
	je	.L1789	#,
	.loc 1 5833 0
	movq	-16(%rbp), %rax	# oa, tmp108
	movq	8(%rax), %rax	# oa_26->op_sibling, tmp109
	movq	%rax, -16(%rbp)	# tmp109, oa
	.loc 1 5832 0
	cmpq	$0, -16(%rbp)	#, oa
	je	.L1789	#,
	.loc 1 5834 0
	movq	-16(%rbp), %rax	# oa, tmp110
	movq	40(%rax), %rax	# MEM[(struct SVOP *)oa_27].op_sv, D.22410
	movl	12(%rax), %eax	# _28->sv_flags, D.22414
	andl	$262144, %eax	#, D.22414
	.loc 1 5833 0
	testl	%eax, %eax	# D.22414
	je	.L1789	#,
	.loc 1 5835 0
	movq	-16(%rbp), %rax	# oa, tmp111
	movq	40(%rax), %rax	# MEM[(struct SVOP *)oa_27].op_sv, D.22410
	movq	(%rax), %rax	# _31->sv_any, D.22415
	movq	(%rax), %rax	# MEM[(struct XPV *)_32].xpv_pv, tmp112
	movq	%rax, -8(%rbp)	# tmp112, mode
	.loc 1 5834 0
	cmpq	$0, -8(%rbp)	#, mode
	je	.L1789	#,
	.loc 1 5836 0
	movq	-8(%rbp), %rax	# mode, tmp113
	movzbl	(%rax), %eax	# *mode_33, D.22416
	.loc 1 5835 0
	cmpb	$62, %al	#, D.22416
	jne	.L1789	#,
	.loc 1 5836 0
	movq	-8(%rbp), %rax	# mode, tmp114
	addq	$1, %rax	#, D.22417
	movzbl	(%rax), %eax	# *_35, D.22416
	cmpb	$38, %al	#, D.22416
	jne	.L1789	#,
	.loc 1 5837 0 discriminator 1
	movq	-16(%rbp), %rax	# oa, tmp115
	movq	8(%rax), %rax	# oa_27->op_sibling, D.22407
	.loc 1 5836 0 discriminator 1
	cmpq	-24(%rbp), %rax	# last, D.22407
	jne	.L1789	#,
	.loc 1 5838 0
	movq	-24(%rbp), %rax	# last, tmp116
	movzbl	37(%rax), %eax	# last_18->op_private, D.22412
	andl	$-9, %eax	#, D.22412
	movl	%eax, %edx	# D.22412, D.22412
	movq	-24(%rbp), %rax	# last, tmp117
	movb	%dl, 37(%rax)	# D.22412, last_18->op_private
.L1789:
.LBE113:
	.loc 1 5840 0
	movq	-72(%rbp), %rax	# o, tmp118
	movq	%rax, %rdi	# tmp118,
	call	Perl_ck_fun	#
.L1788:
	.loc 1 5841 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE132:
	.size	Perl_ck_open, .-Perl_ck_open
	.globl	Perl_ck_repeat
	.type	Perl_ck_repeat, @function
Perl_ck_repeat:
.LFB133:
	.loc 1 5845 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$16, %rsp	#,
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 5846 0
	movq	-8(%rbp), %rax	# o, tmp69
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_1(D)].op_first, D.22420
	movzbl	36(%rax), %eax	# _2->op_flags, D.22421
	movzbl	%al, %eax	# D.22421, D.22422
	andl	$8, %eax	#, D.22422
	testl	%eax, %eax	# D.22422
	je	.L1791	#,
	.loc 1 5847 0
	movq	-8(%rbp), %rax	# o, tmp70
	movzbl	37(%rax), %eax	# o_1(D)->op_private, D.22421
	orl	$64, %eax	#, D.22421
	movl	%eax, %edx	# D.22421, D.22421
	movq	-8(%rbp), %rax	# o, tmp71
	movb	%dl, 37(%rax)	# D.22421, o_1(D)->op_private
	.loc 1 5848 0
	movq	-8(%rbp), %rax	# o, tmp72
	movq	40(%rax), %rax	# MEM[(struct BINOP *)o_1(D)].op_first, D.22420
	movq	%rax, %rdi	# D.22420,
	call	Perl_force_list	#
	movq	-8(%rbp), %rdx	# o, tmp73
	movq	%rax, 40(%rdx)	# D.22420, MEM[(struct BINOP *)o_1(D)].op_first
	jmp	.L1792	#
.L1791:
	.loc 1 5851 0
	movq	-8(%rbp), %rax	# o, tmp74
	movq	%rax, %rdi	# tmp74,
	call	Perl_scalar	#
.L1792:
	.loc 1 5852 0
	movq	-8(%rbp), %rax	# o, D.22420
	.loc 1 5853 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE133:
	.size	Perl_ck_repeat, .-Perl_ck_repeat
	.section	.rodata
.LC134:
	.string	".pm"
.LC135:
	.string	"require"
.LC136:
	.string	"CORE::GLOBAL::require"
	.text
	.globl	Perl_ck_require
	.type	Perl_ck_require, @function
Perl_ck_require:
.LFB134:
	.loc 1 5857 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5860 0
	movq	-40(%rbp), %rax	# o, tmp119
	movzbl	36(%rax), %eax	# o_4(D)->op_flags, D.22424
	movzbl	%al, %eax	# D.22424, D.22425
	andl	$4, %eax	#, D.22425
	testl	%eax, %eax	# D.22425
	je	.L1795	#,
.LBB114:
	.loc 1 5861 0
	movq	-40(%rbp), %rax	# o, tmp120
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_4(D)].op_first, tmp121
	movq	%rax, -16(%rbp)	# tmp121, kid
	.loc 1 5863 0
	movq	-16(%rbp), %rax	# kid, tmp122
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22426
	cmpw	$5, %ax	#, D.22426
	jne	.L1795	#,
	.loc 1 5863 0 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	# kid, tmp123
	movzbl	37(%rax), %eax	# kid_8->op_private, D.22424
	movzbl	%al, %eax	# D.22424, D.22425
	andl	$64, %eax	#, D.22425
	testl	%eax, %eax	# D.22425
	je	.L1795	#,
.LBB115:
	.loc 1 5865 0 is_stmt 1
	movq	-16(%rbp), %rax	# kid, tmp124
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movq	(%rax), %rax	# _13->sv_any, D.22428
	movq	(%rax), %rax	# MEM[(struct XPV *)_14].xpv_pv, tmp125
	movq	%rax, -24(%rbp)	# tmp125, s
	jmp	.L1796	#
.L1798:
	.loc 1 5866 0
	movq	-24(%rbp), %rax	# s, tmp126
	movzbl	(%rax), %eax	# *s_2, D.22429
	cmpb	$58, %al	#, D.22429
	jne	.L1797	#,
	.loc 1 5866 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# s, tmp127
	addq	$1, %rax	#, D.22430
	movzbl	(%rax), %eax	# *_18, D.22429
	cmpb	$58, %al	#, D.22429
	jne	.L1797	#,
	.loc 1 5867 0 is_stmt 1
	movq	-24(%rbp), %rax	# s, tmp128
	movb	$47, (%rax)	#, *s_2
	.loc 1 5868 0
	movq	-24(%rbp), %rax	# s, tmp129
	addq	$2, %rax	#, D.22431
	movq	%rax, %rdi	# D.22431,
	call	strlen	#
	leaq	1(%rax), %rdx	#, D.22432
	movq	-24(%rbp), %rax	# s, tmp130
	leaq	2(%rax), %rcx	#, D.22433
	movq	-24(%rbp), %rax	# s, tmp131
	addq	$1, %rax	#, D.22428
	movq	%rcx, %rsi	# D.22433,
	movq	%rax, %rdi	# D.22428,
	call	memmove	#
	.loc 1 5869 0
	movq	-16(%rbp), %rax	# kid, tmp132
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movq	(%rax), %rax	# _25->sv_any, D.22428
	movq	8(%rax), %rdx	# MEM[(struct XPV *)_26].xpv_cur, D.22432
	subq	$1, %rdx	#, D.22432
	movq	%rdx, 8(%rax)	# D.22432, MEM[(struct XPV *)_26].xpv_cur
.L1797:
	.loc 1 5865 0
	addq	$1, -24(%rbp)	#, s
.L1796:
	.loc 1 5865 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# s, tmp133
	movzbl	(%rax), %eax	# *s_2, D.22429
	testb	%al, %al	# D.22429
	jne	.L1798	#,
	.loc 1 5872 0 is_stmt 1
	movq	-16(%rbp), %rax	# kid, tmp134
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movl	12(%rax), %eax	# _30->sv_flags, D.22434
	andl	$8388608, %eax	#, D.22434
	testl	%eax, %eax	# D.22434
	je	.L1799	#,
	.loc 1 5873 0
	movq	-16(%rbp), %rax	# kid, tmp135
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movq	-16(%rbp), %rdx	# kid, tmp136
	movq	40(%rdx), %rdx	# kid_8->op_sv, D.22427
	movl	12(%rdx), %edx	# _34->sv_flags, D.22434
	andl	$-8388609, %edx	#, D.22434
	movl	%edx, 12(%rax)	# D.22434, _33->sv_flags
	.loc 1 5874 0
	movq	-16(%rbp), %rax	# kid, tmp137
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movl	$2, %ecx	#,
	movl	$3, %edx	#,
	movl	$.LC134, %esi	#,
	movq	%rax, %rdi	# D.22427,
	call	Perl_sv_catpvn_flags	#
	.loc 1 5875 0
	movq	-16(%rbp), %rax	# kid, tmp138
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movq	-16(%rbp), %rdx	# kid, tmp139
	movq	40(%rdx), %rdx	# kid_8->op_sv, D.22427
	movl	12(%rdx), %edx	# _39->sv_flags, D.22434
	orl	$8388608, %edx	#, D.22434
	movl	%edx, 12(%rax)	# D.22434, _38->sv_flags
	jmp	.L1795	#
.L1799:
	.loc 1 5878 0
	movq	-16(%rbp), %rax	# kid, tmp140
	movq	40(%rax), %rax	# kid_8->op_sv, D.22427
	movl	$2, %ecx	#,
	movl	$3, %edx	#,
	movl	$.LC134, %esi	#,
	movq	%rax, %rdi	# D.22427,
	call	Perl_sv_catpvn_flags	#
.L1795:
.LBE115:
.LBE114:
	.loc 1 5883 0
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC135, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -32(%rbp)	# tmp141, gv
	.loc 1 5884 0
	cmpq	$0, -32(%rbp)	#, gv
	je	.L1800	#,
	.loc 1 5884 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# gv, tmp142
	movq	(%rax), %rax	# gv_43->sv_any, D.22435
	movq	56(%rax), %rax	# _44->xgv_gp, D.22436
	movl	64(%rax), %eax	# _45->gp_cvgen, D.22434
	testl	%eax, %eax	# D.22434
	jne	.L1800	#,
	movq	-32(%rbp), %rax	# gv, tmp143
	movq	(%rax), %rax	# gv_43->sv_any, D.22435
	movq	56(%rax), %rax	# _47->xgv_gp, D.22436
	movq	56(%rax), %rax	# _48->gp_cv, D.22437
	testq	%rax, %rax	# D.22437
	je	.L1800	#,
	.loc 1 5884 0 discriminator 2
	movq	-32(%rbp), %rax	# gv, tmp144
	movq	(%rax), %rax	# gv_43->sv_any, D.22435
	movzbl	88(%rax), %eax	# _50->xgv_flags, D.22424
	testb	%al, %al	# D.22438
	js	.L1801	#,
.L1800:
	.loc 1 5885 0 is_stmt 1
	movl	$12, %edx	#,
	movl	$0, %esi	#,
	movl	$.LC136, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	%rax, -32(%rbp)	# tmp145, gv
.L1801:
	.loc 1 5887 0
	cmpq	$0, -32(%rbp)	#, gv
	je	.L1802	#,
	.loc 1 5887 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# gv, tmp146
	movq	(%rax), %rax	# gv_1->sv_any, D.22435
	movq	56(%rax), %rax	# _54->xgv_gp, D.22436
	movl	64(%rax), %eax	# _55->gp_cvgen, D.22434
	testl	%eax, %eax	# D.22434
	jne	.L1802	#,
	movq	-32(%rbp), %rax	# gv, tmp147
	movq	(%rax), %rax	# gv_1->sv_any, D.22435
	movq	56(%rax), %rax	# _57->xgv_gp, D.22436
	movq	56(%rax), %rax	# _58->gp_cv, D.22437
	testq	%rax, %rax	# D.22437
	je	.L1802	#,
	.loc 1 5887 0 discriminator 2
	movq	-32(%rbp), %rax	# gv, tmp148
	movq	(%rax), %rax	# gv_1->sv_any, D.22435
	movzbl	88(%rax), %eax	# _60->xgv_flags, D.22424
	testb	%al, %al	# D.22438
	jns	.L1802	#,
.LBB116:
	.loc 1 5888 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp149
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_4(D)].op_first, tmp150
	movq	%rax, -8(%rbp)	# tmp150, kid
	.loc 1 5889 0
	movq	-40(%rbp), %rax	# o, tmp151
	movq	$0, 40(%rax)	#, MEM[(struct UNOP *)o_4(D)].op_first
	.loc 1 5890 0
	movq	-40(%rbp), %rax	# o, tmp152
	movq	%rax, %rdi	# tmp152,
	call	Perl_op_free	#
	.loc 1 5891 0
	movq	-32(%rbp), %rax	# gv, tmp153
	movq	%rax, %rdx	# tmp153,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdx	# D.22423,
	movl	$0, %esi	#,
	movl	$17, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdi	# D.22423,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22423
	movq	-8(%rbp), %rax	# kid, tmp154
	movq	%rax, %rsi	# tmp154,
	movl	$141, %edi	#,
	call	Perl_append_elem	#
	movq	%rax, %rdx	# D.22423,
	movl	$64, %esi	#,
	movl	$166, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, %rdi	# D.22423,
	call	Perl_ck_subr	#
	jmp	.L1803	#
.L1802:
.LBE116:
	.loc 1 5898 0
	movq	-40(%rbp), %rax	# o, tmp155
	movq	%rax, %rdi	# tmp155,
	call	Perl_ck_fun	#
.L1803:
	.loc 1 5899 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE134:
	.size	Perl_ck_require, .-Perl_ck_require
	.globl	Perl_ck_return
	.type	Perl_ck_return, @function
Perl_ck_return:
.LFB135:
	.loc 1 5903 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5905 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.1069
	movq	(%rax), %rax	# PL_compcv.1069_2->sv_any, D.22442
	movzwl	136(%rax), %eax	# _3->xcv_flags, D.22443
	movzwl	%ax, %eax	# D.22443, D.22444
	andl	$256, %eax	#, D.22444
	testl	%eax, %eax	# D.22444
	je	.L1805	#,
	.loc 1 5906 0
	movq	-24(%rbp), %rax	# o, tmp67
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_7(D)].op_first, D.22445
	movq	8(%rax), %rax	# _8->op_sibling, tmp68
	movq	%rax, -8(%rbp)	# tmp68, kid
	jmp	.L1806	#
.L1807:
	.loc 1 5907 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp69
	movl	$168, %esi	#,
	movq	%rax, %rdi	# tmp69,
	call	Perl_mod	#
	.loc 1 5906 0 discriminator 2
	movq	-8(%rbp), %rax	# kid, tmp70
	movq	8(%rax), %rax	# kid_1->op_sibling, tmp71
	movq	%rax, -8(%rbp)	# tmp71, kid
.L1806:
	.loc 1 5906 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)	#, kid
	jne	.L1807	#,
.L1805:
	.loc 1 5909 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, D.22445
	.loc 1 5910 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE135:
	.size	Perl_ck_return, .-Perl_ck_return
	.globl	Perl_ck_select
	.type	Perl_ck_select, @function
Perl_ck_select:
.LFB136:
	.loc 1 5924 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5926 0
	movq	-24(%rbp), %rax	# o, tmp71
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22447
	movzbl	%al, %eax	# D.22447, D.22448
	andl	$4, %eax	#, D.22448
	testl	%eax, %eax	# D.22448
	je	.L1810	#,
	.loc 1 5927 0
	movq	-24(%rbp), %rax	# o, tmp72
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_2(D)].op_first, D.22446
	movq	8(%rax), %rax	# _6->op_sibling, tmp73
	movq	%rax, -8(%rbp)	# tmp73, kid
	.loc 1 5928 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1810	#,
	.loc 1 5928 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp74
	movq	8(%rax), %rax	# kid_7->op_sibling, D.22446
	testq	%rax, %rax	# D.22446
	je	.L1810	#,
	.loc 1 5929 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp75
	movw	$202, 32(%rax)	#, o_2(D)->op_type
	.loc 1 5930 0
	movq	PL_ppaddr+1616(%rip), %rdx	# PL_ppaddr, D.22449
	movq	-24(%rbp), %rax	# o, tmp76
	movq	%rdx, 16(%rax)	# D.22449, o_2(D)->op_ppaddr
	.loc 1 5931 0
	movq	-24(%rbp), %rax	# o, tmp77
	movq	%rax, %rdi	# tmp77,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp78, o
	.loc 1 5932 0
	movq	-24(%rbp), %rax	# o, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_fold_constants	#
	jmp	.L1811	#
.L1810:
	.loc 1 5935 0
	movq	-24(%rbp), %rax	# o, tmp80
	movq	%rax, %rdi	# tmp80,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp81, o
	.loc 1 5936 0
	movq	-24(%rbp), %rax	# o, tmp82
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_12].op_first, D.22446
	movq	8(%rax), %rax	# _13->op_sibling, tmp83
	movq	%rax, -8(%rbp)	# tmp83, kid
	.loc 1 5937 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1812	#,
	.loc 1 5937 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp84
	movzwl	32(%rax), %eax	# kid_14->op_type, D.22450
	cmpw	$14, %ax	#, D.22450
	jne	.L1812	#,
	.loc 1 5938 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp85
	movzbl	37(%rax), %eax	# kid_14->op_private, D.22447
	andl	$-3, %eax	#, D.22447
	movl	%eax, %edx	# D.22447, D.22447
	movq	-8(%rbp), %rax	# kid, tmp86
	movb	%dl, 37(%rax)	# D.22447, kid_14->op_private
.L1812:
	.loc 1 5939 0
	movq	-24(%rbp), %rax	# o, D.22446
.L1811:
	.loc 1 5940 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE136:
	.size	Perl_ck_select, .-Perl_ck_select
	.globl	Perl_ck_shift
	.type	Perl_ck_shift, @function
Perl_ck_shift:
.LFB137:
	.loc 1 5944 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 5945 0
	movq	-24(%rbp), %rax	# o, tmp76
	movzwl	32(%rax), %eax	# o_3(D)->op_type, D.22452
	movzwl	%ax, %eax	# D.22452, tmp77
	movl	%eax, -12(%rbp)	# tmp77, type
	.loc 1 5947 0
	movq	-24(%rbp), %rax	# o, tmp78
	movzbl	36(%rax), %eax	# o_3(D)->op_flags, D.22453
	movzbl	%al, %eax	# D.22453, D.22454
	andl	$4, %eax	#, D.22454
	testl	%eax, %eax	# D.22454
	jne	.L1814	#,
.LBB117:
	.loc 1 5950 0
	movq	-24(%rbp), %rax	# o, tmp79
	movq	%rax, %rdi	# tmp79,
	call	Perl_op_free	#
	.loc 1 5963 0
	movq	PL_compcv(%rip), %rax	# PL_compcv, PL_compcv.1071
	movq	(%rax), %rax	# PL_compcv.1071_9->sv_any, D.22455
	movzwl	136(%rax), %eax	# _10->xcv_flags, D.22452
	movzwl	%ax, %eax	# D.22452, D.22454
	andl	$16, %eax	#, D.22454
	.loc 1 5962 0
	testl	%eax, %eax	# D.22454
	je	.L1815	#,
	.loc 1 5962 0 is_stmt 0 discriminator 1
	movq	PL_argvgv(%rip), %rax	# PL_argvgv, iftmp.1070
	jmp	.L1816	#
.L1815:
	.loc 1 5962 0 discriminator 2
	movq	PL_defgv(%rip), %rax	# PL_defgv, iftmp.1070
.L1816:
	.loc 1 5962 0 discriminator 3
	movq	%rax, %rdx	# iftmp.1070,
	movl	$0, %esi	#,
	movl	$7, %edi	#,
	call	Perl_newGVOP	#
	movq	%rax, %rdi	# D.22451,
	call	Perl_scalar	#
	movq	%rax, %rdx	# D.22451,
	movl	$0, %esi	#,
	movl	$125, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -8(%rbp)	# tmp80, argop
	.loc 1 5965 0 is_stmt 1 discriminator 3
	movq	-8(%rbp), %rax	# argop, tmp81
	movq	%rax, %rdi	# tmp81,
	call	Perl_scalar	#
	movq	%rax, %rdx	#, D.22451
	movl	-12(%rbp), %eax	# type, tmp82
	movl	$0, %esi	#,
	movl	%eax, %edi	# tmp82,
	call	Perl_newUNOP	#
	jmp	.L1817	#
.L1814:
.LBE117:
	.loc 1 5967 0
	movq	-24(%rbp), %rax	# o, tmp83
	movq	%rax, %rdi	# tmp83,
	call	Perl_ck_fun	#
	movl	-12(%rbp), %edx	# type, tmp84
	movl	%edx, %esi	# tmp84,
	movq	%rax, %rdi	# D.22451,
	call	S_modkids	#
	movq	%rax, %rdi	# D.22451,
	call	Perl_scalar	#
.L1817:
	.loc 1 5968 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE137:
	.size	Perl_ck_shift, .-Perl_ck_shift
	.globl	Perl_ck_sort
	.type	Perl_ck_sort, @function
Perl_ck_sort:
.LFB138:
	.loc 1 5972 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 5975 0
	movq	-40(%rbp), %rax	# o, tmp85
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22456
	cmpw	$150, %ax	#, D.22456
	jne	.L1819	#,
	.loc 1 5975 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp86
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22457
	movzbl	%al, %eax	# D.22457, D.22458
	andl	$64, %eax	#, D.22458
	testl	%eax, %eax	# D.22458
	je	.L1819	#,
	.loc 1 5976 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, tmp87
	movq	%rax, %rdi	# tmp87,
	call	S_simplify_sort	#
.L1819:
	.loc 1 5977 0
	movq	-40(%rbp), %rax	# o, tmp88
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22459
	movq	8(%rax), %rax	# _10->op_sibling, tmp89
	movq	%rax, -24(%rbp)	# tmp89, firstkid
	.loc 1 5978 0
	movq	-40(%rbp), %rax	# o, tmp90
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22457
	movzbl	%al, %eax	# D.22457, D.22458
	andl	$64, %eax	#, D.22458
	testl	%eax, %eax	# D.22458
	je	.L1820	#,
.LBB118:
	.loc 1 5979 0
	movq	$0, -16(%rbp)	#, k
	.loc 1 5980 0
	movq	-24(%rbp), %rax	# firstkid, tmp91
	movq	40(%rax), %rax	# MEM[(struct UNOP *)firstkid_11].op_first, tmp92
	movq	%rax, -8(%rbp)	# tmp92, kid
	.loc 1 5982 0
	movq	-8(%rbp), %rax	# kid, tmp93
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$179, %ax	#, D.22456
	je	.L1821	#,
	.loc 1 5982 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp94
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$178, %ax	#, D.22456
	jne	.L1822	#,
.L1821:
	.loc 1 5983 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp95
	movq	%rax, %rdi	# tmp95,
	call	Perl_linklist	#
	.loc 1 5984 0
	movq	-8(%rbp), %rax	# kid, tmp96
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$179, %ax	#, D.22456
	jne	.L1823	#,
	.loc 1 5985 0
	movq	-8(%rbp), %rax	# kid, tmp97
	movq	(%rax), %rax	# kid_16->op_next, tmp98
	movq	%rax, -16(%rbp)	# tmp98, k
	.loc 1 5986 0
	movq	-8(%rbp), %rax	# kid, tmp99
	movq	$0, (%rax)	#, kid_16->op_next
	jmp	.L1824	#
.L1823:
	.loc 1 5988 0
	movq	-8(%rbp), %rax	# kid, tmp100
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$178, %ax	#, D.22456
	jne	.L1824	#,
	.loc 1 5989 0
	movq	-40(%rbp), %rax	# o, tmp101
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22456
	cmpw	$150, %ax	#, D.22456
	jne	.L1825	#,
	.loc 1 5990 0
	movq	-8(%rbp), %rax	# kid, tmp102
	movq	%rax, %rdi	# tmp102,
	call	Perl_op_null	#
	.loc 1 5991 0
	movq	-8(%rbp), %rax	# kid, tmp103
	movq	-8(%rbp), %rdx	# kid, tmp104
	movq	%rdx, (%rax)	# tmp104, kid_16->op_next
	.loc 1 5993 0
	movq	-8(%rbp), %rax	# kid, tmp105
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)kid_16].op_first, D.22459
	movq	(%rax), %rax	# _25->op_next, tmp106
	movq	%rax, -16(%rbp)	# tmp106, k
	jmp	.L1826	#
.L1830:
	.loc 1 5994 0
	movq	-16(%rbp), %rax	# k, tmp107
	movq	(%rax), %rax	# k_3->op_next, D.22459
	cmpq	-8(%rbp), %rax	# kid, D.22459
	jne	.L1827	#,
	.loc 1 5995 0
	movq	-16(%rbp), %rax	# k, tmp108
	movq	$0, (%rax)	#, k_3->op_next
	jmp	.L1828	#
.L1827:
	.loc 1 5997 0
	movq	-16(%rbp), %rax	# k, tmp109
	movzwl	32(%rax), %eax	# k_3->op_type, D.22456
	cmpw	$182, %ax	#, D.22456
	je	.L1829	#,
	.loc 1 5998 0
	movq	-16(%rbp), %rax	# k, tmp110
	movzwl	32(%rax), %eax	# k_3->op_type, D.22456
	cmpw	$180, %ax	#, D.22456
	jne	.L1828	#,
.L1829:
	.loc 1 6000 0
	movq	-16(%rbp), %rax	# k, tmp111
	movq	72(%rax), %rax	# MEM[(struct LOOP *)k_3].op_lastop, tmp112
	movq	%rax, -16(%rbp)	# tmp112, k
.L1828:
	.loc 1 5993 0
	movq	-16(%rbp), %rax	# k, tmp113
	movq	(%rax), %rax	# k_2->op_next, tmp114
	movq	%rax, -16(%rbp)	# tmp114, k
.L1826:
	.loc 1 5993 0 is_stmt 0 discriminator 1
	cmpq	$0, -16(%rbp)	#, k
	jne	.L1830	#,
	jmp	.L1831	#
.L1825:
	.loc 1 6005 0 is_stmt 1
	movq	-8(%rbp), %rax	# kid, tmp115
	movq	$0, (%rax)	#, kid_16->op_next
.L1831:
	.loc 1 6006 0
	movq	-8(%rbp), %rax	# kid, tmp116
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)kid_16].op_first, tmp117
	movq	%rax, -16(%rbp)	# tmp117, k
.L1824:
	.loc 1 6008 0
	movq	PL_peepp(%rip), %rax	# PL_peepp, PL_peepp.1072
	movq	-16(%rbp), %rdx	# k, tmp118
	movq	%rdx, %rdi	# tmp118,
	call	*%rax	# PL_peepp.1072
	.loc 1 6010 0
	movq	-24(%rbp), %rax	# firstkid, tmp119
	movq	%rax, -8(%rbp)	# tmp119, kid
	.loc 1 6011 0
	movq	-40(%rbp), %rax	# o, tmp120
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22456
	cmpw	$150, %ax	#, D.22456
	jne	.L1832	#,
	.loc 1 6013 0
	movq	-8(%rbp), %rax	# kid, tmp121
	movq	%rax, %rdi	# tmp121,
	call	Perl_scalar	#
	movq	%rax, -8(%rbp)	# tmp122, kid
	.loc 1 6014 0
	movq	-8(%rbp), %rax	# kid, tmp123
	movq	-8(%rbp), %rdx	# kid, tmp124
	movq	%rdx, (%rax)	# tmp124, kid_36->op_next
	jmp	.L1833	#
.L1832:
	.loc 1 6017 0
	movq	-8(%rbp), %rax	# kid, tmp125
	movq	-16(%rbp), %rdx	# k, tmp126
	movq	%rdx, (%rax)	# tmp126, kid_34->op_next
.L1833:
	.loc 1 6018 0
	movq	-40(%rbp), %rax	# o, tmp127
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22457
	orl	$-128, %eax	#, D.22457
	movl	%eax, %edx	# D.22457, D.22457
	movq	-40(%rbp), %rax	# o, tmp128
	movb	%dl, 36(%rax)	# D.22457, o_5(D)->op_flags
	jmp	.L1834	#
.L1822:
	.loc 1 6020 0
	movq	-8(%rbp), %rax	# kid, tmp129
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$15, %ax	#, D.22456
	je	.L1835	#,
	.loc 1 6020 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp130
	movzwl	32(%rax), %eax	# kid_16->op_type, D.22456
	cmpw	$9, %ax	#, D.22456
	jne	.L1834	#,
.L1835:
	.loc 1 6021 0 is_stmt 1
	movq	-24(%rbp), %rax	# firstkid, tmp131
	movq	%rax, %rdi	# tmp131,
	call	Perl_op_null	#
.L1834:
	.loc 1 6023 0
	movq	-24(%rbp), %rax	# firstkid, tmp132
	movq	8(%rax), %rax	# firstkid_11->op_sibling, tmp133
	movq	%rax, -24(%rbp)	# tmp133, firstkid
.L1820:
.LBE118:
	.loc 1 6027 0
	movq	-40(%rbp), %rax	# o, tmp134
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22456
	cmpw	$150, %ax	#, D.22456
	jne	.L1836	#,
	.loc 1 6028 0
	movq	-24(%rbp), %rax	# firstkid, tmp135
	movq	%rax, %rdi	# tmp135,
	call	Perl_list	#
.L1836:
	.loc 1 6030 0
	movq	-40(%rbp), %rax	# o, D.22459
	.loc 1 6031 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE138:
	.size	Perl_ck_sort, .-Perl_ck_sort
	.section	.rodata
.LC137:
	.string	"a"
.LC138:
	.string	"b"
	.text
	.type	S_simplify_sort, @function
S_simplify_sort:
.LFB139:
	.loc 1 6035 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$56, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)	# o, o
	.loc 1 6036 0
	movq	-56(%rbp), %rax	# o, tmp119
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22460
	movq	8(%rax), %rbx	# _6->op_sibling, kid
	.loc 1 6041 0
	movq	-56(%rbp), %rax	# o, tmp120
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22461
	movzbl	%al, %eax	# D.22461, D.22462
	andl	$64, %eax	#, D.22462
	testl	%eax, %eax	# D.22462
	jne	.L1839	#,
	.loc 1 6042 0
	jmp	.L1838	#
.L1839:
	.loc 1 6043 0
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC137, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	(%rax), %rax	# _11->sv_any, D.22464
	movzbl	88(%rax), %edx	# _12->xgv_flags, D.22461
	orl	$2, %edx	#, D.22461
	movb	%dl, 88(%rax)	# D.22461, _12->xgv_flags
	.loc 1 6044 0
	movl	$4, %edx	#,
	movl	$1, %esi	#,
	movl	$.LC138, %edi	#,
	call	Perl_gv_fetchpv	#
	movq	(%rax), %rax	# _15->sv_any, D.22464
	movzbl	88(%rax), %edx	# _16->xgv_flags, D.22461
	orl	$2, %edx	#, D.22461
	movb	%dl, 88(%rax)	# D.22461, _16->xgv_flags
	.loc 1 6045 0
	movq	40(%rbx), %rbx	# MEM[(struct UNOP *)kid_7].op_first, kid
	.loc 1 6046 0
	movzwl	32(%rbx), %eax	# kid_19->op_type, D.22465
	cmpw	$179, %ax	#, D.22465
	je	.L1841	#,
	.loc 1 6047 0
	jmp	.L1838	#
.L1841:
	.loc 1 6048 0
	movq	48(%rbx), %rbx	# MEM[(struct LISTOP *)kid_19].op_last, kid
	.loc 1 6049 0
	movzwl	32(%rbx), %eax	# kid_21->op_type, D.22465
	movzwl	%ax, %eax	# D.22465, D.22462
	cmpl	$82, %eax	#, D.22462
	jl	.L1866	#,
	cmpl	$83, %eax	#, D.22462
	jle	.L1867	#,
	cmpl	$90, %eax	#, D.22462
	je	.L1867	#,
	.loc 1 6055 0
	jmp	.L1866	#
.L1867:
	.loc 1 6053 0
	nop
	.loc 1 6057 0
	movq	%rbx, -40(%rbp)	# kid, k
	.loc 1 6058 0
	movq	40(%rbx), %rax	# MEM[(struct BINOP *)kid_21].op_first, D.22460
	movzwl	32(%rax), %eax	# _25->op_type, D.22465
	cmpw	$15, %ax	#, D.22465
	je	.L1845	#,
	.loc 1 6059 0
	jmp	.L1838	#
.L1845:
	.loc 1 6060 0
	movq	40(%rbx), %rbx	# MEM[(struct BINOP *)kid_21].op_first, kid
	.loc 1 6061 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)kid_27].op_first, D.22460
	movzwl	32(%rax), %eax	# _28->op_type, D.22465
	cmpw	$7, %ax	#, D.22465
	je	.L1846	#,
	.loc 1 6062 0
	jmp	.L1838	#
.L1846:
	.loc 1 6063 0
	movq	40(%rbx), %rbx	# MEM[(struct UNOP *)kid_27].op_first, kid
	.loc 1 6064 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)kid_30].op_sv, tmp121
	movq	%rax, -32(%rbp)	# tmp121, gv
	.loc 1 6065 0
	movq	-32(%rbp), %rax	# gv, tmp122
	movq	(%rax), %rax	# gv_31->sv_any, D.22464
	movq	80(%rax), %rdx	# _32->xgv_stash, D.22466
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1073
	cmpq	%rax, %rdx	# PL_curstash.1073, D.22466
	je	.L1847	#,
	.loc 1 6066 0
	jmp	.L1838	#
.L1847:
	.loc 1 6067 0
	movq	-32(%rbp), %rax	# gv, tmp123
	movq	(%rax), %rax	# gv_31->sv_any, D.22464
	movq	64(%rax), %rax	# _35->xgv_name, tmp124
	movq	%rax, -24(%rbp)	# tmp124, gvname
	.loc 1 6068 0
	movq	-24(%rbp), %rax	# gvname, tmp125
	movzbl	(%rax), %eax	# *gvname_36, D.22467
	cmpb	$97, %al	#, D.22467
	jne	.L1848	#,
	.loc 1 6068 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# gvname, tmp126
	addq	$1, %rax	#, D.22468
	movzbl	(%rax), %eax	# *_38, D.22467
	testb	%al, %al	# D.22467
	jne	.L1848	#,
	.loc 1 6069 0 is_stmt 1
	movl	$0, -44(%rbp)	#, descending
	jmp	.L1849	#
.L1848:
	.loc 1 6070 0
	movq	-24(%rbp), %rax	# gvname, tmp127
	movzbl	(%rax), %eax	# *gvname_36, D.22467
	cmpb	$98, %al	#, D.22467
	jne	.L1850	#,
	.loc 1 6070 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# gvname, tmp128
	addq	$1, %rax	#, D.22468
	movzbl	(%rax), %eax	# *_42, D.22467
	testb	%al, %al	# D.22467
	jne	.L1850	#,
	.loc 1 6071 0 is_stmt 1
	movl	$1, -44(%rbp)	#, descending
	jmp	.L1849	#
.L1850:
	.loc 1 6073 0
	jmp	.L1838	#
.L1849:
	.loc 1 6075 0
	movq	-40(%rbp), %rbx	# k, kid
	.loc 1 6076 0
	movq	48(%rbx), %rax	# MEM[(struct BINOP *)kid_45].op_last, D.22460
	movzwl	32(%rax), %eax	# _46->op_type, D.22465
	cmpw	$15, %ax	#, D.22465
	je	.L1851	#,
	.loc 1 6077 0
	jmp	.L1838	#
.L1851:
	.loc 1 6078 0
	movq	48(%rbx), %rbx	# MEM[(struct BINOP *)kid_45].op_last, kid
	.loc 1 6079 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)kid_48].op_first, D.22460
	movzwl	32(%rax), %eax	# _49->op_type, D.22465
	cmpw	$7, %ax	#, D.22465
	je	.L1852	#,
	.loc 1 6080 0
	jmp	.L1838	#
.L1852:
	.loc 1 6081 0
	movq	40(%rbx), %rbx	# MEM[(struct UNOP *)kid_48].op_first, kid
	.loc 1 6082 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)kid_51].op_sv, tmp129
	movq	%rax, -32(%rbp)	# tmp129, gv
	.loc 1 6083 0
	movq	-32(%rbp), %rax	# gv, tmp130
	movq	(%rax), %rax	# gv_52->sv_any, D.22464
	movq	80(%rax), %rdx	# _53->xgv_stash, D.22466
	movq	PL_curstash(%rip), %rax	# PL_curstash, PL_curstash.1074
	cmpq	%rax, %rdx	# PL_curstash.1074, D.22466
	je	.L1853	#,
	.loc 1 6084 0
	jmp	.L1838	#
.L1853:
	.loc 1 6085 0
	movq	-32(%rbp), %rax	# gv, tmp131
	movq	(%rax), %rax	# gv_52->sv_any, D.22464
	movq	64(%rax), %rax	# _56->xgv_name, tmp132
	movq	%rax, -24(%rbp)	# tmp132, gvname
	.loc 1 6086 0
	cmpl	$0, -44(%rbp)	#, descending
	je	.L1854	#,
	.loc 1 6087 0
	movq	-24(%rbp), %rax	# gvname, tmp133
	movzbl	(%rax), %eax	# *gvname_57, D.22467
	cmpb	$97, %al	#, D.22467
	jne	.L1855	#,
	.loc 1 6087 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# gvname, tmp134
	addq	$1, %rax	#, D.22468
	movzbl	(%rax), %eax	# *_59, D.22467
	testb	%al, %al	# D.22467
	je	.L1856	#,
.L1855:
	.loc 1 6087 0 discriminator 1
	movl	$1, %eax	#, iftmp.1076
	jmp	.L1857	#
.L1856:
	.loc 1 6087 0 discriminator 3
	movl	$0, %eax	#, iftmp.1076
.L1857:
	.loc 1 6086 0 is_stmt 1
	andl	$1, %eax	#, iftmp.1075
	jmp	.L1858	#
.L1854:
	.loc 1 6088 0
	movq	-24(%rbp), %rax	# gvname, tmp135
	movzbl	(%rax), %eax	# *gvname_57, D.22467
	cmpb	$98, %al	#, D.22467
	jne	.L1859	#,
	.loc 1 6088 0 is_stmt 0 discriminator 2
	movq	-24(%rbp), %rax	# gvname, tmp136
	addq	$1, %rax	#, D.22468
	movzbl	(%rax), %eax	# *_65, D.22467
	testb	%al, %al	# D.22467
	je	.L1860	#,
.L1859:
	.loc 1 6088 0 discriminator 1
	movl	$1, %eax	#, iftmp.1077
	jmp	.L1861	#
.L1860:
	.loc 1 6088 0 discriminator 3
	movl	$0, %eax	#, iftmp.1077
.L1861:
	.loc 1 6086 0 is_stmt 1
	andl	$1, %eax	#, iftmp.1075
.L1858:
	.loc 1 6086 0 is_stmt 0 discriminator 1
	testb	%al, %al	# iftmp.1075
	je	.L1862	#,
	.loc 1 6089 0 is_stmt 1
	jmp	.L1838	#
.L1862:
	.loc 1 6090 0
	movq	-56(%rbp), %rax	# o, tmp137
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22461
	andl	$63, %eax	#, D.22461
	movl	%eax, %edx	# D.22461, D.22461
	movq	-56(%rbp), %rax	# o, tmp138
	movb	%dl, 36(%rax)	# D.22461, o_5(D)->op_flags
	.loc 1 6091 0
	cmpl	$0, -44(%rbp)	#, descending
	je	.L1863	#,
	.loc 1 6092 0
	movq	-56(%rbp), %rax	# o, tmp139
	movzbl	37(%rax), %eax	# o_5(D)->op_private, D.22461
	orl	$16, %eax	#, D.22461
	movl	%eax, %edx	# D.22461, D.22461
	movq	-56(%rbp), %rax	# o, tmp140
	movb	%dl, 37(%rax)	# D.22461, o_5(D)->op_private
.L1863:
	.loc 1 6093 0
	movq	-40(%rbp), %rax	# k, tmp141
	movzwl	32(%rax), %eax	# k_24->op_type, D.22465
	cmpw	$82, %ax	#, D.22465
	jne	.L1864	#,
	.loc 1 6094 0
	movq	-56(%rbp), %rax	# o, tmp142
	movzbl	37(%rax), %eax	# o_5(D)->op_private, D.22461
	orl	$1, %eax	#, D.22461
	movl	%eax, %edx	# D.22461, D.22461
	movq	-56(%rbp), %rax	# o, tmp143
	movb	%dl, 37(%rax)	# D.22461, o_5(D)->op_private
.L1864:
	.loc 1 6095 0
	movq	-40(%rbp), %rax	# k, tmp144
	movzwl	32(%rax), %eax	# k_24->op_type, D.22465
	cmpw	$83, %ax	#, D.22465
	jne	.L1865	#,
	.loc 1 6096 0
	movq	-56(%rbp), %rax	# o, tmp145
	movzbl	37(%rax), %eax	# o_5(D)->op_private, D.22461
	orl	$3, %eax	#, D.22461
	movl	%eax, %edx	# D.22461, D.22461
	movq	-56(%rbp), %rax	# o, tmp146
	movb	%dl, 37(%rax)	# D.22461, o_5(D)->op_private
.L1865:
	.loc 1 6097 0
	movq	-56(%rbp), %rax	# o, tmp147
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22460
	movq	8(%rax), %rbx	# _80->op_sibling, kid
	.loc 1 6098 0
	movq	-56(%rbp), %rax	# o, tmp148
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22460
	movq	8(%rbx), %rdx	# kid_81->op_sibling, D.22460
	movq	%rdx, 8(%rax)	# D.22460, _82->op_sibling
	.loc 1 6099 0
	movq	%rbx, %rdi	# kid,
	call	Perl_op_free	#
	jmp	.L1838	#
.L1866:
	.loc 1 6055 0
	nop
.L1838:
	.loc 1 6100 0
	addq	$56, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE139:
	.size	S_simplify_sort, .-S_simplify_sort
	.section	.rodata
.LC139:
	.string	"panic: ck_split"
.LC140:
	.string	" "
	.align 8
.LC141:
	.string	"Use of /g modifier is meaningless in split"
	.text
	.globl	Perl_ck_split
	.type	Perl_ck_split, @function
Perl_ck_split:
.LFB140:
	.loc 1 6104 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$40, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 6107 0
	movq	-40(%rbp), %rax	# o, tmp107
	movzbl	36(%rax), %eax	# o_5(D)->op_flags, D.22472
	movzbl	%al, %eax	# D.22472, D.22473
	andl	$64, %eax	#, D.22473
	testl	%eax, %eax	# D.22473
	je	.L1869	#,
	.loc 1 6108 0
	movq	-40(%rbp), %rax	# o, tmp108
	movq	%rax, %rdi	# tmp108,
	call	S_no_fh_allowed	#
	jmp	.L1870	#
.L1869:
	.loc 1 6110 0
	movq	-40(%rbp), %rax	# o, tmp109
	movq	40(%rax), %rbx	# MEM[(struct LISTOP *)o_5(D)].op_first, kid
	.loc 1 6111 0
	movzwl	32(%rbx), %eax	# kid_10->op_type, D.22474
	testw	%ax, %ax	# D.22474
	je	.L1871	#,
	.loc 1 6112 0
	movl	$.LC139, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L1871:
	.loc 1 6113 0
	movq	8(%rbx), %rbx	# kid_10->op_sibling, kid
	.loc 1 6114 0
	movq	-40(%rbp), %rax	# o, tmp110
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22471
	movq	%rax, %rdi	# D.22471,
	call	Perl_op_free	#
	.loc 1 6115 0
	movq	-40(%rbp), %rax	# o, tmp111
	movq	%rbx, 40(%rax)	# kid, MEM[(struct LISTOP *)o_5(D)].op_first
	.loc 1 6116 0
	testq	%rbx, %rbx	# kid
	jne	.L1872	#,
	.loc 1 6117 0
	movl	$1, %esi	#,
	movl	$.LC140, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, %rdx	# D.22475,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rbx	#, kid
	movq	-40(%rbp), %rax	# o, tmp112
	movq	%rbx, 40(%rax)	# kid, MEM[(struct LISTOP *)o_5(D)].op_first
	.loc 1 6118 0
	movq	-40(%rbp), %rax	# o, tmp113
	movq	%rbx, 48(%rax)	# kid, MEM[(struct LISTOP *)o_5(D)].op_last
.L1872:
	.loc 1 6121 0
	movzwl	32(%rbx), %eax	# kid_1->op_type, D.22474
	cmpw	$31, %ax	#, D.22474
	jne	.L1873	#,
	.loc 1 6121 0 is_stmt 0 discriminator 1
	movzbl	36(%rbx), %eax	# kid_1->op_flags, D.22472
	movzbl	%al, %eax	# D.22472, D.22473
	andl	$64, %eax	#, D.22473
	testl	%eax, %eax	# D.22473
	je	.L1874	#,
.L1873:
.LBB119:
	.loc 1 6122 0 is_stmt 1
	movq	8(%rbx), %rax	# kid_1->op_sibling, tmp114
	movq	%rax, -24(%rbp)	# tmp114, sibl
	.loc 1 6123 0
	movq	$0, 8(%rbx)	#, kid_1->op_sibling
	.loc 1 6124 0
	movl	$128, %esi	#,
	movl	$31, %edi	#,
	call	Perl_newPMOP	#
	movl	$0, %edx	#,
	movq	%rbx, %rsi	# kid,
	movq	%rax, %rdi	# D.22471,
	call	Perl_pmruntime	#
	movq	%rax, %rbx	#, kid
	.loc 1 6125 0
	movq	-40(%rbp), %rax	# o, tmp115
	movq	40(%rax), %rdx	# MEM[(struct LISTOP *)o_5(D)].op_first, D.22471
	movq	-40(%rbp), %rax	# o, tmp116
	movq	48(%rax), %rax	# MEM[(struct LISTOP *)o_5(D)].op_last, D.22471
	cmpq	%rax, %rdx	# D.22471, D.22471
	jne	.L1875	#,
	.loc 1 6126 0
	movq	-40(%rbp), %rax	# o, tmp117
	movq	%rbx, 48(%rax)	# kid, MEM[(struct LISTOP *)o_5(D)].op_last
.L1875:
	.loc 1 6127 0
	movq	-40(%rbp), %rax	# o, tmp118
	movq	%rbx, 40(%rax)	# kid, MEM[(struct LISTOP *)o_5(D)].op_first
	.loc 1 6128 0
	movq	-24(%rbp), %rax	# sibl, tmp119
	movq	%rax, 8(%rbx)	# tmp119, kid_22->op_sibling
.L1874:
.LBE119:
	.loc 1 6131 0
	movw	$13, 32(%rbx)	#, kid_2->op_type
	.loc 1 6132 0
	movq	PL_ppaddr+104(%rip), %rax	# PL_ppaddr, D.22476
	movq	%rax, 16(%rbx)	# D.22476, kid_2->op_ppaddr
	.loc 1 6133 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	.loc 1 6134 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1078
	movq	80(%rax), %rax	# PL_curcop.1078_26->cop_warnings, D.22475
	testq	%rax, %rax	# D.22475
	je	.L1876	#,
	.loc 1 6134 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1079
	movq	80(%rax), %rax	# PL_curcop.1079_28->cop_warnings, D.22475
	cmpq	$32, %rax	#, D.22475
	je	.L1876	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1080
	movq	80(%rax), %rax	# PL_curcop.1080_30->cop_warnings, D.22475
	cmpq	$16, %rax	#, D.22475
	je	.L1877	#,
	.loc 1 6134 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1081
	movq	80(%rax), %rax	# PL_curcop.1081_32->cop_warnings, D.22475
	movq	(%rax), %rax	# _33->sv_any, D.22477
	movq	(%rax), %rax	# MEM[(struct XPV *)_34].xpv_pv, D.22478
	addq	$5, %rax	#, D.22478
	movzbl	(%rax), %eax	# *_36, D.22479
	movsbl	%al, %eax	# D.22479, D.22473
	andl	$1, %eax	#, D.22473
	testl	%eax, %eax	# D.22473
	jne	.L1877	#,
.L1876:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1082
	movq	80(%rax), %rax	# PL_curcop.1082_40->cop_warnings, D.22475
	testq	%rax, %rax	# D.22475
	jne	.L1878	#,
	.loc 1 6134 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1083
	movzbl	%al, %eax	# PL_dowarn.1083, D.22473
	andl	$1, %eax	#, D.22473
	testl	%eax, %eax	# D.22473
	je	.L1878	#,
.L1877:
	movl	88(%rbx), %eax	# MEM[(struct PMOP *)kid_2].op_pmflags, D.22480
	andl	$256, %eax	#, D.22480
	testl	%eax, %eax	# D.22480
	je	.L1878	#,
	.loc 1 6135 0 is_stmt 1
	movl	$.LC141, %esi	#,
	movl	$20, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1878:
	.loc 1 6139 0
	movq	8(%rbx), %rax	# kid_2->op_sibling, D.22471
	testq	%rax, %rax	# D.22471
	jne	.L1879	#,
	.loc 1 6140 0
	call	S_newDEFSVOP	#
	movq	%rax, %rdx	#, D.22471
	movq	-40(%rbp), %rax	# o, tmp120
	movq	%rax, %rsi	# tmp120,
	movl	$139, %edi	#,
	call	Perl_append_elem	#
.L1879:
	.loc 1 6142 0
	movq	8(%rbx), %rbx	# kid_2->op_sibling, kid
	.loc 1 6143 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	.loc 1 6145 0
	movq	8(%rbx), %rax	# kid_49->op_sibling, D.22471
	testq	%rax, %rax	# D.22471
	jne	.L1880	#,
	.loc 1 6146 0
	movl	$0, %edi	#,
	call	Perl_newSViv	#
	movq	%rax, %rdx	# D.22475,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, %rdx	#, D.22471
	movq	-40(%rbp), %rax	# o, tmp121
	movq	%rax, %rsi	# tmp121,
	movl	$139, %edi	#,
	call	Perl_append_elem	#
.L1880:
	.loc 1 6148 0
	movq	8(%rbx), %rbx	# kid_49->op_sibling, kid
	.loc 1 6149 0
	movq	%rbx, %rdi	# kid,
	call	Perl_scalar	#
	.loc 1 6151 0
	movq	8(%rbx), %rax	# kid_53->op_sibling, D.22471
	testq	%rax, %rax	# D.22471
	je	.L1881	#,
	.loc 1 6152 0
	movq	-40(%rbp), %rax	# o, tmp122
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22474
	cmpw	$351, %ax	#, D.22474
	jne	.L1882	#,
	.loc 1 6152 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# o, tmp123
	movq	%rax, %rdi	# tmp123,
	call	Perl_custom_op_desc	#
	jmp	.L1883	#
.L1882:
	.loc 1 6152 0 discriminator 2
	movq	-40(%rbp), %rax	# o, tmp124
	movzwl	32(%rax), %eax	# o_5(D)->op_type, D.22474
	movzwl	%ax, %eax	# D.22474, D.22473
	cltq
	movq	PL_op_desc(,%rax,8), %rax	# PL_op_desc, iftmp.1084
.L1883:
	.loc 1 6152 0 discriminator 3
	movq	-40(%rbp), %rdx	# o, tmp126
	movq	%rax, %rsi	# iftmp.1084,
	movq	%rdx, %rdi	# tmp126,
	call	S_too_many_arguments	#
	jmp	.L1870	#
.L1881:
	.loc 1 6154 0 is_stmt 1
	movq	-40(%rbp), %rax	# o, D.22471
.L1870:
	.loc 1 6155 0
	addq	$40, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE140:
	.size	Perl_ck_split, .-Perl_ck_split
	.section	.rodata
.LC142:
	.string	"STRING"
	.align 8
.LC143:
	.string	"/%s/ should probably be written as \"%s\""
	.text
	.globl	Perl_ck_join
	.type	Perl_ck_join, @function
Perl_ck_join:
.LFB141:
	.loc 1 6159 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 6160 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1085
	movq	80(%rax), %rax	# PL_curcop.1085_2->cop_warnings, D.22484
	testq	%rax, %rax	# D.22484
	je	.L1885	#,
	.loc 1 6160 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1086
	movq	80(%rax), %rax	# PL_curcop.1086_4->cop_warnings, D.22484
	cmpq	$32, %rax	#, D.22484
	je	.L1885	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1087
	movq	80(%rax), %rax	# PL_curcop.1087_6->cop_warnings, D.22484
	cmpq	$16, %rax	#, D.22484
	je	.L1886	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1088
	movq	80(%rax), %rax	# PL_curcop.1088_8->cop_warnings, D.22484
	movq	(%rax), %rax	# _9->sv_any, D.22485
	movq	(%rax), %rax	# MEM[(struct XPV *)_10].xpv_pv, D.22486
	addq	$7, %rax	#, D.22486
	movzbl	(%rax), %eax	# *_12, D.22487
	movsbl	%al, %eax	# D.22487, D.22488
	andl	$1, %eax	#, D.22488
	testl	%eax, %eax	# D.22488
	jne	.L1886	#,
.L1885:
	.loc 1 6160 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1089
	movq	80(%rax), %rax	# PL_curcop.1089_16->cop_warnings, D.22484
	testq	%rax, %rax	# D.22484
	jne	.L1887	#,
	.loc 1 6160 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1090
	movzbl	%al, %eax	# PL_dowarn.1090, D.22488
	andl	$1, %eax	#, D.22488
	testl	%eax, %eax	# D.22488
	je	.L1887	#,
.L1886:
.LBB120:
	.loc 1 6161 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp84
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_21(D)].op_first, D.22489
	movq	8(%rax), %rax	# _22->op_sibling, tmp85
	movq	%rax, -8(%rbp)	# tmp85, kid
	.loc 1 6162 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1887	#,
	.loc 1 6162 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp86
	movzwl	32(%rax), %eax	# kid_23->op_type, D.22490
	cmpw	$31, %ax	#, D.22490
	jne	.L1887	#,
.LBB121:
	.loc 1 6163 0 is_stmt 1
	movq	$.LC142, -16(%rbp)	#, pmstr
	.loc 1 6164 0
	movq	-8(%rbp), %rax	# kid, tmp87
	movq	80(%rax), %rax	# MEM[(struct PMOP *)kid_23].op_pmregexp, D.22491
	testq	%rax, %rax	# D.22491
	je	.L1888	#,
	.loc 1 6165 0
	movq	-8(%rbp), %rax	# kid, tmp88
	movq	80(%rax), %rax	# MEM[(struct PMOP *)kid_23].op_pmregexp, D.22491
	movq	32(%rax), %rax	# _27->precomp, tmp89
	movq	%rax, -16(%rbp)	# tmp89, pmstr
.L1888:
	.loc 1 6166 0
	movq	-16(%rbp), %rdx	# pmstr, tmp90
	movq	-16(%rbp), %rax	# pmstr, tmp91
	movq	%rdx, %rcx	# tmp90,
	movq	%rax, %rdx	# tmp91,
	movl	$.LC143, %esi	#,
	movl	$28, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.L1887:
.LBE121:
.LBE120:
	.loc 1 6171 0
	movq	-24(%rbp), %rax	# o, tmp92
	movq	%rax, %rdi	# tmp92,
	call	Perl_ck_fun	#
	.loc 1 6172 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE141:
	.size	Perl_ck_join, .-Perl_ck_join
	.section	.rodata
.LC144:
	.string	"block or sub {}"
.LC145:
	.string	"sub {}"
.LC146:
	.string	"one of %s"
.LC147:
	.string	"symbol"
.LC148:
	.string	"subroutine entry"
.LC149:
	.string	"scalar"
	.align 8
.LC150:
	.string	"Malformed prototype for %s: %_"
	.text
	.globl	Perl_ck_subr
	.type	Perl_ck_subr, @function
Perl_ck_subr:
.LFB142:
	.loc 1 6176 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%rbx	#
	subq	$184, %rsp	#,
	.cfi_offset 3, -24
	movq	%rdi, -184(%rbp)	# o, o
	.loc 1 6177 0
	movq	-184(%rbp), %rax	# o, tmp169
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_56(D)].op_first, D.22494
	movq	8(%rax), %rax	# _57->op_sibling, D.22494
	.loc 1 6178 0
	testq	%rax, %rax	# D.22494
	jne	.L1891	#,
	.loc 1 6178 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# o, tmp170
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_56(D)].op_first, iftmp.1091
	jmp	.L1892	#
.L1891:
	.loc 1 6178 0 discriminator 2
	movq	-184(%rbp), %rax	# o, iftmp.1091
.L1892:
	.loc 1 6177 0 is_stmt 1
	movq	40(%rax), %rax	# iftmp.1091_50->op_first, tmp171
	movq	%rax, -152(%rbp)	# tmp171, prev
	.loc 1 6179 0
	movq	-152(%rbp), %rax	# prev, tmp172
	movq	8(%rax), %rax	# prev_61->op_sibling, tmp173
	movq	%rax, -144(%rbp)	# tmp173, o2
	.loc 1 6181 0
	movq	$0, -128(%rbp)	#, proto
	.loc 1 6182 0
	movq	$0, -120(%rbp)	#, cv
	.loc 1 6183 0
	movq	$0, -112(%rbp)	#, namegv
	.loc 1 6184 0
	movl	$0, -172(%rbp)	#, optional
	.loc 1 6185 0
	movl	$0, -168(%rbp)	#, arg
	.loc 1 6186 0
	movl	$0, -164(%rbp)	#, contextclass
	.loc 1 6187 0
	movq	$0, -104(%rbp)	#, e
	.loc 1 6190 0
	movq	-184(%rbp), %rax	# o, tmp174
	movzbl	37(%rax), %eax	# o_56(D)->op_private, D.22495
	orl	$32, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-184(%rbp), %rax	# o, tmp175
	movb	%dl, 37(%rax)	# D.22495, o_56(D)->op_private
	.loc 1 6191 0
	movq	-144(%rbp), %rax	# o2, tmp176
	movq	%rax, -136(%rbp)	# tmp176, cvop
	jmp	.L1893	#
.L1894:
	.loc 1 6191 0 is_stmt 0 discriminator 2
	movq	-136(%rbp), %rax	# cvop, tmp177
	movq	8(%rax), %rax	# cvop_10->op_sibling, tmp178
	movq	%rax, -136(%rbp)	# tmp178, cvop
.L1893:
	.loc 1 6191 0 discriminator 1
	movq	-136(%rbp), %rax	# cvop, tmp179
	movq	8(%rax), %rax	# cvop_10->op_sibling, D.22494
	testq	%rax, %rax	# D.22494
	jne	.L1894	#,
	.loc 1 6192 0 is_stmt 1
	movq	-136(%rbp), %rax	# cvop, tmp180
	movzwl	32(%rax), %eax	# cvop_10->op_type, D.22496
	cmpw	$17, %ax	#, D.22496
	jne	.L1895	#,
.LBB122:
	.loc 1 6194 0
	movq	-184(%rbp), %rax	# o, tmp181
	movzbl	37(%rax), %eax	# o_56(D)->op_private, D.22495
	movl	%eax, %edx	# D.22495, D.22497
	movq	-136(%rbp), %rax	# cvop, tmp182
	movzbl	37(%rax), %eax	# cvop_10->op_private, D.22495
	andl	$8, %eax	#, D.22497
	orl	%edx, %eax	# D.22497, D.22497
	movl	%eax, %edx	# D.22497, D.22495
	movq	-184(%rbp), %rax	# o, tmp183
	movb	%dl, 37(%rax)	# D.22495, o_56(D)->op_private
	.loc 1 6195 0
	movq	-136(%rbp), %rax	# cvop, tmp184
	movq	%rax, %rdi	# tmp184,
	call	Perl_op_null	#
	.loc 1 6196 0
	movq	-136(%rbp), %rax	# cvop, tmp185
	movq	40(%rax), %rax	# MEM[(struct UNOP *)cvop_10].op_first, tmp186
	movq	%rax, -80(%rbp)	# tmp186, tmpop
	.loc 1 6197 0
	movq	-80(%rbp), %rax	# tmpop, tmp187
	movzwl	32(%rax), %eax	# tmpop_83->op_type, D.22496
	cmpw	$7, %ax	#, D.22496
	jne	.L1896	#,
	.loc 1 6197 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# o, tmp188
	movzbl	37(%rax), %eax	# o_56(D)->op_private, D.22495
	movzbl	%al, %eax	# D.22495, D.22498
	andl	$8, %eax	#, D.22498
	testl	%eax, %eax	# D.22498
	jne	.L1896	#,
.LBB123:
	.loc 1 6198 0 is_stmt 1
	movq	-80(%rbp), %rax	# tmpop, tmp189
	movq	40(%rax), %rax	# tmpop_83->op_sv, tmp190
	movq	%rax, -72(%rbp)	# tmp190, gv
	.loc 1 6199 0
	movq	-72(%rbp), %rax	# gv, tmp191
	movq	(%rax), %rax	# gv_88->sv_any, D.22499
	movq	56(%rax), %rax	# _89->xgv_gp, D.22500
	movl	64(%rax), %eax	# _90->gp_cvgen, D.22501
	testl	%eax, %eax	# D.22501
	jne	.L1897	#,
	.loc 1 6199 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# gv, tmp192
	movq	(%rax), %rax	# gv_88->sv_any, D.22499
	movq	56(%rax), %rax	# _92->xgv_gp, D.22500
	movq	56(%rax), %rax	# _93->gp_cv, iftmp.1092
	jmp	.L1898	#
.L1897:
	.loc 1 6199 0 discriminator 2
	movl	$0, %eax	#, iftmp.1092
.L1898:
	.loc 1 6199 0 discriminator 3
	movq	%rax, -120(%rbp)	# iftmp.1092, cv
	.loc 1 6200 0 is_stmt 1 discriminator 3
	cmpq	$0, -120(%rbp)	#, cv
	jne	.L1899	#,
	.loc 1 6201 0
	movq	-80(%rbp), %rax	# tmpop, tmp193
	movzbl	37(%rax), %eax	# tmpop_83->op_private, D.22495
	orl	$32, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-80(%rbp), %rax	# tmpop, tmp194
	movb	%dl, 37(%rax)	# D.22495, tmpop_83->op_private
	jmp	.L1896	#
.L1899:
	.loc 1 6202 0
	movq	-120(%rbp), %rax	# cv, tmp195
	movl	12(%rax), %eax	# cv_96->sv_flags, D.22501
	andl	$262144, %eax	#, D.22501
	testl	%eax, %eax	# D.22501
	je	.L1896	#,
	.loc 1 6203 0
	movq	-120(%rbp), %rax	# cv, tmp196
	movq	(%rax), %rax	# cv_96->sv_any, D.22502
	movzwl	136(%rax), %eax	# _101->xcv_flags, D.22496
	movzwl	%ax, %eax	# D.22496, D.22498
	andl	$4, %eax	#, D.22498
	testl	%eax, %eax	# D.22498
	jne	.L1900	#,
	.loc 1 6203 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# cv, tmp197
	movq	(%rax), %rax	# cv_96->sv_any, D.22502
	movq	96(%rax), %rax	# _105->xcv_gv, iftmp.1093
	jmp	.L1901	#
.L1900:
	.loc 1 6203 0 discriminator 2
	movq	-72(%rbp), %rax	# gv, iftmp.1093
.L1901:
	.loc 1 6203 0 discriminator 3
	movq	%rax, -112(%rbp)	# iftmp.1093, namegv
	.loc 1 6204 0 is_stmt 1 discriminator 3
	movq	-120(%rbp), %rax	# cv, tmp198
	movl	12(%rax), %eax	# MEM[(struct SV *)cv_96].sv_flags, D.22501
	andl	$262144, %eax	#, D.22501
	testl	%eax, %eax	# D.22501
	je	.L1902	#,
	.loc 1 6204 0 is_stmt 0 discriminator 1
	movq	-120(%rbp), %rax	# cv, tmp199
	movq	(%rax), %rax	# MEM[(struct SV *)cv_96].sv_any, D.22503
	movq	8(%rax), %rax	# MEM[(struct XPV *)_111].xpv_cur, n_a.1095
	movq	%rax, -160(%rbp)	# n_a.1095, n_a
	movq	-120(%rbp), %rax	# cv, tmp200
	movq	(%rax), %rax	# MEM[(struct SV *)cv_96].sv_any, D.22503
	movq	(%rax), %rax	# MEM[(struct XPV *)_113].xpv_pv, iftmp.1094
	jmp	.L1903	#
.L1902:
	.loc 1 6204 0 discriminator 2
	leaq	-160(%rbp), %rcx	#, tmp201
	movq	-120(%rbp), %rax	# cv, tmp202
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp201,
	movq	%rax, %rdi	# tmp202,
	call	Perl_sv_2pv_flags	#
.L1903:
	.loc 1 6204 0 discriminator 3
	movq	%rax, -128(%rbp)	# iftmp.1094, proto
.LBE123:
.LBE122:
	jmp	.L1904	#
.L1896:
	jmp	.L1904	#
.L1895:
	.loc 1 6208 0 is_stmt 1
	movq	-136(%rbp), %rax	# cvop, tmp203
	movzwl	32(%rax), %eax	# cvop_10->op_type, D.22496
	cmpw	$165, %ax	#, D.22496
	je	.L1905	#,
	.loc 1 6208 0 is_stmt 0 discriminator 1
	movq	-136(%rbp), %rax	# cvop, tmp204
	movzwl	32(%rax), %eax	# cvop_10->op_type, D.22496
	cmpw	$350, %ax	#, D.22496
	jne	.L1904	#,
.L1905:
	.loc 1 6209 0 is_stmt 1
	movq	-144(%rbp), %rax	# o2, tmp205
	movzwl	32(%rax), %eax	# o2_62->op_type, D.22496
	cmpw	$5, %ax	#, D.22496
	jne	.L1906	#,
	.loc 1 6210 0
	movq	-144(%rbp), %rax	# o2, tmp206
	movzbl	37(%rax), %eax	# o2_62->op_private, D.22495
	andl	$-9, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-144(%rbp), %rax	# o2, tmp207
	movb	%dl, 37(%rax)	# D.22495, o2_62->op_private
	jmp	.L1904	#
.L1906:
	.loc 1 6211 0
	movq	-144(%rbp), %rax	# o2, tmp208
	movzwl	32(%rax), %eax	# o2_62->op_type, D.22496
	cmpw	$141, %ax	#, D.22496
	jne	.L1904	#,
.LBB124:
	.loc 1 6212 0
	movq	-144(%rbp), %rax	# o2, tmp209
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o2_62].op_first, D.22494
	movq	8(%rax), %rax	# _123->op_sibling, tmp210
	movq	%rax, -64(%rbp)	# tmp210, o
	.loc 1 6213 0
	cmpq	$0, -64(%rbp)	#, o
	je	.L1904	#,
	.loc 1 6213 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# o, tmp211
	movzwl	32(%rax), %eax	# o_124->op_type, D.22496
	cmpw	$5, %ax	#, D.22496
	jne	.L1904	#,
	.loc 1 6214 0 is_stmt 1
	movq	-64(%rbp), %rax	# o, tmp212
	movzbl	37(%rax), %eax	# o_124->op_private, D.22495
	andl	$-9, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-64(%rbp), %rax	# o, tmp213
	movb	%dl, 37(%rax)	# D.22495, o_124->op_private
.L1904:
.LBE124:
	.loc 1 6217 0
	movq	-184(%rbp), %rax	# o, tmp214
	movzbl	37(%rax), %eax	# o_56(D)->op_private, D.22495
	movl	PL_hints(%rip), %edx	# PL_hints, PL_hints.1096
	andl	$2, %edx	#, D.22495
	orl	%eax, %edx	# D.22495, D.22495
	movq	-184(%rbp), %rax	# o, tmp215
	movb	%dl, 37(%rax)	# D.22495, o_56(D)->op_private
	.loc 1 6218 0
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.1097
	testl	%eax, %eax	# PL_perldb.1097
	je	.L1907	#,
	.loc 1 6218 0 is_stmt 0 discriminator 1
	movl	PL_perldb(%rip), %eax	# PL_perldb, PL_perldb.1098
	andl	$1, %eax	#, D.22501
	testl	%eax, %eax	# D.22501
	je	.L1907	#,
	movq	PL_curstash(%rip), %rdx	# PL_curstash, PL_curstash.1099
	movq	PL_debstash(%rip), %rax	# PL_debstash, PL_debstash.1100
	cmpq	%rax, %rdx	# PL_debstash.1100, PL_curstash.1099
	je	.L1907	#,
	.loc 1 6219 0 is_stmt 1
	movq	-184(%rbp), %rax	# o, tmp216
	movzbl	37(%rax), %eax	# o_56(D)->op_private, D.22495
	orl	$16, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-184(%rbp), %rax	# o, tmp217
	movb	%dl, 37(%rax)	# D.22495, o_56(D)->op_private
	.loc 1 6220 0
	jmp	.L1908	#
.L1907:
	jmp	.L1908	#
.L1958:
	.loc 1 6221 0
	cmpq	$0, -128(%rbp)	#, proto
	je	.L1909	#,
	.loc 1 6222 0
	movq	-128(%rbp), %rax	# proto, tmp218
	movzbl	(%rax), %eax	# *proto_20, D.22504
	movsbl	%al, %eax	# D.22504, D.22498
	cmpl	$93, %eax	#, D.22498
	ja	.L1910	#,
	movl	%eax, %eax	# D.22498, tmp219
	movq	.L1912(,%rax,8), %rax	#, tmp220
	jmp	*%rax	# tmp220
	.section	.rodata
	.align 8
	.align 4
.L1912:
	.quad	.L1911
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1913
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1914
	.quad	.L1915
	.quad	.L1916
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1917
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1918
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1915
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1910
	.quad	.L1920
	.quad	.L1910
	.text
.L1911:
	.loc 1 6224 0
	movq	-112(%rbp), %rax	# namegv, tmp221
	movq	%rax, %rdi	# tmp221,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-184(%rbp), %rax	# o, tmp222
	movq	%rdx, %rsi	# D.22505,
	movq	%rax, %rdi	# tmp222,
	call	S_too_many_arguments	#
	jmp	.L1960	#
.L1918:
	.loc 1 6226 0
	movl	$1, -172(%rbp)	#, optional
	.loc 1 6227 0
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6228 0
	jmp	.L1908	#
.L1914:
	.loc 1 6230 0
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6231 0
	addl	$1, -168(%rbp)	#, arg
	.loc 1 6232 0
	movq	-144(%rbp), %rax	# o2, tmp223
	movq	%rax, %rdi	# tmp223,
	call	Perl_scalar	#
	.loc 1 6233 0
	jmp	.L1922	#
.L1915:
	.loc 1 6236 0
	movq	-144(%rbp), %rax	# o2, tmp224
	movq	%rax, %rdi	# tmp224,
	call	Perl_list	#
	.loc 1 6237 0
	addl	$1, -168(%rbp)	#, arg
	.loc 1 6238 0
	jmp	.L1922	#
.L1916:
	.loc 1 6240 0
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6241 0
	addl	$1, -168(%rbp)	#, arg
	.loc 1 6242 0
	movq	-144(%rbp), %rax	# o2, tmp225
	movzwl	32(%rax), %eax	# o2_9->op_type, D.22496
	cmpw	$20, %ax	#, D.22496
	je	.L1923	#,
	.loc 1 6242 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# o2, tmp226
	movzwl	32(%rax), %eax	# o2_9->op_type, D.22496
	cmpw	$43, %ax	#, D.22496
	je	.L1923	#,
	.loc 1 6243 0 is_stmt 1
	movq	-112(%rbp), %rax	# namegv, tmp227
	movq	%rax, %rdi	# tmp227,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	cmpl	$1, -168(%rbp)	#, arg
	jne	.L1924	#,
	.loc 1 6243 0 is_stmt 0 discriminator 1
	movl	$.LC144, %eax	#, iftmp.1101
	jmp	.L1925	#
.L1924:
	.loc 1 6243 0 discriminator 2
	movl	$.LC145, %eax	#, iftmp.1101
.L1925:
	.loc 1 6243 0 discriminator 3
	movq	-144(%rbp), %rcx	# o2, tmp228
	movl	-168(%rbp), %edi	# arg, tmp229
	movq	%rax, %rsi	# iftmp.1101,
	call	S_bad_type	#
	.loc 1 6246 0 is_stmt 1 discriminator 3
	jmp	.L1922	#
.L1923:
	.loc 1 6246 0 is_stmt 0
	jmp	.L1922	#
.L1917:
	.loc 1 6249 0 is_stmt 1
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6250 0
	addl	$1, -168(%rbp)	#, arg
	.loc 1 6251 0
	movq	-144(%rbp), %rax	# o2, tmp230
	movzwl	32(%rax), %eax	# o2_9->op_type, D.22496
	cmpw	$14, %ax	#, D.22496
	jne	.L1926	#,
	.loc 1 6252 0
	jmp	.L1927	#
.L1926:
	.loc 1 6253 0
	movq	-144(%rbp), %rax	# o2, tmp231
	movzwl	32(%rax), %eax	# o2_9->op_type, D.22496
	cmpw	$5, %ax	#, D.22496
	jne	.L1928	#,
	.loc 1 6254 0
	movq	-144(%rbp), %rax	# o2, tmp232
	movzbl	37(%rax), %eax	# o2_9->op_private, D.22495
	andl	$-9, %eax	#, D.22495
	movl	%eax, %edx	# D.22495, D.22495
	movq	-144(%rbp), %rax	# o2, tmp233
	movb	%dl, 37(%rax)	# D.22495, o2_9->op_private
	jmp	.L1929	#
.L1928:
	.loc 1 6255 0
	movq	-144(%rbp), %rax	# o2, tmp234
	movzwl	32(%rax), %eax	# o2_9->op_type, D.22496
	cmpw	$166, %ax	#, D.22496
	jne	.L1929	#,
.LBB125:
	.loc 1 6257 0
	movq	-144(%rbp), %rax	# o2, tmp235
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o2_9].op_first, tmp236
	movq	%rax, -96(%rbp)	# tmp236, gvop
	.loc 1 6258 0
	cmpq	$0, -96(%rbp)	#, gvop
	je	.L1929	#,
	.loc 1 6258 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax	# gvop, tmp237
	movzwl	32(%rax), %eax	# gvop_163->op_type, D.22496
	testw	%ax, %ax	# D.22496
	jne	.L1929	#,
	.loc 1 6259 0 is_stmt 1
	movq	-96(%rbp), %rax	# gvop, tmp238
	movq	40(%rax), %rax	# MEM[(struct UNOP *)gvop_163].op_first, tmp239
	movq	%rax, -96(%rbp)	# tmp239, gvop
	.loc 1 6260 0
	cmpq	$0, -96(%rbp)	#, gvop
	je	.L1929	#,
	.loc 1 6261 0
	jmp	.L1930	#
.L1931:
	.loc 1 6261 0 is_stmt 0 discriminator 2
	movq	-96(%rbp), %rax	# gvop, tmp240
	movq	8(%rax), %rax	# gvop_48->op_sibling, tmp241
	movq	%rax, -96(%rbp)	# tmp241, gvop
.L1930:
	.loc 1 6261 0 discriminator 1
	movq	-96(%rbp), %rax	# gvop, tmp242
	movq	8(%rax), %rax	# gvop_48->op_sibling, D.22494
	testq	%rax, %rax	# D.22494
	jne	.L1931	#,
	.loc 1 6263 0 is_stmt 1
	cmpq	$0, -96(%rbp)	#, gvop
	je	.L1929	#,
	.loc 1 6264 0 discriminator 1
	movq	-96(%rbp), %rax	# gvop, tmp243
	movzbl	37(%rax), %eax	# gvop_48->op_private, D.22495
	.loc 1 6263 0 discriminator 1
	testb	%al, %al	# D.22497
	jns	.L1929	#,
	.loc 1 6265 0
	movq	-96(%rbp), %rax	# gvop, tmp244
	movq	40(%rax), %rax	# MEM[(struct UNOP *)gvop_48].op_first, tmp245
	movq	%rax, -96(%rbp)	# tmp245, gvop
	.loc 1 6264 0
	cmpq	$0, -96(%rbp)	#, gvop
	je	.L1929	#,
	.loc 1 6266 0
	movq	-96(%rbp), %rax	# gvop, tmp246
	movzwl	32(%rax), %eax	# gvop_170->op_type, D.22496
	.loc 1 6265 0
	cmpw	$7, %ax	#, D.22496
	jne	.L1929	#,
.LBB126:
	.loc 1 6268 0
	movq	-96(%rbp), %rax	# gvop, tmp247
	movq	40(%rax), %rax	# MEM[(struct SVOP *)gvop_170].op_sv, tmp248
	movq	%rax, -56(%rbp)	# tmp248, gv
	.loc 1 6269 0
	movq	-144(%rbp), %rax	# o2, tmp249
	movq	8(%rax), %rax	# o2_9->op_sibling, tmp250
	movq	%rax, -48(%rbp)	# tmp250, sibling
	.loc 1 6270 0
	movl	$0, %esi	#,
	movl	$.LC46, %edi	#,
	call	Perl_newSVpvn	#
	movq	%rax, -40(%rbp)	# tmp251, n
	.loc 1 6271 0
	movq	-144(%rbp), %rax	# o2, tmp252
	movq	%rax, %rdi	# tmp252,
	call	Perl_op_free	#
	.loc 1 6272 0
	movq	-56(%rbp), %rsi	# gv, tmp253
	movq	-40(%rbp), %rax	# n, tmp254
	movl	$0, %ecx	#,
	movl	$.LC46, %edx	#,
	movq	%rax, %rdi	# tmp254,
	call	Perl_gv_fullname4	#
	.loc 1 6273 0
	movq	-40(%rbp), %rax	# n, tmp255
	movq	%rax, %rdx	# tmp255,
	movl	$0, %esi	#,
	movl	$5, %edi	#,
	call	Perl_newSVOP	#
	movq	%rax, -144(%rbp)	# tmp256, o2
	.loc 1 6274 0
	movq	-152(%rbp), %rax	# prev, tmp257
	movq	-144(%rbp), %rdx	# o2, tmp258
	movq	%rdx, 8(%rax)	# tmp258, prev_1->op_sibling
	.loc 1 6275 0
	movq	-144(%rbp), %rax	# o2, tmp259
	movq	-48(%rbp), %rdx	# sibling, tmp260
	movq	%rdx, 8(%rax)	# tmp260, o2_175->op_sibling
.L1929:
.LBE126:
.LBE125:
	.loc 1 6280 0
	movq	-144(%rbp), %rax	# o2, tmp261
	movq	%rax, %rdi	# tmp261,
	call	Perl_scalar	#
	.loc 1 6281 0
	jmp	.L1922	#
.L1920:
	.loc 1 6286 0
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6287 0
	addl	$1, -168(%rbp)	#, arg
.L1932:
	.loc 1 6289 0
	movq	-128(%rbp), %rax	# proto, proto.1102
	leaq	1(%rax), %rdx	#, tmp262
	movq	%rdx, -128(%rbp)	# tmp262, proto
	movzbl	(%rax), %eax	# *proto.1102_184, D.22504
	movsbl	%al, %eax	# D.22504, D.22498
	subl	$36, %eax	#, tmp263
	cmpl	$57, %eax	#, tmp263
	ja	.L1961	#,
	movl	%eax, %eax	# tmp263, tmp264
	movq	.L1935(,%rax,8), %rax	#, tmp265
	jmp	*%rax	# tmp265
	.section	.rodata
	.align 8
	.align 4
.L1935:
	.quad	.L1934
	.quad	.L1936
	.quad	.L1937
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1938
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1939
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1961
	.quad	.L1940
	.quad	.L1961
	.quad	.L1941
	.text
.L1940:
	.loc 1 6291 0
	movl	-164(%rbp), %eax	# contextclass, contextclass.1103
	leal	1(%rax), %edx	#, tmp266
	movl	%edx, -164(%rbp)	# tmp266, contextclass
	testl	%eax, %eax	# contextclass.1103
	jne	.L1942	#,
	.loc 1 6292 0
	movq	-128(%rbp), %rax	# proto, tmp267
	movl	$93, %esi	#,
	movq	%rax, %rdi	# tmp267,
	call	strchr	#
	movq	%rax, -104(%rbp)	# tmp268, e
	.loc 1 6293 0
	cmpq	$0, -104(%rbp)	#, e
	je	.L1910	#,
	.loc 1 6293 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax	# e, tmp269
	cmpq	-128(%rbp), %rax	# proto, tmp269
	je	.L1910	#,
	.loc 1 6298 0 is_stmt 1
	jmp	.L1932	#
.L1942:
	.loc 1 6297 0
	jmp	.L1910	#
.L1941:
	.loc 1 6301 0
	cmpl	$0, -164(%rbp)	#, contextclass
	je	.L1944	#,
.LBB127:
	.loc 1 6302 0
	movq	-128(%rbp), %rax	# proto, tmp270
	movq	%rax, -88(%rbp)	# tmp270, p
	.loc 1 6303 0
	movq	-88(%rbp), %rax	# p, tmp271
	movzbl	(%rax), %eax	# *p_191, tmp272
	movb	%al, -173(%rbp)	# tmp272, s
	.loc 1 6304 0
	movl	$0, -164(%rbp)	#, contextclass
	.loc 1 6305 0
	movq	-88(%rbp), %rax	# p, tmp273
	movb	$0, (%rax)	#, *p_191
.L1945:
	.loc 1 6306 0 discriminator 1
	subq	$1, -88(%rbp)	#, p
	movq	-88(%rbp), %rax	# p, tmp274
	movzbl	(%rax), %eax	# *p_194, D.22504
	cmpb	$91, %al	#, D.22504
	jne	.L1945	#,
	.loc 1 6307 0
	movq	-112(%rbp), %rax	# namegv, tmp275
	movq	%rax, %rdi	# tmp275,
	call	S_gv_ename	#
	movq	%rax, %rbx	#, D.22505
	movq	-88(%rbp), %rax	# p, tmp276
	movq	%rax, %rsi	# tmp276,
	movl	$.LC146, %edi	#,
	movl	$0, %eax	#,
	call	Perl_form	#
	movq	%rax, %rsi	#, D.22505
	movq	-144(%rbp), %rdx	# o2, tmp277
	movl	-168(%rbp), %eax	# arg, tmp278
	movq	%rdx, %rcx	# tmp277,
	movq	%rbx, %rdx	# D.22505,
	movl	%eax, %edi	# tmp278,
	call	S_bad_type	#
	.loc 1 6309 0
	movq	-128(%rbp), %rax	# proto, tmp279
	movzbl	-173(%rbp), %edx	# s, tmp280
	movb	%dl, (%rax)	# tmp280, *proto_185
.LBE127:
	.loc 1 6312 0
	jmp	.L1947	#
.L1944:
	.loc 1 6311 0
	jmp	.L1910	#
.L1938:
	.loc 1 6314 0
	movq	-144(%rbp), %rax	# o2, tmp281
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	cmpw	$14, %ax	#, D.22496
	jne	.L1948	#,
	.loc 1 6315 0
	jmp	.L1927	#
.L1948:
	.loc 1 6316 0
	cmpl	$0, -164(%rbp)	#, contextclass
	jne	.L1949	#,
	.loc 1 6317 0
	movq	-112(%rbp), %rax	# namegv, tmp282
	movq	%rax, %rdi	# tmp282,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-144(%rbp), %rcx	# o2, tmp283
	movl	-168(%rbp), %eax	# arg, tmp284
	movl	$.LC147, %esi	#,
	movl	%eax, %edi	# tmp284,
	call	S_bad_type	#
	.loc 1 6318 0
	jmp	.L1947	#
.L1949:
	jmp	.L1947	#
.L1937:
	.loc 1 6320 0
	movq	-144(%rbp), %rax	# o2, tmp285
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	cmpw	$166, %ax	#, D.22496
	jne	.L1950	#,
	.loc 1 6321 0
	jmp	.L1927	#
.L1950:
	.loc 1 6322 0
	cmpl	$0, -164(%rbp)	#, contextclass
	jne	.L1951	#,
	.loc 1 6323 0
	movq	-112(%rbp), %rax	# namegv, tmp286
	movq	%rax, %rdi	# tmp286,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-144(%rbp), %rcx	# o2, tmp287
	movl	-168(%rbp), %eax	# arg, tmp288
	movl	$.LC148, %esi	#,
	movl	%eax, %edi	# tmp288,
	call	S_bad_type	#
	.loc 1 6324 0
	jmp	.L1947	#
.L1951:
	jmp	.L1947	#
.L1934:
	.loc 1 6326 0
	movq	-144(%rbp), %rax	# o2, tmp289
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	cmpw	$15, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6327 0 discriminator 1
	movq	-144(%rbp), %rax	# o2, tmp290
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6326 0 discriminator 1
	cmpw	$9, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6328 0
	movq	-144(%rbp), %rax	# o2, tmp291
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6327 0
	cmpw	$135, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6329 0
	movq	-144(%rbp), %rax	# o2, tmp292
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6328 0
	cmpw	$127, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6330 0
	movq	-144(%rbp), %rax	# o2, tmp293
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6329 0
	cmpw	$348, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6332 0
	cmpl	$0, -164(%rbp)	#, contextclass
	jne	.L1952	#,
	.loc 1 6333 0
	movq	-112(%rbp), %rax	# namegv, tmp294
	movq	%rax, %rdi	# tmp294,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-144(%rbp), %rcx	# o2, tmp295
	movl	-168(%rbp), %eax	# arg, tmp296
	movl	$.LC149, %esi	#,
	movl	%eax, %edi	# tmp296,
	call	S_bad_type	#
	.loc 1 6334 0
	jmp	.L1947	#
.L1952:
	jmp	.L1947	#
.L1939:
	.loc 1 6336 0
	movq	-144(%rbp), %rax	# o2, tmp297
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	cmpw	$125, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6337 0 discriminator 1
	movq	-144(%rbp), %rax	# o2, tmp298
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6336 0 discriminator 1
	cmpw	$10, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6339 0
	cmpl	$0, -164(%rbp)	#, contextclass
	jne	.L1953	#,
	.loc 1 6340 0
	movq	-112(%rbp), %rax	# namegv, tmp299
	movq	%rax, %rdi	# tmp299,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-144(%rbp), %rcx	# o2, tmp300
	movl	-168(%rbp), %eax	# arg, tmp301
	movl	$.LC114, %esi	#,
	movl	%eax, %edi	# tmp301,
	call	S_bad_type	#
	.loc 1 6341 0
	jmp	.L1947	#
.L1953:
	jmp	.L1947	#
.L1936:
	.loc 1 6343 0
	movq	-144(%rbp), %rax	# o2, tmp302
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	cmpw	$134, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6344 0 discriminator 1
	movq	-144(%rbp), %rax	# o2, tmp303
	movzwl	32(%rax), %eax	# o2_3->op_type, D.22496
	.loc 1 6343 0 discriminator 1
	cmpw	$11, %ax	#, D.22496
	je	.L1927	#,
	.loc 1 6346 0
	cmpl	$0, -164(%rbp)	#, contextclass
	jne	.L1954	#,
	.loc 1 6347 0
	movq	-112(%rbp), %rax	# namegv, tmp304
	movq	%rax, %rdi	# tmp304,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-144(%rbp), %rcx	# o2, tmp305
	movl	-168(%rbp), %eax	# arg, tmp306
	movl	$.LC116, %esi	#,
	movl	%eax, %edi	# tmp306,
	call	S_bad_type	#
	.loc 1 6348 0
	jmp	.L1947	#
.L1954:
	jmp	.L1947	#
.L1927:
.LBB128:
	.loc 1 6351 0
	movq	-144(%rbp), %rax	# o2, tmp307
	movq	%rax, -32(%rbp)	# tmp307, kid
	.loc 1 6352 0
	movq	-32(%rbp), %rax	# kid, tmp308
	movq	8(%rax), %rax	# kid_179->op_sibling, tmp309
	movq	%rax, -24(%rbp)	# tmp309, sib
	.loc 1 6353 0
	movq	-32(%rbp), %rax	# kid, tmp310
	movq	$0, 8(%rax)	#, kid_179->op_sibling
	.loc 1 6354 0
	movq	-32(%rbp), %rax	# kid, tmp311
	movq	%rax, %rdx	# tmp311,
	movl	$0, %esi	#,
	movl	$20, %edi	#,
	call	Perl_newUNOP	#
	movq	%rax, -144(%rbp)	# tmp312, o2
	.loc 1 6355 0
	movq	-144(%rbp), %rax	# o2, tmp313
	movq	-24(%rbp), %rdx	# sib, tmp314
	movq	%rdx, 8(%rax)	# tmp314, o2_181->op_sibling
	.loc 1 6356 0
	movq	-152(%rbp), %rax	# prev, tmp315
	movq	-144(%rbp), %rdx	# o2, tmp316
	movq	%rdx, 8(%rax)	# tmp316, prev_1->op_sibling
.LBE128:
	.loc 1 6358 0
	cmpl	$0, -164(%rbp)	#, contextclass
	je	.L1955	#,
	.loc 1 6358 0 is_stmt 0 discriminator 1
	cmpq	$0, -104(%rbp)	#, e
	je	.L1955	#,
	.loc 1 6359 0 is_stmt 1
	movq	-104(%rbp), %rax	# e, tmp320
	addq	$1, %rax	#, tmp319
	movq	%rax, -128(%rbp)	# tmp319, proto
	.loc 1 6360 0
	movl	$0, -164(%rbp)	#, contextclass
	.loc 1 6362 0
	jmp	.L1962	#
.L1955:
.L1962:
	nop
.L1947:
	.loc 1 6365 0
	cmpl	$0, -164(%rbp)	#, contextclass
	je	.L1956	#,
	.loc 1 6366 0
	jmp	.L1932	#
.L1956:
	.loc 1 6367 0
	jmp	.L1922	#
.L1913:
	.loc 1 6369 0
	addq	$1, -128(%rbp)	#, proto
	.loc 1 6370 0
	jmp	.L1908	#
.L1961:
	.loc 1 6363 0
	nop
.L1910:
	.loc 1 6373 0
	movq	-112(%rbp), %rax	# namegv, tmp321
	movq	%rax, %rdi	# tmp321,
	call	S_gv_ename	#
	movq	-120(%rbp), %rdx	# cv, tmp322
	movq	%rax, %rsi	# D.22505,
	movl	$.LC150, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
	jmp	.L1957	#
.L1922:
	jmp	.L1957	#
.L1909:
	.loc 1 6378 0
	movq	-144(%rbp), %rax	# o2, tmp323
	movq	%rax, %rdi	# tmp323,
	call	Perl_list	#
.L1957:
	.loc 1 6379 0
	movq	-144(%rbp), %rax	# o2, tmp324
	movl	$166, %esi	#,
	movq	%rax, %rdi	# tmp324,
	call	Perl_mod	#
	.loc 1 6380 0
	movq	-144(%rbp), %rax	# o2, tmp325
	movq	%rax, -152(%rbp)	# tmp325, prev
	.loc 1 6381 0
	movq	-144(%rbp), %rax	# o2, tmp326
	movq	8(%rax), %rax	# o2_8->op_sibling, tmp327
	movq	%rax, -144(%rbp)	# tmp327, o2
.L1908:
	.loc 1 6220 0 discriminator 1
	movq	-144(%rbp), %rax	# o2, tmp328
	cmpq	-136(%rbp), %rax	# cvop, tmp328
	jne	.L1958	#,
	.loc 1 6383 0
	cmpq	$0, -128(%rbp)	#, proto
	je	.L1959	#,
	.loc 1 6383 0 is_stmt 0 discriminator 1
	cmpl	$0, -172(%rbp)	#, optional
	jne	.L1959	#,
	.loc 1 6384 0 is_stmt 1 discriminator 1
	movq	-128(%rbp), %rax	# proto, tmp329
	movzbl	(%rax), %eax	# *proto_20, D.22504
	.loc 1 6383 0 discriminator 1
	testb	%al, %al	# D.22504
	je	.L1959	#,
	.loc 1 6384 0
	movq	-128(%rbp), %rax	# proto, tmp330
	movzbl	(%rax), %eax	# *proto_20, D.22504
	cmpb	$64, %al	#, D.22504
	je	.L1959	#,
	.loc 1 6384 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# proto, tmp331
	movzbl	(%rax), %eax	# *proto_20, D.22504
	cmpb	$37, %al	#, D.22504
	je	.L1959	#,
	movq	-128(%rbp), %rax	# proto, tmp332
	movzbl	(%rax), %eax	# *proto_20, D.22504
	cmpb	$59, %al	#, D.22504
	je	.L1959	#,
	.loc 1 6385 0 is_stmt 1
	movq	-112(%rbp), %rax	# namegv, tmp333
	movq	%rax, %rdi	# tmp333,
	call	S_gv_ename	#
	movq	%rax, %rdx	#, D.22505
	movq	-184(%rbp), %rax	# o, tmp334
	movq	%rdx, %rsi	# D.22505,
	movq	%rax, %rdi	# tmp334,
	call	S_too_few_arguments	#
	jmp	.L1960	#
.L1959:
	.loc 1 6386 0
	movq	-184(%rbp), %rax	# o, D.22494
.L1960:
	.loc 1 6387 0
	addq	$184, %rsp	#,
	popq	%rbx	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE142:
	.size	Perl_ck_subr, .-Perl_ck_subr
	.globl	Perl_ck_svconst
	.type	Perl_ck_svconst, @function
Perl_ck_svconst:
.LFB143:
	.loc 1 6391 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)	# o, o
	.loc 1 6392 0
	movq	-8(%rbp), %rax	# o, tmp65
	movq	40(%rax), %rax	# MEM[(struct SVOP *)o_1(D)].op_sv, D.22513
	movq	-8(%rbp), %rdx	# o, tmp66
	movq	40(%rdx), %rdx	# MEM[(struct SVOP *)o_1(D)].op_sv, D.22513
	movl	12(%rdx), %edx	# _3->sv_flags, D.22514
	orl	$8388608, %edx	#, D.22514
	movl	%edx, 12(%rax)	# D.22514, _2->sv_flags
	.loc 1 6393 0
	movq	-8(%rbp), %rax	# o, D.22515
	.loc 1 6394 0
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE143:
	.size	Perl_ck_svconst, .-Perl_ck_svconst
	.globl	Perl_ck_trunc
	.type	Perl_ck_trunc, @function
Perl_ck_trunc:
.LFB144:
	.loc 1 6398 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 6399 0
	movq	-24(%rbp), %rax	# o, tmp73
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22516
	movzbl	%al, %eax	# D.22516, D.22517
	andl	$4, %eax	#, D.22517
	testl	%eax, %eax	# D.22517
	je	.L1966	#,
.LBB129:
	.loc 1 6400 0
	movq	-24(%rbp), %rax	# o, tmp74
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o_2(D)].op_first, tmp75
	movq	%rax, -8(%rbp)	# tmp75, kid
	.loc 1 6402 0
	movq	-8(%rbp), %rax	# kid, tmp76
	movzwl	32(%rax), %eax	# kid_6->op_type, D.22518
	testw	%ax, %ax	# D.22518
	jne	.L1967	#,
	.loc 1 6403 0
	movq	-8(%rbp), %rax	# kid, tmp77
	movq	8(%rax), %rax	# kid_6->op_sibling, tmp78
	movq	%rax, -8(%rbp)	# tmp78, kid
.L1967:
	.loc 1 6404 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1966	#,
	.loc 1 6404 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp79
	movzwl	32(%rax), %eax	# kid_1->op_type, D.22518
	cmpw	$5, %ax	#, D.22518
	jne	.L1966	#,
	.loc 1 6405 0 is_stmt 1 discriminator 1
	movq	-8(%rbp), %rax	# kid, tmp80
	movzbl	37(%rax), %eax	# kid_1->op_private, D.22516
	movzbl	%al, %eax	# D.22516, D.22517
	andl	$64, %eax	#, D.22517
	.loc 1 6404 0 discriminator 1
	testl	%eax, %eax	# D.22517
	je	.L1966	#,
	.loc 1 6407 0
	movq	-24(%rbp), %rax	# o, tmp81
	movzbl	36(%rax), %eax	# o_2(D)->op_flags, D.22516
	orl	$-128, %eax	#, D.22516
	movl	%eax, %edx	# D.22516, D.22516
	movq	-24(%rbp), %rax	# o, tmp82
	movb	%dl, 36(%rax)	# D.22516, o_2(D)->op_flags
	.loc 1 6408 0
	movq	-8(%rbp), %rax	# kid, tmp83
	movzbl	37(%rax), %eax	# kid_1->op_private, D.22516
	andl	$-9, %eax	#, D.22516
	movl	%eax, %edx	# D.22516, D.22516
	movq	-8(%rbp), %rax	# kid, tmp84
	movb	%dl, 37(%rax)	# D.22516, kid_1->op_private
.L1966:
.LBE129:
	.loc 1 6411 0
	movq	-24(%rbp), %rax	# o, tmp85
	movq	%rax, %rdi	# tmp85,
	call	Perl_ck_fun	#
	.loc 1 6412 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE144:
	.size	Perl_ck_trunc, .-Perl_ck_trunc
	.globl	Perl_ck_substr
	.type	Perl_ck_substr, @function
Perl_ck_substr:
.LFB145:
	.loc 1 6416 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$32, %rsp	#,
	movq	%rdi, -24(%rbp)	# o, o
	.loc 1 6417 0
	movq	-24(%rbp), %rax	# o, tmp68
	movq	%rax, %rdi	# tmp68,
	call	Perl_ck_fun	#
	movq	%rax, -24(%rbp)	# tmp69, o
	.loc 1 6418 0
	movq	-24(%rbp), %rax	# o, tmp70
	movzbl	36(%rax), %eax	# o_3->op_flags, D.22520
	movzbl	%al, %eax	# D.22520, D.22521
	andl	$4, %eax	#, D.22521
	testl	%eax, %eax	# D.22521
	je	.L1970	#,
	.loc 1 6418 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# o, tmp71
	movzbl	37(%rax), %eax	# o_3->op_private, D.22520
	cmpb	$4, %al	#, D.22520
	jne	.L1970	#,
.LBB130:
	.loc 1 6419 0 is_stmt 1
	movq	-24(%rbp), %rax	# o, tmp72
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)o_3].op_first, tmp73
	movq	%rax, -8(%rbp)	# tmp73, kid
	.loc 1 6421 0
	movq	-8(%rbp), %rax	# kid, tmp74
	movzwl	32(%rax), %eax	# kid_8->op_type, D.22522
	testw	%ax, %ax	# D.22522
	jne	.L1971	#,
	.loc 1 6422 0
	movq	-8(%rbp), %rax	# kid, tmp75
	movq	8(%rax), %rax	# kid_8->op_sibling, tmp76
	movq	%rax, -8(%rbp)	# tmp76, kid
.L1971:
	.loc 1 6423 0
	cmpq	$0, -8(%rbp)	#, kid
	je	.L1970	#,
	.loc 1 6424 0
	movq	-8(%rbp), %rax	# kid, tmp77
	movzbl	36(%rax), %eax	# kid_1->op_flags, D.22520
	orl	$32, %eax	#, D.22520
	movl	%eax, %edx	# D.22520, D.22520
	movq	-8(%rbp), %rax	# kid, tmp78
	movb	%dl, 36(%rax)	# D.22520, kid_1->op_flags
.L1970:
.LBE130:
	.loc 1 6427 0
	movq	-24(%rbp), %rax	# o, D.22523
	.loc 1 6428 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE145:
	.size	Perl_ck_substr, .-Perl_ck_substr
	.section	.rodata
	.align 8
.LC151:
	.string	"%_() called too early to check prototype"
	.align 8
.LC152:
	.string	"Statement unlikely to be reached"
	.align 8
.LC153:
	.string	"\t(Maybe you meant system() when you said exec()?)\n"
.LC154:
	.string	"FIELDS"
	.align 8
.LC155:
	.string	"No such pseudo-hash field \"%s\" in variable %s of type %s"
	.align 8
.LC156:
	.string	"Bad index while coercing array into hash"
	.text
	.globl	Perl_peep
	.type	Perl_peep, @function
Perl_peep:
.LFB146:
	.loc 1 6436 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$320, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rbx	# o, o
	.loc 1 6437 0
	movl	$0, %r12d	#, oldop
	.loc 1 6440 0
	testq	%rbx, %rbx	# o
	je	.L1973	#,
	.loc 1 6440 0 is_stmt 0 discriminator 1
	movzwl	34(%rbx), %eax	# o_26(D)->op_seq, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L1973	#,
	.loc 1 6442 0 is_stmt 1
	call	Perl_push_scope	#
	.loc 1 6443 0
	call	Perl_save_op	#
	.loc 1 6444 0
	movl	$PL_curcop, %edi	#,
	call	Perl_save_vptr	#
	.loc 1 6445 0
	jmp	.L1977	#
.L2111:
	.loc 1 6446 0
	movzwl	34(%rbx), %eax	# o_1->op_seq, D.22524
	testw	%ax, %ax	# D.22524
	je	.L1978	#,
	.loc 1 6447 0
	jmp	.L1979	#
.L1978:
	.loc 1 6450 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1104
	testw	%ax, %ax	# PL_op_seqmax.1104
	je	.L1980	#,
	.loc 1 6450 0 is_stmt 0 discriminator 1
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1105
	cmpw	$-1, %ax	#, PL_op_seqmax.1105
	jne	.L1981	#,
.L1980:
	.loc 1 6451 0 is_stmt 1
	movw	$1, PL_op_seqmax(%rip)	#, PL_op_seqmax
.L1981:
	.loc 1 6452 0
	movq	%rbx, PL_op(%rip)	# o, PL_op
	.loc 1 6453 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.22524
	movzwl	%ax, %eax	# D.22524, D.22525
	cmpl	$153, %eax	#, D.22525
	je	.L1983	#,
	cmpl	$153, %eax	#, D.22525
	jg	.L1984	#,
	cmpl	$33, %eax	#, D.22525
	jg	.L1985	#,
	cmpl	$31, %eax	#, D.22525
	jge	.L1986	#,
	cmpl	$2, %eax	#, D.22525
	je	.L1987	#,
	cmpl	$2, %eax	#, D.22525
	jg	.L1988	#,
	testl	%eax, %eax	# D.22525
	je	.L1989	#,
	cmpl	$1, %eax	#, D.22525
	je	.L1990	#,
	jmp	.L1982	#
.L1988:
	cmpl	$7, %eax	#, D.22525
	je	.L1991	#,
	cmpl	$10, %eax	#, D.22525
	je	.L1991	#,
	cmpl	$5, %eax	#, D.22525
	je	.L1992	#,
	jmp	.L1982	#
.L1985:
	cmpl	$136, %eax	#, D.22525
	je	.L1993	#,
	cmpl	$136, %eax	#, D.22525
	jg	.L1994	#,
	cmpl	$66, %eax	#, D.22525
	je	.L1995	#,
	cmpl	$135, %eax	#, D.22525
	je	.L1996	#,
	jmp	.L1982	#
.L1994:
	cmpl	$150, %eax	#, D.22525
	je	.L1997	#,
	cmpl	$151, %eax	#, D.22525
	je	.L1998	#,
	jmp	.L1982	#
.L1984:
	cmpl	$173, %eax	#, D.22525
	je	.L1987	#,
	cmpl	$173, %eax	#, D.22525
	jg	.L1999	#,
	cmpl	$160, %eax	#, D.22525
	jg	.L2000	#,
	cmpl	$159, %eax	#, D.22525
	jge	.L1983	#,
	subl	$155, %eax	#, tmp599
	cmpl	$1, %eax	#, tmp599
	ja	.L1982	#,
	jmp	.L1983	#
.L2000:
	subl	$162, %eax	#, tmp600
	cmpl	$2, %eax	#, tmp600
	ja	.L1982	#,
	jmp	.L1983	#
.L1999:
	cmpl	$180, %eax	#, D.22525
	je	.L2001	#,
	cmpl	$180, %eax	#, D.22525
	jg	.L2002	#,
	cmpl	$175, %eax	#, D.22525
	jle	.L2003	#,
	cmpl	$179, %eax	#, D.22525
	je	.L1987	#,
	jmp	.L1982	#
.L2002:
	cmpl	$285, %eax	#, D.22525
	je	.L2004	#,
	cmpl	$349, %eax	#, D.22525
	je	.L2003	#,
	cmpl	$182, %eax	#, D.22525
	je	.L2001	#,
	jmp	.L1982	#
.L2003:
	.loc 1 6457 0
	movq	%rbx, PL_curcop(%rip)	# o, PL_curcop
	.loc 1 6458 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1106
	leal	1(%rax), %edx	#, PL_op_seqmax.1108
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1108, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1107, o_1->op_seq
	.loc 1 6459 0
	jmp	.L2005	#
.L1992:
	.loc 1 6462 0
	movzbl	37(%rbx), %eax	# MEM[(struct SVOP *)o_1].op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$8, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2006	#,
	.loc 1 6463 0
	movq	%rbx, %rdi	# o,
	call	S_no_bareword_allowed	#
.L2006:
	.loc 1 6489 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1109
	leal	1(%rax), %edx	#, PL_op_seqmax.1111
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1111, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1110, o_1->op_seq
	.loc 1 6490 0
	jmp	.L2005	#
.L1995:
	.loc 1 6493 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2007	#,
	.loc 1 6493 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzwl	32(%rax), %eax	# _43->op_type, D.22524
	cmpw	$67, %ax	#, D.22524
	jne	.L2007	#,
	.loc 1 6494 0 is_stmt 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzbl	37(%rax), %eax	# _45->op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$16, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2008	#,
	.loc 1 6495 0
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$64, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2009	#,
	.loc 1 6496 0
	jmp	.L2007	#
.L2009:
	.loc 1 6499 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	24(%rax), %rax	# _52->op_targ, D.22528
	movq	%rax, 24(%rbx)	# D.22528, o_1->op_targ
	.loc 1 6500 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	$0, 24(%rax)	#, _54->op_targ
	.loc 1 6501 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	orl	$16, %eax	#, D.22526
	movb	%al, 37(%rbx)	# D.22526, o_1->op_private
.L2008:
	.loc 1 6504 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
.L2007:
	.loc 1 6507 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1112
	leal	1(%rax), %edx	#, PL_op_seqmax.1114
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1114, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1113, o_1->op_seq
	.loc 1 6508 0
	jmp	.L2005	#
.L1990:
	.loc 1 6510 0
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$3, %eax	#, D.22525
	cmpl	$3, %eax	#, D.22525
	je	.L2010	#,
	.loc 1 6511 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1115
	leal	1(%rax), %edx	#, PL_op_seqmax.1117
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1117, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1116, o_1->op_seq
	.loc 1 6512 0
	jmp	.L2005	#
.L2010:
	.loc 1 6514 0
	jmp	.L1987	#
.L1989:
	.loc 1 6516 0
	movq	24(%rbx), %rax	# o_1->op_targ, D.22528
	cmpq	$174, %rax	#, D.22528
	je	.L2011	#,
	.loc 1 6517 0
	movq	24(%rbx), %rax	# o_1->op_targ, D.22528
	cmpq	$175, %rax	#, D.22528
	je	.L2011	#,
	.loc 1 6518 0
	movq	24(%rbx), %rax	# o_1->op_targ, D.22528
	cmpq	$349, %rax	#, D.22528
	jne	.L2012	#,
.L2011:
	.loc 1 6520 0
	movq	%rbx, PL_curcop(%rip)	# o, PL_curcop
.L2012:
	.loc 1 6526 0
	testq	%r12, %r12	# oldop
	je	.L2013	#,
	.loc 1 6526 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2013	#,
	.loc 1 6527 0 is_stmt 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, (%r12)	# D.22527, oldop_3->op_next
	.loc 1 6528 0
	jmp	.L2014	#
.L2013:
	.loc 1 6530 0
	jmp	.L2005	#
.L1987:
	.loc 1 6535 0
	testq	%r12, %r12	# oldop
	je	.L2015	#,
	.loc 1 6535 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2015	#,
	.loc 1 6536 0 is_stmt 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, (%r12)	# D.22527, oldop_3->op_next
	.loc 1 6537 0
	jmp	.L2014	#
.L2015:
	.loc 1 6539 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1118
	leal	1(%rax), %edx	#, PL_op_seqmax.1120
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1120, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1119, o_1->op_seq
	.loc 1 6540 0
	jmp	.L2005	#
.L1991:
	.loc 1 6544 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.22524
	cmpw	$10, %ax	#, D.22524
	je	.L2016	#,
	.loc 1 6544 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzwl	32(%rax), %eax	# _78->op_type, D.22524
	cmpw	$125, %ax	#, D.22524
	jne	.L2017	#,
.L2016:
.LBB131:
	.loc 1 6545 0 is_stmt 1
	movzwl	32(%rbx), %eax	# o_1->op_type, D.22524
	.loc 1 6546 0
	cmpw	$10, %ax	#, D.22524
	jne	.L2018	#,
	.loc 1 6546 0 is_stmt 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, iftmp.1121
	jmp	.L2019	#
.L2018:
	.loc 1 6546 0 discriminator 2
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _153->op_next, iftmp.1121
.L2019:
	.loc 1 6545 0 is_stmt 1
	movq	%rax, -240(%rbp)	# iftmp.1121, pop
	.loc 1 6548 0
	cmpq	$0, -240(%rbp)	#, pop
	je	.L2020	#,
	.loc 1 6548 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rax	# pop, tmp601
	movzwl	32(%rax), %eax	# pop_155->op_type, D.22524
	cmpw	$5, %ax	#, D.22524
	jne	.L2020	#,
	.loc 1 6549 0 is_stmt 1 discriminator 1
	movq	-240(%rbp), %rax	# pop, tmp602
	movq	(%rax), %rax	# pop_155->op_next, PL_op.1122
	movq	%rax, PL_op(%rip)	# PL_op.1122, PL_op
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1123
	.loc 1 6548 0 discriminator 1
	testq	%rax, %rax	# PL_op.1123
	je	.L2020	#,
	.loc 1 6550 0
	movq	-240(%rbp), %rax	# pop, tmp603
	movq	(%rax), %rax	# pop_155->op_next, D.22527
	movzwl	32(%rax), %eax	# _159->op_type, D.22524
	.loc 1 6549 0
	cmpw	$127, %ax	#, D.22524
	jne	.L2020	#,
	.loc 1 6551 0
	movq	-240(%rbp), %rax	# pop, tmp604
	movq	(%rax), %rax	# pop_155->op_next, D.22527
	movzbl	37(%rax), %eax	# _161->op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$248, %eax	#, D.22525
	.loc 1 6550 0
	testl	%eax, %eax	# D.22525
	jne	.L2020	#,
	.loc 1 6553 0
	movq	-240(%rbp), %rax	# pop, tmp605
	movq	40(%rax), %rax	# MEM[(struct SVOP *)pop_155].op_sv, D.22531
	movl	12(%rax), %eax	# _165->sv_flags, D.22535
	andl	$65536, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2021	#,
	.loc 1 6553 0 is_stmt 0 discriminator 1
	movq	-240(%rbp), %rax	# pop, tmp606
	movq	40(%rax), %rax	# MEM[(struct SVOP *)pop_155].op_sv, D.22531
	movq	(%rax), %rax	# _168->sv_any, D.22532
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_169].xiv_iv, iftmp.1124
	jmp	.L2022	#
.L2021:
	.loc 1 6553 0 discriminator 2
	movq	-240(%rbp), %rax	# pop, tmp607
	movq	40(%rax), %rax	# MEM[(struct SVOP *)pop_155].op_sv, D.22531
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_2iv	#
.L2022:
	.loc 1 6553 0 discriminator 3
	movq	PL_curcop(%rip), %rdx	# PL_curcop, PL_curcop.1125
	movl	68(%rdx), %edx	# PL_curcop.1125_173->cop_arybase, D.22525
	movslq	%edx, %rdx	# D.22525, D.22540
	subq	%rdx, %rax	# D.22540, tmp608
	movq	%rax, -232(%rbp)	# tmp608, i
	.loc 1 6552 0 is_stmt 1 discriminator 3
	cmpq	$255, -232(%rbp)	#, i
	jg	.L2020	#,
	.loc 1 6554 0
	cmpq	$0, -232(%rbp)	#, i
	js	.L2020	#,
.LBB132:
	.loc 1 6558 0
	movq	-240(%rbp), %rax	# pop, tmp609
	movzbl	37(%rax), %eax	# MEM[(struct SVOP *)pop_155].op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$8, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2023	#,
	.loc 1 6559 0
	movq	-240(%rbp), %rax	# pop, tmp610
	movq	%rax, %rdi	# tmp610,
	call	S_no_bareword_allowed	#
.L2023:
	.loc 1 6560 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2024	#,
	.loc 1 6561 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
.L2024:
	.loc 1 6562 0
	movq	-240(%rbp), %rax	# pop, tmp611
	movq	(%rax), %rax	# pop_155->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
	.loc 1 6563 0
	movq	-240(%rbp), %rax	# pop, tmp612
	movq	%rax, %rdi	# tmp612,
	call	Perl_op_null	#
	.loc 1 6564 0
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.22526
	movl	%eax, %edx	# D.22526, D.22529
	movq	-240(%rbp), %rax	# pop, tmp613
	movq	(%rax), %rax	# pop_155->op_next, D.22527
	movzbl	36(%rax), %eax	# _185->op_flags, D.22526
	andl	$32, %eax	#, D.22529
	orl	%edx, %eax	# D.22529, D.22529
	movb	%al, 36(%rbx)	# D.22526, o_1->op_flags
	.loc 1 6565 0
	movq	-240(%rbp), %rax	# pop, tmp614
	movq	(%rax), %rax	# pop_155->op_next, D.22527
	movq	(%rax), %rax	# _191->op_next, D.22527
	movq	%rax, (%rbx)	# D.22527, o_1->op_next
	.loc 1 6566 0
	movq	PL_ppaddr+1008(%rip), %rax	# PL_ppaddr, D.22530
	movq	%rax, 16(%rbx)	# D.22530, o_1->op_ppaddr
	.loc 1 6567 0
	movq	-232(%rbp), %rax	# i, tmp615
	movb	%al, 37(%rbx)	# D.22526, o_1->op_private
	.loc 1 6568 0
	movzwl	32(%rbx), %eax	# o_1->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2025	#,
	.loc 1 6569 0
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)o_1].op_sv, tmp616
	movq	%rax, -224(%rbp)	# tmp616, gv
	.loc 1 6570 0
	movq	-224(%rbp), %rax	# gv, tmp617
	movq	(%rax), %rax	# gv_196->sv_any, D.22536
	movq	56(%rax), %rax	# _197->xgv_gp, D.22537
	movq	32(%rax), %rax	# _198->gp_av, D.22541
	testq	%rax, %rax	# D.22541
	jne	.L2028	#,
	.loc 1 6570 0 is_stmt 0 discriminator 2
	movq	-224(%rbp), %rax	# gv, tmp619
	movq	%rax, %rdi	# tmp619,
	call	Perl_gv_AVadd	#
	jmp	.L2028	#
.L2025:
	.loc 1 6573 0 is_stmt 1
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.22526
	orl	$-128, %eax	#, D.22526
	movb	%al, 36(%rbx)	# D.22526, o_1->op_flags
.L2028:
	.loc 1 6574 0
	movw	$126, 32(%rbx)	#, o_1->op_type
.L2020:
.LBE132:
	.loc 1 6576 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1127
	leal	1(%rax), %edx	#, PL_op_seqmax.1129
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1129, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1128, o_1->op_seq
	.loc 1 6577 0
	jmp	.L2005	#
.L2017:
.LBE131:
	.loc 1 6580 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzwl	32(%rax), %eax	# _80->op_type, D.22524
	cmpw	$15, %ax	#, D.22524
	jne	.L2029	#,
	.loc 1 6581 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzbl	37(%rax), %eax	# _82->op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$96, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	jne	.L2031	#,
	.loc 1 6582 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
	.loc 1 6583 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	movl	%eax, %edx	# D.22526, D.22529
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzbl	37(%rax), %eax	# _89->op_private, D.22526
	andl	$-112, %eax	#, D.22529
	orl	%edx, %eax	# D.22529, D.22529
	movb	%al, 37(%rbx)	# D.22526, o_1->op_private
	.loc 1 6585 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _95->op_next, D.22527
	movq	%rax, (%rbx)	# D.22527, o_1->op_next
	.loc 1 6586 0
	movw	$6, 32(%rbx)	#, o_1->op_type
	.loc 1 6587 0
	movq	PL_ppaddr+48(%rip), %rax	# PL_ppaddr, D.22530
	movq	%rax, 16(%rbx)	# D.22530, o_1->op_ppaddr
	jmp	.L2031	#
.L2029:
	.loc 1 6590 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$32, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2032	#,
	.loc 1 6590 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1130
	movq	80(%rax), %rax	# PL_curcop.1130_101->cop_warnings, D.22531
	testq	%rax, %rax	# D.22531
	je	.L2033	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1131
	movq	80(%rax), %rax	# PL_curcop.1131_103->cop_warnings, D.22531
	cmpq	$32, %rax	#, D.22531
	je	.L2033	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1132
	movq	80(%rax), %rax	# PL_curcop.1132_105->cop_warnings, D.22531
	cmpq	$16, %rax	#, D.22531
	je	.L2034	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1133
	movq	80(%rax), %rax	# PL_curcop.1133_107->cop_warnings, D.22531
	movq	(%rax), %rax	# _108->sv_any, D.22532
	movq	(%rax), %rax	# MEM[(struct XPV *)_109].xpv_pv, D.22533
	addq	$8, %rax	#, D.22533
	movzbl	(%rax), %eax	# *_111, D.22534
	movsbl	%al, %eax	# D.22534, D.22525
	andl	$64, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	jne	.L2034	#,
.L2033:
	.loc 1 6590 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1134
	movq	80(%rax), %rax	# PL_curcop.1134_115->cop_warnings, D.22531
	testq	%rax, %rax	# D.22531
	jne	.L2032	#,
	.loc 1 6590 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1135
	movzbl	%al, %eax	# PL_dowarn.1135, D.22525
	andl	$1, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2032	#,
.L2034:
.LBB133:
	.loc 1 6591 0 is_stmt 1
	movq	40(%rbx), %rax	# MEM[(struct SVOP *)o_1].op_sv, tmp620
	movq	%rax, -256(%rbp)	# tmp620, gv
	.loc 1 6592 0
	movq	-256(%rbp), %rax	# gv, tmp621
	movl	12(%rax), %eax	# gv_120->sv_flags, D.22535
	movzbl	%al, %eax	# D.22535, D.22535
	cmpl	$13, %eax	#, D.22535
	jne	.L2035	#,
	.loc 1 6592 0 is_stmt 0 discriminator 1
	movq	-256(%rbp), %rax	# gv, tmp622
	movq	(%rax), %rax	# gv_120->sv_any, D.22536
	movq	56(%rax), %rax	# _123->xgv_gp, D.22537
	movq	56(%rax), %rax	# _124->gp_cv, D.22538
	testq	%rax, %rax	# D.22538
	je	.L2035	#,
	movq	-256(%rbp), %rax	# gv, tmp623
	movq	(%rax), %rax	# gv_120->sv_any, D.22536
	movq	56(%rax), %rax	# _126->xgv_gp, D.22537
	movq	56(%rax), %rax	# _127->gp_cv, D.22538
	movq	(%rax), %rax	# _128->sv_any, D.22539
	movq	(%rax), %rax	# MEM[(struct XPV *)_129].xpv_pv, D.22533
	testq	%rax, %rax	# D.22533
	je	.L2035	#,
.LBB134:
	.loc 1 6594 0 is_stmt 1
	call	Perl_sv_newmortal	#
	movq	%rax, -248(%rbp)	# tmp624, sv
	.loc 1 6595 0
	movq	-256(%rbp), %rsi	# gv, tmp625
	movq	-248(%rbp), %rax	# sv, tmp626
	movl	$1, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# tmp626,
	call	Perl_gv_efullname4	#
	.loc 1 6596 0
	movq	-248(%rbp), %rax	# sv, tmp627
	movq	%rax, %rdx	# tmp627,
	movl	$.LC151, %esi	#,
	movl	$35, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
.LBE134:
.LBE133:
	.loc 1 6590 0
	jmp	.L2031	#
.L2035:
	jmp	.L2031	#
.L2032:
	.loc 1 6601 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzwl	32(%rax), %eax	# _132->op_type, D.22524
	cmpw	$26, %ax	#, D.22524
	jne	.L2031	#,
	.loc 1 6602 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _134->op_next, D.22527
	movzwl	32(%rax), %eax	# _135->op_type, D.22524
	cmpw	$66, %ax	#, D.22524
	jne	.L2031	#,
	.loc 1 6603 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _137->op_next, D.22527
	movzbl	36(%rax), %eax	# _138->op_flags, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$64, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2031	#,
	.loc 1 6606 0
	movw	$27, 32(%rbx)	#, o_1->op_type
	.loc 1 6607 0
	movzbl	36(%rbx), %eax	# o_1->op_flags, D.22526
	orl	$64, %eax	#, D.22526
	movb	%al, 36(%rbx)	# D.22526, o_1->op_flags
	.loc 1 6608 0
	movq	PL_ppaddr+216(%rip), %rax	# PL_ppaddr, D.22530
	movq	%rax, 16(%rbx)	# D.22530, o_1->op_ppaddr
	.loc 1 6609 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _145->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
	.loc 1 6610 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_op_null	#
.L2031:
	.loc 1 6613 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1136
	leal	1(%rax), %edx	#, PL_op_seqmax.1138
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1138, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1137, o_1->op_seq
	.loc 1 6614 0
	jmp	.L2005	#
.L1983:
	.loc 1 6624 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1139
	leal	1(%rax), %edx	#, PL_op_seqmax.1141
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1141, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1140, o_1->op_seq
	.loc 1 6625 0
	jmp	.L2036	#
.L2037:
	.loc 1 6626 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1142
	movq	PL_op(%rip), %rdx	# PL_op, PL_op.1143
	movq	48(%rdx), %rdx	# MEM[(struct LOGOP *)PL_op.1143_219].op_other, D.22527
	movq	(%rdx), %rdx	# _220->op_next, D.22527
	movq	%rdx, 48(%rax)	# D.22527, MEM[(struct LOGOP *)PL_op.1142_218].op_other
.L2036:
	.loc 1 6625 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1144
	movq	48(%rax), %rax	# MEM[(struct LOGOP *)PL_op.1144_215].op_other, D.22527
	movzwl	32(%rax), %eax	# _216->op_type, D.22524
	testw	%ax, %ax	# D.22524
	je	.L2037	#,
	.loc 1 6627 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1145
	movq	48(%rax), %rax	# MEM[(struct LOGOP *)PL_op.1145_222].op_other, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_peep	#
	.loc 1 6628 0
	jmp	.L2005	#
.L2001:
	.loc 1 6632 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1146
	leal	1(%rax), %edx	#, PL_op_seqmax.1148
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1148, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1147, o_1->op_seq
	.loc 1 6633 0
	jmp	.L2038	#
.L2039:
	.loc 1 6634 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1149
	movq	PL_op(%rip), %rdx	# PL_op, PL_op.1150
	movq	56(%rdx), %rdx	# MEM[(struct LOOP *)PL_op.1150_231].op_redoop, D.22527
	movq	(%rdx), %rdx	# _232->op_next, D.22527
	movq	%rdx, 56(%rax)	# D.22527, MEM[(struct LOOP *)PL_op.1149_230].op_redoop
.L2038:
	.loc 1 6633 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1151
	movq	56(%rax), %rax	# MEM[(struct LOOP *)PL_op.1151_227].op_redoop, D.22527
	movzwl	32(%rax), %eax	# _228->op_type, D.22524
	testw	%ax, %ax	# D.22524
	je	.L2039	#,
	.loc 1 6635 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1152
	movq	56(%rax), %rax	# MEM[(struct LOOP *)PL_op.1152_234].op_redoop, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_peep	#
	.loc 1 6636 0
	jmp	.L2040	#
.L2041:
	.loc 1 6637 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1153
	movq	PL_op(%rip), %rdx	# PL_op, PL_op.1154
	movq	64(%rdx), %rdx	# MEM[(struct LOOP *)PL_op.1154_240].op_nextop, D.22527
	movq	(%rdx), %rdx	# _241->op_next, D.22527
	movq	%rdx, 64(%rax)	# D.22527, MEM[(struct LOOP *)PL_op.1153_239].op_nextop
.L2040:
	.loc 1 6636 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1155
	movq	64(%rax), %rax	# MEM[(struct LOOP *)PL_op.1155_236].op_nextop, D.22527
	movzwl	32(%rax), %eax	# _237->op_type, D.22524
	testw	%ax, %ax	# D.22524
	je	.L2041	#,
	.loc 1 6638 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1156
	movq	64(%rax), %rax	# MEM[(struct LOOP *)PL_op.1156_243].op_nextop, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_peep	#
	.loc 1 6639 0
	jmp	.L2042	#
.L2043:
	.loc 1 6640 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1157
	movq	PL_op(%rip), %rdx	# PL_op, PL_op.1158
	movq	72(%rdx), %rdx	# MEM[(struct LOOP *)PL_op.1158_249].op_lastop, D.22527
	movq	(%rdx), %rdx	# _250->op_next, D.22527
	movq	%rdx, 72(%rax)	# D.22527, MEM[(struct LOOP *)PL_op.1157_248].op_lastop
.L2042:
	.loc 1 6639 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1159
	movq	72(%rax), %rax	# MEM[(struct LOOP *)PL_op.1159_245].op_lastop, D.22527
	movzwl	32(%rax), %eax	# _246->op_type, D.22524
	testw	%ax, %ax	# D.22524
	je	.L2043	#,
	.loc 1 6641 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1160
	movq	72(%rax), %rax	# MEM[(struct LOOP *)PL_op.1160_252].op_lastop, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_peep	#
	.loc 1 6642 0
	jmp	.L2005	#
.L1986:
	.loc 1 6647 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1161
	leal	1(%rax), %edx	#, PL_op_seqmax.1163
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1163, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1162, o_1->op_seq
	.loc 1 6648 0
	jmp	.L2044	#
.L2046:
	.loc 1 6650 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1164
	movq	PL_op(%rip), %rdx	# PL_op, PL_op.1165
	movq	64(%rdx), %rdx	# MEM[(struct PMOP *)PL_op.1165_263].op_pmreplstart, D.22527
	movq	(%rdx), %rdx	# _264->op_next, D.22527
	movq	%rdx, 64(%rax)	# D.22527, MEM[(struct PMOP *)PL_op.1164_262].op_pmreplstart
.L2044:
	.loc 1 6648 0 discriminator 1
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1166
	movq	64(%rax), %rax	# MEM[(struct PMOP *)PL_op.1166_257].op_pmreplstart, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2045	#,
	.loc 1 6649 0 discriminator 2
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1167
	movq	64(%rax), %rax	# MEM[(struct PMOP *)PL_op.1167_259].op_pmreplstart, D.22527
	movzwl	32(%rax), %eax	# _260->op_type, D.22524
	.loc 1 6648 0 discriminator 2
	testw	%ax, %ax	# D.22524
	je	.L2046	#,
.L2045:
	.loc 1 6651 0
	movq	PL_op(%rip), %rax	# PL_op, PL_op.1168
	movq	64(%rax), %rax	# MEM[(struct PMOP *)PL_op.1168_266].op_pmreplstart, D.22527
	movq	%rax, %rdi	# D.22527,
	call	Perl_peep	#
	.loc 1 6652 0
	jmp	.L2005	#
.L2004:
	.loc 1 6655 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1169
	leal	1(%rax), %edx	#, PL_op_seqmax.1171
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1171, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1170, o_1->op_seq
	.loc 1 6656 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1172
	movq	80(%rax), %rax	# PL_curcop.1172_271->cop_warnings, D.22531
	testq	%rax, %rax	# D.22531
	je	.L2047	#,
	.loc 1 6656 0 is_stmt 0 discriminator 1
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1173
	movq	80(%rax), %rax	# PL_curcop.1173_273->cop_warnings, D.22531
	cmpq	$32, %rax	#, D.22531
	je	.L2047	#,
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1174
	movq	80(%rax), %rax	# PL_curcop.1174_275->cop_warnings, D.22531
	cmpq	$16, %rax	#, D.22531
	je	.L2048	#,
	.loc 1 6656 0 discriminator 2
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1175
	movq	80(%rax), %rax	# PL_curcop.1175_277->cop_warnings, D.22531
	movq	(%rax), %rax	# _278->sv_any, D.22532
	movq	(%rax), %rax	# MEM[(struct XPV *)_279].xpv_pv, D.22533
	addq	$7, %rax	#, D.22533
	movzbl	(%rax), %eax	# *_281, D.22534
	movsbl	%al, %eax	# D.22534, D.22525
	andl	$1, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	jne	.L2048	#,
.L2047:
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1176
	movq	80(%rax), %rax	# PL_curcop.1176_285->cop_warnings, D.22531
	testq	%rax, %rax	# D.22531
	jne	.L2049	#,
	.loc 1 6656 0 discriminator 1
	movzbl	PL_dowarn(%rip), %eax	# PL_dowarn, PL_dowarn.1177
	movzbl	%al, %eax	# PL_dowarn.1177, D.22525
	andl	$1, %eax	#, D.22525
	testl	%eax, %eax	# D.22525
	je	.L2049	#,
.L2048:
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2049	#,
	.loc 1 6657 0 is_stmt 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movzwl	32(%rax), %eax	# _291->op_type, D.22524
	cmpw	$174, %ax	#, D.22524
	jne	.L2049	#,
	.loc 1 6658 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	8(%rax), %rax	# _293->op_sibling, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2049	#,
	.loc 1 6659 0 discriminator 1
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	8(%rax), %rax	# _295->op_sibling, D.22527
	movzwl	32(%rax), %eax	# _296->op_type, D.22524
	.loc 1 6658 0 discriminator 1
	cmpw	$190, %ax	#, D.22524
	je	.L2049	#,
	.loc 1 6660 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	8(%rax), %rax	# _298->op_sibling, D.22527
	movzwl	32(%rax), %eax	# _299->op_type, D.22524
	.loc 1 6659 0
	cmpw	$170, %ax	#, D.22524
	je	.L2049	#,
	.loc 1 6661 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	8(%rax), %rax	# _301->op_sibling, D.22527
	movzwl	32(%rax), %eax	# _302->op_type, D.22524
	.loc 1 6660 0
	cmpw	$171, %ax	#, D.22524
	je	.L2049	#,
.LBB135:
	.loc 1 6662 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1178
	movl	72(%rax), %eax	# PL_curcop.1178_304->cop_line, tmp628
	movl	%eax, -324(%rbp)	# tmp628, oldline
	.loc 1 6664 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1179
	movq	(%rbx), %rdx	# o_1->op_next, D.22527
	movl	72(%rdx), %edx	# MEM[(struct COP *)_307].cop_line, D.22535
	movl	%edx, 72(%rax)	# D.22535, PL_curcop.1179_306->cop_line
	.loc 1 6665 0
	movl	$.LC152, %esi	#,
	movl	$7, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 6667 0
	movl	$.LC153, %esi	#,
	movl	$7, %edi	#,
	movl	$0, %eax	#,
	call	Perl_warner	#
	.loc 1 6669 0
	movq	PL_curcop(%rip), %rax	# PL_curcop, PL_curcop.1180
	movl	-324(%rbp), %edx	# oldline, tmp629
	movl	%edx, 72(%rax)	# tmp629, PL_curcop.1180_309->cop_line
.LBE135:
	.loc 1 6672 0
	jmp	.L2005	#
.L2049:
	jmp	.L2005	#
.L1996:
.LBB136:
	.loc 1 6680 0
	movq	$0, -216(%rbp)	#, key
	.loc 1 6683 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1181
	leal	1(%rax), %edx	#, PL_op_seqmax.1183
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1183, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1182, o_1->op_seq
	.loc 1 6685 0
	movq	48(%rbx), %rax	# MEM[(struct BINOP *)o_1].op_last, D.22527
	movzwl	32(%rax), %eax	# _314->op_type, D.22524
	cmpw	$5, %ax	#, D.22524
	je	.L2050	#,
	.loc 1 6686 0
	jmp	.L2005	#
.L2050:
	.loc 1 6689 0
	movq	48(%rbx), %rax	# MEM[(struct BINOP *)o_1].op_last, D.22527
	addq	$40, %rax	#, tmp630
	movq	%rax, -208(%rbp)	# tmp630, svp
	.loc 1 6690 0
	movq	-208(%rbp), %rax	# svp, tmp631
	movq	(%rax), %rax	# *svp_317, tmp632
	movq	%rax, -200(%rbp)	# tmp632, sv
	movq	-200(%rbp), %rax	# sv, tmp633
	movl	12(%rax), %eax	# sv_318->sv_flags, D.22535
	andl	$1048576, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2052	#,
	.loc 1 6690 0 is_stmt 0 discriminator 2
	movq	-200(%rbp), %rax	# sv, tmp634
	movl	12(%rax), %eax	# sv_318->sv_flags, D.22535
	andl	$8388608, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	jne	.L2053	#,
.L2052:
	.loc 1 6691 0 is_stmt 1
	movq	-200(%rbp), %rax	# sv, tmp635
	movl	12(%rax), %eax	# sv_318->sv_flags, D.22535
	andl	$262144, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2054	#,
	.loc 1 6691 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax	# sv, tmp636
	movq	(%rax), %rax	# sv_318->sv_any, D.22532
	movq	8(%rax), %rax	# MEM[(struct XPV *)_325].xpv_cur, keylen.1185
	movq	%rax, -304(%rbp)	# keylen.1185, keylen
	movq	-200(%rbp), %rax	# sv, tmp637
	movq	(%rax), %rax	# sv_318->sv_any, D.22532
	movq	(%rax), %rax	# MEM[(struct XPV *)_327].xpv_pv, iftmp.1184
	jmp	.L2055	#
.L2054:
	.loc 1 6691 0 discriminator 2
	leaq	-304(%rbp), %rcx	#, tmp638
	movq	-200(%rbp), %rax	# sv, tmp639
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp638,
	movq	%rax, %rdi	# tmp639,
	call	Perl_sv_2pv_flags	#
.L2055:
	.loc 1 6691 0 discriminator 3
	movq	%rax, -216(%rbp)	# iftmp.1184, key
	.loc 1 6693 0 is_stmt 1 discriminator 3
	movq	-200(%rbp), %rax	# sv, tmp640
	movl	12(%rax), %eax	# sv_318->sv_flags, D.22535
	andl	$536870912, %eax	#, D.22535
	.loc 1 6692 0 discriminator 3
	testl	%eax, %eax	# D.22535
	je	.L2056	#,
	.loc 1 6693 0
	movq	-304(%rbp), %rax	# keylen, keylen.1187
	.loc 1 6692 0
	negl	%eax	# iftmp.1186
	jmp	.L2057	#
.L2056:
	.loc 1 6692 0 is_stmt 0 discriminator 1
	movq	-304(%rbp), %rax	# keylen, keylen.1188
.L2057:
	.loc 1 6692 0 discriminator 2
	movq	-216(%rbp), %rcx	# key, tmp641
	movl	$0, %edx	#,
	movl	%eax, %esi	# iftmp.1186,
	movq	%rcx, %rdi	# tmp641,
	call	Perl_newSVpvn_share	#
	movq	%rax, -192(%rbp)	# tmp642, lexname
	.loc 1 6695 0 is_stmt 1 discriminator 2
	movq	-200(%rbp), %rax	# sv, tmp643
	movq	%rax, %rdi	# tmp643,
	call	Perl_sv_free	#
	.loc 1 6696 0 discriminator 2
	movq	-208(%rbp), %rax	# svp, tmp644
	movq	-192(%rbp), %rdx	# lexname, tmp645
	movq	%rdx, (%rax)	# tmp645, *svp_317
.L2053:
	.loc 1 6699 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	testb	%al, %al	# D.22529
	jns	.L2058	#,
	.loc 1 6700 0
	jmp	.L2005	#
.L2058:
	.loc 1 6702 0
	movq	40(%rbx), %rax	# MEM[(struct BINOP *)o_1].op_first, tmp646
	movq	%rax, -184(%rbp)	# tmp646, rop
	.loc 1 6703 0
	movq	-184(%rbp), %rax	# rop, tmp647
	movzwl	32(%rax), %eax	# rop_341->op_type, D.22524
	cmpw	$134, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6703 0 is_stmt 0 discriminator 1
	movq	-184(%rbp), %rax	# rop, tmp648
	movq	40(%rax), %rax	# rop_341->op_first, D.22527
	movzwl	32(%rax), %eax	# _343->op_type, D.22524
	cmpw	$9, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6705 0 is_stmt 1
	movq	-184(%rbp), %rax	# rop, tmp649
	movq	40(%rax), %rax	# rop_341->op_first, D.22527
	movq	24(%rax), %rax	# _345->op_targ, D.22528
	movl	%eax, %ecx	# D.22528, D.22525
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1189
	movl	$1, %edx	#,
	movl	%ecx, %esi	# D.22525,
	movq	%rax, %rdi	# PL_comppad_name.1189,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_349, tmp650
	movq	%rax, -192(%rbp)	# tmp650, lexname
	.loc 1 6706 0
	movq	-192(%rbp), %rax	# lexname, tmp651
	movl	12(%rax), %eax	# lexname_350->sv_flags, D.22535
	andl	$1073741824, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	jne	.L2059	#,
	.loc 1 6707 0
	jmp	.L2005	#
.L2059:
	.loc 1 6708 0
	movq	-192(%rbp), %rax	# lexname, tmp652
	movq	(%rax), %rax	# lexname_350->sv_any, D.22532
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_353].xmg_stash, D.22544
	movl	$0, %ecx	#,
	movl	$6, %edx	#,
	movl	$.LC154, %esi	#,
	movq	%rax, %rdi	# D.22544,
	call	Perl_hv_fetch	#
	movq	%rax, -176(%rbp)	# tmp653, fields
	.loc 1 6709 0
	cmpq	$0, -176(%rbp)	#, fields
	je	.L2005	#,
	.loc 1 6709 0 is_stmt 0 discriminator 1
	movq	-176(%rbp), %rax	# fields, tmp654
	movq	(%rax), %rax	# *fields_355, D.22542
	movq	(%rax), %rax	# _356->sv_any, D.22536
	movq	56(%rax), %rax	# _357->xgv_gp, D.22537
	movq	40(%rax), %rax	# _358->gp_hv, D.22544
	testq	%rax, %rax	# D.22544
	je	.L2005	#,
	.loc 1 6711 0 is_stmt 1
	movq	-208(%rbp), %rax	# svp, tmp655
	movq	(%rax), %rax	# *svp_317, D.22531
	movl	12(%rax), %eax	# _360->sv_flags, D.22535
	andl	$262144, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2060	#,
	.loc 1 6711 0 is_stmt 0 discriminator 1
	movq	-208(%rbp), %rax	# svp, tmp656
	movq	(%rax), %rax	# *svp_317, D.22531
	movq	(%rax), %rax	# _363->sv_any, D.22532
	movq	8(%rax), %rax	# MEM[(struct XPV *)_364].xpv_cur, keylen.1191
	movq	%rax, -304(%rbp)	# keylen.1191, keylen
	movq	-208(%rbp), %rax	# svp, tmp657
	movq	(%rax), %rax	# *svp_317, D.22531
	movq	(%rax), %rax	# _366->sv_any, D.22532
	movq	(%rax), %rax	# MEM[(struct XPV *)_367].xpv_pv, iftmp.1190
	jmp	.L2061	#
.L2060:
	.loc 1 6711 0 discriminator 2
	movq	-208(%rbp), %rax	# svp, tmp658
	movq	(%rax), %rax	# *svp_317, D.22531
	leaq	-304(%rbp), %rcx	#, tmp659
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp659,
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_2pv_flags	#
.L2061:
	.loc 1 6711 0 discriminator 3
	movq	%rax, -216(%rbp)	# iftmp.1190, key
	.loc 1 6713 0 is_stmt 1 discriminator 3
	movq	-208(%rbp), %rax	# svp, tmp660
	movq	(%rax), %rax	# *svp_317, D.22531
	movl	12(%rax), %eax	# _372->sv_flags, D.22535
	andl	$536870912, %eax	#, D.22535
	.loc 1 6712 0 discriminator 3
	testl	%eax, %eax	# D.22535
	je	.L2062	#,
	.loc 1 6713 0
	movq	-304(%rbp), %rax	# keylen, keylen.1193
	.loc 1 6712 0
	negl	%eax	# iftmp.1192
	jmp	.L2063	#
.L2062:
	.loc 1 6712 0 is_stmt 0 discriminator 1
	movq	-304(%rbp), %rax	# keylen, keylen.1194
.L2063:
	.loc 1 6712 0 discriminator 2
	movq	-176(%rbp), %rdx	# fields, tmp661
	movq	(%rdx), %rdx	# *fields_355, D.22542
	movq	(%rdx), %rdx	# _380->sv_any, D.22536
	movq	56(%rdx), %rdx	# _381->xgv_gp, D.22537
	movq	40(%rdx), %rdi	# _382->gp_hv, D.22544
	movq	-216(%rbp), %rsi	# key, tmp662
	movl	$0, %ecx	#,
	movl	%eax, %edx	# iftmp.1192,
	call	Perl_hv_fetch	#
	movq	%rax, -168(%rbp)	# tmp663, indsvp
	.loc 1 6714 0 is_stmt 1 discriminator 2
	cmpq	$0, -168(%rbp)	#, indsvp
	jne	.L2064	#,
	.loc 1 6716 0
	movq	-192(%rbp), %rax	# lexname, tmp664
	movq	(%rax), %rax	# lexname_350->sv_any, D.22532
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_385].xmg_stash, D.22544
	movq	(%rax), %rax	# _386->sv_any, D.22545
	.loc 1 6715 0
	movq	80(%rax), %r12	# _387->xhv_name, D.22533
	.loc 1 6716 0
	movq	-192(%rbp), %rax	# lexname, tmp665
	movl	12(%rax), %eax	# lexname_350->sv_flags, D.22535
	andl	$262144, %eax	#, D.22535
	.loc 1 6715 0
	testl	%eax, %eax	# D.22535
	je	.L2065	#,
	.loc 1 6716 0
	movq	-192(%rbp), %rax	# lexname, tmp666
	movq	(%rax), %rax	# lexname_350->sv_any, D.22532
	movq	8(%rax), %rax	# MEM[(struct XPV *)_391].xpv_cur, n_a.1196
	movq	%rax, -312(%rbp)	# n_a.1196, n_a
	movq	-192(%rbp), %rax	# lexname, tmp667
	movq	(%rax), %rax	# lexname_350->sv_any, D.22532
	.loc 1 6715 0
	movq	(%rax), %rax	# MEM[(struct XPV *)_393].xpv_pv, iftmp.1195
	jmp	.L2066	#
.L2065:
	.loc 1 6715 0 is_stmt 0 discriminator 1
	leaq	-312(%rbp), %rcx	#, tmp668
	movq	-192(%rbp), %rax	# lexname, tmp669
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp668,
	movq	%rax, %rdi	# tmp669,
	call	Perl_sv_2pv_flags	#
.L2066:
	.loc 1 6715 0 discriminator 2
	movq	-216(%rbp), %rsi	# key, tmp670
	movq	%r12, %rcx	# D.22533,
	movq	%rax, %rdx	# iftmp.1195,
	movl	$.LC155, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2064:
	.loc 1 6718 0 is_stmt 1
	movq	-168(%rbp), %rax	# indsvp, tmp671
	movq	(%rax), %rax	# *indsvp_384, D.22531
	movl	12(%rax), %eax	# _396->sv_flags, D.22535
	andl	$65536, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2067	#,
	.loc 1 6718 0 is_stmt 0 discriminator 1
	movq	-168(%rbp), %rax	# indsvp, tmp672
	movq	(%rax), %rax	# *indsvp_384, D.22531
	movq	(%rax), %rax	# _399->sv_any, D.22532
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_400].xiv_iv, D.22540
	jmp	.L2068	#
.L2067:
	.loc 1 6718 0 discriminator 2
	movq	-168(%rbp), %rax	# indsvp, tmp673
	movq	(%rax), %rax	# *indsvp_384, D.22531
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_2iv	#
.L2068:
	.loc 1 6718 0 discriminator 3
	movl	%eax, -320(%rbp)	# iftmp.1197, ind
	.loc 1 6719 0 is_stmt 1 discriminator 3
	cmpl	$0, -320(%rbp)	#, ind
	jg	.L2069	#,
	.loc 1 6720 0
	movl	$.LC156, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2069:
	.loc 1 6721 0
	movq	-184(%rbp), %rax	# rop, tmp674
	movw	$125, 32(%rax)	#, rop_341->op_type
	.loc 1 6722 0
	movq	PL_ppaddr+1000(%rip), %rdx	# PL_ppaddr, D.22530
	movq	-184(%rbp), %rax	# rop, tmp675
	movq	%rdx, 16(%rax)	# D.22530, rop_341->op_ppaddr
	.loc 1 6723 0
	movw	$127, 32(%rbx)	#, o_1->op_type
	.loc 1 6724 0
	movq	PL_ppaddr+1016(%rip), %rax	# PL_ppaddr, D.22530
	movq	%rax, 16(%rbx)	# D.22530, o_1->op_ppaddr
	.loc 1 6725 0
	movl	-320(%rbp), %eax	# ind, tmp676
	cltq
	movq	%rax, %rdi	# D.22540,
	call	Perl_newSViv	#
	movq	%rax, -200(%rbp)	# tmp677, sv
	.loc 1 6726 0
	movq	-208(%rbp), %rax	# svp, tmp678
	movq	(%rax), %rax	# *svp_317, D.22531
	movl	12(%rax), %eax	# _411->sv_flags, D.22535
	andl	$8388608, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2070	#,
	.loc 1 6727 0
	movq	-200(%rbp), %rax	# sv, tmp679
	movl	12(%rax), %eax	# sv_410->sv_flags, D.22535
	orl	$8388608, %eax	#, D.22535
	movl	%eax, %edx	# D.22535, D.22535
	movq	-200(%rbp), %rax	# sv, tmp680
	movl	%edx, 12(%rax)	# D.22535, sv_410->sv_flags
.L2070:
	.loc 1 6728 0
	movq	-200(%rbp), %rax	# sv, tmp681
	movl	12(%rax), %edx	# sv_410->sv_flags, D.22535
	movq	-208(%rbp), %rax	# svp, tmp682
	movq	(%rax), %rax	# *svp_317, D.22531
	movl	12(%rax), %eax	# _417->sv_flags, D.22535
	.loc 1 6729 0
	andl	$1792, %eax	#, D.22535
	.loc 1 6728 0
	orl	%eax, %edx	# D.22535, D.22535
	movq	-200(%rbp), %rax	# sv, tmp683
	movl	%edx, 12(%rax)	# D.22535, sv_410->sv_flags
	.loc 1 6730 0
	movq	-208(%rbp), %rax	# svp, tmp684
	movq	(%rax), %rax	# *svp_317, D.22531
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_free	#
	.loc 1 6731 0
	movq	-208(%rbp), %rax	# svp, tmp685
	movq	-200(%rbp), %rdx	# sv, tmp686
	movq	%rdx, (%rax)	# tmp686, *svp_317
	.loc 1 6732 0
	nop
	jmp	.L2005	#
.L1993:
.LBE136:
.LBB137:
	.loc 1 6745 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1198
	leal	1(%rax), %edx	#, PL_op_seqmax.1200
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1200, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1199, o_1->op_seq
	.loc 1 6746 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	testb	%al, %al	# D.22529
	js	.L2005	#,
	.loc 1 6748 0
	movq	40(%rbx), %rax	# MEM[(struct LISTOP *)o_1].op_first, D.22527
	movq	8(%rax), %rax	# _427->op_sibling, D.22527
	movzwl	32(%rax), %eax	# _428->op_type, D.22524
	cmpw	$141, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6751 0
	movq	48(%rbx), %rax	# MEM[(struct LISTOP *)o_1].op_last, tmp687
	movq	%rax, -160(%rbp)	# tmp687, rop
	.loc 1 6752 0
	movq	-160(%rbp), %rax	# rop, tmp688
	movzwl	32(%rax), %eax	# rop_430->op_type, D.22524
	cmpw	$134, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6752 0 is_stmt 0 discriminator 1
	movq	-160(%rbp), %rax	# rop, tmp689
	movq	40(%rax), %rax	# rop_430->op_first, D.22527
	movzwl	32(%rax), %eax	# _432->op_type, D.22524
	cmpw	$9, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6754 0 is_stmt 1
	movq	-160(%rbp), %rax	# rop, tmp690
	movq	40(%rax), %rax	# rop_430->op_first, D.22527
	movq	24(%rax), %rax	# _434->op_targ, D.22528
	movl	%eax, %ecx	# D.22528, D.22525
	movq	PL_comppad_name(%rip), %rax	# PL_comppad_name, PL_comppad_name.1201
	movl	$1, %edx	#,
	movl	%ecx, %esi	# D.22525,
	movq	%rax, %rdi	# PL_comppad_name.1201,
	call	Perl_av_fetch	#
	movq	(%rax), %rax	# *_438, tmp691
	movq	%rax, -152(%rbp)	# tmp691, lexname
	.loc 1 6755 0
	movq	-152(%rbp), %rax	# lexname, tmp692
	movl	12(%rax), %eax	# lexname_439->sv_flags, D.22535
	andl	$1073741824, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	jne	.L2072	#,
	.loc 1 6756 0
	jmp	.L2005	#
.L2072:
	.loc 1 6757 0
	movq	-152(%rbp), %rax	# lexname, tmp693
	movq	(%rax), %rax	# lexname_439->sv_any, D.22532
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_442].xmg_stash, D.22544
	movl	$0, %ecx	#,
	movl	$6, %edx	#,
	movl	$.LC154, %esi	#,
	movq	%rax, %rdi	# D.22544,
	call	Perl_hv_fetch	#
	movq	%rax, -144(%rbp)	# tmp694, fields
	.loc 1 6758 0
	cmpq	$0, -144(%rbp)	#, fields
	je	.L2005	#,
	.loc 1 6758 0 is_stmt 0 discriminator 1
	movq	-144(%rbp), %rax	# fields, tmp695
	movq	(%rax), %rax	# *fields_444, D.22542
	movq	(%rax), %rax	# _445->sv_any, D.22536
	movq	56(%rax), %rax	# _446->xgv_gp, D.22537
	movq	40(%rax), %rax	# _447->gp_hv, D.22544
	testq	%rax, %rax	# D.22544
	je	.L2005	#,
	.loc 1 6761 0 is_stmt 1
	movq	40(%rbx), %rax	# MEM[(struct LISTOP *)o_1].op_first, D.22527
	movq	8(%rax), %rax	# _449->op_sibling, D.22527
	.loc 1 6762 0
	movq	40(%rax), %rax	# MEM[(struct LISTOP *)_450].op_first, D.22527
	.loc 1 6761 0
	movq	8(%rax), %rax	# _451->op_sibling, tmp696
	movq	%rax, -136(%rbp)	# tmp696, first_key_op
	.loc 1 6764 0
	movq	-136(%rbp), %rax	# first_key_op, tmp697
	movq	%rax, -296(%rbp)	# tmp697, key_op
	jmp	.L2073	#
.L2076:
	.loc 1 6766 0
	movq	-296(%rbp), %rax	# key_op, tmp698
	movzwl	32(%rax), %eax	# key_op_4->op_type, D.22524
	cmpw	$5, %ax	#, D.22524
	je	.L2074	#,
	.loc 1 6767 0
	jmp	.L2075	#
.L2074:
	.loc 1 6765 0
	movq	-296(%rbp), %rax	# key_op, tmp699
	movq	8(%rax), %rax	# key_op_4->op_sibling, tmp700
	movq	%rax, -296(%rbp)	# tmp700, key_op
.L2073:
	.loc 1 6764 0 discriminator 1
	cmpq	$0, -296(%rbp)	#, key_op
	jne	.L2076	#,
.L2075:
	.loc 1 6768 0
	cmpq	$0, -296(%rbp)	#, key_op
	je	.L2077	#,
	.loc 1 6769 0
	jmp	.L2005	#
.L2077:
	.loc 1 6770 0
	movq	-160(%rbp), %rax	# rop, tmp701
	movw	$125, 32(%rax)	#, rop_430->op_type
	.loc 1 6771 0
	movq	PL_ppaddr+1000(%rip), %rdx	# PL_ppaddr, D.22530
	movq	-160(%rbp), %rax	# rop, tmp702
	movq	%rdx, 16(%rax)	# D.22530, rop_430->op_ppaddr
	.loc 1 6772 0
	movw	$128, 32(%rbx)	#, o_1->op_type
	.loc 1 6773 0
	movq	PL_ppaddr+1024(%rip), %rax	# PL_ppaddr, D.22530
	movq	%rax, 16(%rbx)	# D.22530, o_1->op_ppaddr
	.loc 1 6774 0
	movq	-136(%rbp), %rax	# first_key_op, tmp703
	movq	%rax, -296(%rbp)	# tmp703, key_op
	jmp	.L2078	#
.L2090:
	.loc 1 6776 0
	movq	-296(%rbp), %rax	# key_op, tmp707
	addq	$40, %rax	#, tmp706
	movq	%rax, -128(%rbp)	# tmp706, svp
	.loc 1 6777 0
	movq	-128(%rbp), %rax	# svp, tmp708
	movq	(%rax), %rax	# *svp_459, D.22531
	movl	12(%rax), %eax	# _460->sv_flags, D.22535
	andl	$262144, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2079	#,
	.loc 1 6777 0 is_stmt 0 discriminator 1
	movq	-128(%rbp), %rax	# svp, tmp709
	movq	(%rax), %rax	# *svp_459, D.22531
	movq	(%rax), %rax	# _463->sv_any, D.22532
	movq	8(%rax), %rax	# MEM[(struct XPV *)_464].xpv_cur, keylen.1203
	movq	%rax, -304(%rbp)	# keylen.1203, keylen
	movq	-128(%rbp), %rax	# svp, tmp710
	movq	(%rax), %rax	# *svp_459, D.22531
	movq	(%rax), %rax	# _466->sv_any, D.22532
	movq	(%rax), %rax	# MEM[(struct XPV *)_467].xpv_pv, iftmp.1202
	jmp	.L2080	#
.L2079:
	.loc 1 6777 0 discriminator 2
	movq	-128(%rbp), %rax	# svp, tmp711
	movq	(%rax), %rax	# *svp_459, D.22531
	leaq	-304(%rbp), %rcx	#, tmp712
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp712,
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_2pv_flags	#
.L2080:
	.loc 1 6777 0 discriminator 3
	movq	%rax, -120(%rbp)	# iftmp.1202, key
	.loc 1 6779 0 is_stmt 1 discriminator 3
	movq	-128(%rbp), %rax	# svp, tmp713
	movq	(%rax), %rax	# *svp_459, D.22531
	movl	12(%rax), %eax	# _472->sv_flags, D.22535
	andl	$536870912, %eax	#, D.22535
	.loc 1 6778 0 discriminator 3
	testl	%eax, %eax	# D.22535
	je	.L2081	#,
	.loc 1 6779 0
	movq	-304(%rbp), %rax	# keylen, keylen.1205
	.loc 1 6778 0
	negl	%eax	# iftmp.1204
	jmp	.L2082	#
.L2081:
	.loc 1 6778 0 is_stmt 0 discriminator 1
	movq	-304(%rbp), %rax	# keylen, keylen.1206
.L2082:
	.loc 1 6778 0 discriminator 2
	movq	-144(%rbp), %rdx	# fields, tmp714
	movq	(%rdx), %rdx	# *fields_444, D.22542
	movq	(%rdx), %rdx	# _480->sv_any, D.22536
	movq	56(%rdx), %rdx	# _481->xgv_gp, D.22537
	movq	40(%rdx), %rdi	# _482->gp_hv, D.22544
	movq	-120(%rbp), %rsi	# key, tmp715
	movl	$0, %ecx	#,
	movl	%eax, %edx	# iftmp.1204,
	call	Perl_hv_fetch	#
	movq	%rax, -112(%rbp)	# tmp716, indsvp
	.loc 1 6780 0 is_stmt 1 discriminator 2
	cmpq	$0, -112(%rbp)	#, indsvp
	jne	.L2083	#,
	.loc 1 6783 0
	movq	-152(%rbp), %rax	# lexname, tmp717
	movq	(%rax), %rax	# lexname_439->sv_any, D.22532
	movq	48(%rax), %rax	# MEM[(struct XPVMG *)_485].xmg_stash, D.22544
	movq	(%rax), %rax	# _486->sv_any, D.22545
	.loc 1 6781 0
	movq	80(%rax), %r12	# _487->xhv_name, D.22533
	.loc 1 6783 0
	movq	-152(%rbp), %rax	# lexname, tmp718
	movl	12(%rax), %eax	# lexname_439->sv_flags, D.22535
	andl	$262144, %eax	#, D.22535
	.loc 1 6781 0
	testl	%eax, %eax	# D.22535
	je	.L2084	#,
	.loc 1 6783 0
	movq	-152(%rbp), %rax	# lexname, tmp719
	movq	(%rax), %rax	# lexname_439->sv_any, D.22532
	movq	8(%rax), %rax	# MEM[(struct XPV *)_491].xpv_cur, n_a.1208
	movq	%rax, -312(%rbp)	# n_a.1208, n_a
	movq	-152(%rbp), %rax	# lexname, tmp720
	movq	(%rax), %rax	# lexname_439->sv_any, D.22532
	.loc 1 6781 0
	movq	(%rax), %rax	# MEM[(struct XPV *)_493].xpv_pv, iftmp.1207
	jmp	.L2085	#
.L2084:
	.loc 1 6781 0 is_stmt 0 discriminator 1
	leaq	-312(%rbp), %rcx	#, tmp721
	movq	-152(%rbp), %rax	# lexname, tmp722
	movl	$2, %edx	#,
	movq	%rcx, %rsi	# tmp721,
	movq	%rax, %rdi	# tmp722,
	call	Perl_sv_2pv_flags	#
.L2085:
	.loc 1 6781 0 discriminator 2
	movq	-120(%rbp), %rsi	# key, tmp723
	movq	%r12, %rcx	# D.22533,
	movq	%rax, %rdx	# iftmp.1207,
	movl	$.LC155, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2083:
	.loc 1 6785 0 is_stmt 1
	movq	-112(%rbp), %rax	# indsvp, tmp724
	movq	(%rax), %rax	# *indsvp_484, D.22531
	movl	12(%rax), %eax	# _496->sv_flags, D.22535
	andl	$65536, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2086	#,
	.loc 1 6785 0 is_stmt 0 discriminator 1
	movq	-112(%rbp), %rax	# indsvp, tmp725
	movq	(%rax), %rax	# *indsvp_484, D.22531
	movq	(%rax), %rax	# _499->sv_any, D.22532
	movq	24(%rax), %rax	# MEM[(struct XPVIV *)_500].xiv_iv, D.22540
	jmp	.L2087	#
.L2086:
	.loc 1 6785 0 discriminator 2
	movq	-112(%rbp), %rax	# indsvp, tmp726
	movq	(%rax), %rax	# *indsvp_484, D.22531
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_2iv	#
.L2087:
	.loc 1 6785 0 discriminator 3
	movl	%eax, -316(%rbp)	# iftmp.1209, ind
	.loc 1 6786 0 is_stmt 1 discriminator 3
	cmpl	$0, -316(%rbp)	#, ind
	jg	.L2088	#,
	.loc 1 6787 0
	movl	$.LC156, %edi	#,
	movl	$0, %eax	#,
	call	Perl_croak	#
.L2088:
	.loc 1 6788 0
	movl	-316(%rbp), %eax	# ind, tmp727
	cltq
	movq	%rax, %rdi	# D.22540,
	call	Perl_newSViv	#
	movq	%rax, -104(%rbp)	# tmp728, sv
	.loc 1 6789 0
	movq	-128(%rbp), %rax	# svp, tmp729
	movq	(%rax), %rax	# *svp_459, D.22531
	movl	12(%rax), %eax	# _509->sv_flags, D.22535
	andl	$8388608, %eax	#, D.22535
	testl	%eax, %eax	# D.22535
	je	.L2089	#,
	.loc 1 6790 0
	movq	-104(%rbp), %rax	# sv, tmp730
	movl	12(%rax), %eax	# sv_508->sv_flags, D.22535
	orl	$8388608, %eax	#, D.22535
	movl	%eax, %edx	# D.22535, D.22535
	movq	-104(%rbp), %rax	# sv, tmp731
	movl	%edx, 12(%rax)	# D.22535, sv_508->sv_flags
.L2089:
	.loc 1 6791 0
	movq	-104(%rbp), %rax	# sv, tmp732
	movl	12(%rax), %edx	# sv_508->sv_flags, D.22535
	movq	-128(%rbp), %rax	# svp, tmp733
	movq	(%rax), %rax	# *svp_459, D.22531
	movl	12(%rax), %eax	# _515->sv_flags, D.22535
	.loc 1 6792 0
	andl	$1792, %eax	#, D.22535
	.loc 1 6791 0
	orl	%eax, %edx	# D.22535, D.22535
	movq	-104(%rbp), %rax	# sv, tmp734
	movl	%edx, 12(%rax)	# D.22535, sv_508->sv_flags
	.loc 1 6793 0
	movq	-128(%rbp), %rax	# svp, tmp735
	movq	(%rax), %rax	# *svp_459, D.22531
	movq	%rax, %rdi	# D.22531,
	call	Perl_sv_free	#
	.loc 1 6794 0
	movq	-128(%rbp), %rax	# svp, tmp736
	movq	-104(%rbp), %rdx	# sv, tmp737
	movq	%rdx, (%rax)	# tmp737, *svp_459
	.loc 1 6775 0
	movq	-296(%rbp), %rax	# key_op, tmp738
	movq	8(%rax), %rax	# key_op_5->op_sibling, tmp739
	movq	%rax, -296(%rbp)	# tmp739, key_op
.L2078:
	.loc 1 6774 0 discriminator 1
	cmpq	$0, -296(%rbp)	#, key_op
	jne	.L2090	#,
	.loc 1 6796 0
	nop
	jmp	.L2005	#
.L1997:
.LBE137:
.LBB138:
	.loc 1 6805 0
	movq	40(%rbx), %rax	# MEM[(struct UNOP *)o_1].op_first, tmp740
	movq	%rax, -288(%rbp)	# tmp740, oright
	.loc 1 6806 0
	cmpq	$0, -288(%rbp)	#, oright
	je	.L2005	#,
	.loc 1 6806 0 is_stmt 0 discriminator 1
	movq	-288(%rbp), %rax	# oright, tmp741
	movzwl	32(%rax), %eax	# oright_521->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6810 0 is_stmt 1
	movq	8(%rbx), %rax	# MEM[(struct UNOP *)o_1].op_sibling, D.22527
	testq	%rax, %rax	# D.22527
	jne	.L2091	#,
.LBB139:
	.loc 1 6812 0
	movq	(%rbx), %rax	# o_1->op_next, tmp742
	movq	%rax, -96(%rbp)	# tmp742, reverse
	.loc 1 6814 0
	movq	-96(%rbp), %rax	# reverse, tmp743
	movzwl	32(%rax), %eax	# reverse_524->op_type, D.22524
	cmpw	$151, %ax	#, D.22524
	jne	.L2091	#,
	.loc 1 6815 0 discriminator 1
	movq	-96(%rbp), %rax	# reverse, tmp744
	movzbl	36(%rax), %eax	# reverse_524->op_flags, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$3, %eax	#, D.22525
	.loc 1 6814 0 discriminator 1
	cmpl	$3, %eax	#, D.22525
	jne	.L2091	#,
.LBB140:
	.loc 1 6816 0
	movq	-96(%rbp), %rax	# reverse, tmp745
	movq	40(%rax), %rax	# MEM[(struct UNOP *)reverse_524].op_first, tmp746
	movq	%rax, -88(%rbp)	# tmp746, pushmark
	.loc 1 6817 0
	cmpq	$0, -88(%rbp)	#, pushmark
	je	.L2091	#,
	.loc 1 6817 0 is_stmt 0 discriminator 1
	movq	-88(%rbp), %rax	# pushmark, tmp747
	movzwl	32(%rax), %eax	# pushmark_529->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2091	#,
	.loc 1 6818 0 is_stmt 1
	movq	-88(%rbp), %rax	# pushmark, tmp748
	movq	8(%rax), %rax	# MEM[(struct UNOP *)pushmark_529].op_sibling, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	jne	.L2091	#,
	.loc 1 6820 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	orl	$4, %eax	#, D.22526
	movb	%al, 37(%rbx)	# D.22526, o_1->op_private
	.loc 1 6821 0
	movq	-96(%rbp), %rax	# reverse, tmp749
	movq	%rax, %rdi	# tmp749,
	call	Perl_op_null	#
	.loc 1 6822 0
	movq	-288(%rbp), %rax	# oright, tmp750
	movq	(%rax), %rdx	# oright_521->op_next, D.22527
	movq	-88(%rbp), %rax	# pushmark, tmp751
	movq	%rdx, (%rax)	# D.22527, pushmark_529->op_next
	.loc 1 6823 0
	movq	-288(%rbp), %rax	# oright, tmp752
	movq	%rax, %rdi	# tmp752,
	call	Perl_op_null	#
.L2091:
.LBE140:
.LBE139:
	.loc 1 6830 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1210
	leal	1(%rax), %edx	#, PL_op_seqmax.1212
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1212, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1211, o_1->op_seq
	.loc 1 6832 0
	movq	-288(%rbp), %rax	# oright, tmp753
	movq	8(%rax), %rax	# MEM[(struct UNOP *)oright_521].op_sibling, tmp754
	movq	%rax, -288(%rbp)	# tmp754, oright
	.loc 1 6833 0
	cmpq	$0, -288(%rbp)	#, oright
	jne	.L2092	#,
	.loc 1 6834 0
	jmp	.L2005	#
.L2092:
	.loc 1 6835 0
	movq	-288(%rbp), %rax	# oright, tmp755
	movzwl	32(%rax), %eax	# oright_538->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2093	#,
	.loc 1 6836 0
	movq	-288(%rbp), %rax	# oright, tmp756
	movq	8(%rax), %rax	# MEM[(struct UNOP *)oright_538].op_sibling, tmp757
	movq	%rax, -288(%rbp)	# tmp757, oright
.L2093:
	.loc 1 6839 0
	cmpq	$0, -288(%rbp)	#, oright
	je	.L2005	#,
	.loc 1 6840 0 discriminator 1
	movq	-288(%rbp), %rax	# oright, tmp758
	movzwl	32(%rax), %eax	# oright_6->op_type, D.22524
	.loc 1 6839 0 discriminator 1
	cmpw	$125, %ax	#, D.22524
	je	.L2094	#,
	.loc 1 6840 0
	movq	-288(%rbp), %rax	# oright, tmp759
	movzwl	32(%rax), %eax	# oright_6->op_type, D.22524
	cmpw	$10, %ax	#, D.22524
	jne	.L2005	#,
.L2094:
	.loc 1 6841 0
	movq	-288(%rbp), %rax	# oright, tmp760
	movq	(%rax), %rax	# oright_6->op_next, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	jne	.L2005	#,
	.loc 1 6842 0
	movq	-288(%rbp), %rax	# oright, tmp761
	movzbl	37(%rax), %eax	# oright_6->op_private, D.22526
	testb	%al, %al	# D.22529
	js	.L2005	#,
	.loc 1 6848 0
	movq	(%rbx), %rax	# o_1->op_next, tmp762
	movq	%rax, -280(%rbp)	# tmp762, o2
	.loc 1 6849 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6849 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp763
	movzwl	32(%rax), %eax	# o2_546->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2005	#,
	.loc 1 6851 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp764
	movq	(%rax), %rax	# o2_546->op_next, tmp765
	movq	%rax, -280(%rbp)	# tmp765, o2
	.loc 1 6852 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6852 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp766
	movzwl	32(%rax), %eax	# o2_548->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6854 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp767
	movq	(%rax), %rax	# o2_548->op_next, tmp768
	movq	%rax, -280(%rbp)	# tmp768, o2
	.loc 1 6855 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2095	#,
	.loc 1 6855 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp769
	movzwl	32(%rax), %eax	# o2_550->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2095	#,
	.loc 1 6856 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp770
	movq	(%rax), %rax	# o2_550->op_next, tmp771
	movq	%rax, -280(%rbp)	# tmp771, o2
.L2095:
	.loc 1 6857 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6858 0
	movq	-280(%rbp), %rax	# o2, tmp772
	movzwl	32(%rax), %eax	# o2_7->op_type, D.22524
	cmpw	$10, %ax	#, D.22524
	je	.L2096	#,
	.loc 1 6858 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp773
	movzwl	32(%rax), %eax	# o2_7->op_type, D.22524
	cmpw	$125, %ax	#, D.22524
	jne	.L2005	#,
.L2096:
	.loc 1 6859 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp774
	movzbl	37(%rax), %eax	# o2_7->op_private, D.22526
	testb	%al, %al	# D.22529
	js	.L2005	#,
	.loc 1 6862 0
	movq	-280(%rbp), %rax	# o2, tmp775
	movq	%rax, -80(%rbp)	# tmp775, oleft
	.loc 1 6863 0
	movq	-280(%rbp), %rax	# o2, tmp776
	movq	(%rax), %rax	# o2_7->op_next, tmp777
	movq	%rax, -280(%rbp)	# tmp777, o2
	.loc 1 6864 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6864 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp778
	movzwl	32(%rax), %eax	# o2_558->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2005	#,
	.loc 1 6866 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp779
	movq	(%rax), %rax	# o2_558->op_next, tmp780
	movq	%rax, -280(%rbp)	# tmp780, o2
	.loc 1 6867 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6867 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp781
	movzwl	32(%rax), %eax	# o2_560->op_type, D.22524
	cmpw	$37, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6868 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp782
	movzbl	36(%rax), %eax	# o2_560->op_flags, D.22526
	movzbl	%al, %eax	# D.22526, D.22525
	andl	$3, %eax	#, D.22525
	cmpl	$1, %eax	#, D.22525
	jne	.L2005	#,
	.loc 1 6873 0
	movq	-280(%rbp), %rax	# o2, tmp783
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o2_560].op_first, tmp784
	movq	%rax, -280(%rbp)	# tmp784, o2
	.loc 1 6874 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6874 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp785
	movzwl	32(%rax), %eax	# o2_565->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2005	#,
	.loc 1 6876 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp786
	movq	40(%rax), %rax	# MEM[(struct UNOP *)o2_565].op_first, tmp787
	movq	%rax, -280(%rbp)	# tmp787, o2
	.loc 1 6877 0
	cmpq	$0, -280(%rbp)	#, o2
	je	.L2005	#,
	.loc 1 6877 0 is_stmt 0 discriminator 1
	movq	-280(%rbp), %rax	# o2, tmp788
	movzwl	32(%rax), %eax	# o2_567->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6879 0 is_stmt 1
	movq	-280(%rbp), %rax	# o2, tmp789
	movq	8(%rax), %rax	# o2_567->op_sibling, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	je	.L2097	#,
	.loc 1 6880 0
	jmp	.L2005	#
.L2097:
	.loc 1 6883 0
	movq	-80(%rbp), %rax	# oleft, tmp790
	movzwl	32(%rax), %eax	# oleft_557->op_type, D.22524
	cmpw	$125, %ax	#, D.22524
	jne	.L2098	#,
	.loc 1 6884 0
	movq	-288(%rbp), %rax	# oright, tmp791
	movzwl	32(%rax), %eax	# oright_6->op_type, D.22524
	cmpw	$125, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6885 0
	movq	-288(%rbp), %rax	# oright, tmp792
	movq	40(%rax), %rax	# MEM[(struct UNOP *)oright_6].op_first, D.22527
	testq	%rax, %rax	# D.22527
	je	.L2005	#,
	.loc 1 6886 0
	movq	-288(%rbp), %rax	# oright, tmp793
	movq	40(%rax), %rax	# MEM[(struct UNOP *)oright_6].op_first, D.22527
	movzwl	32(%rax), %eax	# _573->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6887 0
	movq	-80(%rbp), %rax	# oleft, tmp794
	movq	40(%rax), %rax	# MEM[(struct UNOP *)oleft_557].op_first, D.22527
	movq	40(%rax), %rdx	# MEM[(struct SVOP *)_575].op_sv, D.22531
	.loc 1 6888 0
	movq	-288(%rbp), %rax	# oright, tmp795
	movq	40(%rax), %rax	# MEM[(struct UNOP *)oright_6].op_first, D.22527
	movq	40(%rax), %rax	# MEM[(struct SVOP *)_577].op_sv, D.22531
	.loc 1 6887 0
	cmpq	%rax, %rdx	# D.22531, D.22531
	jne	.L2005	#,
	jmp	.L2099	#
.L2098:
	.loc 1 6892 0
	movq	-288(%rbp), %rax	# oright, tmp796
	movzwl	32(%rax), %eax	# oright_6->op_type, D.22524
	cmpw	$10, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6893 0
	movq	-288(%rbp), %rax	# oright, tmp797
	movq	24(%rax), %rdx	# oright_6->op_targ, D.22528
	movq	-80(%rbp), %rax	# oleft, tmp798
	movq	24(%rax), %rax	# oleft_557->op_targ, D.22528
	cmpq	%rax, %rdx	# D.22528, D.22528
	jne	.L2005	#,
.L2099:
	.loc 1 6898 0
	movq	-80(%rbp), %rax	# oleft, tmp799
	movzbl	36(%rax), %edx	# oleft_557->op_flags, D.22526
	movq	-288(%rbp), %rax	# oright, tmp800
	movb	%dl, 36(%rax)	# D.22526, oright_6->op_flags
	.loc 1 6899 0
	movzbl	37(%rbx), %eax	# o_1->op_private, D.22526
	orl	$8, %eax	#, D.22526
	movb	%al, 37(%rbx)	# D.22526, o_1->op_private
	.loc 1 6902 0
	movq	(%rbx), %rax	# o_1->op_next, D.22527
	movq	(%rax), %rax	# _585->op_next, tmp801
	movq	%rax, -280(%rbp)	# tmp801, o2
	.loc 1 6903 0
	movq	-280(%rbp), %rax	# o2, tmp802
	movq	%rax, %rdi	# tmp802,
	call	Perl_op_null	#
	.loc 1 6904 0
	movq	-280(%rbp), %rax	# o2, tmp803
	movq	(%rax), %rax	# o2_586->op_next, tmp804
	movq	%rax, -280(%rbp)	# tmp804, o2
	.loc 1 6905 0
	movq	-280(%rbp), %rax	# o2, tmp805
	movzwl	32(%rax), %eax	# o2_587->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2100	#,
	.loc 1 6906 0
	movq	-280(%rbp), %rax	# o2, tmp806
	movq	%rax, %rdi	# tmp806,
	call	Perl_op_null	#
	.loc 1 6907 0
	movq	-280(%rbp), %rax	# o2, tmp807
	movq	(%rax), %rax	# o2_587->op_next, tmp808
	movq	%rax, -280(%rbp)	# tmp808, o2
.L2100:
	.loc 1 6909 0
	movq	-280(%rbp), %rax	# o2, tmp809
	movq	%rax, %rdi	# tmp809,
	call	Perl_op_null	#
	.loc 1 6910 0
	movq	-280(%rbp), %rax	# o2, tmp810
	movq	(%rax), %rax	# o2_8->op_next, D.22527
	movq	(%rax), %rax	# _590->op_next, tmp811
	movq	%rax, -280(%rbp)	# tmp811, o2
	.loc 1 6911 0
	movq	-280(%rbp), %rax	# o2, tmp812
	movq	%rax, %rdi	# tmp812,
	call	Perl_op_null	#
	.loc 1 6913 0
	movq	-280(%rbp), %rax	# o2, tmp813
	movq	(%rax), %rax	# o2_591->op_next, D.22527
	movq	%rax, (%rbx)	# D.22527, o_1->op_next
	.loc 1 6915 0
	jmp	.L2005	#
.L1998:
.LBE138:
.LBB141:
	.loc 1 6920 0
	movq	$0, -272(%rbp)	#, gvop
	.loc 1 6922 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1213
	leal	1(%rax), %edx	#, PL_op_seqmax.1215
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1215, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1214, o_1->op_seq
	.loc 1 6924 0
	movq	(%rbx), %rax	# o_1->op_next, tmp814
	movq	%rax, -264(%rbp)	# tmp814, enter
	.loc 1 6925 0
	cmpq	$0, -264(%rbp)	#, enter
	jne	.L2101	#,
	.loc 1 6926 0
	jmp	.L2005	#
.L2101:
	.loc 1 6927 0
	movq	-264(%rbp), %rax	# enter, tmp815
	movzwl	32(%rax), %eax	# enter_597->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2102	#,
	.loc 1 6928 0
	movq	-264(%rbp), %rax	# enter, tmp816
	movq	(%rax), %rax	# enter_597->op_next, tmp817
	movq	%rax, -264(%rbp)	# tmp817, enter
	.loc 1 6929 0
	cmpq	$0, -264(%rbp)	#, enter
	jne	.L2102	#,
	.loc 1 6930 0
	jmp	.L2005	#
.L2102:
	.loc 1 6934 0
	movq	-264(%rbp), %rax	# enter, tmp818
	movzwl	32(%rax), %eax	# enter_10->op_type, D.22524
	cmpw	$7, %ax	#, D.22524
	jne	.L2103	#,
	.loc 1 6935 0
	movq	-264(%rbp), %rax	# enter, tmp819
	movq	%rax, -272(%rbp)	# tmp819, gvop
	.loc 1 6936 0
	movq	-264(%rbp), %rax	# enter, tmp820
	movq	(%rax), %rax	# enter_10->op_next, tmp821
	movq	%rax, -264(%rbp)	# tmp821, enter
	.loc 1 6937 0
	cmpq	$0, -264(%rbp)	#, enter
	jne	.L2104	#,
	.loc 1 6938 0
	jmp	.L2005	#
.L2104:
	.loc 1 6939 0
	movq	-264(%rbp), %rax	# enter, tmp822
	movzwl	32(%rax), %eax	# enter_602->op_type, D.22524
	cmpw	$14, %ax	#, D.22524
	jne	.L2103	#,
	.loc 1 6940 0
	movq	-264(%rbp), %rax	# enter, tmp823
	movq	(%rax), %rax	# enter_602->op_next, tmp824
	movq	%rax, -264(%rbp)	# tmp824, enter
	.loc 1 6941 0
	cmpq	$0, -264(%rbp)	#, enter
	jne	.L2103	#,
	.loc 1 6942 0
	jmp	.L2005	#
.L2103:
	.loc 1 6946 0
	movq	-264(%rbp), %rax	# enter, tmp825
	movzwl	32(%rax), %eax	# enter_11->op_type, D.22524
	cmpw	$180, %ax	#, D.22524
	je	.L2105	#,
	.loc 1 6947 0
	jmp	.L2005	#
.L2105:
	.loc 1 6949 0
	movq	-264(%rbp), %rax	# enter, tmp826
	movq	(%rax), %rax	# enter_11->op_next, tmp827
	movq	%rax, -72(%rbp)	# tmp827, iter
	.loc 1 6950 0
	cmpq	$0, -72(%rbp)	#, iter
	je	.L2005	#,
	.loc 1 6950 0 is_stmt 0 discriminator 1
	movq	-72(%rbp), %rax	# iter, tmp828
	movzwl	32(%rax), %eax	# iter_606->op_type, D.22524
	cmpw	$181, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6953 0 is_stmt 1
	movq	-264(%rbp), %rax	# enter, tmp829
	movq	40(%rax), %rax	# enter_11->op_first, tmp830
	movq	%rax, -64(%rbp)	# tmp830, expushmark
	.loc 1 6954 0
	cmpq	$0, -64(%rbp)	#, expushmark
	je	.L2005	#,
	.loc 1 6954 0 is_stmt 0 discriminator 1
	movq	-64(%rbp), %rax	# expushmark, tmp831
	movzwl	32(%rax), %eax	# expushmark_608->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2005	#,
	.loc 1 6955 0 is_stmt 1
	movq	-64(%rbp), %rax	# expushmark, tmp832
	movq	24(%rax), %rax	# expushmark_608->op_targ, D.22528
	cmpq	$3, %rax	#, D.22528
	jne	.L2005	#,
	.loc 1 6958 0
	movq	-64(%rbp), %rax	# expushmark, tmp833
	movq	8(%rax), %rax	# expushmark_608->op_sibling, tmp834
	movq	%rax, -56(%rbp)	# tmp834, exlist
	.loc 1 6959 0
	cmpq	$0, -56(%rbp)	#, exlist
	je	.L2005	#,
	.loc 1 6959 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax	# exlist, tmp835
	movzwl	32(%rax), %eax	# exlist_611->op_type, D.22524
	testw	%ax, %ax	# D.22524
	jne	.L2005	#,
	.loc 1 6960 0 is_stmt 1
	movq	-56(%rbp), %rax	# exlist, tmp836
	movq	24(%rax), %rax	# exlist_611->op_targ, D.22528
	cmpq	$141, %rax	#, D.22528
	jne	.L2005	#,
	.loc 1 6963 0
	movq	-56(%rbp), %rax	# exlist, tmp837
	movq	48(%rax), %rax	# exlist_611->op_last, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	je	.L2106	#,
	.loc 1 6965 0
	jmp	.L2005	#
.L2106:
	.loc 1 6967 0
	movq	-56(%rbp), %rax	# exlist, tmp838
	movq	40(%rax), %rax	# exlist_611->op_first, tmp839
	movq	%rax, -48(%rbp)	# tmp839, theirmark
	.loc 1 6968 0
	cmpq	$0, -48(%rbp)	#, theirmark
	je	.L2005	#,
	.loc 1 6968 0 is_stmt 0 discriminator 1
	movq	-48(%rbp), %rax	# theirmark, tmp840
	movzwl	32(%rax), %eax	# theirmark_615->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6971 0 is_stmt 1
	movq	-48(%rbp), %rax	# theirmark, tmp841
	movq	8(%rax), %rax	# theirmark_615->op_sibling, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	je	.L2107	#,
	.loc 1 6975 0
	jmp	.L2005	#
.L2107:
	.loc 1 6978 0
	movq	40(%rbx), %rax	# MEM[(struct LISTOP *)o_1].op_first, tmp842
	movq	%rax, -40(%rbp)	# tmp842, ourmark
	.loc 1 6979 0
	cmpq	$0, -40(%rbp)	#, ourmark
	je	.L2005	#,
	.loc 1 6979 0 is_stmt 0 discriminator 1
	movq	-40(%rbp), %rax	# ourmark, tmp843
	movzwl	32(%rax), %eax	# ourmark_618->op_type, D.22524
	cmpw	$3, %ax	#, D.22524
	jne	.L2005	#,
	.loc 1 6982 0 is_stmt 1
	movq	48(%rbx), %rax	# MEM[(struct LISTOP *)o_1].op_last, tmp844
	movq	%rax, -32(%rbp)	# tmp844, ourlast
	.loc 1 6983 0
	cmpq	$0, -32(%rbp)	#, ourlast
	je	.L2005	#,
	.loc 1 6983 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax	# ourlast, tmp845
	movq	(%rax), %rax	# ourlast_620->op_next, D.22527
	cmpq	%rbx, %rax	# o, D.22527
	jne	.L2005	#,
	.loc 1 6986 0 is_stmt 1
	movq	-40(%rbp), %rax	# ourmark, tmp846
	movq	8(%rax), %rax	# ourmark_618->op_sibling, tmp847
	movq	%rax, -24(%rbp)	# tmp847, rv2av
	.loc 1 6987 0
	cmpq	$0, -24(%rbp)	#, rv2av
	je	.L2108	#,
	.loc 1 6987 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax	# rv2av, tmp848
	movzwl	32(%rax), %eax	# rv2av_622->op_type, D.22524
	cmpw	$125, %ax	#, D.22524
	jne	.L2108	#,
	movq	-24(%rbp), %rax	# rv2av, tmp849
	movq	8(%rax), %rax	# rv2av_622->op_sibling, D.22527
	testq	%rax, %rax	# D.22527
	jne	.L2108	#,
	.loc 1 6988 0 is_stmt 1
	movq	-24(%rbp), %rax	# rv2av, tmp850
	movzbl	36(%rax), %eax	# rv2av_622->op_flags, D.22526
	cmpb	$7, %al	#, D.22526
	jne	.L2108	#,
	.loc 1 6989 0
	movq	-264(%rbp), %rax	# enter, tmp851
	movzbl	36(%rax), %eax	# enter_11->op_flags, D.22526
	cmpb	$7, %al	#, D.22526
	jne	.L2108	#,
	.loc 1 6991 0
	movq	-24(%rbp), %rax	# rv2av, tmp852
	movb	$22, 36(%rax)	#, rv2av_622->op_flags
	.loc 1 6992 0
	movq	-264(%rbp), %rax	# enter, tmp853
	movzbl	36(%rax), %eax	# enter_11->op_flags, D.22526
	orl	$64, %eax	#, D.22526
	movl	%eax, %edx	# D.22526, D.22526
	movq	-264(%rbp), %rax	# enter, tmp854
	movb	%dl, 36(%rax)	# D.22526, enter_11->op_flags
.L2108:
	.loc 1 6997 0
	movq	-40(%rbp), %rax	# ourmark, tmp855
	movq	(%rax), %rdx	# ourmark_618->op_next, D.22527
	movq	-48(%rbp), %rax	# theirmark, tmp856
	movq	%rdx, (%rax)	# D.22527, theirmark_615->op_next
	.loc 1 6998 0
	movq	-40(%rbp), %rax	# ourmark, tmp857
	movzbl	36(%rax), %edx	# ourmark_618->op_flags, D.22526
	movq	-48(%rbp), %rax	# theirmark, tmp858
	movb	%dl, 36(%rax)	# D.22526, theirmark_615->op_flags
	.loc 1 6999 0
	cmpq	$0, -272(%rbp)	#, gvop
	je	.L2109	#,
	.loc 1 6999 0 is_stmt 0 discriminator 1
	movq	-272(%rbp), %rax	# gvop, iftmp.1216
	jmp	.L2110	#
.L2109:
	.loc 1 6999 0 discriminator 2
	movq	-264(%rbp), %rax	# enter, iftmp.1216
.L2110:
	.loc 1 6999 0 discriminator 3
	movq	-32(%rbp), %rdx	# ourlast, tmp859
	movq	%rax, (%rdx)	# iftmp.1216, ourlast_620->op_next
	.loc 1 7000 0 is_stmt 1 discriminator 3
	movq	-40(%rbp), %rax	# ourmark, tmp860
	movq	%rax, %rdi	# tmp860,
	call	Perl_op_null	#
	.loc 1 7001 0 discriminator 3
	movq	%rbx, %rdi	# o,
	call	Perl_op_null	#
	.loc 1 7002 0 discriminator 3
	movq	-264(%rbp), %rax	# enter, tmp861
	movzbl	37(%rax), %eax	# enter_11->op_private, D.22526
	orl	$4, %eax	#, D.22526
	movl	%eax, %edx	# D.22526, D.22526
	movq	-264(%rbp), %rax	# enter, tmp862
	movb	%dl, 37(%rax)	# D.22526, enter_11->op_private
	.loc 1 7003 0 discriminator 3
	movq	-72(%rbp), %rax	# iter, tmp863
	movzbl	37(%rax), %eax	# iter_606->op_private, D.22526
	orl	$4, %eax	#, D.22526
	movl	%eax, %edx	# D.22526, D.22526
	movq	-72(%rbp), %rax	# iter, tmp864
	movb	%dl, 37(%rax)	# D.22526, iter_606->op_private
	.loc 1 7005 0 discriminator 3
	jmp	.L2005	#
.L1982:
.LBE141:
	.loc 1 7009 0
	movzwl	PL_op_seqmax(%rip), %eax	# PL_op_seqmax, PL_op_seqmax.1217
	leal	1(%rax), %edx	#, PL_op_seqmax.1219
	movw	%dx, PL_op_seqmax(%rip)	# PL_op_seqmax.1219, PL_op_seqmax
	movw	%ax, 34(%rbx)	# PL_op_seqmax.1218, o_1->op_seq
	.loc 1 7010 0
	nop
.L2005:
	.loc 1 7012 0
	movq	%rbx, %r12	# o, oldop
.L2014:
	.loc 1 6445 0
	movq	(%rbx), %rbx	# o_1->op_next, o
.L1977:
	.loc 1 6445 0 is_stmt 0 discriminator 1
	testq	%rbx, %rbx	# o
	jne	.L2111	#,
.L1979:
	.loc 1 7014 0 is_stmt 1
	call	Perl_pop_scope	#
.L1973:
	.loc 1 7015 0
	addq	$320, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE146:
	.size	Perl_peep, .-Perl_peep
	.globl	Perl_custom_op_name
	.type	Perl_custom_op_name, @function
Perl_custom_op_name:
.LFB147:
	.loc 1 7020 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 7021 0
	movq	-40(%rbp), %rax	# o, tmp72
	movq	16(%rax), %rax	# o_3(D)->op_ppaddr, D.22561
	movq	%rax, -24(%rbp)	# D.22561, index
	.loc 1 7025 0
	movq	PL_custom_op_names(%rip), %rax	# PL_custom_op_names, PL_custom_op_names.1220
	testq	%rax, %rax	# PL_custom_op_names.1220
	jne	.L2113	#,
	.loc 1 7026 0
	movq	PL_op_name+2808(%rip), %rax	# PL_op_name, D.22560
	jmp	.L2114	#
.L2113:
	.loc 1 7028 0
	movq	-24(%rbp), %rax	# index, tmp73
	movq	%rax, %rdi	# tmp73,
	call	Perl_newSViv	#
	movq	%rax, %rdi	# D.22562,
	call	Perl_sv_2mortal	#
	movq	%rax, -16(%rbp)	# tmp74, keysv
	.loc 1 7030 0
	movq	PL_custom_op_names(%rip), %rax	# PL_custom_op_names, PL_custom_op_names.1221
	movq	-16(%rbp), %rsi	# keysv, tmp75
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# PL_custom_op_names.1221,
	call	Perl_hv_fetch_ent	#
	movq	%rax, -8(%rbp)	# tmp76, he
	.loc 1 7031 0
	cmpq	$0, -8(%rbp)	#, he
	jne	.L2115	#,
	.loc 1 7032 0
	movq	PL_op_name+2808(%rip), %rax	# PL_op_name, D.22560
	jmp	.L2114	#
.L2115:
	.loc 1 7034 0
	movq	-8(%rbp), %rax	# he, tmp77
	movq	16(%rax), %rax	# he_11->hent_val, D.22562
	movl	12(%rax), %eax	# _13->sv_flags, D.22563
	andl	$262144, %eax	#, D.22563
	testl	%eax, %eax	# D.22563
	je	.L2116	#,
	.loc 1 7034 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# he, tmp78
	movq	16(%rax), %rax	# he_11->hent_val, D.22562
	movq	(%rax), %rax	# _16->sv_any, D.22564
	movq	(%rax), %rax	# MEM[(struct XPV *)_17].xpv_pv, iftmp.1222
	jmp	.L2117	#
.L2116:
	.loc 1 7034 0 discriminator 2
	movq	-8(%rbp), %rax	# he, tmp79
	movq	16(%rax), %rax	# he_11->hent_val, D.22562
	movq	%rax, %rdi	# D.22562,
	call	Perl_sv_2pv_nolen	#
.L2117:
.L2114:
	.loc 1 7035 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE147:
	.size	Perl_custom_op_name, .-Perl_custom_op_name
	.globl	Perl_custom_op_desc
	.type	Perl_custom_op_desc, @function
Perl_custom_op_desc:
.LFB148:
	.loc 1 7038 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	subq	$48, %rsp	#,
	movq	%rdi, -40(%rbp)	# o, o
	.loc 1 7039 0
	movq	-40(%rbp), %rax	# o, tmp72
	movq	16(%rax), %rax	# o_3(D)->op_ppaddr, D.22566
	movq	%rax, -24(%rbp)	# D.22566, index
	.loc 1 7043 0
	movq	PL_custom_op_descs(%rip), %rax	# PL_custom_op_descs, PL_custom_op_descs.1223
	testq	%rax, %rax	# PL_custom_op_descs.1223
	jne	.L2119	#,
	.loc 1 7044 0
	movq	PL_op_desc+2808(%rip), %rax	# PL_op_desc, D.22565
	jmp	.L2120	#
.L2119:
	.loc 1 7046 0
	movq	-24(%rbp), %rax	# index, tmp73
	movq	%rax, %rdi	# tmp73,
	call	Perl_newSViv	#
	movq	%rax, %rdi	# D.22567,
	call	Perl_sv_2mortal	#
	movq	%rax, -16(%rbp)	# tmp74, keysv
	.loc 1 7048 0
	movq	PL_custom_op_descs(%rip), %rax	# PL_custom_op_descs, PL_custom_op_descs.1224
	movq	-16(%rbp), %rsi	# keysv, tmp75
	movl	$0, %ecx	#,
	movl	$0, %edx	#,
	movq	%rax, %rdi	# PL_custom_op_descs.1224,
	call	Perl_hv_fetch_ent	#
	movq	%rax, -8(%rbp)	# tmp76, he
	.loc 1 7049 0
	cmpq	$0, -8(%rbp)	#, he
	jne	.L2121	#,
	.loc 1 7050 0
	movq	PL_op_desc+2808(%rip), %rax	# PL_op_desc, D.22565
	jmp	.L2120	#
.L2121:
	.loc 1 7052 0
	movq	-8(%rbp), %rax	# he, tmp77
	movq	16(%rax), %rax	# he_11->hent_val, D.22567
	movl	12(%rax), %eax	# _13->sv_flags, D.22568
	andl	$262144, %eax	#, D.22568
	testl	%eax, %eax	# D.22568
	je	.L2122	#,
	.loc 1 7052 0 is_stmt 0 discriminator 1
	movq	-8(%rbp), %rax	# he, tmp78
	movq	16(%rax), %rax	# he_11->hent_val, D.22567
	movq	(%rax), %rax	# _16->sv_any, D.22569
	movq	(%rax), %rax	# MEM[(struct XPV *)_17].xpv_pv, iftmp.1225
	jmp	.L2123	#
.L2122:
	.loc 1 7052 0 discriminator 2
	movq	-8(%rbp), %rax	# he, tmp79
	movq	16(%rax), %rax	# he_11->hent_val, D.22567
	movq	%rax, %rdi	# D.22567,
	call	Perl_sv_2pv_nolen	#
.L2123:
.L2120:
	.loc 1 7053 0 is_stmt 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE148:
	.size	Perl_custom_op_desc, .-Perl_custom_op_desc
	.type	const_sv_xsub, @function
const_sv_xsub:
.LFB149:
	.loc 1 7061 0
	.cfi_startproc
	pushq	%rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	#,
	.cfi_def_cfa_register 6
	pushq	%r12	#
	pushq	%rbx	#
	subq	$32, %rsp	#,
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -40(%rbp)	# cv, cv
	.loc 1 7062 0
	movq	PL_stack_sp(%rip), %rbx	# PL_stack_sp, sp
	movq	PL_stack_base(%rip), %rcx	# PL_stack_base, PL_stack_base.1226
	movq	PL_markstack_ptr(%rip), %rax	# PL_markstack_ptr, PL_markstack_ptr.1227
	leaq	-4(%rax), %rdx	#, PL_markstack_ptr.1229
	movq	%rdx, PL_markstack_ptr(%rip)	# PL_markstack_ptr.1229, PL_markstack_ptr
	movl	(%rax), %eax	# *PL_markstack_ptr.1228_4, D.22570
	cltq
	salq	$3, %rax	#, D.22571
	leaq	(%rcx,%rax), %r12	#, mark
	movq	%r12, %rdx	# mark, mark.1230
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1231
	subq	%rax, %rdx	# PL_stack_base.1232, D.22572
	movq	%rdx, %rax	# D.22572, D.22572
	sarq	$3, %rax	#, tmp96
	addl	$1, %eax	#, D.22573
	movl	%eax, -32(%rbp)	# D.22573, ax
	movq	%rbx, %rdx	# sp, sp.1233
	movq	%r12, %rax	# mark, mark.1234
	subq	%rax, %rdx	# mark.1234, D.22572
	movq	%rdx, %rax	# D.22572, D.22572
	sarq	$3, %rax	#, tmp97
	movl	%eax, -28(%rbp)	# D.22572, items
	.loc 1 7069 0
	movq	PL_stack_max(%rip), %rax	# PL_stack_max, PL_stack_max.1235
	movq	%rax, %rdx	# PL_stack_max.1235, PL_stack_max.1236
	movq	%rbx, %rax	# sp, sp.1237
	subq	%rax, %rdx	# sp.1237, D.22572
	movq	%rdx, %rax	# D.22572, D.22572
	cmpq	$7, %rax	#, D.22572
	jg	.L2125	#,
	.loc 1 7069 0 is_stmt 0 discriminator 1
	movl	$1, %edx	#,
	movq	%rbx, %rsi	# sp,
	movq	%rbx, %rdi	# sp,
	call	Perl_stack_grow	#
	movq	%rax, %rbx	#, sp
.L2125:
	.loc 1 7070 0 is_stmt 1
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1238
	movl	-32(%rbp), %edx	# ax, tmp98
	movslq	%edx, %rdx	# tmp98, D.22571
	salq	$3, %rdx	#, D.22571
	addq	%rax, %rdx	# PL_stack_base.1238, D.22574
	movq	-40(%rbp), %rax	# cv, tmp99
	movq	(%rax), %rax	# cv_32(D)->sv_any, D.22575
	movq	88(%rax), %rax	# _33->xcv_xsubany.any_ptr, D.22576
	movq	%rax, (%rdx)	# D.22576, *_31
.LBB142:
	.loc 1 7071 0
	movq	$1, -24(%rbp)	#, tmpXSoff
	movq	PL_stack_base(%rip), %rax	# PL_stack_base, PL_stack_base.1239
	movl	-32(%rbp), %edx	# ax, tmp100
	movslq	%edx, %rcx	# tmp100, D.22577
	movq	-24(%rbp), %rdx	# tmpXSoff, tmpXSoff.1240
	addq	%rcx, %rdx	# D.22577, D.22577
	salq	$3, %rdx	#, D.22577
	subq	$8, %rdx	#, D.22577
	addq	%rdx, %rax	# D.22577, PL_stack_sp.1241
	movq	%rax, PL_stack_sp(%rip)	# PL_stack_sp.1241, PL_stack_sp
	nop
.LBE142:
	.loc 1 7072 0
	addq	$32, %rsp	#,
	popq	%rbx	#
	popq	%r12	#
	popq	%rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE149:
	.size	const_sv_xsub, .-const_sv_xsub
	.section	.rodata
	.align 8
.LC16:
	.long	0
	.long	1072693248
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "/usr/include/x86_64-linux-gnu/sys/types.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file 5 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h"
	.file 6 "<built-in>"
	.file 7 "/usr/include/dirent.h"
	.file 8 "perl.h"
	.file 9 "op.h"
	.file 10 "cop.h"
	.file 11 "sv.h"
	.file 12 "regexp.h"
	.file 13 "gv.h"
	.file 14 "mg.h"
	.file 15 "av.h"
	.file 16 "hv.h"
	.file 17 "cv.h"
	.file 18 "handy.h"
	.file 19 "perlio.h"
	.file 20 "pad.h"
	.file 21 "opcode.h"
	.file 22 "intrpvar.h"
	.file 23 "thrdvar.h"
	.file 24 "opnames.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x6f02
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF1111
	.byte	0x1
	.long	.LASF1112
	.long	.LASF1113
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF0
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF1
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF7
	.uleb128 0x4
	.byte	0x8
	.uleb128 0x5
	.long	.LASF9
	.byte	0x2
	.byte	0xb5
	.long	0x5e
	.uleb128 0x6
	.byte	0x8
	.long	0x7f
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF8
	.uleb128 0x5
	.long	.LASF10
	.byte	0x3
	.byte	0x6d
	.long	0x6e
	.uleb128 0x5
	.long	.LASF11
	.byte	0x4
	.byte	0xd4
	.long	0x42
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF12
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF13
	.uleb128 0x7
	.long	0x57
	.uleb128 0x5
	.long	.LASF14
	.byte	0x5
	.byte	0x28
	.long	0xba
	.uleb128 0x8
	.long	0xca
	.long	0xca
	.uleb128 0x9
	.long	0x65
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	.LASF22
	.byte	0x18
	.byte	0x6
	.byte	0
	.long	0x107
	.uleb128 0xb
	.long	.LASF15
	.byte	0x6
	.byte	0
	.long	0x3b
	.byte	0
	.uleb128 0xb
	.long	.LASF16
	.byte	0x6
	.byte	0
	.long	0x3b
	.byte	0x4
	.uleb128 0xb
	.long	.LASF17
	.byte	0x6
	.byte	0
	.long	0x6c
	.byte	0x8
	.uleb128 0xb
	.long	.LASF18
	.byte	0x6
	.byte	0
	.long	0x6c
	.byte	0x10
	.byte	0
	.uleb128 0x5
	.long	.LASF19
	.byte	0x5
	.byte	0x62
	.long	0xaf
	.uleb128 0x6
	.byte	0x8
	.long	0x118
	.uleb128 0xc
	.long	0x7f
	.uleb128 0x6
	.byte	0x8
	.long	0x123
	.uleb128 0xd
	.uleb128 0xe
	.string	"DIR"
	.byte	0x7
	.byte	0x80
	.long	0x12f
	.uleb128 0xf
	.long	.LASF232
	.uleb128 0x10
	.string	"IV"
	.byte	0x8
	.value	0x52b
	.long	0x5e
	.uleb128 0x10
	.string	"UV"
	.byte	0x8
	.value	0x52c
	.long	0x42
	.uleb128 0x10
	.string	"NV"
	.byte	0x8
	.value	0x5f3
	.long	0x155
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF20
	.uleb128 0x11
	.long	.LASF21
	.byte	0x8
	.value	0x7d3
	.long	0x91
	.uleb128 0x10
	.string	"OP"
	.byte	0x8
	.value	0x7d5
	.long	0x173
	.uleb128 0x12
	.string	"op"
	.byte	0x28
	.byte	0x9
	.byte	0xe2
	.long	0x1df
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xe3
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xe3
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xe3
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xe3
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xe3
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xe3
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xe3
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xe3
	.long	0x1396
	.byte	0x25
	.byte	0
	.uleb128 0x10
	.string	"COP"
	.byte	0x8
	.value	0x7d6
	.long	0x1eb
	.uleb128 0x12
	.string	"cop"
	.byte	0x60
	.byte	0xa
	.byte	0x10
	.long	0x2b8
	.uleb128 0xb
	.long	.LASF23
	.byte	0xa
	.byte	0x11
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0xa
	.byte	0x11
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0xa
	.byte	0x11
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0xa
	.byte	0x11
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0xa
	.byte	0x11
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0xa
	.byte	0x11
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0xa
	.byte	0x11
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0xa
	.byte	0x11
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF31
	.byte	0xa
	.byte	0x12
	.long	0x79
	.byte	0x28
	.uleb128 0xb
	.long	.LASF32
	.byte	0xa
	.byte	0x17
	.long	0x1521
	.byte	0x30
	.uleb128 0xb
	.long	.LASF33
	.byte	0xa
	.byte	0x18
	.long	0x1556
	.byte	0x38
	.uleb128 0xb
	.long	.LASF34
	.byte	0xa
	.byte	0x1a
	.long	0x13b6
	.byte	0x40
	.uleb128 0xb
	.long	.LASF35
	.byte	0xa
	.byte	0x1b
	.long	0x13ab
	.byte	0x44
	.uleb128 0xb
	.long	.LASF36
	.byte	0xa
	.byte	0x1c
	.long	0x13c1
	.byte	0x48
	.uleb128 0xb
	.long	.LASF37
	.byte	0xa
	.byte	0x1d
	.long	0x13de
	.byte	0x50
	.uleb128 0xb
	.long	.LASF38
	.byte	0xa
	.byte	0x1e
	.long	0x13de
	.byte	0x58
	.byte	0
	.uleb128 0x11
	.long	.LASF39
	.byte	0x8
	.value	0x7d7
	.long	0x2c4
	.uleb128 0xa
	.long	.LASF40
	.byte	0x30
	.byte	0x9
	.byte	0xe6
	.long	0x33d
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xe7
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xe7
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xe7
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xe7
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xe7
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xe7
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xe7
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xe7
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF41
	.byte	0x9
	.byte	0xe8
	.long	0x1539
	.byte	0x28
	.byte	0
	.uleb128 0x11
	.long	.LASF42
	.byte	0x8
	.value	0x7d8
	.long	0x349
	.uleb128 0xa
	.long	.LASF43
	.byte	0x38
	.byte	0x9
	.byte	0xeb
	.long	0x3ce
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xec
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xec
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xec
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xec
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xec
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xec
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xec
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xec
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF41
	.byte	0x9
	.byte	0xed
	.long	0x1539
	.byte	0x28
	.uleb128 0xb
	.long	.LASF44
	.byte	0x9
	.byte	0xee
	.long	0x1539
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF45
	.byte	0x8
	.value	0x7d9
	.long	0x3da
	.uleb128 0xa
	.long	.LASF46
	.byte	0x38
	.byte	0x9
	.byte	0xf7
	.long	0x45f
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xf8
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xf8
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xf8
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xf8
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xf8
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xf8
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xf8
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xf8
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF41
	.byte	0x9
	.byte	0xf9
	.long	0x1539
	.byte	0x28
	.uleb128 0xb
	.long	.LASF44
	.byte	0x9
	.byte	0xfa
	.long	0x1539
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF47
	.byte	0x8
	.value	0x7da
	.long	0x46b
	.uleb128 0xa
	.long	.LASF48
	.byte	0x38
	.byte	0x9
	.byte	0xf1
	.long	0x4f0
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xf2
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xf2
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xf2
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xf2
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xf2
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xf2
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xf2
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xf2
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF41
	.byte	0x9
	.byte	0xf3
	.long	0x1539
	.byte	0x28
	.uleb128 0xb
	.long	.LASF49
	.byte	0x9
	.byte	0xf4
	.long	0x1539
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF50
	.byte	0x8
	.value	0x7db
	.long	0x4fc
	.uleb128 0xa
	.long	.LASF51
	.byte	0x70
	.byte	0x9
	.byte	0xfd
	.long	0x5ea
	.uleb128 0xb
	.long	.LASF23
	.byte	0x9
	.byte	0xfe
	.long	0x1539
	.byte	0
	.uleb128 0xb
	.long	.LASF24
	.byte	0x9
	.byte	0xfe
	.long	0x1539
	.byte	0x8
	.uleb128 0xb
	.long	.LASF25
	.byte	0x9
	.byte	0xfe
	.long	0x1f57
	.byte	0x10
	.uleb128 0xb
	.long	.LASF26
	.byte	0x9
	.byte	0xfe
	.long	0x15b2
	.byte	0x18
	.uleb128 0xb
	.long	.LASF27
	.byte	0x9
	.byte	0xfe
	.long	0x13a0
	.byte	0x20
	.uleb128 0xb
	.long	.LASF28
	.byte	0x9
	.byte	0xfe
	.long	0x13a0
	.byte	0x22
	.uleb128 0xb
	.long	.LASF29
	.byte	0x9
	.byte	0xfe
	.long	0x1396
	.byte	0x24
	.uleb128 0xb
	.long	.LASF30
	.byte	0x9
	.byte	0xfe
	.long	0x1396
	.byte	0x25
	.uleb128 0xb
	.long	.LASF41
	.byte	0x9
	.byte	0xff
	.long	0x1539
	.byte	0x28
	.uleb128 0x13
	.long	.LASF44
	.byte	0x9
	.value	0x100
	.long	0x1539
	.byte	0x30
	.uleb128 0x13
	.long	.LASF52
	.byte	0x9
	.value	0x101
	.long	0x1539
	.byte	0x38
	.uleb128 0x13
	.long	.LASF53
	.byte	0x9
	.value	0x102
	.long	0x1539
	.byte	0x40
	.uleb128 0x13
	.long	.LASF54
	.byte	0x9
	.value	0x103
	.long	0x1f5d
	.byte	0x48
	.uleb128 0x13
	.long	.LASF55
	.byte	0x9
	.value	0x107
	.long	0x1f63
	.byte	0x50
	.uleb128 0x13
	.long	.LASF56
	.byte	0x9
	.value	0x109
	.long	0x13b6
	.byte	0x58
	.uleb128 0x13
	.long	.LASF57
	.byte	0x9
	.value	0x10a
	.long	0x13b6
	.byte	0x5c
	.uleb128 0x13
	.long	.LASF58
	.byte	0x9
	.value	0x10b
	.long	0x1396
	.byte	0x60
	.uleb128 0x13
	.long	.LASF59
	.byte	0x9
	.value	0x10f
	.long	0x1521
	.byte	0x68
	.byte	0
	.uleb128 0x11
	.long	.LASF60
	.byte	0x8
	.value	0x7dc
	.long	0x5f6
	.uleb128 0x14
	.long	.LASF61
	.byte	0x30
	.byte	0x9
	.value	0x14c
	.long	0x679
	.uleb128 0x13
	.long	.LASF23
	.byte	0x9
	.value	0x14d
	.long	0x1539
	.byte	0
	.uleb128 0x13
	.long	.LASF24
	.byte	0x9
	.value	0x14d
	.long	0x1539
	.byte	0x8
	.uleb128 0x13
	.long	.LASF25
	.byte	0x9
	.value	0x14d
	.long	0x1f57
	.byte	0x10
	.uleb128 0x13
	.long	.LASF26
	.byte	0x9
	.value	0x14d
	.long	0x15b2
	.byte	0x18
	.uleb128 0x13
	.long	.LASF27
	.byte	0x9
	.value	0x14d
	.long	0x13a0
	.byte	0x20
	.uleb128 0x13
	.long	.LASF28
	.byte	0x9
	.value	0x14d
	.long	0x13a0
	.byte	0x22
	.uleb128 0x13
	.long	.LASF29
	.byte	0x9
	.value	0x14d
	.long	0x1396
	.byte	0x24
	.uleb128 0x13
	.long	.LASF30
	.byte	0x9
	.value	0x14d
	.long	0x1396
	.byte	0x25
	.uleb128 0x13
	.long	.LASF62
	.byte	0x9
	.value	0x14e
	.long	0x13de
	.byte	0x28
	.byte	0
	.uleb128 0x11
	.long	.LASF63
	.byte	0x8
	.value	0x7dd
	.long	0x685
	.uleb128 0x14
	.long	.LASF64
	.byte	0x30
	.byte	0x9
	.value	0x151
	.long	0x708
	.uleb128 0x13
	.long	.LASF23
	.byte	0x9
	.value	0x152
	.long	0x1539
	.byte	0
	.uleb128 0x13
	.long	.LASF24
	.byte	0x9
	.value	0x152
	.long	0x1539
	.byte	0x8
	.uleb128 0x13
	.long	.LASF25
	.byte	0x9
	.value	0x152
	.long	0x1f57
	.byte	0x10
	.uleb128 0x13
	.long	.LASF26
	.byte	0x9
	.value	0x152
	.long	0x15b2
	.byte	0x18
	.uleb128 0x13
	.long	.LASF27
	.byte	0x9
	.value	0x152
	.long	0x13a0
	.byte	0x20
	.uleb128 0x13
	.long	.LASF28
	.byte	0x9
	.value	0x152
	.long	0x13a0
	.byte	0x22
	.uleb128 0x13
	.long	.LASF29
	.byte	0x9
	.value	0x152
	.long	0x1396
	.byte	0x24
	.uleb128 0x13
	.long	.LASF30
	.byte	0x9
	.value	0x152
	.long	0x1396
	.byte	0x25
	.uleb128 0x13
	.long	.LASF65
	.byte	0x9
	.value	0x153
	.long	0x15b2
	.byte	0x28
	.byte	0
	.uleb128 0x11
	.long	.LASF66
	.byte	0x8
	.value	0x7de
	.long	0x714
	.uleb128 0x14
	.long	.LASF67
	.byte	0x30
	.byte	0x9
	.value	0x156
	.long	0x797
	.uleb128 0x13
	.long	.LASF23
	.byte	0x9
	.value	0x157
	.long	0x1539
	.byte	0
	.uleb128 0x13
	.long	.LASF24
	.byte	0x9
	.value	0x157
	.long	0x1539
	.byte	0x8
	.uleb128 0x13
	.long	.LASF25
	.byte	0x9
	.value	0x157
	.long	0x1f57
	.byte	0x10
	.uleb128 0x13
	.long	.LASF26
	.byte	0x9
	.value	0x157
	.long	0x15b2
	.byte	0x18
	.uleb128 0x13
	.long	.LASF27
	.byte	0x9
	.value	0x157
	.long	0x13a0
	.byte	0x20
	.uleb128 0x13
	.long	.LASF28
	.byte	0x9
	.value	0x157
	.long	0x13a0
	.byte	0x22
	.uleb128 0x13
	.long	.LASF29
	.byte	0x9
	.value	0x157
	.long	0x1396
	.byte	0x24
	.uleb128 0x13
	.long	.LASF30
	.byte	0x9
	.value	0x157
	.long	0x1396
	.byte	0x25
	.uleb128 0x13
	.long	.LASF68
	.byte	0x9
	.value	0x158
	.long	0x79
	.byte	0x28
	.byte	0
	.uleb128 0x11
	.long	.LASF69
	.byte	0x8
	.value	0x7df
	.long	0x7a3
	.uleb128 0x14
	.long	.LASF70
	.byte	0x50
	.byte	0x9
	.value	0x15b
	.long	0x85a
	.uleb128 0x13
	.long	.LASF23
	.byte	0x9
	.value	0x15c
	.long	0x1539
	.byte	0
	.uleb128 0x13
	.long	.LASF24
	.byte	0x9
	.value	0x15c
	.long	0x1539
	.byte	0x8
	.uleb128 0x13
	.long	.LASF25
	.byte	0x9
	.value	0x15c
	.long	0x1f57
	.byte	0x10
	.uleb128 0x13
	.long	.LASF26
	.byte	0x9
	.value	0x15c
	.long	0x15b2
	.byte	0x18
	.uleb128 0x13
	.long	.LASF27
	.byte	0x9
	.value	0x15c
	.long	0x13a0
	.byte	0x20
	.uleb128 0x13
	.long	.LASF28
	.byte	0x9
	.value	0x15c
	.long	0x13a0
	.byte	0x22
	.uleb128 0x13
	.long	.LASF29
	.byte	0x9
	.value	0x15c
	.long	0x1396
	.byte	0x24
	.uleb128 0x13
	.long	.LASF30
	.byte	0x9
	.value	0x15c
	.long	0x1396
	.byte	0x25
	.uleb128 0x13
	.long	.LASF41
	.byte	0x9
	.value	0x15d
	.long	0x1539
	.byte	0x28
	.uleb128 0x13
	.long	.LASF44
	.byte	0x9
	.value	0x15e
	.long	0x1539
	.byte	0x30
	.uleb128 0x13
	.long	.LASF71
	.byte	0x9
	.value	0x15f
	.long	0x1539
	.byte	0x38
	.uleb128 0x13
	.long	.LASF72
	.byte	0x9
	.value	0x160
	.long	0x1539
	.byte	0x40
	.uleb128 0x13
	.long	.LASF73
	.byte	0x9
	.value	0x161
	.long	0x1539
	.byte	0x48
	.byte	0
	.uleb128 0x11
	.long	.LASF74
	.byte	0x8
	.value	0x7e1
	.long	0x866
	.uleb128 0x14
	.long	.LASF75
	.byte	0x1
	.byte	0x8
	.value	0xea7
	.long	0x881
	.uleb128 0x13
	.long	.LASF76
	.byte	0x8
	.value	0xea8
	.long	0x7f
	.byte	0
	.byte	0
	.uleb128 0x10
	.string	"SV"
	.byte	0x8
	.value	0x7ea
	.long	0x88c
	.uleb128 0x12
	.string	"sv"
	.byte	0x10
	.byte	0xb
	.byte	0x43
	.long	0x8bc
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x44
	.long	0x6c
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x45
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x46
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"AV"
	.byte	0x8
	.value	0x7eb
	.long	0x8c7
	.uleb128 0x12
	.string	"av"
	.byte	0x10
	.byte	0xb
	.byte	0x55
	.long	0x8f7
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x56
	.long	0x1509
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x57
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x58
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"HV"
	.byte	0x8
	.value	0x7ec
	.long	0x902
	.uleb128 0x12
	.string	"hv"
	.byte	0x10
	.byte	0xb
	.byte	0x5b
	.long	0x932
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x5c
	.long	0x150f
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x5d
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x5e
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x10
	.string	"CV"
	.byte	0x8
	.value	0x7ed
	.long	0x93d
	.uleb128 0x12
	.string	"cv"
	.byte	0x10
	.byte	0xb
	.byte	0x4f
	.long	0x96d
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x50
	.long	0x1503
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x51
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x52
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x11
	.long	.LASF80
	.byte	0x8
	.value	0x7ee
	.long	0x979
	.uleb128 0xa
	.long	.LASF81
	.byte	0x68
	.byte	0xc
	.byte	0x1f
	.long	0xa52
	.uleb128 0xb
	.long	.LASF82
	.byte	0xc
	.byte	0x20
	.long	0x1451
	.byte	0
	.uleb128 0xb
	.long	.LASF83
	.byte	0xc
	.byte	0x21
	.long	0x1451
	.byte	0x8
	.uleb128 0xb
	.long	.LASF84
	.byte	0xc
	.byte	0x22
	.long	0x1457
	.byte	0x10
	.uleb128 0xb
	.long	.LASF85
	.byte	0xc
	.byte	0x23
	.long	0x1462
	.byte	0x18
	.uleb128 0xb
	.long	.LASF86
	.byte	0xc
	.byte	0x24
	.long	0x79
	.byte	0x20
	.uleb128 0xb
	.long	.LASF87
	.byte	0xc
	.byte	0x25
	.long	0x146d
	.byte	0x28
	.uleb128 0xb
	.long	.LASF88
	.byte	0xc
	.byte	0x26
	.long	0x79
	.byte	0x30
	.uleb128 0xb
	.long	.LASF89
	.byte	0xc
	.byte	0x28
	.long	0x1473
	.byte	0x38
	.uleb128 0xb
	.long	.LASF90
	.byte	0xc
	.byte	0x29
	.long	0x13ab
	.byte	0x40
	.uleb128 0xb
	.long	.LASF91
	.byte	0xc
	.byte	0x2a
	.long	0x13ab
	.byte	0x44
	.uleb128 0xb
	.long	.LASF92
	.byte	0xc
	.byte	0x2b
	.long	0x13ab
	.byte	0x48
	.uleb128 0xb
	.long	.LASF93
	.byte	0xc
	.byte	0x2c
	.long	0x13ab
	.byte	0x4c
	.uleb128 0xb
	.long	.LASF94
	.byte	0xc
	.byte	0x2d
	.long	0x13b6
	.byte	0x50
	.uleb128 0xb
	.long	.LASF95
	.byte	0xc
	.byte	0x2e
	.long	0x13b6
	.byte	0x54
	.uleb128 0xb
	.long	.LASF96
	.byte	0xc
	.byte	0x2f
	.long	0x13b6
	.byte	0x58
	.uleb128 0xb
	.long	.LASF97
	.byte	0xc
	.byte	0x30
	.long	0x13b6
	.byte	0x5c
	.uleb128 0xb
	.long	.LASF98
	.byte	0xc
	.byte	0x32
	.long	0x1479
	.byte	0x60
	.byte	0
	.uleb128 0x10
	.string	"GP"
	.byte	0x8
	.value	0x7ef
	.long	0xa5d
	.uleb128 0x12
	.string	"gp"
	.byte	0x58
	.byte	0xd
	.byte	0xb
	.long	0xaf9
	.uleb128 0xb
	.long	.LASF99
	.byte	0xd
	.byte	0xc
	.long	0x13de
	.byte	0
	.uleb128 0xb
	.long	.LASF100
	.byte	0xd
	.byte	0xd
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF101
	.byte	0xd
	.byte	0xe
	.long	0x1596
	.byte	0x10
	.uleb128 0xb
	.long	.LASF102
	.byte	0xd
	.byte	0xf
	.long	0x154a
	.byte	0x18
	.uleb128 0xb
	.long	.LASF103
	.byte	0xd
	.byte	0x10
	.long	0x155c
	.byte	0x20
	.uleb128 0xb
	.long	.LASF104
	.byte	0xd
	.byte	0x11
	.long	0x1521
	.byte	0x28
	.uleb128 0xb
	.long	.LASF105
	.byte	0xd
	.byte	0x12
	.long	0x1556
	.byte	0x30
	.uleb128 0xb
	.long	.LASF106
	.byte	0xd
	.byte	0x13
	.long	0x154a
	.byte	0x38
	.uleb128 0xb
	.long	.LASF107
	.byte	0xd
	.byte	0x14
	.long	0x13b6
	.byte	0x40
	.uleb128 0xb
	.long	.LASF108
	.byte	0xd
	.byte	0x15
	.long	0x13b6
	.byte	0x44
	.uleb128 0xb
	.long	.LASF109
	.byte	0xd
	.byte	0x16
	.long	0x13c1
	.byte	0x48
	.uleb128 0xb
	.long	.LASF110
	.byte	0xd
	.byte	0x17
	.long	0x79
	.byte	0x50
	.byte	0
	.uleb128 0x10
	.string	"GV"
	.byte	0x8
	.value	0x7f0
	.long	0xb04
	.uleb128 0x12
	.string	"gv"
	.byte	0x10
	.byte	0xb
	.byte	0x49
	.long	0xb34
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x4a
	.long	0x14fd
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x4b
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x4c
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x12
	.string	"io"
	.byte	0x10
	.byte	0xb
	.byte	0x61
	.long	0xb64
	.uleb128 0xb
	.long	.LASF77
	.byte	0xb
	.byte	0x62
	.long	0x1515
	.byte	0
	.uleb128 0xb
	.long	.LASF78
	.byte	0xb
	.byte	0x63
	.long	0x13b6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF79
	.byte	0xb
	.byte	0x64
	.long	0x13b6
	.byte	0xc
	.byte	0
	.uleb128 0x11
	.long	.LASF111
	.byte	0x8
	.value	0x7f2
	.long	0xb70
	.uleb128 0x14
	.long	.LASF112
	.byte	0x90
	.byte	0xa
	.value	0x1a2
	.long	0xb98
	.uleb128 0x13
	.long	.LASF113
	.byte	0xa
	.value	0x1a3
	.long	0x13b6
	.byte	0
	.uleb128 0x13
	.long	.LASF114
	.byte	0xa
	.value	0x1a7
	.long	0x21ca
	.byte	0x8
	.byte	0
	.uleb128 0x14
	.long	.LASF115
	.byte	0x88
	.byte	0xa
	.value	0x130
	.long	0xc0e
	.uleb128 0x13
	.long	.LASF116
	.byte	0xa
	.value	0x131
	.long	0x13ab
	.byte	0
	.uleb128 0x13
	.long	.LASF117
	.byte	0xa
	.value	0x132
	.long	0x2100
	.byte	0x8
	.uleb128 0x13
	.long	.LASF118
	.byte	0xa
	.value	0x133
	.long	0x13ab
	.byte	0x10
	.uleb128 0x13
	.long	.LASF119
	.byte	0xa
	.value	0x134
	.long	0x13ab
	.byte	0x14
	.uleb128 0x13
	.long	.LASF120
	.byte	0xa
	.value	0x135
	.long	0x13ab
	.byte	0x18
	.uleb128 0x13
	.long	.LASF121
	.byte	0xa
	.value	0x136
	.long	0x1f5d
	.byte	0x20
	.uleb128 0x13
	.long	.LASF122
	.byte	0xa
	.value	0x137
	.long	0x1396
	.byte	0x28
	.uleb128 0x13
	.long	.LASF123
	.byte	0xa
	.value	0x13d
	.long	0x20d2
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF124
	.byte	0x8
	.value	0x7f5
	.long	0xc1a
	.uleb128 0xa
	.long	.LASF125
	.byte	0x30
	.byte	0xe
	.byte	0x1a
	.long	0xc87
	.uleb128 0xb
	.long	.LASF126
	.byte	0xe
	.byte	0x1b
	.long	0x151b
	.byte	0
	.uleb128 0xb
	.long	.LASF127
	.byte	0xe
	.byte	0x1c
	.long	0x2379
	.byte	0x8
	.uleb128 0xb
	.long	.LASF128
	.byte	0xe
	.byte	0x1d
	.long	0x13a0
	.byte	0x10
	.uleb128 0xb
	.long	.LASF129
	.byte	0xe
	.byte	0x1e
	.long	0x7f
	.byte	0x12
	.uleb128 0xb
	.long	.LASF130
	.byte	0xe
	.byte	0x1f
	.long	0x1396
	.byte	0x13
	.uleb128 0xb
	.long	.LASF131
	.byte	0xe
	.byte	0x20
	.long	0x13de
	.byte	0x18
	.uleb128 0xb
	.long	.LASF132
	.byte	0xe
	.byte	0x21
	.long	0x79
	.byte	0x20
	.uleb128 0xb
	.long	.LASF133
	.byte	0xe
	.byte	0x22
	.long	0x13ab
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.string	"XRV"
	.byte	0x8
	.value	0x7f6
	.long	0xc93
	.uleb128 0x12
	.string	"xrv"
	.byte	0x8
	.byte	0xb
	.byte	0xf5
	.long	0xcac
	.uleb128 0xb
	.long	.LASF134
	.byte	0xb
	.byte	0xf6
	.long	0x13de
	.byte	0
	.byte	0
	.uleb128 0x10
	.string	"XPV"
	.byte	0x8
	.value	0x7f7
	.long	0xcb8
	.uleb128 0x12
	.string	"xpv"
	.byte	0x18
	.byte	0xb
	.byte	0xf9
	.long	0xce9
	.uleb128 0xb
	.long	.LASF135
	.byte	0xb
	.byte	0xfa
	.long	0x79
	.byte	0
	.uleb128 0xb
	.long	.LASF136
	.byte	0xb
	.byte	0xfb
	.long	0x15c
	.byte	0x8
	.uleb128 0xb
	.long	.LASF137
	.byte	0xb
	.byte	0xfc
	.long	0x15c
	.byte	0x10
	.byte	0
	.uleb128 0x11
	.long	.LASF138
	.byte	0x8
	.value	0x7f8
	.long	0xcf5
	.uleb128 0xa
	.long	.LASF139
	.byte	0x20
	.byte	0xb
	.byte	0xff
	.long	0xd36
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x100
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x101
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x102
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF140
	.byte	0xb
	.value	0x103
	.long	0x134
	.byte	0x18
	.byte	0
	.uleb128 0x11
	.long	.LASF141
	.byte	0x8
	.value	0x7f9
	.long	0xd42
	.uleb128 0x14
	.long	.LASF142
	.byte	0x20
	.byte	0xb
	.value	0x106
	.long	0xd84
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x107
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x108
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x109
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF143
	.byte	0xb
	.value	0x10a
	.long	0x13f
	.byte	0x18
	.byte	0
	.uleb128 0x11
	.long	.LASF144
	.byte	0x8
	.value	0x7fa
	.long	0xd90
	.uleb128 0x14
	.long	.LASF145
	.byte	0x28
	.byte	0xb
	.value	0x10d
	.long	0xddf
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x10e
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x10f
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x110
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF140
	.byte	0xb
	.value	0x111
	.long	0x134
	.byte	0x18
	.uleb128 0x13
	.long	.LASF146
	.byte	0xb
	.value	0x112
	.long	0x14a
	.byte	0x20
	.byte	0
	.uleb128 0x11
	.long	.LASF147
	.byte	0x8
	.value	0x7fb
	.long	0xdeb
	.uleb128 0x14
	.long	.LASF148
	.byte	0x38
	.byte	0xb
	.value	0x116
	.long	0xe54
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x117
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x118
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x119
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF140
	.byte	0xb
	.value	0x11a
	.long	0x134
	.byte	0x18
	.uleb128 0x13
	.long	.LASF146
	.byte	0xb
	.value	0x11b
	.long	0x14a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF149
	.byte	0xb
	.value	0x11c
	.long	0x151b
	.byte	0x28
	.uleb128 0x13
	.long	.LASF150
	.byte	0xb
	.value	0x11d
	.long	0x1521
	.byte	0x30
	.byte	0
	.uleb128 0x11
	.long	.LASF151
	.byte	0x8
	.value	0x7fd
	.long	0xe60
	.uleb128 0xa
	.long	.LASF152
	.byte	0x50
	.byte	0xf
	.byte	0xb
	.long	0xee5
	.uleb128 0xb
	.long	.LASF153
	.byte	0xf
	.byte	0xc
	.long	0x79
	.byte	0
	.uleb128 0xb
	.long	.LASF154
	.byte	0xf
	.byte	0xd
	.long	0x86
	.byte	0x8
	.uleb128 0xb
	.long	.LASF155
	.byte	0xf
	.byte	0xe
	.long	0x86
	.byte	0x10
	.uleb128 0xb
	.long	.LASF156
	.byte	0xf
	.byte	0xf
	.long	0x134
	.byte	0x18
	.uleb128 0xb
	.long	.LASF146
	.byte	0xf
	.byte	0x10
	.long	0x14a
	.byte	0x20
	.uleb128 0xb
	.long	.LASF149
	.byte	0xf
	.byte	0x11
	.long	0x151b
	.byte	0x28
	.uleb128 0xb
	.long	.LASF150
	.byte	0xf
	.byte	0x12
	.long	0x1521
	.byte	0x30
	.uleb128 0xb
	.long	.LASF157
	.byte	0xf
	.byte	0x14
	.long	0x20cc
	.byte	0x38
	.uleb128 0xb
	.long	.LASF158
	.byte	0xf
	.byte	0x15
	.long	0x13de
	.byte	0x40
	.uleb128 0xb
	.long	.LASF159
	.byte	0xf
	.byte	0x16
	.long	0x1396
	.byte	0x48
	.byte	0
	.uleb128 0x11
	.long	.LASF160
	.byte	0x8
	.value	0x7fe
	.long	0xef1
	.uleb128 0xa
	.long	.LASF161
	.byte	0x58
	.byte	0x10
	.byte	0x22
	.long	0xf82
	.uleb128 0xb
	.long	.LASF162
	.byte	0x10
	.byte	0x23
	.long	0x79
	.byte	0
	.uleb128 0xb
	.long	.LASF163
	.byte	0x10
	.byte	0x24
	.long	0x15c
	.byte	0x8
	.uleb128 0xb
	.long	.LASF164
	.byte	0x10
	.byte	0x25
	.long	0x15c
	.byte	0x10
	.uleb128 0xb
	.long	.LASF165
	.byte	0x10
	.byte	0x26
	.long	0x134
	.byte	0x18
	.uleb128 0xb
	.long	.LASF146
	.byte	0x10
	.byte	0x27
	.long	0x14a
	.byte	0x20
	.uleb128 0xb
	.long	.LASF149
	.byte	0x10
	.byte	0x29
	.long	0x151b
	.byte	0x28
	.uleb128 0xb
	.long	.LASF150
	.byte	0x10
	.byte	0x2a
	.long	0x1521
	.byte	0x30
	.uleb128 0xb
	.long	.LASF166
	.byte	0x10
	.byte	0x2c
	.long	0x13ab
	.byte	0x38
	.uleb128 0xb
	.long	.LASF167
	.byte	0x10
	.byte	0x2d
	.long	0x22f0
	.byte	0x40
	.uleb128 0xb
	.long	.LASF168
	.byte	0x10
	.byte	0x2e
	.long	0x1f5d
	.byte	0x48
	.uleb128 0xb
	.long	.LASF169
	.byte	0x10
	.byte	0x2f
	.long	0x79
	.byte	0x50
	.byte	0
	.uleb128 0x11
	.long	.LASF170
	.byte	0x8
	.value	0x7ff
	.long	0xf8e
	.uleb128 0x14
	.long	.LASF171
	.byte	0x60
	.byte	0xb
	.value	0x130
	.long	0x1038
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x131
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x132
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x133
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF140
	.byte	0xb
	.value	0x134
	.long	0x134
	.byte	0x18
	.uleb128 0x13
	.long	.LASF146
	.byte	0xb
	.value	0x135
	.long	0x14a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF149
	.byte	0xb
	.value	0x136
	.long	0x151b
	.byte	0x28
	.uleb128 0x13
	.long	.LASF150
	.byte	0xb
	.value	0x137
	.long	0x1521
	.byte	0x30
	.uleb128 0x13
	.long	.LASF172
	.byte	0xb
	.value	0x139
	.long	0x1527
	.byte	0x38
	.uleb128 0x13
	.long	.LASF173
	.byte	0xb
	.value	0x13a
	.long	0x79
	.byte	0x40
	.uleb128 0x13
	.long	.LASF174
	.byte	0xb
	.value	0x13b
	.long	0x15c
	.byte	0x48
	.uleb128 0x13
	.long	.LASF175
	.byte	0xb
	.value	0x13c
	.long	0x1521
	.byte	0x50
	.uleb128 0x13
	.long	.LASF176
	.byte	0xb
	.value	0x13d
	.long	0x1396
	.byte	0x58
	.byte	0
	.uleb128 0x11
	.long	.LASF177
	.byte	0x8
	.value	0x800
	.long	0x1044
	.uleb128 0xa
	.long	.LASF178
	.byte	0x90
	.byte	0x11
	.byte	0xe
	.long	0x1135
	.uleb128 0xb
	.long	.LASF135
	.byte	0x11
	.byte	0xf
	.long	0x79
	.byte	0
	.uleb128 0xb
	.long	.LASF136
	.byte	0x11
	.byte	0x10
	.long	0x15c
	.byte	0x8
	.uleb128 0xb
	.long	.LASF137
	.byte	0x11
	.byte	0x11
	.long	0x15c
	.byte	0x10
	.uleb128 0xb
	.long	.LASF156
	.byte	0x11
	.byte	0x12
	.long	0x134
	.byte	0x18
	.uleb128 0xb
	.long	.LASF146
	.byte	0x11
	.byte	0x13
	.long	0x14a
	.byte	0x20
	.uleb128 0xb
	.long	.LASF149
	.byte	0x11
	.byte	0x14
	.long	0x151b
	.byte	0x28
	.uleb128 0xb
	.long	.LASF150
	.byte	0x11
	.byte	0x15
	.long	0x1521
	.byte	0x30
	.uleb128 0xb
	.long	.LASF179
	.byte	0x11
	.byte	0x17
	.long	0x1521
	.byte	0x38
	.uleb128 0xb
	.long	.LASF180
	.byte	0x11
	.byte	0x18
	.long	0x1539
	.byte	0x40
	.uleb128 0xb
	.long	.LASF181
	.byte	0x11
	.byte	0x19
	.long	0x1539
	.byte	0x48
	.uleb128 0xb
	.long	.LASF182
	.byte	0x11
	.byte	0x1a
	.long	0x1550
	.byte	0x50
	.uleb128 0xb
	.long	.LASF183
	.byte	0x11
	.byte	0x1b
	.long	0x12e7
	.byte	0x58
	.uleb128 0xb
	.long	.LASF184
	.byte	0x11
	.byte	0x1c
	.long	0x1556
	.byte	0x60
	.uleb128 0xb
	.long	.LASF185
	.byte	0x11
	.byte	0x1d
	.long	0x79
	.byte	0x68
	.uleb128 0xb
	.long	.LASF186
	.byte	0x11
	.byte	0x1e
	.long	0x5e
	.byte	0x70
	.uleb128 0xb
	.long	.LASF187
	.byte	0x11
	.byte	0x1f
	.long	0x15d8
	.byte	0x78
	.uleb128 0xb
	.long	.LASF188
	.byte	0x11
	.byte	0x20
	.long	0x154a
	.byte	0x80
	.uleb128 0xb
	.long	.LASF189
	.byte	0x11
	.byte	0x25
	.long	0x152d
	.byte	0x88
	.uleb128 0xb
	.long	.LASF190
	.byte	0x11
	.byte	0x26
	.long	0x13b6
	.byte	0x8c
	.byte	0
	.uleb128 0x11
	.long	.LASF191
	.byte	0x8
	.value	0x803
	.long	0x1141
	.uleb128 0x14
	.long	.LASF192
	.byte	0xa8
	.byte	0xb
	.value	0x170
	.long	0x127a
	.uleb128 0x13
	.long	.LASF135
	.byte	0xb
	.value	0x171
	.long	0x79
	.byte	0
	.uleb128 0x13
	.long	.LASF136
	.byte	0xb
	.value	0x172
	.long	0x15c
	.byte	0x8
	.uleb128 0x13
	.long	.LASF137
	.byte	0xb
	.value	0x173
	.long	0x15c
	.byte	0x10
	.uleb128 0x13
	.long	.LASF140
	.byte	0xb
	.value	0x174
	.long	0x134
	.byte	0x18
	.uleb128 0x13
	.long	.LASF146
	.byte	0xb
	.value	0x175
	.long	0x14a
	.byte	0x20
	.uleb128 0x13
	.long	.LASF149
	.byte	0xb
	.value	0x176
	.long	0x151b
	.byte	0x28
	.uleb128 0x13
	.long	.LASF150
	.byte	0xb
	.value	0x177
	.long	0x1521
	.byte	0x30
	.uleb128 0x13
	.long	.LASF193
	.byte	0xb
	.value	0x179
	.long	0x158a
	.byte	0x38
	.uleb128 0x13
	.long	.LASF194
	.byte	0xb
	.value	0x17a
	.long	0x158a
	.byte	0x40
	.uleb128 0x13
	.long	.LASF195
	.byte	0xb
	.value	0x187
	.long	0x1562
	.byte	0x48
	.uleb128 0x13
	.long	.LASF196
	.byte	0xb
	.value	0x188
	.long	0x134
	.byte	0x50
	.uleb128 0x13
	.long	.LASF197
	.byte	0xb
	.value	0x189
	.long	0x134
	.byte	0x58
	.uleb128 0x13
	.long	.LASF198
	.byte	0xb
	.value	0x18a
	.long	0x134
	.byte	0x60
	.uleb128 0x13
	.long	.LASF199
	.byte	0xb
	.value	0x18b
	.long	0x134
	.byte	0x68
	.uleb128 0x13
	.long	.LASF200
	.byte	0xb
	.value	0x18c
	.long	0x79
	.byte	0x70
	.uleb128 0x13
	.long	.LASF201
	.byte	0xb
	.value	0x18d
	.long	0x1556
	.byte	0x78
	.uleb128 0x13
	.long	.LASF202
	.byte	0xb
	.value	0x18e
	.long	0x79
	.byte	0x80
	.uleb128 0x13
	.long	.LASF203
	.byte	0xb
	.value	0x18f
	.long	0x1556
	.byte	0x88
	.uleb128 0x13
	.long	.LASF204
	.byte	0xb
	.value	0x190
	.long	0x79
	.byte	0x90
	.uleb128 0x13
	.long	.LASF205
	.byte	0xb
	.value	0x191
	.long	0x1556
	.byte	0x98
	.uleb128 0x13
	.long	.LASF206
	.byte	0xb
	.value	0x192
	.long	0x50
	.byte	0xa0
	.uleb128 0x13
	.long	.LASF207
	.byte	0xb
	.value	0x193
	.long	0x7f
	.byte	0xa2
	.uleb128 0x13
	.long	.LASF208
	.byte	0xb
	.value	0x194
	.long	0x7f
	.byte	0xa3
	.byte	0
	.uleb128 0x11
	.long	.LASF209
	.byte	0x8
	.value	0x804
	.long	0x1286
	.uleb128 0xa
	.long	.LASF210
	.byte	0x38
	.byte	0xe
	.byte	0xe
	.long	0x12e7
	.uleb128 0xb
	.long	.LASF211
	.byte	0xe
	.byte	0xf
	.long	0x2310
	.byte	0
	.uleb128 0xb
	.long	.LASF212
	.byte	0xe
	.byte	0x10
	.long	0x2310
	.byte	0x8
	.uleb128 0xb
	.long	.LASF213
	.byte	0xe
	.byte	0x11
	.long	0x232a
	.byte	0x10
	.uleb128 0xb
	.long	.LASF214
	.byte	0xe
	.byte	0x12
	.long	0x2310
	.byte	0x18
	.uleb128 0xb
	.long	.LASF215
	.byte	0xe
	.byte	0x13
	.long	0x2310
	.byte	0x20
	.uleb128 0xb
	.long	.LASF216
	.byte	0xe
	.byte	0x14
	.long	0x2353
	.byte	0x28
	.uleb128 0xb
	.long	.LASF217
	.byte	0xe
	.byte	0x16
	.long	0x2373
	.byte	0x30
	.byte	0
	.uleb128 0x10
	.string	"ANY"
	.byte	0x8
	.value	0x805
	.long	0x12f3
	.uleb128 0x15
	.string	"any"
	.byte	0x8
	.byte	0x8
	.value	0x9f1
	.long	0x1355
	.uleb128 0x16
	.long	.LASF218
	.byte	0x8
	.value	0x9f2
	.long	0x6c
	.uleb128 0x16
	.long	.LASF219
	.byte	0x8
	.value	0x9f3
	.long	0x13ab
	.uleb128 0x16
	.long	.LASF220
	.byte	0x8
	.value	0x9f4
	.long	0x134
	.uleb128 0x16
	.long	.LASF221
	.byte	0x8
	.value	0x9f5
	.long	0x5e
	.uleb128 0x16
	.long	.LASF222
	.byte	0x8
	.value	0x9f6
	.long	0x7f
	.uleb128 0x16
	.long	.LASF223
	.byte	0x8
	.value	0x9f7
	.long	0x13d8
	.uleb128 0x16
	.long	.LASF224
	.byte	0x8
	.value	0x9f8
	.long	0x13d8
	.byte	0
	.uleb128 0x11
	.long	.LASF225
	.byte	0x8
	.value	0x808
	.long	0x1361
	.uleb128 0x14
	.long	.LASF226
	.byte	0x18
	.byte	0xb
	.value	0x4ed
	.long	0x1396
	.uleb128 0x13
	.long	.LASF227
	.byte	0xb
	.value	0x4ee
	.long	0x155c
	.byte	0
	.uleb128 0x13
	.long	.LASF228
	.byte	0xb
	.value	0x4ef
	.long	0x13f
	.byte	0x8
	.uleb128 0x13
	.long	.LASF229
	.byte	0xb
	.value	0x4f0
	.long	0x1590
	.byte	0x10
	.byte	0
	.uleb128 0xe
	.string	"U8"
	.byte	0x12
	.byte	0x85
	.long	0x2d
	.uleb128 0xe
	.string	"U16"
	.byte	0x12
	.byte	0x87
	.long	0x34
	.uleb128 0xe
	.string	"I32"
	.byte	0x12
	.byte	0x88
	.long	0x57
	.uleb128 0xe
	.string	"U32"
	.byte	0x12
	.byte	0x89
	.long	0x3b
	.uleb128 0x11
	.long	.LASF230
	.byte	0x12
	.value	0x209
	.long	0x13b6
	.uleb128 0x17
	.long	0x13d8
	.uleb128 0x18
	.long	0x6c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13cd
	.uleb128 0x6
	.byte	0x8
	.long	0x881
	.uleb128 0x8
	.long	0x7f
	.long	0x13f4
	.uleb128 0x9
	.long	0x65
	.byte	0
	.byte	0
	.uleb128 0x5
	.long	.LASF231
	.byte	0x13
	.byte	0x63
	.long	0x13ff
	.uleb128 0xf
	.long	.LASF233
	.uleb128 0x5
	.long	.LASF234
	.byte	0x13
	.byte	0x65
	.long	0x140f
	.uleb128 0x6
	.byte	0x8
	.long	0x13f4
	.uleb128 0xa
	.long	.LASF235
	.byte	0x4
	.byte	0xc
	.byte	0x13
	.long	0x1446
	.uleb128 0xb
	.long	.LASF228
	.byte	0xc
	.byte	0x14
	.long	0x1396
	.byte	0
	.uleb128 0xb
	.long	.LASF236
	.byte	0xc
	.byte	0x15
	.long	0x1396
	.byte	0x1
	.uleb128 0xb
	.long	.LASF237
	.byte	0xc
	.byte	0x16
	.long	0x13a0
	.byte	0x2
	.byte	0
	.uleb128 0x5
	.long	.LASF235
	.byte	0xc
	.byte	0x19
	.long	0x1415
	.uleb128 0x6
	.byte	0x8
	.long	0x13ab
	.uleb128 0x6
	.byte	0x8
	.long	0x1446
	.uleb128 0xf
	.long	.LASF238
	.uleb128 0x6
	.byte	0x8
	.long	0x145d
	.uleb128 0xf
	.long	.LASF239
	.uleb128 0x6
	.byte	0x8
	.long	0x1468
	.uleb128 0x6
	.byte	0x8
	.long	0x13b6
	.uleb128 0x8
	.long	0x1446
	.long	0x1489
	.uleb128 0x9
	.long	0x65
	.byte	0
	.byte	0
	.uleb128 0x5
	.long	.LASF81
	.byte	0xc
	.byte	0x33
	.long	0x979
	.uleb128 0x19
	.byte	0x4
	.byte	0xb
	.byte	0x2e
	.long	0x14fd
	.uleb128 0x1a
	.long	.LASF240
	.sleb128 0
	.uleb128 0x1a
	.long	.LASF241
	.sleb128 1
	.uleb128 0x1a
	.long	.LASF242
	.sleb128 2
	.uleb128 0x1a
	.long	.LASF243
	.sleb128 3
	.uleb128 0x1a
	.long	.LASF244
	.sleb128 4
	.uleb128 0x1a
	.long	.LASF245
	.sleb128 5
	.uleb128 0x1a
	.long	.LASF246
	.sleb128 6
	.uleb128 0x1a
	.long	.LASF247
	.sleb128 7
	.uleb128 0x1a
	.long	.LASF248
	.sleb128 8
	.uleb128 0x1a
	.long	.LASF249
	.sleb128 9
	.uleb128 0x1a
	.long	.LASF250
	.sleb128 10
	.uleb128 0x1a
	.long	.LASF251
	.sleb128 11
	.uleb128 0x1a
	.long	.LASF252
	.sleb128 12
	.uleb128 0x1a
	.long	.LASF253
	.sleb128 13
	.uleb128 0x1a
	.long	.LASF254
	.sleb128 14
	.uleb128 0x1a
	.long	.LASF255
	.sleb128 15
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xf82
	.uleb128 0x6
	.byte	0x8
	.long	0x1038
	.uleb128 0x6
	.byte	0x8
	.long	0xe54
	.uleb128 0x6
	.byte	0x8
	.long	0xee5
	.uleb128 0x6
	.byte	0x8
	.long	0x1135
	.uleb128 0x6
	.byte	0x8
	.long	0xc0e
	.uleb128 0x6
	.byte	0x8
	.long	0x8f7
	.uleb128 0x6
	.byte	0x8
	.long	0xa52
	.uleb128 0x11
	.long	.LASF256
	.byte	0xb
	.value	0x150
	.long	0x13a0
	.uleb128 0x6
	.byte	0x8
	.long	0x168
	.uleb128 0x17
	.long	0x154a
	.uleb128 0x18
	.long	0x154a
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x932
	.uleb128 0x6
	.byte	0x8
	.long	0x153f
	.uleb128 0x6
	.byte	0x8
	.long	0xaf9
	.uleb128 0x6
	.byte	0x8
	.long	0x8bc
	.uleb128 0x1b
	.byte	0x8
	.byte	0xb
	.value	0x184
	.long	0x1584
	.uleb128 0x16
	.long	.LASF257
	.byte	0xb
	.value	0x185
	.long	0x1584
	.uleb128 0x16
	.long	.LASF258
	.byte	0xb
	.value	0x186
	.long	0x6c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x124
	.uleb128 0x6
	.byte	0x8
	.long	0x1404
	.uleb128 0x6
	.byte	0x8
	.long	0x85a
	.uleb128 0x6
	.byte	0x8
	.long	0xb34
	.uleb128 0x5
	.long	.LASF259
	.byte	0x14
	.byte	0x13
	.long	0x8bc
	.uleb128 0xe
	.string	"PAD"
	.byte	0x14
	.byte	0x14
	.long	0x8bc
	.uleb128 0x5
	.long	.LASF260
	.byte	0x14
	.byte	0x1d
	.long	0x42
	.uleb128 0x19
	.byte	0x4
	.byte	0x14
	.byte	0x2b
	.long	0x15d8
	.uleb128 0x1a
	.long	.LASF261
	.sleb128 0
	.uleb128 0x1a
	.long	.LASF262
	.sleb128 1
	.uleb128 0x1a
	.long	.LASF263
	.sleb128 2
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x159c
	.uleb128 0x1c
	.long	.LASF1114
	.byte	0x4
	.byte	0x18
	.byte	0xf
	.long	0x1f52
	.uleb128 0x1a
	.long	.LASF264
	.sleb128 0
	.uleb128 0x1a
	.long	.LASF265
	.sleb128 1
	.uleb128 0x1a
	.long	.LASF266
	.sleb128 2
	.uleb128 0x1a
	.long	.LASF267
	.sleb128 3
	.uleb128 0x1a
	.long	.LASF268
	.sleb128 4
	.uleb128 0x1a
	.long	.LASF269
	.sleb128 5
	.uleb128 0x1a
	.long	.LASF270
	.sleb128 6
	.uleb128 0x1a
	.long	.LASF271
	.sleb128 7
	.uleb128 0x1a
	.long	.LASF272
	.sleb128 8
	.uleb128 0x1a
	.long	.LASF273
	.sleb128 9
	.uleb128 0x1a
	.long	.LASF274
	.sleb128 10
	.uleb128 0x1a
	.long	.LASF275
	.sleb128 11
	.uleb128 0x1a
	.long	.LASF276
	.sleb128 12
	.uleb128 0x1a
	.long	.LASF277
	.sleb128 13
	.uleb128 0x1a
	.long	.LASF278
	.sleb128 14
	.uleb128 0x1a
	.long	.LASF279
	.sleb128 15
	.uleb128 0x1a
	.long	.LASF280
	.sleb128 16
	.uleb128 0x1a
	.long	.LASF281
	.sleb128 17
	.uleb128 0x1a
	.long	.LASF282
	.sleb128 18
	.uleb128 0x1a
	.long	.LASF283
	.sleb128 19
	.uleb128 0x1a
	.long	.LASF284
	.sleb128 20
	.uleb128 0x1a
	.long	.LASF285
	.sleb128 21
	.uleb128 0x1a
	.long	.LASF286
	.sleb128 22
	.uleb128 0x1a
	.long	.LASF287
	.sleb128 23
	.uleb128 0x1a
	.long	.LASF288
	.sleb128 24
	.uleb128 0x1a
	.long	.LASF289
	.sleb128 25
	.uleb128 0x1a
	.long	.LASF290
	.sleb128 26
	.uleb128 0x1a
	.long	.LASF291
	.sleb128 27
	.uleb128 0x1a
	.long	.LASF292
	.sleb128 28
	.uleb128 0x1a
	.long	.LASF293
	.sleb128 29
	.uleb128 0x1a
	.long	.LASF294
	.sleb128 30
	.uleb128 0x1a
	.long	.LASF295
	.sleb128 31
	.uleb128 0x1a
	.long	.LASF296
	.sleb128 32
	.uleb128 0x1a
	.long	.LASF297
	.sleb128 33
	.uleb128 0x1a
	.long	.LASF298
	.sleb128 34
	.uleb128 0x1a
	.long	.LASF299
	.sleb128 35
	.uleb128 0x1a
	.long	.LASF300
	.sleb128 36
	.uleb128 0x1a
	.long	.LASF301
	.sleb128 37
	.uleb128 0x1a
	.long	.LASF302
	.sleb128 38
	.uleb128 0x1a
	.long	.LASF303
	.sleb128 39
	.uleb128 0x1a
	.long	.LASF304
	.sleb128 40
	.uleb128 0x1a
	.long	.LASF305
	.sleb128 41
	.uleb128 0x1a
	.long	.LASF306
	.sleb128 42
	.uleb128 0x1a
	.long	.LASF307
	.sleb128 43
	.uleb128 0x1a
	.long	.LASF308
	.sleb128 44
	.uleb128 0x1a
	.long	.LASF309
	.sleb128 45
	.uleb128 0x1a
	.long	.LASF310
	.sleb128 46
	.uleb128 0x1a
	.long	.LASF311
	.sleb128 47
	.uleb128 0x1a
	.long	.LASF312
	.sleb128 48
	.uleb128 0x1a
	.long	.LASF313
	.sleb128 49
	.uleb128 0x1a
	.long	.LASF314
	.sleb128 50
	.uleb128 0x1a
	.long	.LASF315
	.sleb128 51
	.uleb128 0x1a
	.long	.LASF316
	.sleb128 52
	.uleb128 0x1a
	.long	.LASF317
	.sleb128 53
	.uleb128 0x1a
	.long	.LASF318
	.sleb128 54
	.uleb128 0x1a
	.long	.LASF319
	.sleb128 55
	.uleb128 0x1a
	.long	.LASF320
	.sleb128 56
	.uleb128 0x1a
	.long	.LASF321
	.sleb128 57
	.uleb128 0x1a
	.long	.LASF322
	.sleb128 58
	.uleb128 0x1a
	.long	.LASF323
	.sleb128 59
	.uleb128 0x1a
	.long	.LASF324
	.sleb128 60
	.uleb128 0x1a
	.long	.LASF325
	.sleb128 61
	.uleb128 0x1a
	.long	.LASF326
	.sleb128 62
	.uleb128 0x1a
	.long	.LASF327
	.sleb128 63
	.uleb128 0x1a
	.long	.LASF328
	.sleb128 64
	.uleb128 0x1a
	.long	.LASF329
	.sleb128 65
	.uleb128 0x1a
	.long	.LASF330
	.sleb128 66
	.uleb128 0x1a
	.long	.LASF331
	.sleb128 67
	.uleb128 0x1a
	.long	.LASF332
	.sleb128 68
	.uleb128 0x1a
	.long	.LASF333
	.sleb128 69
	.uleb128 0x1a
	.long	.LASF334
	.sleb128 70
	.uleb128 0x1a
	.long	.LASF335
	.sleb128 71
	.uleb128 0x1a
	.long	.LASF336
	.sleb128 72
	.uleb128 0x1a
	.long	.LASF337
	.sleb128 73
	.uleb128 0x1a
	.long	.LASF338
	.sleb128 74
	.uleb128 0x1a
	.long	.LASF339
	.sleb128 75
	.uleb128 0x1a
	.long	.LASF340
	.sleb128 76
	.uleb128 0x1a
	.long	.LASF341
	.sleb128 77
	.uleb128 0x1a
	.long	.LASF342
	.sleb128 78
	.uleb128 0x1a
	.long	.LASF343
	.sleb128 79
	.uleb128 0x1a
	.long	.LASF344
	.sleb128 80
	.uleb128 0x1a
	.long	.LASF345
	.sleb128 81
	.uleb128 0x1a
	.long	.LASF346
	.sleb128 82
	.uleb128 0x1a
	.long	.LASF347
	.sleb128 83
	.uleb128 0x1a
	.long	.LASF348
	.sleb128 84
	.uleb128 0x1a
	.long	.LASF349
	.sleb128 85
	.uleb128 0x1a
	.long	.LASF350
	.sleb128 86
	.uleb128 0x1a
	.long	.LASF351
	.sleb128 87
	.uleb128 0x1a
	.long	.LASF352
	.sleb128 88
	.uleb128 0x1a
	.long	.LASF353
	.sleb128 89
	.uleb128 0x1a
	.long	.LASF354
	.sleb128 90
	.uleb128 0x1a
	.long	.LASF355
	.sleb128 91
	.uleb128 0x1a
	.long	.LASF356
	.sleb128 92
	.uleb128 0x1a
	.long	.LASF357
	.sleb128 93
	.uleb128 0x1a
	.long	.LASF358
	.sleb128 94
	.uleb128 0x1a
	.long	.LASF359
	.sleb128 95
	.uleb128 0x1a
	.long	.LASF360
	.sleb128 96
	.uleb128 0x1a
	.long	.LASF361
	.sleb128 97
	.uleb128 0x1a
	.long	.LASF362
	.sleb128 98
	.uleb128 0x1a
	.long	.LASF363
	.sleb128 99
	.uleb128 0x1a
	.long	.LASF364
	.sleb128 100
	.uleb128 0x1a
	.long	.LASF365
	.sleb128 101
	.uleb128 0x1a
	.long	.LASF366
	.sleb128 102
	.uleb128 0x1a
	.long	.LASF367
	.sleb128 103
	.uleb128 0x1a
	.long	.LASF368
	.sleb128 104
	.uleb128 0x1a
	.long	.LASF369
	.sleb128 105
	.uleb128 0x1a
	.long	.LASF370
	.sleb128 106
	.uleb128 0x1a
	.long	.LASF371
	.sleb128 107
	.uleb128 0x1a
	.long	.LASF372
	.sleb128 108
	.uleb128 0x1a
	.long	.LASF373
	.sleb128 109
	.uleb128 0x1a
	.long	.LASF374
	.sleb128 110
	.uleb128 0x1a
	.long	.LASF375
	.sleb128 111
	.uleb128 0x1a
	.long	.LASF376
	.sleb128 112
	.uleb128 0x1a
	.long	.LASF377
	.sleb128 113
	.uleb128 0x1a
	.long	.LASF378
	.sleb128 114
	.uleb128 0x1a
	.long	.LASF379
	.sleb128 115
	.uleb128 0x1a
	.long	.LASF380
	.sleb128 116
	.uleb128 0x1a
	.long	.LASF381
	.sleb128 117
	.uleb128 0x1a
	.long	.LASF382
	.sleb128 118
	.uleb128 0x1a
	.long	.LASF383
	.sleb128 119
	.uleb128 0x1a
	.long	.LASF384
	.sleb128 120
	.uleb128 0x1a
	.long	.LASF385
	.sleb128 121
	.uleb128 0x1a
	.long	.LASF386
	.sleb128 122
	.uleb128 0x1a
	.long	.LASF387
	.sleb128 123
	.uleb128 0x1a
	.long	.LASF388
	.sleb128 124
	.uleb128 0x1a
	.long	.LASF389
	.sleb128 125
	.uleb128 0x1a
	.long	.LASF390
	.sleb128 126
	.uleb128 0x1a
	.long	.LASF391
	.sleb128 127
	.uleb128 0x1a
	.long	.LASF392
	.sleb128 128
	.uleb128 0x1a
	.long	.LASF393
	.sleb128 129
	.uleb128 0x1a
	.long	.LASF394
	.sleb128 130
	.uleb128 0x1a
	.long	.LASF395
	.sleb128 131
	.uleb128 0x1a
	.long	.LASF396
	.sleb128 132
	.uleb128 0x1a
	.long	.LASF397
	.sleb128 133
	.uleb128 0x1a
	.long	.LASF398
	.sleb128 134
	.uleb128 0x1a
	.long	.LASF399
	.sleb128 135
	.uleb128 0x1a
	.long	.LASF400
	.sleb128 136
	.uleb128 0x1a
	.long	.LASF401
	.sleb128 137
	.uleb128 0x1a
	.long	.LASF402
	.sleb128 138
	.uleb128 0x1a
	.long	.LASF403
	.sleb128 139
	.uleb128 0x1a
	.long	.LASF404
	.sleb128 140
	.uleb128 0x1a
	.long	.LASF405
	.sleb128 141
	.uleb128 0x1a
	.long	.LASF406
	.sleb128 142
	.uleb128 0x1a
	.long	.LASF407
	.sleb128 143
	.uleb128 0x1a
	.long	.LASF408
	.sleb128 144
	.uleb128 0x1a
	.long	.LASF409
	.sleb128 145
	.uleb128 0x1a
	.long	.LASF410
	.sleb128 146
	.uleb128 0x1a
	.long	.LASF411
	.sleb128 147
	.uleb128 0x1a
	.long	.LASF412
	.sleb128 148
	.uleb128 0x1a
	.long	.LASF413
	.sleb128 149
	.uleb128 0x1a
	.long	.LASF414
	.sleb128 150
	.uleb128 0x1a
	.long	.LASF415
	.sleb128 151
	.uleb128 0x1a
	.long	.LASF416
	.sleb128 152
	.uleb128 0x1a
	.long	.LASF417
	.sleb128 153
	.uleb128 0x1a
	.long	.LASF418
	.sleb128 154
	.uleb128 0x1a
	.long	.LASF419
	.sleb128 155
	.uleb128 0x1a
	.long	.LASF420
	.sleb128 156
	.uleb128 0x1a
	.long	.LASF421
	.sleb128 157
	.uleb128 0x1a
	.long	.LASF422
	.sleb128 158
	.uleb128 0x1a
	.long	.LASF423
	.sleb128 159
	.uleb128 0x1a
	.long	.LASF424
	.sleb128 160
	.uleb128 0x1a
	.long	.LASF425
	.sleb128 161
	.uleb128 0x1a
	.long	.LASF426
	.sleb128 162
	.uleb128 0x1a
	.long	.LASF427
	.sleb128 163
	.uleb128 0x1a
	.long	.LASF428
	.sleb128 164
	.uleb128 0x1a
	.long	.LASF429
	.sleb128 165
	.uleb128 0x1a
	.long	.LASF430
	.sleb128 166
	.uleb128 0x1a
	.long	.LASF431
	.sleb128 167
	.uleb128 0x1a
	.long	.LASF432
	.sleb128 168
	.uleb128 0x1a
	.long	.LASF433
	.sleb128 169
	.uleb128 0x1a
	.long	.LASF434
	.sleb128 170
	.uleb128 0x1a
	.long	.LASF435
	.sleb128 171
	.uleb128 0x1a
	.long	.LASF436
	.sleb128 172
	.uleb128 0x1a
	.long	.LASF437
	.sleb128 173
	.uleb128 0x1a
	.long	.LASF438
	.sleb128 174
	.uleb128 0x1a
	.long	.LASF439
	.sleb128 175
	.uleb128 0x1a
	.long	.LASF440
	.sleb128 176
	.uleb128 0x1a
	.long	.LASF441
	.sleb128 177
	.uleb128 0x1a
	.long	.LASF442
	.sleb128 178
	.uleb128 0x1a
	.long	.LASF443
	.sleb128 179
	.uleb128 0x1a
	.long	.LASF444
	.sleb128 180
	.uleb128 0x1a
	.long	.LASF445
	.sleb128 181
	.uleb128 0x1a
	.long	.LASF446
	.sleb128 182
	.uleb128 0x1a
	.long	.LASF447
	.sleb128 183
	.uleb128 0x1a
	.long	.LASF448
	.sleb128 184
	.uleb128 0x1a
	.long	.LASF449
	.sleb128 185
	.uleb128 0x1a
	.long	.LASF450
	.sleb128 186
	.uleb128 0x1a
	.long	.LASF451
	.sleb128 187
	.uleb128 0x1a
	.long	.LASF452
	.sleb128 188
	.uleb128 0x1a
	.long	.LASF453
	.sleb128 189
	.uleb128 0x1a
	.long	.LASF454
	.sleb128 190
	.uleb128 0x1a
	.long	.LASF455
	.sleb128 191
	.uleb128 0x1a
	.long	.LASF456
	.sleb128 192
	.uleb128 0x1a
	.long	.LASF457
	.sleb128 193
	.uleb128 0x1a
	.long	.LASF458
	.sleb128 194
	.uleb128 0x1a
	.long	.LASF459
	.sleb128 195
	.uleb128 0x1a
	.long	.LASF460
	.sleb128 196
	.uleb128 0x1a
	.long	.LASF461
	.sleb128 197
	.uleb128 0x1a
	.long	.LASF462
	.sleb128 198
	.uleb128 0x1a
	.long	.LASF463
	.sleb128 199
	.uleb128 0x1a
	.long	.LASF464
	.sleb128 200
	.uleb128 0x1a
	.long	.LASF465
	.sleb128 201
	.uleb128 0x1a
	.long	.LASF466
	.sleb128 202
	.uleb128 0x1a
	.long	.LASF467
	.sleb128 203
	.uleb128 0x1a
	.long	.LASF468
	.sleb128 204
	.uleb128 0x1a
	.long	.LASF469
	.sleb128 205
	.uleb128 0x1a
	.long	.LASF470
	.sleb128 206
	.uleb128 0x1a
	.long	.LASF471
	.sleb128 207
	.uleb128 0x1a
	.long	.LASF472
	.sleb128 208
	.uleb128 0x1a
	.long	.LASF473
	.sleb128 209
	.uleb128 0x1a
	.long	.LASF474
	.sleb128 210
	.uleb128 0x1a
	.long	.LASF475
	.sleb128 211
	.uleb128 0x1a
	.long	.LASF476
	.sleb128 212
	.uleb128 0x1a
	.long	.LASF477
	.sleb128 213
	.uleb128 0x1a
	.long	.LASF478
	.sleb128 214
	.uleb128 0x1a
	.long	.LASF479
	.sleb128 215
	.uleb128 0x1a
	.long	.LASF480
	.sleb128 216
	.uleb128 0x1a
	.long	.LASF481
	.sleb128 217
	.uleb128 0x1a
	.long	.LASF482
	.sleb128 218
	.uleb128 0x1a
	.long	.LASF483
	.sleb128 219
	.uleb128 0x1a
	.long	.LASF484
	.sleb128 220
	.uleb128 0x1a
	.long	.LASF485
	.sleb128 221
	.uleb128 0x1a
	.long	.LASF486
	.sleb128 222
	.uleb128 0x1a
	.long	.LASF487
	.sleb128 223
	.uleb128 0x1a
	.long	.LASF488
	.sleb128 224
	.uleb128 0x1a
	.long	.LASF489
	.sleb128 225
	.uleb128 0x1a
	.long	.LASF490
	.sleb128 226
	.uleb128 0x1a
	.long	.LASF491
	.sleb128 227
	.uleb128 0x1a
	.long	.LASF492
	.sleb128 228
	.uleb128 0x1a
	.long	.LASF493
	.sleb128 229
	.uleb128 0x1a
	.long	.LASF494
	.sleb128 230
	.uleb128 0x1a
	.long	.LASF495
	.sleb128 231
	.uleb128 0x1a
	.long	.LASF496
	.sleb128 232
	.uleb128 0x1a
	.long	.LASF497
	.sleb128 233
	.uleb128 0x1a
	.long	.LASF498
	.sleb128 234
	.uleb128 0x1a
	.long	.LASF499
	.sleb128 235
	.uleb128 0x1a
	.long	.LASF500
	.sleb128 236
	.uleb128 0x1a
	.long	.LASF501
	.sleb128 237
	.uleb128 0x1a
	.long	.LASF502
	.sleb128 238
	.uleb128 0x1a
	.long	.LASF503
	.sleb128 239
	.uleb128 0x1a
	.long	.LASF504
	.sleb128 240
	.uleb128 0x1a
	.long	.LASF505
	.sleb128 241
	.uleb128 0x1a
	.long	.LASF506
	.sleb128 242
	.uleb128 0x1a
	.long	.LASF507
	.sleb128 243
	.uleb128 0x1a
	.long	.LASF508
	.sleb128 244
	.uleb128 0x1a
	.long	.LASF509
	.sleb128 245
	.uleb128 0x1a
	.long	.LASF510
	.sleb128 246
	.uleb128 0x1a
	.long	.LASF511
	.sleb128 247
	.uleb128 0x1a
	.long	.LASF512
	.sleb128 248
	.uleb128 0x1a
	.long	.LASF513
	.sleb128 249
	.uleb128 0x1a
	.long	.LASF514
	.sleb128 250
	.uleb128 0x1a
	.long	.LASF515
	.sleb128 251
	.uleb128 0x1a
	.long	.LASF516
	.sleb128 252
	.uleb128 0x1a
	.long	.LASF517
	.sleb128 253
	.uleb128 0x1a
	.long	.LASF518
	.sleb128 254
	.uleb128 0x1a
	.long	.LASF519
	.sleb128 255
	.uleb128 0x1a
	.long	.LASF520
	.sleb128 256
	.uleb128 0x1a
	.long	.LASF521
	.sleb128 257
	.uleb128 0x1a
	.long	.LASF522
	.sleb128 258
	.uleb128 0x1a
	.long	.LASF523
	.sleb128 259
	.uleb128 0x1a
	.long	.LASF524
	.sleb128 260
	.uleb128 0x1a
	.long	.LASF525
	.sleb128 261
	.uleb128 0x1a
	.long	.LASF526
	.sleb128 262
	.uleb128 0x1a
	.long	.LASF527
	.sleb128 263
	.uleb128 0x1a
	.long	.LASF528
	.sleb128 264
	.uleb128 0x1a
	.long	.LASF529
	.sleb128 265
	.uleb128 0x1a
	.long	.LASF530
	.sleb128 266
	.uleb128 0x1a
	.long	.LASF531
	.sleb128 267
	.uleb128 0x1a
	.long	.LASF532
	.sleb128 268
	.uleb128 0x1a
	.long	.LASF533
	.sleb128 269
	.uleb128 0x1a
	.long	.LASF534
	.sleb128 270
	.uleb128 0x1a
	.long	.LASF535
	.sleb128 271
	.uleb128 0x1a
	.long	.LASF536
	.sleb128 272
	.uleb128 0x1a
	.long	.LASF537
	.sleb128 273
	.uleb128 0x1a
	.long	.LASF538
	.sleb128 274
	.uleb128 0x1a
	.long	.LASF539
	.sleb128 275
	.uleb128 0x1a
	.long	.LASF540
	.sleb128 276
	.uleb128 0x1a
	.long	.LASF541
	.sleb128 277
	.uleb128 0x1a
	.long	.LASF542
	.sleb128 278
	.uleb128 0x1a
	.long	.LASF543
	.sleb128 279
	.uleb128 0x1a
	.long	.LASF544
	.sleb128 280
	.uleb128 0x1a
	.long	.LASF545
	.sleb128 281
	.uleb128 0x1a
	.long	.LASF546
	.sleb128 282
	.uleb128 0x1a
	.long	.LASF547
	.sleb128 283
	.uleb128 0x1a
	.long	.LASF548
	.sleb128 284
	.uleb128 0x1a
	.long	.LASF549
	.sleb128 285
	.uleb128 0x1a
	.long	.LASF550
	.sleb128 286
	.uleb128 0x1a
	.long	.LASF551
	.sleb128 287
	.uleb128 0x1a
	.long	.LASF552
	.sleb128 288
	.uleb128 0x1a
	.long	.LASF553
	.sleb128 289
	.uleb128 0x1a
	.long	.LASF554
	.sleb128 290
	.uleb128 0x1a
	.long	.LASF555
	.sleb128 291
	.uleb128 0x1a
	.long	.LASF556
	.sleb128 292
	.uleb128 0x1a
	.long	.LASF557
	.sleb128 293
	.uleb128 0x1a
	.long	.LASF558
	.sleb128 294
	.uleb128 0x1a
	.long	.LASF559
	.sleb128 295
	.uleb128 0x1a
	.long	.LASF560
	.sleb128 296
	.uleb128 0x1a
	.long	.LASF561
	.sleb128 297
	.uleb128 0x1a
	.long	.LASF562
	.sleb128 298
	.uleb128 0x1a
	.long	.LASF563
	.sleb128 299
	.uleb128 0x1a
	.long	.LASF564
	.sleb128 300
	.uleb128 0x1a
	.long	.LASF565
	.sleb128 301
	.uleb128 0x1a
	.long	.LASF566
	.sleb128 302
	.uleb128 0x1a
	.long	.LASF567
	.sleb128 303
	.uleb128 0x1a
	.long	.LASF568
	.sleb128 304
	.uleb128 0x1a
	.long	.LASF569
	.sleb128 305
	.uleb128 0x1a
	.long	.LASF570
	.sleb128 306
	.uleb128 0x1a
	.long	.LASF571
	.sleb128 307
	.uleb128 0x1a
	.long	.LASF572
	.sleb128 308
	.uleb128 0x1a
	.long	.LASF573
	.sleb128 309
	.uleb128 0x1a
	.long	.LASF574
	.sleb128 310
	.uleb128 0x1a
	.long	.LASF575
	.sleb128 311
	.uleb128 0x1a
	.long	.LASF576
	.sleb128 312
	.uleb128 0x1a
	.long	.LASF577
	.sleb128 313
	.uleb128 0x1a
	.long	.LASF578
	.sleb128 314
	.uleb128 0x1a
	.long	.LASF579
	.sleb128 315
	.uleb128 0x1a
	.long	.LASF580
	.sleb128 316
	.uleb128 0x1a
	.long	.LASF581
	.sleb128 317
	.uleb128 0x1a
	.long	.LASF582
	.sleb128 318
	.uleb128 0x1a
	.long	.LASF583
	.sleb128 319
	.uleb128 0x1a
	.long	.LASF584
	.sleb128 320
	.uleb128 0x1a
	.long	.LASF585
	.sleb128 321
	.uleb128 0x1a
	.long	.LASF586
	.sleb128 322
	.uleb128 0x1a
	.long	.LASF587
	.sleb128 323
	.uleb128 0x1a
	.long	.LASF588
	.sleb128 324
	.uleb128 0x1a
	.long	.LASF589
	.sleb128 325
	.uleb128 0x1a
	.long	.LASF590
	.sleb128 326
	.uleb128 0x1a
	.long	.LASF591
	.sleb128 327
	.uleb128 0x1a
	.long	.LASF592
	.sleb128 328
	.uleb128 0x1a
	.long	.LASF593
	.sleb128 329
	.uleb128 0x1a
	.long	.LASF594
	.sleb128 330
	.uleb128 0x1a
	.long	.LASF595
	.sleb128 331
	.uleb128 0x1a
	.long	.LASF596
	.sleb128 332
	.uleb128 0x1a
	.long	.LASF597
	.sleb128 333
	.uleb128 0x1a
	.long	.LASF598
	.sleb128 334
	.uleb128 0x1a
	.long	.LASF599
	.sleb128 335
	.uleb128 0x1a
	.long	.LASF600
	.sleb128 336
	.uleb128 0x1a
	.long	.LASF601
	.sleb128 337
	.uleb128 0x1a
	.long	.LASF602
	.sleb128 338
	.uleb128 0x1a
	.long	.LASF603
	.sleb128 339
	.uleb128 0x1a
	.long	.LASF604
	.sleb128 340
	.uleb128 0x1a
	.long	.LASF605
	.sleb128 341
	.uleb128 0x1a
	.long	.LASF606
	.sleb128 342
	.uleb128 0x1a
	.long	.LASF607
	.sleb128 343
	.uleb128 0x1a
	.long	.LASF608
	.sleb128 344
	.uleb128 0x1a
	.long	.LASF609
	.sleb128 345
	.uleb128 0x1a
	.long	.LASF610
	.sleb128 346
	.uleb128 0x1a
	.long	.LASF611
	.sleb128 347
	.uleb128 0x1a
	.long	.LASF612
	.sleb128 348
	.uleb128 0x1a
	.long	.LASF613
	.sleb128 349
	.uleb128 0x1a
	.long	.LASF614
	.sleb128 350
	.uleb128 0x1a
	.long	.LASF615
	.sleb128 351
	.uleb128 0x1a
	.long	.LASF616
	.sleb128 352
	.byte	0
	.uleb128 0x1d
	.long	0x1539
	.uleb128 0x6
	.byte	0x8
	.long	0x1f52
	.uleb128 0x6
	.byte	0x8
	.long	0x4f0
	.uleb128 0x6
	.byte	0x8
	.long	0x96d
	.uleb128 0xa
	.long	.LASF617
	.byte	0x40
	.byte	0xa
	.byte	0x70
	.long	0x1fe0
	.uleb128 0x1e
	.string	"cv"
	.byte	0xa
	.byte	0x71
	.long	0x154a
	.byte	0
	.uleb128 0x1e
	.string	"gv"
	.byte	0xa
	.byte	0x72
	.long	0x1556
	.byte	0x8
	.uleb128 0xb
	.long	.LASF618
	.byte	0xa
	.byte	0x73
	.long	0x1556
	.byte	0x10
	.uleb128 0xb
	.long	.LASF619
	.byte	0xa
	.byte	0x75
	.long	0x155c
	.byte	0x18
	.uleb128 0xb
	.long	.LASF620
	.byte	0xa
	.byte	0x77
	.long	0x155c
	.byte	0x20
	.uleb128 0xb
	.long	.LASF621
	.byte	0xa
	.byte	0x78
	.long	0x5e
	.byte	0x28
	.uleb128 0xb
	.long	.LASF622
	.byte	0xa
	.byte	0x79
	.long	0x1396
	.byte	0x30
	.uleb128 0xb
	.long	.LASF623
	.byte	0xa
	.byte	0x7a
	.long	0x1396
	.byte	0x31
	.uleb128 0xb
	.long	.LASF624
	.byte	0xa
	.byte	0x7b
	.long	0x1fe0
	.byte	0x38
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x15a7
	.uleb128 0xa
	.long	.LASF625
	.byte	0x28
	.byte	0xa
	.byte	0xd3
	.long	0x203a
	.uleb128 0xb
	.long	.LASF626
	.byte	0xa
	.byte	0xd4
	.long	0x13ab
	.byte	0
	.uleb128 0xb
	.long	.LASF627
	.byte	0xa
	.byte	0xd5
	.long	0x13ab
	.byte	0x4
	.uleb128 0xb
	.long	.LASF628
	.byte	0xa
	.byte	0xd6
	.long	0x13de
	.byte	0x8
	.uleb128 0xb
	.long	.LASF629
	.byte	0xa
	.byte	0xd7
	.long	0x1539
	.byte	0x10
	.uleb128 0xb
	.long	.LASF630
	.byte	0xa
	.byte	0xd8
	.long	0x13de
	.byte	0x18
	.uleb128 0x1e
	.string	"cv"
	.byte	0xa
	.byte	0xd9
	.long	0x154a
	.byte	0x20
	.byte	0
	.uleb128 0xa
	.long	.LASF631
	.byte	0x58
	.byte	0xa
	.byte	0xf0
	.long	0x20cc
	.uleb128 0xb
	.long	.LASF632
	.byte	0xa
	.byte	0xf1
	.long	0x79
	.byte	0
	.uleb128 0xb
	.long	.LASF633
	.byte	0xa
	.byte	0xf2
	.long	0x13ab
	.byte	0x8
	.uleb128 0xb
	.long	.LASF634
	.byte	0xa
	.byte	0xf3
	.long	0x1539
	.byte	0x10
	.uleb128 0xb
	.long	.LASF635
	.byte	0xa
	.byte	0xf4
	.long	0x1539
	.byte	0x18
	.uleb128 0xb
	.long	.LASF636
	.byte	0xa
	.byte	0xf5
	.long	0x1539
	.byte	0x20
	.uleb128 0xb
	.long	.LASF637
	.byte	0xa
	.byte	0xfa
	.long	0x20cc
	.byte	0x28
	.uleb128 0xb
	.long	.LASF638
	.byte	0xa
	.byte	0xfc
	.long	0x13de
	.byte	0x30
	.uleb128 0xb
	.long	.LASF639
	.byte	0xa
	.byte	0xfd
	.long	0x13de
	.byte	0x38
	.uleb128 0xb
	.long	.LASF640
	.byte	0xa
	.byte	0xfe
	.long	0x155c
	.byte	0x40
	.uleb128 0xb
	.long	.LASF641
	.byte	0xa
	.byte	0xff
	.long	0x134
	.byte	0x48
	.uleb128 0x13
	.long	.LASF642
	.byte	0xa
	.value	0x100
	.long	0x134
	.byte	0x50
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13de
	.uleb128 0x1b
	.byte	0x58
	.byte	0xa
	.value	0x139
	.long	0x2100
	.uleb128 0x16
	.long	.LASF643
	.byte	0xa
	.value	0x13a
	.long	0x1f69
	.uleb128 0x16
	.long	.LASF644
	.byte	0xa
	.value	0x13b
	.long	0x1fe6
	.uleb128 0x16
	.long	.LASF645
	.byte	0xa
	.value	0x13c
	.long	0x203a
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1df
	.uleb128 0x14
	.long	.LASF646
	.byte	0x58
	.byte	0xa
	.value	0x16e
	.long	0x21ca
	.uleb128 0x13
	.long	.LASF647
	.byte	0xa
	.value	0x16f
	.long	0x13ab
	.byte	0
	.uleb128 0x13
	.long	.LASF648
	.byte	0xa
	.value	0x170
	.long	0x13ab
	.byte	0x4
	.uleb128 0x13
	.long	.LASF649
	.byte	0xa
	.value	0x171
	.long	0x13ab
	.byte	0x8
	.uleb128 0x13
	.long	.LASF650
	.byte	0xa
	.value	0x172
	.long	0x13ab
	.byte	0xc
	.uleb128 0x13
	.long	.LASF651
	.byte	0xa
	.value	0x173
	.long	0x7f
	.byte	0x10
	.uleb128 0x13
	.long	.LASF652
	.byte	0xa
	.value	0x174
	.long	0x7f
	.byte	0x11
	.uleb128 0x13
	.long	.LASF653
	.byte	0xa
	.value	0x175
	.long	0x79
	.byte	0x18
	.uleb128 0x13
	.long	.LASF654
	.byte	0xa
	.value	0x176
	.long	0x13de
	.byte	0x20
	.uleb128 0x13
	.long	.LASF655
	.byte	0xa
	.value	0x177
	.long	0x13de
	.byte	0x28
	.uleb128 0x13
	.long	.LASF656
	.byte	0xa
	.value	0x178
	.long	0x79
	.byte	0x30
	.uleb128 0x13
	.long	.LASF657
	.byte	0xa
	.value	0x179
	.long	0x79
	.byte	0x38
	.uleb128 0x13
	.long	.LASF658
	.byte	0xa
	.value	0x17a
	.long	0x79
	.byte	0x40
	.uleb128 0x13
	.long	.LASF659
	.byte	0xa
	.value	0x17b
	.long	0x6c
	.byte	0x48
	.uleb128 0x13
	.long	.LASF660
	.byte	0xa
	.value	0x17c
	.long	0x1f63
	.byte	0x50
	.byte	0
	.uleb128 0x1b
	.byte	0x88
	.byte	0xa
	.value	0x1a4
	.long	0x21ec
	.uleb128 0x16
	.long	.LASF661
	.byte	0xa
	.value	0x1a5
	.long	0xb98
	.uleb128 0x16
	.long	.LASF662
	.byte	0xa
	.value	0x1a6
	.long	0x2106
	.byte	0
	.uleb128 0x14
	.long	.LASF663
	.byte	0x38
	.byte	0xa
	.value	0x20c
	.long	0x2262
	.uleb128 0x13
	.long	.LASF664
	.byte	0xa
	.value	0x20d
	.long	0x155c
	.byte	0
	.uleb128 0x13
	.long	.LASF665
	.byte	0xa
	.value	0x20e
	.long	0x2262
	.byte	0x8
	.uleb128 0x13
	.long	.LASF666
	.byte	0xa
	.value	0x20f
	.long	0x13ab
	.byte	0x10
	.uleb128 0x13
	.long	.LASF667
	.byte	0xa
	.value	0x210
	.long	0x13ab
	.byte	0x14
	.uleb128 0x13
	.long	.LASF668
	.byte	0xa
	.value	0x211
	.long	0x13ab
	.byte	0x18
	.uleb128 0x13
	.long	.LASF669
	.byte	0xa
	.value	0x212
	.long	0x2268
	.byte	0x20
	.uleb128 0x13
	.long	.LASF670
	.byte	0xa
	.value	0x213
	.long	0x2268
	.byte	0x28
	.uleb128 0x13
	.long	.LASF671
	.byte	0xa
	.value	0x214
	.long	0x13ab
	.byte	0x30
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xb64
	.uleb128 0x6
	.byte	0x8
	.long	0x21ec
	.uleb128 0x11
	.long	.LASF672
	.byte	0xa
	.value	0x219
	.long	0x21ec
	.uleb128 0xe
	.string	"HE"
	.byte	0x10
	.byte	0xc
	.long	0x2284
	.uleb128 0x12
	.string	"he"
	.byte	0x18
	.byte	0x10
	.byte	0x10
	.long	0x22b4
	.uleb128 0xb
	.long	.LASF673
	.byte	0x10
	.byte	0x11
	.long	0x22f0
	.byte	0
	.uleb128 0xb
	.long	.LASF674
	.byte	0x10
	.byte	0x12
	.long	0x22f6
	.byte	0x8
	.uleb128 0xb
	.long	.LASF675
	.byte	0x10
	.byte	0x13
	.long	0x13de
	.byte	0x10
	.byte	0
	.uleb128 0xe
	.string	"HEK"
	.byte	0x10
	.byte	0xd
	.long	0x22bf
	.uleb128 0x12
	.string	"hek"
	.byte	0xc
	.byte	0x10
	.byte	0x17
	.long	0x22f0
	.uleb128 0xb
	.long	.LASF676
	.byte	0x10
	.byte	0x18
	.long	0x13b6
	.byte	0
	.uleb128 0xb
	.long	.LASF677
	.byte	0x10
	.byte	0x19
	.long	0x13ab
	.byte	0x4
	.uleb128 0xb
	.long	.LASF678
	.byte	0x10
	.byte	0x1a
	.long	0x13e4
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x227a
	.uleb128 0x6
	.byte	0x8
	.long	0x22b4
	.uleb128 0x1f
	.long	0x57
	.long	0x2310
	.uleb128 0x18
	.long	0x13de
	.uleb128 0x18
	.long	0x151b
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x22fc
	.uleb128 0x1f
	.long	0x13b6
	.long	0x232a
	.uleb128 0x18
	.long	0x13de
	.uleb128 0x18
	.long	0x151b
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2316
	.uleb128 0x1f
	.long	0x57
	.long	0x2353
	.uleb128 0x18
	.long	0x13de
	.uleb128 0x18
	.long	0x151b
	.uleb128 0x18
	.long	0x13de
	.uleb128 0x18
	.long	0x112
	.uleb128 0x18
	.long	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2330
	.uleb128 0x1f
	.long	0x57
	.long	0x236d
	.uleb128 0x18
	.long	0x151b
	.uleb128 0x18
	.long	0x236d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1355
	.uleb128 0x6
	.byte	0x8
	.long	0x2359
	.uleb128 0x6
	.byte	0x8
	.long	0x127a
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF679
	.uleb128 0x11
	.long	.LASF680
	.byte	0x8
	.value	0xcc1
	.long	0x2392
	.uleb128 0x6
	.byte	0x8
	.long	0x2398
	.uleb128 0x1d
	.long	0x57
	.uleb128 0x8
	.long	0x1f57
	.long	0x23a8
	.uleb128 0x20
	.byte	0
	.uleb128 0x21
	.byte	0x4
	.byte	0x8
	.value	0xdfd
	.long	0x23e2
	.uleb128 0x1a
	.long	.LASF681
	.sleb128 0
	.uleb128 0x1a
	.long	.LASF682
	.sleb128 1
	.uleb128 0x1a
	.long	.LASF683
	.sleb128 2
	.uleb128 0x1a
	.long	.LASF684
	.sleb128 3
	.uleb128 0x1a
	.long	.LASF685
	.sleb128 4
	.uleb128 0x1a
	.long	.LASF686
	.sleb128 5
	.uleb128 0x1a
	.long	.LASF687
	.sleb128 6
	.uleb128 0x1a
	.long	.LASF688
	.sleb128 7
	.byte	0
	.uleb128 0x11
	.long	.LASF689
	.byte	0x8
	.value	0xe61
	.long	0x23ee
	.uleb128 0x6
	.byte	0x8
	.long	0x23f4
	.uleb128 0x17
	.long	0x23ff
	.uleb128 0x18
	.long	0x1539
	.byte	0
	.uleb128 0x11
	.long	.LASF690
	.byte	0x8
	.value	0xe62
	.long	0x240b
	.uleb128 0x6
	.byte	0x8
	.long	0x2411
	.uleb128 0x1f
	.long	0x242a
	.long	0x242a
	.uleb128 0x18
	.long	0x79
	.uleb128 0x18
	.long	0x79
	.uleb128 0x18
	.long	0x1f5d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1489
	.uleb128 0x11
	.long	.LASF691
	.byte	0x8
	.value	0xe6b
	.long	0x243c
	.uleb128 0x6
	.byte	0x8
	.long	0x2442
	.uleb128 0x17
	.long	0x244d
	.uleb128 0x18
	.long	0x244d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x979
	.uleb128 0x11
	.long	.LASF692
	.byte	0x8
	.value	0xe73
	.long	0x1550
	.uleb128 0x22
	.long	.LASF694
	.byte	0x1
	.byte	0xa2
	.long	0x79
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x24aa
	.uleb128 0x23
	.string	"gv"
	.byte	0x1
	.byte	0xa2
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"n_a"
	.byte	0x1
	.byte	0xa4
	.long	0x15c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.long	.LASF693
	.byte	0x1
	.byte	0xa5
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x22
	.long	.LASF695
	.byte	0x1
	.byte	0xab
	.long	0x1539
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x24d8
	.uleb128 0x23
	.string	"o"
	.byte	0x1
	.byte	0xab
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x22
	.long	.LASF696
	.byte	0x1
	.byte	0xb3
	.long	0x1539
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x2514
	.uleb128 0x23
	.string	"o"
	.byte	0x1
	.byte	0xb3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x26
	.long	.LASF697
	.byte	0x1
	.byte	0xb3
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x22
	.long	.LASF698
	.byte	0x1
	.byte	0xba
	.long	0x1539
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x2550
	.uleb128 0x23
	.string	"o"
	.byte	0x1
	.byte	0xba
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x26
	.long	.LASF697
	.byte	0x1
	.byte	0xba
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x27
	.long	.LASF699
	.byte	0x1
	.byte	0xc1
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a2
	.uleb128 0x23
	.string	"n"
	.byte	0x1
	.byte	0xc1
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x23
	.string	"t"
	.byte	0x1
	.byte	0xc1
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x26
	.long	.LASF697
	.byte	0x1
	.byte	0xc1
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x23
	.string	"kid"
	.byte	0x1
	.byte	0xc1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x27
	.long	.LASF700
	.byte	0x1
	.byte	0xc8
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cc
	.uleb128 0x23
	.string	"o"
	.byte	0x1
	.byte	0xc8
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x28
	.long	.LASF710
	.byte	0x1
	.byte	0xd2
	.long	0x15b2
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x2628
	.uleb128 0x26
	.long	.LASF697
	.byte	0x1
	.byte	0xd2
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x24
	.string	"off"
	.byte	0x1
	.byte	0xd4
	.long	0x15b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x29
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x24
	.string	"p"
	.byte	0x1
	.byte	0xde
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF702
	.byte	0x1
	.value	0x151
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x268e
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x151
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x153
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF701
	.byte	0x1
	.value	0x153
	.long	0x1539
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x154
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -42
	.uleb128 0x2d
	.long	.LASF91
	.byte	0x1
	.value	0x155
	.long	0x15b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x2a
	.long	.LASF703
	.byte	0x1
	.value	0x181
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x271b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x181
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF720
	.byte	0x1
	.value	0x1db
	.quad	.L68
	.uleb128 0x29
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x2d
	.long	.LASF704
	.byte	0x1
	.value	0x1dd
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x29
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x2d
	.long	.LASF51
	.byte	0x1
	.value	0x1df
	.long	0x1f5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF705
	.byte	0x1
	.value	0x1e0
	.long	0x1f5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2f
	.long	.LASF706
	.byte	0x1
	.value	0x20a
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x2749
	.uleb128 0x2b
	.string	"cop"
	.byte	0x1
	.value	0x20a
	.long	0x2100
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF707
	.byte	0x1
	.value	0x21f
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x2775
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x21f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x30
	.long	.LASF708
	.byte	0x1
	.value	0x22a
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x30
	.long	.LASF709
	.byte	0x1
	.value	0x230
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x31
	.long	.LASF711
	.byte	0x1
	.value	0x23a
	.long	0x1539
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x27e7
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x23a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x23c
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x31
	.long	.LASF712
	.byte	0x1
	.value	0x252
	.long	0x1539
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x2826
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x252
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x254
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x32
	.long	.LASF713
	.byte	0x1
	.value	0x25d
	.long	0x1539
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x2877
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x25d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0x261
	.long	0x13c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF715
	.byte	0x1
	.value	0x26d
	.long	0x1539
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f6
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x26d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x26f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x33
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.long	0x28d7
	.uleb128 0x34
	.long	.LASF716
	.byte	0x1
	.value	0x29e
	.long	0x57
	.byte	0
	.uleb128 0x29
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.uleb128 0x34
	.long	.LASF716
	.byte	0x1
	.value	0x2a9
	.long	0x57
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF717
	.byte	0x1
	.value	0x2b3
	.long	0x1539
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x2971
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x2b3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x2b5
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF718
	.byte	0x1
	.value	0x2b6
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x2b7
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF719
	.byte	0x1
	.value	0x2b8
	.long	0x1396
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.uleb128 0x2e
	.long	.LASF721
	.byte	0x1
	.value	0x323
	.quad	.L157
	.byte	0
	.uleb128 0x31
	.long	.LASF722
	.byte	0x1
	.value	0x38d
	.long	0x1539
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x29b0
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x38d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x38f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF723
	.byte	0x1
	.value	0x398
	.long	0x1539
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a2f
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x398
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x39a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x33
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.long	0x2a10
	.uleb128 0x34
	.long	.LASF716
	.byte	0x1
	.value	0x3ce
	.long	0x57
	.byte	0
	.uleb128 0x29
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.uleb128 0x34
	.long	.LASF716
	.byte	0x1
	.value	0x3d8
	.long	0x57
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF724
	.byte	0x1
	.value	0x3e3
	.long	0x1539
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a6e
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x3e3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x3e5
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x32
	.long	.LASF725
	.byte	0x1
	.value	0x3fe
	.long	0x1539
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x2abc
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x3fe
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x3fe
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x400
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF726
	.byte	0x1
	.value	0x409
	.long	0x1539
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bac
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x409
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x409
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x40b
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF727
	.byte	0x1
	.value	0x48d
	.quad	.L252
	.uleb128 0x2e
	.long	.LASF728
	.byte	0x1
	.value	0x44e
	.quad	.L293
	.uleb128 0x2e
	.long	.LASF729
	.byte	0x1
	.value	0x476
	.quad	.L306
	.uleb128 0x2e
	.long	.LASF730
	.byte	0x1
	.value	0x509
	.quad	.L329
	.uleb128 0x29
	.quad	.LBB10
	.quad	.LBE10-.LBB10
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x442
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x443
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF731
	.byte	0x1
	.value	0x444
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB11
	.quad	.LBE11-.LBB11
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x456
	.long	0x2bac
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x2b8
	.uleb128 0x36
	.long	.LASF733
	.byte	0x1
	.value	0x551
	.long	0x7f
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bf1
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x551
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x551
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x36
	.long	.LASF734
	.byte	0x1
	.value	0x580
	.long	0x7f
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c30
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x580
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF735
	.byte	0x1
	.value	0x580
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x31
	.long	.LASF736
	.byte	0x1
	.value	0x597
	.long	0x1539
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c7e
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x597
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x597
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x599
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF737
	.byte	0x1
	.value	0x5a2
	.long	0x1539
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ccc
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x5a2
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x5a2
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x5a4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x32
	.long	.LASF738
	.byte	0x1
	.value	0x5fb
	.long	0x1539
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d0b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x5fb
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"rop"
	.byte	0x1
	.value	0x5fd
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2f
	.long	.LASF739
	.byte	0x1
	.value	0x612
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d98
	.uleb128 0x35
	.long	.LASF740
	.byte	0x1
	.value	0x612
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x35
	.long	.LASF741
	.byte	0x1
	.value	0x612
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x612
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.long	.LASF743
	.byte	0x1
	.value	0x612
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2d
	.long	.LASF744
	.byte	0x1
	.value	0x614
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.uleb128 0x2c
	.string	"svp"
	.byte	0x1
	.value	0x622
	.long	0x20cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2f
	.long	.LASF745
	.byte	0x1
	.value	0x63c
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e8f
	.uleb128 0x35
	.long	.LASF740
	.byte	0x1
	.value	0x63c
	.long	0x1521
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.long	.LASF741
	.byte	0x1
	.value	0x63c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x63c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x35
	.long	.LASF746
	.byte	0x1
	.value	0x63c
	.long	0x2e8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF747
	.byte	0x1
	.value	0x63e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF748
	.byte	0x1
	.value	0x63e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"arg"
	.byte	0x1
	.value	0x63e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2d
	.long	.LASF749
	.byte	0x1
	.value	0x63f
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF744
	.byte	0x1
	.value	0x63f
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.uleb128 0x2d
	.long	.LASF750
	.byte	0x1
	.value	0x660
	.long	0x112
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF751
	.byte	0x1
	.value	0x660
	.long	0x2e95
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2d
	.long	.LASF752
	.byte	0x1
	.value	0x660
	.long	0x13ab
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF753
	.byte	0x1
	.value	0x660
	.long	0x13b6
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1539
	.uleb128 0x6
	.byte	0x8
	.long	0x2e9b
	.uleb128 0xc
	.long	0x2d
	.uleb128 0x2a
	.long	.LASF754
	.byte	0x1
	.value	0x67d
	.quad	.LFB32
	.quad	.LFE32-.LFB32
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f2c
	.uleb128 0x35
	.long	.LASF755
	.byte	0x1
	.value	0x67d
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0x67d
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.long	.LASF756
	.byte	0x1
	.value	0x67e
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2b
	.string	"len"
	.byte	0x1
	.value	0x67e
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF742
	.byte	0x1
	.value	0x680
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.quad	.LBB14
	.quad	.LBE14-.LBB14
	.uleb128 0x2d
	.long	.LASF757
	.byte	0x1
	.value	0x689
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x32
	.long	.LASF758
	.byte	0x1
	.value	0x69c
	.long	0x1539
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fe0
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x69c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x69c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x35
	.long	.LASF746
	.byte	0x1
	.value	0x69c
	.long	0x2e8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x69e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x69f
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x33
	.quad	.LBB15
	.quad	.LBE15-.LBB15
	.long	0x2fbe
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x6b1
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.quad	.LBB16
	.quad	.LBE16-.LBB16
	.uleb128 0x2d
	.long	.LASF740
	.byte	0x1
	.value	0x6c8
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF759
	.byte	0x1
	.value	0x6d9
	.long	0x1539
	.quad	.LFB34
	.quad	.LFE34-.LFB34
	.uleb128 0x1
	.byte	0x9c
	.long	0x303d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x6d9
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x6d9
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF760
	.byte	0x1
	.value	0x6db
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF761
	.byte	0x1
	.value	0x6dc
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x31
	.long	.LASF762
	.byte	0x1
	.value	0x6f9
	.long	0x1539
	.quad	.LFB35
	.quad	.LFE35-.LFB35
	.uleb128 0x1
	.byte	0x9c
	.long	0x306d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x6f9
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x37
	.long	.LASF763
	.byte	0x1
	.value	0x6ff
	.long	0x1539
	.quad	.LFB36
	.quad	.LFE36-.LFB36
	.uleb128 0x1
	.byte	0x9c
	.long	0x309d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x6ff
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF764
	.byte	0x1
	.value	0x707
	.long	0x1539
	.quad	.LFB37
	.quad	.LFE37-.LFB37
	.uleb128 0x1
	.byte	0x9c
	.long	0x312b
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x707
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.long	.LASF765
	.byte	0x1
	.value	0x707
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.long	.LASF766
	.byte	0x1
	.value	0x707
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0x709
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB17
	.quad	.LBE17-.LBB17
	.uleb128 0x2d
	.long	.LASF767
	.byte	0x1
	.value	0x710
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF768
	.byte	0x1
	.value	0x713
	.long	0x112
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF769
	.byte	0x1
	.value	0x739
	.long	0x1539
	.quad	.LFB38
	.quad	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.long	0x315b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x739
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF770
	.byte	0x1
	.value	0x742
	.long	0x1539
	.quad	.LFB39
	.quad	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.long	0x31ac
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x742
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB18
	.quad	.LBE18-.LBB18
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x74b
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x38
	.long	.LASF771
	.byte	0x1
	.value	0x75a
	.quad	.LFB40
	.quad	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x31
	.long	.LASF772
	.byte	0x1
	.value	0x760
	.long	0x57
	.quad	.LFB41
	.quad	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.long	0x3207
	.uleb128 0x35
	.long	.LASF773
	.byte	0x1
	.value	0x760
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2d
	.long	.LASF774
	.byte	0x1
	.value	0x762
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x31
	.long	.LASF775
	.byte	0x1
	.value	0x777
	.long	0x1539
	.quad	.LFB42
	.quad	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.long	0x3266
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x777
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2b
	.string	"seq"
	.byte	0x1
	.value	0x777
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF777
	.byte	0x1
	.value	0x779
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2d
	.long	.LASF774
	.byte	0x1
	.value	0x77a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x39
	.long	.LASF1115
	.byte	0x1
	.value	0x786
	.long	0x1539
	.quad	.LFB43
	.quad	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x2a
	.long	.LASF778
	.byte	0x1
	.value	0x792
	.quad	.LFB44
	.quad	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.long	0x32ef
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x792
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB20
	.quad	.LBE20-.LBB20
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x7b2
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.uleb128 0x2c
	.string	"sp"
	.byte	0x1
	.value	0x7b4
	.long	0x20cc
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF779
	.byte	0x1
	.value	0x7bf
	.long	0x1539
	.quad	.LFB45
	.quad	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.long	0x335c
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x7bf
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"lex"
	.byte	0x1
	.value	0x7bf
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x29
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x7cd
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF780
	.byte	0x1
	.value	0x7ce
	.long	0x7f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF781
	.byte	0x1
	.value	0x7f3
	.long	0x1539
	.quad	.LFB46
	.quad	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.long	0x33ac
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x7f3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.uleb128 0x2c
	.string	"o2"
	.byte	0x1
	.value	0x7f6
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF782
	.byte	0x1
	.value	0x803
	.long	0x1539
	.quad	.LFB47
	.quad	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.long	0x3416
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x803
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF783
	.byte	0x1
	.value	0x805
	.long	0x1539
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x806
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x807
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF784
	.byte	0x1
	.value	0x84d
	.quad	.L587
	.byte	0
	.uleb128 0x31
	.long	.LASF785
	.byte	0x1
	.value	0x852
	.long	0x1539
	.quad	.LFB48
	.quad	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.long	0x3462
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x852
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF783
	.byte	0x1
	.value	0x854
	.long	0x1539
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF786
	.byte	0x1
	.value	0x855
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x31
	.long	.LASF787
	.byte	0x1
	.value	0x871
	.long	0x1539
	.quad	.LFB49
	.quad	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.long	0x34b0
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x871
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x871
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x871
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF788
	.byte	0x1
	.value	0x889
	.long	0x1539
	.quad	.LFB50
	.quad	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.long	0x3500
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x889
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x889
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF790
	.byte	0x1
	.value	0x889
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x31
	.long	.LASF791
	.byte	0x1
	.value	0x8a2
	.long	0x1539
	.quad	.LFB51
	.quad	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.long	0x3550
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x8a2
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x8a2
	.long	0x3550
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF790
	.byte	0x1
	.value	0x8a2
	.long	0x3550
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3ce
	.uleb128 0x31
	.long	.LASF792
	.byte	0x1
	.value	0x8ba
	.long	0x1539
	.quad	.LFB52
	.quad	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.long	0x35a6
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x8ba
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x8ba
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF790
	.byte	0x1
	.value	0x8ba
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x3a
	.long	.LASF1116
	.byte	0x1
	.value	0x8db
	.long	0x1539
	.quad	.LFB53
	.quad	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x31
	.long	.LASF793
	.byte	0x1
	.value	0x8e1
	.long	0x1539
	.quad	.LFB54
	.quad	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.long	0x35f4
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x8e1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF794
	.byte	0x1
	.value	0x8ea
	.long	0x1539
	.quad	.LFB55
	.quad	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.long	0x3683
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x8ea
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x8ea
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x8ea
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.long	.LASF790
	.byte	0x1
	.value	0x8ea
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF46
	.byte	0x1
	.value	0x8ec
	.long	0x3550
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.uleb128 0x2d
	.long	.LASF795
	.byte	0x1
	.value	0x8ff
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF796
	.byte	0x1
	.value	0x90c
	.long	0x1539
	.quad	.LFB56
	.quad	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.long	0x36d1
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x90c
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x90c
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0x90e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF797
	.byte	0x1
	.value	0x91e
	.long	0x1539
	.quad	.LFB57
	.quad	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.long	0x3730
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x91e
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x91e
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x91e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF40
	.byte	0x1
	.value	0x920
	.long	0x2bac
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF798
	.byte	0x1
	.value	0x935
	.long	0x1539
	.quad	.LFB58
	.quad	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.long	0x379e
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x935
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x935
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0x935
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.long	.LASF790
	.byte	0x1
	.value	0x935
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF43
	.byte	0x1
	.value	0x937
	.long	0x379e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x33d
	.uleb128 0x36
	.long	.LASF799
	.byte	0x1
	.value	0x954
	.long	0x57
	.quad	.LFB59
	.quad	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.long	0x37e1
	.uleb128 0x2b
	.string	"a"
	.byte	0x1
	.value	0x954
	.long	0x11d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.string	"b"
	.byte	0x1
	.value	0x954
	.long	0x11d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF800
	.byte	0x1
	.value	0x962
	.long	0x1539
	.quad	.LFB60
	.quad	.LFE60-.LFB60
	.uleb128 0x1
	.byte	0x9c
	.long	0x3b4d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x962
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.uleb128 0x35
	.long	.LASF801
	.byte	0x1
	.value	0x962
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x35
	.long	.LASF802
	.byte	0x1
	.value	0x962
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x2d
	.long	.LASF803
	.byte	0x1
	.value	0x964
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2d
	.long	.LASF804
	.byte	0x1
	.value	0x965
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF805
	.byte	0x1
	.value	0x966
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x2d
	.long	.LASF806
	.byte	0x1
	.value	0x967
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x2c
	.string	"t"
	.byte	0x1
	.value	0x968
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x2c
	.string	"r"
	.byte	0x1
	.value	0x969
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2c
	.string	"i"
	.byte	0x1
	.value	0x96a
	.long	0x13ab
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2c
	.string	"j"
	.byte	0x1
	.value	0x96b
	.long	0x13ab
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2c
	.string	"del"
	.byte	0x1
	.value	0x96c
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -308
	.uleb128 0x2d
	.long	.LASF807
	.byte	0x1
	.value	0x96d
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x2d
	.long	.LASF808
	.byte	0x1
	.value	0x96e
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x2d
	.long	.LASF809
	.byte	0x1
	.value	0x96f
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x2c
	.string	"tbl"
	.byte	0x1
	.value	0x970
	.long	0x3b53
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x29
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.uleb128 0x2d
	.long	.LASF810
	.byte	0x1
	.value	0x97e
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2d
	.long	.LASF811
	.byte	0x1
	.value	0x97f
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x2d
	.long	.LASF812
	.byte	0x1
	.value	0x980
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x2d
	.long	.LASF813
	.byte	0x1
	.value	0x981
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x2d
	.long	.LASF814
	.byte	0x1
	.value	0x982
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x2d
	.long	.LASF815
	.byte	0x1
	.value	0x983
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2d
	.long	.LASF816
	.byte	0x1
	.value	0x984
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2d
	.long	.LASF817
	.byte	0x1
	.value	0x985
	.long	0x134
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2d
	.long	.LASF818
	.byte	0x1
	.value	0x986
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2d
	.long	.LASF819
	.byte	0x1
	.value	0x987
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2d
	.long	.LASF820
	.byte	0x1
	.value	0x988
	.long	0x134
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2d
	.long	.LASF821
	.byte	0x1
	.value	0x989
	.long	0x134
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2d
	.long	.LASF822
	.byte	0x1
	.value	0x98a
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x2c
	.string	"max"
	.byte	0x1
	.value	0x98b
	.long	0x13b6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -300
	.uleb128 0x2d
	.long	.LASF823
	.byte	0x1
	.value	0x98c
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x2d
	.long	.LASF824
	.byte	0x1
	.value	0x98d
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -292
	.uleb128 0x2d
	.long	.LASF825
	.byte	0x1
	.value	0x98e
	.long	0x13b6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x2d
	.long	.LASF826
	.byte	0x1
	.value	0x98f
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x2d
	.long	.LASF827
	.byte	0x1
	.value	0x990
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -268
	.uleb128 0x2d
	.long	.LASF828
	.byte	0x1
	.value	0x991
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2d
	.long	.LASF829
	.byte	0x1
	.value	0x992
	.long	0x3b4d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x33
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.long	0x3a7a
	.uleb128 0x2c
	.string	"len"
	.byte	0x1
	.value	0x995
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.byte	0
	.uleb128 0x33
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.long	0x3aa0
	.uleb128 0x2c
	.string	"len"
	.byte	0x1
	.value	0x99a
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.byte	0
	.uleb128 0x29
	.quad	.LBB30
	.quad	.LBE30-.LBB30
	.uleb128 0x2d
	.long	.LASF830
	.byte	0x1
	.value	0x9a6
	.long	0x3b59
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2c
	.string	"cp"
	.byte	0x1
	.value	0x9a7
	.long	0x3b69
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2d
	.long	.LASF831
	.byte	0x1
	.value	0x9a8
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x33
	.quad	.LBB31
	.quad	.LBE31-.LBB31
	.long	0x3b28
	.uleb128 0x2c
	.string	"val"
	.byte	0x1
	.value	0x9bb
	.long	0x13f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x29
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.uleb128 0x2d
	.long	.LASF832
	.byte	0x1
	.value	0x9c1
	.long	0x1396
	.uleb128 0x3
	.byte	0x91
	.sleb128 -309
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB33
	.quad	.LBE33-.LBB33
	.uleb128 0x2d
	.long	.LASF832
	.byte	0x1
	.value	0x9ce
	.long	0x1396
	.uleb128 0x3
	.byte	0x91
	.sleb128 -309
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1396
	.uleb128 0x6
	.byte	0x8
	.long	0x50
	.uleb128 0x8
	.long	0x1396
	.long	0x3b69
	.uleb128 0x9
	.long	0x65
	.byte	0xd
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x13f
	.uleb128 0x31
	.long	.LASF833
	.byte	0x1
	.value	0xa95
	.long	0x1539
	.quad	.LFB61
	.quad	.LFE61-.LFB61
	.uleb128 0x1
	.byte	0x9c
	.long	0x3bbf
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xa95
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xa95
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF51
	.byte	0x1
	.value	0xa97
	.long	0x1f5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF834
	.byte	0x1
	.value	0xac1
	.long	0x1539
	.quad	.LFB62
	.quad	.LFE62-.LFB62
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ce2
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0xac1
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.long	.LASF801
	.byte	0x1
	.value	0xac1
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF802
	.byte	0x1
	.value	0xac1
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.string	"pm"
	.byte	0x1
	.value	0xac3
	.long	0x1f5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF835
	.byte	0x1
	.value	0xac4
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF836
	.byte	0x1
	.value	0xac5
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x33
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.long	0x3c7f
	.uleb128 0x2d
	.long	.LASF837
	.byte	0x1
	.value	0xace
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2c
	.string	"pat"
	.byte	0x1
	.value	0xacf
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"p"
	.byte	0x1
	.value	0xad0
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x29
	.quad	.LBB35
	.quad	.LBE35-.LBB35
	.uleb128 0x2d
	.long	.LASF783
	.byte	0x1
	.value	0xafc
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x29
	.quad	.LBB36
	.quad	.LBE36-.LBB36
	.uleb128 0x2d
	.long	.LASF838
	.byte	0x1
	.value	0xb0d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB37
	.quad	.LBE37-.LBB37
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0xb18
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x45f
	.uleb128 0x31
	.long	.LASF839
	.byte	0x1
	.value	0xb58
	.long	0x1539
	.quad	.LFB63
	.quad	.LFE63-.LFB63
	.uleb128 0x1
	.byte	0x9c
	.long	0x3d46
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xb58
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xb58
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"sv"
	.byte	0x1
	.value	0xb58
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF61
	.byte	0x1
	.value	0xb5a
	.long	0x3d46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x5ea
	.uleb128 0x31
	.long	.LASF840
	.byte	0x1
	.value	0xb69
	.long	0x1539
	.quad	.LFB64
	.quad	.LFE64-.LFB64
	.uleb128 0x1
	.byte	0x9c
	.long	0x3daa
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xb69
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xb69
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"sv"
	.byte	0x1
	.value	0xb69
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF64
	.byte	0x1
	.value	0xb6b
	.long	0x3daa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x679
	.uleb128 0x31
	.long	.LASF841
	.byte	0x1
	.value	0xb7e
	.long	0x1539
	.quad	.LFB65
	.quad	.LFE65-.LFB65
	.uleb128 0x1
	.byte	0x9c
	.long	0x3dff
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xb7e
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xb7e
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2b
	.string	"gv"
	.byte	0x1
	.value	0xb7e
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF842
	.byte	0x1
	.value	0xb8a
	.long	0x1539
	.quad	.LFB66
	.quad	.LFE66-.LFB66
	.uleb128 0x1
	.byte	0x9c
	.long	0x3e5d
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xb8a
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xb8a
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"pv"
	.byte	0x1
	.value	0xb8a
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF67
	.byte	0x1
	.value	0xb8c
	.long	0x3e5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x708
	.uleb128 0x2a
	.long	.LASF843
	.byte	0x1
	.value	0xb9b
	.quad	.LFB67
	.quad	.LFE67-.LFB67
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ecd
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0xb9b
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0xb9d
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB38
	.quad	.LBE38-.LBB38
	.uleb128 0x2c
	.string	"len"
	.byte	0x1
	.value	0xba2
	.long	0x15c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0xba3
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF844
	.byte	0x1
	.value	0xbb5
	.quad	.LFB68
	.quad	.LFE68-.LFB68
	.uleb128 0x1
	.byte	0x9c
	.long	0x4078
	.uleb128 0x35
	.long	.LASF845
	.byte	0x1
	.value	0xbb5
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0xbb5
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x35
	.long	.LASF846
	.byte	0x1
	.value	0xbb5
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x35
	.long	.LASF847
	.byte	0x1
	.value	0xbb5
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2b
	.string	"arg"
	.byte	0x1
	.value	0xbb5
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2d
	.long	.LASF747
	.byte	0x1
	.value	0xbb7
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF748
	.byte	0x1
	.value	0xbb8
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2d
	.long	.LASF848
	.byte	0x1
	.value	0xbb9
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x33
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.long	0x400c
	.uleb128 0x2d
	.long	.LASF849
	.byte	0x1
	.value	0xbc1
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x29
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.uleb128 0x2d
	.long	.LASF747
	.byte	0x1
	.value	0xbc7
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF749
	.byte	0x1
	.value	0xbc8
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.uleb128 0x2d
	.long	.LASF750
	.byte	0x1
	.value	0xbd4
	.long	0x112
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF751
	.byte	0x1
	.value	0xbd4
	.long	0x2e95
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2d
	.long	.LASF752
	.byte	0x1
	.value	0xbd4
	.long	0x13ab
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF753
	.byte	0x1
	.value	0xbd4
	.long	0x13b6
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB42
	.quad	.LBE42-.LBB42
	.uleb128 0x2d
	.long	.LASF749
	.byte	0x1
	.value	0xbe3
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.uleb128 0x2d
	.long	.LASF750
	.byte	0x1
	.value	0xbec
	.long	0x112
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF751
	.byte	0x1
	.value	0xbec
	.long	0x2e95
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x2d
	.long	.LASF752
	.byte	0x1
	.value	0xbec
	.long	0x13ab
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2d
	.long	.LASF753
	.byte	0x1
	.value	0xbec
	.long	0x13b6
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF850
	.byte	0x1
	.value	0xc26
	.quad	.LFB69
	.quad	.LFE69-.LFB69
	.uleb128 0x1
	.byte	0x9c
	.long	0x40d8
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xc26
	.long	0x13b6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x35
	.long	.LASF697
	.byte	0x1
	.value	0xc26
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x2b
	.string	"ver"
	.byte	0x1
	.value	0xc26
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x3b
	.uleb128 0x2d
	.long	.LASF851
	.byte	0x1
	.value	0xc28
	.long	0x107
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.byte	0
	.uleb128 0x2a
	.long	.LASF852
	.byte	0x1
	.value	0xc3b
	.quad	.LFB70
	.quad	.LFE70-.LFB70
	.uleb128 0x1
	.byte	0x9c
	.long	0x41c7
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xc3b
	.long	0x13b6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x35
	.long	.LASF697
	.byte	0x1
	.value	0xc3b
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2b
	.string	"ver"
	.byte	0x1
	.value	0xc3b
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x35
	.long	.LASF851
	.byte	0x1
	.value	0xc3b
	.long	0x41c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2d
	.long	.LASF853
	.byte	0x1
	.value	0xc3d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF848
	.byte	0x1
	.value	0xc3d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF748
	.byte	0x1
	.value	0xc3d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x33
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.long	0x4187
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0xc4d
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x29
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.uleb128 0x2d
	.long	.LASF854
	.byte	0x1
	.value	0xc56
	.long	0x13c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF855
	.byte	0x1
	.value	0xc57
	.long	0x2100
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF856
	.byte	0x1
	.value	0xc58
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x107
	.uleb128 0x31
	.long	.LASF857
	.byte	0x1
	.value	0xc63
	.long	0x1539
	.quad	.LFB71
	.quad	.LFE71-.LFB71
	.uleb128 0x1
	.byte	0x9c
	.long	0x421c
	.uleb128 0x35
	.long	.LASF858
	.byte	0x1
	.value	0xc63
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF859
	.byte	0x1
	.value	0xc65
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0xc66
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF860
	.byte	0x1
	.value	0xc7a
	.long	0x1539
	.quad	.LFB72
	.quad	.LFE72-.LFB72
	.uleb128 0x1
	.byte	0x9c
	.long	0x426c
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xc7a
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF861
	.byte	0x1
	.value	0xc7a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.long	.LASF862
	.byte	0x1
	.value	0xc7a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x32
	.long	.LASF863
	.byte	0x1
	.value	0xc82
	.long	0x13ab
	.quad	.LFB73
	.quad	.LFE73-.LFB73
	.uleb128 0x1
	.byte	0x9c
	.long	0x42c7
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0xc82
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.uleb128 0x2c
	.string	"t"
	.byte	0x1
	.value	0xc8b
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"f"
	.byte	0x1
	.value	0xc8c
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF864
	.byte	0x1
	.value	0xca9
	.long	0x1539
	.quad	.LFB74
	.quad	.LFE74-.LFB74
	.uleb128 0x1
	.byte	0x9c
	.long	0x4426
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xca9
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x35
	.long	.LASF765
	.byte	0x1
	.value	0xca9
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF865
	.byte	0x1
	.value	0xca9
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.long	.LASF766
	.byte	0x1
	.value	0xca9
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xcab
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.quad	.LBB47
	.quad	.LBE47-.LBB47
	.uleb128 0x2d
	.long	.LASF783
	.byte	0x1
	.value	0xcba
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x33
	.quad	.LBB48
	.quad	.LBE48-.LBB48
	.long	0x43c3
	.uleb128 0x2d
	.long	.LASF838
	.byte	0x1
	.value	0xceb
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x33
	.quad	.LBB49
	.quad	.LBE49-.LBB49
	.long	0x43a2
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0xcf0
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x29
	.quad	.LBB50
	.quad	.LBE50-.LBB50
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0xd10
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB51
	.quad	.LBE51-.LBB51
	.uleb128 0x2d
	.long	.LASF866
	.byte	0x1
	.value	0xd20
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x2c
	.string	"pm"
	.byte	0x1
	.value	0xd24
	.long	0x1f5d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0xd41
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF867
	.byte	0x1
	.value	0xd5f
	.long	0x1539
	.quad	.LFB75
	.quad	.LFE75-.LFB75
	.uleb128 0x1
	.byte	0x9c
	.long	0x44b3
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xd5f
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.long	.LASF632
	.byte	0x1
	.value	0xd5f
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0xd5f
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.string	"seq"
	.byte	0x1
	.value	0xd61
	.long	0x13b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2c
	.string	"cop"
	.byte	0x1
	.value	0xd62
	.long	0x2100
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.quad	.LBB54
	.quad	.LBE54-.LBB54
	.uleb128 0x2c
	.string	"svp"
	.byte	0x1
	.value	0xd93
	.long	0x20cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF868
	.byte	0x1
	.value	0xd9f
	.long	0x1539
	.quad	.LFB76
	.quad	.LFE76-.LFB76
	.uleb128 0x1
	.byte	0x9c
	.long	0x4512
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xd9f
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xd9f
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0xd9f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF869
	.byte	0x1
	.value	0xd9f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x32
	.long	.LASF870
	.byte	0x1
	.value	0xda5
	.long	0x1539
	.quad	.LFB77
	.quad	.LFE77-.LFB77
	.uleb128 0x1
	.byte	0x9c
	.long	0x4611
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xda5
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xda5
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.long	.LASF871
	.byte	0x1
	.value	0xda5
	.long	0x2e8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF872
	.byte	0x1
	.value	0xda5
	.long	0x2e8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2d
	.long	.LASF48
	.byte	0x1
	.value	0xda7
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xda8
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF789
	.byte	0x1
	.value	0xda9
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF869
	.byte	0x1
	.value	0xdaa
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.quad	.LBB55
	.quad	.LBE55-.LBB55
	.uleb128 0x2c
	.string	"k1"
	.byte	0x1
	.value	0xdd4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"k2"
	.byte	0x1
	.value	0xdd5
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF873
	.byte	0x1
	.value	0xdd6
	.long	0x13a0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.uleb128 0x29
	.quad	.LBB56
	.quad	.LBE56-.LBB56
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0xdee
	.long	0x13c1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF874
	.byte	0x1
	.value	0xe16
	.long	0x1539
	.quad	.LFB78
	.quad	.LFE78-.LFB78
	.uleb128 0x1
	.byte	0x9c
	.long	0x469d
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xe16
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.long	.LASF789
	.byte	0x1
	.value	0xe16
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.long	.LASF875
	.byte	0x1
	.value	0xe16
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.long	.LASF876
	.byte	0x1
	.value	0xe16
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF48
	.byte	0x1
	.value	0xe18
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF877
	.byte	0x1
	.value	0xe19
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xe1a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF878
	.byte	0x1
	.value	0xe4d
	.long	0x1539
	.quad	.LFB79
	.quad	.LFE79-.LFB79
	.uleb128 0x1
	.byte	0x9c
	.long	0x4739
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xe4d
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x35
	.long	.LASF765
	.byte	0x1
	.value	0xe4d
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x35
	.long	.LASF766
	.byte	0x1
	.value	0xe4d
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2d
	.long	.LASF879
	.byte	0x1
	.value	0xe4f
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF880
	.byte	0x1
	.value	0xe50
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF881
	.byte	0x1
	.value	0xe51
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF882
	.byte	0x1
	.value	0xe52
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xe53
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF883
	.byte	0x1
	.value	0xe7b
	.long	0x1539
	.quad	.LFB80
	.quad	.LFE80-.LFB80
	.uleb128 0x1
	.byte	0x9c
	.long	0x47f6
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xe7b
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x35
	.long	.LASF884
	.byte	0x1
	.value	0xe7b
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x35
	.long	.LASF801
	.byte	0x1
	.value	0xe7b
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0xe7b
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2d
	.long	.LASF46
	.byte	0x1
	.value	0xe7d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xe7e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF885
	.byte	0x1
	.value	0xe7f
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x29
	.quad	.LBB57
	.quad	.LBE57-.LBB57
	.uleb128 0x2c
	.string	"k1"
	.byte	0x1
	.value	0xe8a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"k2"
	.byte	0x1
	.value	0xe8b
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF886
	.byte	0x1
	.value	0xeb6
	.long	0x1539
	.quad	.LFB81
	.quad	.LFE81-.LFB81
	.uleb128 0x1
	.byte	0x9c
	.long	0x4928
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xeb6
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x35
	.long	.LASF884
	.byte	0x1
	.value	0xeb6
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.long	.LASF70
	.byte	0x1
	.value	0xeb6
	.long	0x4928
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF887
	.byte	0x1
	.value	0xeb6
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x35
	.long	.LASF801
	.byte	0x1
	.value	0xeb6
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0xeb6
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x35
	.long	.LASF888
	.byte	0x1
	.value	0xeb6
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF889
	.byte	0x1
	.value	0xeb8
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF890
	.byte	0x1
	.value	0xeb9
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF46
	.byte	0x1
	.value	0xeba
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xebb
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2d
	.long	.LASF891
	.byte	0x1
	.value	0xebc
	.long	0x1396
	.uleb128 0x3
	.byte	0x91
	.sleb128 -89
	.uleb128 0x33
	.quad	.LBB58
	.quad	.LBE58-.LBB58
	.long	0x4906
	.uleb128 0x2c
	.string	"k1"
	.byte	0x1
	.value	0xec3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.string	"k2"
	.byte	0x1
	.value	0xec4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x29
	.quad	.LBB59
	.quad	.LBE59-.LBB59
	.uleb128 0x2d
	.long	.LASF892
	.byte	0x1
	.value	0xee1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x797
	.uleb128 0x31
	.long	.LASF893
	.byte	0x1
	.value	0xf13
	.long	0x1539
	.quad	.LFB82
	.quad	.LFE82-.LFB82
	.uleb128 0x1
	.byte	0x9c
	.long	0x4a6b
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0xf13
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x35
	.long	.LASF632
	.byte	0x1
	.value	0xf13
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x35
	.long	.LASF894
	.byte	0x1
	.value	0xf13
	.long	0x13c1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2b
	.string	"sv"
	.byte	0x1
	.value	0xf13
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x35
	.long	.LASF801
	.byte	0x1
	.value	0xf13
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0xf13
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x35
	.long	.LASF888
	.byte	0x1
	.value	0xf13
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF70
	.byte	0x1
	.value	0xf15
	.long	0x4928
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"wop"
	.byte	0x1
	.value	0xf16
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF895
	.byte	0x1
	.value	0xf17
	.long	0x15b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF896
	.byte	0x1
	.value	0xf18
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2d
	.long	.LASF897
	.byte	0x1
	.value	0xf19
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x29
	.quad	.LBB60
	.quad	.LBE60-.LBB60
	.uleb128 0x2d
	.long	.LASF880
	.byte	0x1
	.value	0xf46
	.long	0x2bac
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2d
	.long	.LASF879
	.byte	0x1
	.value	0xf47
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF765
	.byte	0x1
	.value	0xf48
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF766
	.byte	0x1
	.value	0xf49
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF46
	.byte	0x1
	.value	0xf4a
	.long	0x3550
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF898
	.byte	0x1
	.value	0xf76
	.long	0x1539
	.quad	.LFB83
	.quad	.LFE83-.LFB83
	.uleb128 0x1
	.byte	0x9c
	.long	0x4ac8
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0xf76
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.long	.LASF632
	.byte	0x1
	.value	0xf76
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0xf78
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0xf79
	.long	0x15c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2a
	.long	.LASF899
	.byte	0x1
	.value	0xf9d
	.quad	.LFB84
	.quad	.LFE84-.LFB84
	.uleb128 0x1
	.byte	0x9c
	.long	0x4af5
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0xf9d
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF900
	.byte	0x1
	.value	0xfd6
	.quad	.LFB85
	.quad	.LFE85-.LFB85
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b6d
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0xfd6
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"gv"
	.byte	0x1
	.value	0xfd6
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.string	"p"
	.byte	0x1
	.value	0xfd6
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.uleb128 0x2c
	.string	"msg"
	.byte	0x1
	.value	0xfd9
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0xfda
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x37
	.long	.LASF901
	.byte	0x1
	.value	0xfff
	.long	0x13de
	.quad	.LFB86
	.quad	.LFE86-.LFB86
	.uleb128 0x1
	.byte	0x9c
	.long	0x4b9e
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0xfff
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF902
	.byte	0x1
	.value	0x1007
	.long	0x13de
	.quad	.LFB87
	.quad	.LFE87-.LFB87
	.uleb128 0x1
	.byte	0x9c
	.long	0x4c0b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1007
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0x1007
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x1009
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x29
	.quad	.LBB63
	.quad	.LBE63-.LBB63
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1012
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF903
	.byte	0x1
	.value	0x103a
	.quad	.LFB88
	.quad	.LFE88-.LFB88
	.uleb128 0x1
	.byte	0x9c
	.long	0x4c73
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x103a
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x103a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF904
	.byte	0x1
	.value	0x103a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x103a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x103a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x31
	.long	.LASF905
	.byte	0x1
	.value	0x1048
	.long	0x154a
	.quad	.LFB89
	.quad	.LFE89-.LFB89
	.uleb128 0x1
	.byte	0x9c
	.long	0x4cd0
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x1048
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1048
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF904
	.byte	0x1
	.value	0x1048
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x1048
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x31
	.long	.LASF906
	.byte	0x1
	.value	0x104e
	.long	0x154a
	.quad	.LFB90
	.quad	.LFE90-.LFB90
	.uleb128 0x1
	.byte	0x9c
	.long	0x4f76
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x104e
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x104e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x35
	.long	.LASF904
	.byte	0x1
	.value	0x104e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x104e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x104e
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x1050
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x1051
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2d
	.long	.LASF907
	.byte	0x1
	.value	0x1052
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1053
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2c
	.string	"ps"
	.byte	0x1
	.value	0x1054
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x1055
	.long	0x154a
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF908
	.byte	0x1
	.value	0x1056
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2e
	.long	.LASF909
	.byte	0x1
	.value	0x11a6
	.quad	.L1301
	.uleb128 0x33
	.quad	.LBB64
	.quad	.LBE64-.LBB64
	.long	0x4de0
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x1062
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0x33
	.quad	.LBB65
	.quad	.LBE65-.LBB65
	.long	0x4e28
	.uleb128 0x2d
	.long	.LASF910
	.byte	0x1
	.value	0x1098
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -185
	.uleb128 0x29
	.quad	.LBB66
	.quad	.LBE66-.LBB66
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0x10b9
	.long	0x13c1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.byte	0
	.byte	0
	.uleb128 0x33
	.quad	.LBB67
	.quad	.LBE67-.LBB67
	.long	0x4e5e
	.uleb128 0x2d
	.long	.LASF740
	.byte	0x1
	.value	0x10da
	.long	0x1521
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2c
	.string	"rcv"
	.byte	0x1
	.value	0x10db
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.byte	0
	.uleb128 0x33
	.quad	.LBB68
	.quad	.LBE68-.LBB68
	.long	0x4ea4
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x1126
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.quad	.LBB69
	.quad	.LBE69-.LBB69
	.uleb128 0x2d
	.long	.LASF911
	.byte	0x1
	.value	0x1129
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB70
	.quad	.LBE70-.LBB70
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x1155
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF912
	.byte	0x1
	.value	0x1156
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x33
	.quad	.LBB71
	.quad	.LBE71-.LBB71
	.long	0x4f52
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x1159
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2d
	.long	.LASF913
	.byte	0x1
	.value	0x115a
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF914
	.byte	0x1
	.value	0x115b
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"pcv"
	.byte	0x1
	.value	0x115c
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"hv"
	.byte	0x1
	.value	0x115d
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x29
	.quad	.LBB72
	.quad	.LBE72-.LBB72
	.uleb128 0x2c
	.string	"sp"
	.byte	0x1
	.value	0x1168
	.long	0x20cc
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB75
	.quad	.LBE75-.LBB75
	.uleb128 0x2d
	.long	.LASF915
	.byte	0x1
	.value	0x1179
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF916
	.byte	0x1
	.value	0x11b7
	.long	0x154a
	.quad	.LFB91
	.quad	.LFE91-.LFB91
	.uleb128 0x1
	.byte	0x9c
	.long	0x4fd4
	.uleb128 0x35
	.long	.LASF740
	.byte	0x1
	.value	0x11b7
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x35
	.long	.LASF697
	.byte	0x1
	.value	0x11b7
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2b
	.string	"sv"
	.byte	0x1
	.value	0x11b7
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x11b9
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x31
	.long	.LASF917
	.byte	0x1
	.value	0x11e0
	.long	0x154a
	.quad	.LFB92
	.quad	.LFE92-.LFB92
	.uleb128 0x1
	.byte	0x9c
	.long	0x5096
	.uleb128 0x35
	.long	.LASF697
	.byte	0x1
	.value	0x11e0
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.long	.LASF918
	.byte	0x1
	.value	0x11e0
	.long	0x2453
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x35
	.long	.LASF919
	.byte	0x1
	.value	0x11e0
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x11e2
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x11e5
	.long	0x154a
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2e
	.long	.LASF909
	.byte	0x1
	.value	0x1241
	.quad	.L1419
	.uleb128 0x33
	.quad	.LBB77
	.quad	.LBE77-.LBB77
	.long	0x5076
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0x11f1
	.long	0x13c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x29
	.quad	.LBB78
	.quad	.LBE78-.LBB78
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x1216
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF920
	.byte	0x1
	.value	0x1246
	.quad	.LFB93
	.quad	.LFE93-.LFB93
	.uleb128 0x1
	.byte	0x9c
	.long	0x513d
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x1246
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1246
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x1246
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x1248
	.long	0x154a
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x1249
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x124a
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x124b
	.long	0x15c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.quad	.LBB79
	.quad	.LBE79-.LBB79
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0x125a
	.long	0x13c1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF921
	.byte	0x1
	.value	0x1275
	.long	0x1539
	.quad	.LFB94
	.quad	.LFE94-.LFB94
	.uleb128 0x1
	.byte	0x9c
	.long	0x516d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1275
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF922
	.byte	0x1
	.value	0x127c
	.long	0x1539
	.quad	.LFB95
	.quad	.LFE95-.LFB95
	.uleb128 0x1
	.byte	0x9c
	.long	0x519d
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x127c
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF923
	.byte	0x1
	.value	0x1283
	.long	0x1539
	.quad	.LFB96
	.quad	.LFE96-.LFB96
	.uleb128 0x1
	.byte	0x9c
	.long	0x51ed
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x1283
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF904
	.byte	0x1
	.value	0x1283
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x1283
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x31
	.long	.LASF924
	.byte	0x1
	.value	0x1289
	.long	0x1539
	.quad	.LFB97
	.quad	.LFE97-.LFB97
	.uleb128 0x1
	.byte	0x9c
	.long	0x524c
	.uleb128 0x35
	.long	.LASF776
	.byte	0x1
	.value	0x1289
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF904
	.byte	0x1
	.value	0x1289
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.long	.LASF742
	.byte	0x1
	.value	0x1289
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.long	.LASF115
	.byte	0x1
	.value	0x1289
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x31
	.long	.LASF925
	.byte	0x1
	.value	0x1291
	.long	0x1539
	.quad	.LFB98
	.quad	.LFE98-.LFB98
	.uleb128 0x1
	.byte	0x9c
	.long	0x527c
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1291
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF926
	.byte	0x1
	.value	0x12a8
	.long	0x1539
	.quad	.LFB99
	.quad	.LFE99-.LFB99
	.uleb128 0x1
	.byte	0x9c
	.long	0x52ac
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12a8
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF927
	.byte	0x1
	.value	0x12c1
	.long	0x1539
	.quad	.LFB100
	.quad	.LFE100-.LFB100
	.uleb128 0x1
	.byte	0x9c
	.long	0x52dc
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12c1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF928
	.byte	0x1
	.value	0x12d1
	.long	0x1539
	.quad	.LFB101
	.quad	.LFE101-.LFB101
	.uleb128 0x1
	.byte	0x9c
	.long	0x531b
	.uleb128 0x35
	.long	.LASF236
	.byte	0x1
	.value	0x12d1
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12d1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF929
	.byte	0x1
	.value	0x12d9
	.long	0x1539
	.quad	.LFB102
	.quad	.LFE102-.LFB102
	.uleb128 0x1
	.byte	0x9c
	.long	0x534b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12d9
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF930
	.byte	0x1
	.value	0x12e9
	.long	0x1539
	.quad	.LFB103
	.quad	.LFE103-.LFB103
	.uleb128 0x1
	.byte	0x9c
	.long	0x537b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12e9
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF931
	.byte	0x1
	.value	0x12f1
	.long	0x1539
	.quad	.LFB104
	.quad	.LFE104-.LFB104
	.uleb128 0x1
	.byte	0x9c
	.long	0x53ba
	.uleb128 0x35
	.long	.LASF228
	.byte	0x1
	.value	0x12f1
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12f1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x31
	.long	.LASF932
	.byte	0x1
	.value	0x12f7
	.long	0x1539
	.quad	.LFB105
	.quad	.LFE105-.LFB105
	.uleb128 0x1
	.byte	0x9c
	.long	0x53ea
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x12f7
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF933
	.byte	0x1
	.value	0x1309
	.long	0x1539
	.quad	.LFB106
	.quad	.LFE106-.LFB106
	.uleb128 0x1
	.byte	0x9c
	.long	0x541a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1309
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF934
	.byte	0x1
	.value	0x1311
	.long	0x1539
	.quad	.LFB107
	.quad	.LFE107-.LFB107
	.uleb128 0x1
	.byte	0x9c
	.long	0x547a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1311
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB80
	.quad	.LBE80-.LBB80
	.uleb128 0x2d
	.long	.LASF765
	.byte	0x1
	.value	0x1321
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF766
	.byte	0x1
	.value	0x1322
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x37
	.long	.LASF935
	.byte	0x1
	.value	0x1332
	.long	0x1539
	.quad	.LFB108
	.quad	.LFE108-.LFB108
	.uleb128 0x1
	.byte	0x9c
	.long	0x54b9
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1332
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1334
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF936
	.byte	0x1
	.value	0x133c
	.long	0x1539
	.quad	.LFB109
	.quad	.LFE109-.LFB109
	.uleb128 0x1
	.byte	0x9c
	.long	0x5529
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x133c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x29
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x133f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1340
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1341
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -50
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF937
	.byte	0x1
	.value	0x1355
	.long	0x1539
	.quad	.LFB110
	.quad	.LFE110-.LFB110
	.uleb128 0x1
	.byte	0x9c
	.long	0x557a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1355
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB82
	.quad	.LBE82-.LBB82
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x135a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF938
	.byte	0x1
	.value	0x1371
	.long	0x1539
	.quad	.LFB111
	.quad	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.long	0x55aa
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1371
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF939
	.byte	0x1
	.value	0x137a
	.long	0x1539
	.quad	.LFB112
	.quad	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.long	0x55e9
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x137a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x137c
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x31
	.long	.LASF940
	.byte	0x1
	.value	0x1389
	.long	0x1539
	.quad	.LFB113
	.quad	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.long	0x565b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1389
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB83
	.quad	.LBE83-.LBB83
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x138d
	.long	0x3d46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB84
	.quad	.LBE84-.LBB84
	.uleb128 0x2d
	.long	.LASF941
	.byte	0x1
	.value	0x1394
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF942
	.byte	0x1
	.value	0x13b3
	.long	0x1539
	.quad	.LFB114
	.quad	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.long	0x568b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x13b3
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF943
	.byte	0x1
	.value	0x13c2
	.long	0x1539
	.quad	.LFB115
	.quad	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.long	0x56ca
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x13c2
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x13c4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF944
	.byte	0x1
	.value	0x13d1
	.long	0x1539
	.quad	.LFB116
	.quad	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.long	0x571b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x13d1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB85
	.quad	.LBE85-.LBB85
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x13d5
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF945
	.byte	0x1
	.value	0x13f3
	.long	0x1539
	.quad	.LFB117
	.quad	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.long	0x5841
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x13f3
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x13f5
	.long	0x3d46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x29
	.quad	.LBB86
	.quad	.LBE86-.LBB86
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x13f9
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF946
	.byte	0x1
	.value	0x13fa
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x13fb
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF947
	.byte	0x1
	.value	0x13fc
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x13fd
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x33
	.quad	.LBB87
	.quad	.LBE87-.LBB87
	.long	0x581d
	.uleb128 0x2c
	.string	"rsv"
	.byte	0x1
	.value	0x1401
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF948
	.byte	0x1
	.value	0x1402
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2d
	.long	.LASF949
	.byte	0x1
	.value	0x1403
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.quad	.LBB88
	.quad	.LBE88-.LBB88
	.uleb128 0x2c
	.string	"ksv"
	.byte	0x1
	.value	0x1411
	.long	0x20cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB89
	.quad	.LBE89-.LBB89
	.uleb128 0x2d
	.long	.LASF950
	.byte	0x1
	.value	0x1426
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF951
	.byte	0x1
	.value	0x1461
	.long	0x1539
	.quad	.LFB118
	.quad	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.long	0x58d1
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1461
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1463
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x29
	.quad	.LBB90
	.quad	.LBE90-.LBB90
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1469
	.long	0x3d46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB91
	.quad	.LBE91-.LBB91
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x146c
	.long	0x15c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x146d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF952
	.byte	0x1
	.value	0x1483
	.long	0x1539
	.quad	.LFB119
	.quad	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b8a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1483
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1485
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF953
	.byte	0x1
	.value	0x1486
	.long	0x2e8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2d
	.long	.LASF954
	.byte	0x1
	.value	0x1487
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF955
	.byte	0x1
	.value	0x1488
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1489
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2c
	.string	"oa"
	.byte	0x1
	.value	0x148a
	.long	0x13ab
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x29
	.quad	.LBB92
	.quad	.LBE92-.LBB92
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x1494
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x33
	.quad	.LBB93
	.quad	.LBE93-.LBB93
	.long	0x59b3
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x14bf
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x14c0
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0x33
	.quad	.LBB94
	.quad	.LBE94-.LBB94
	.long	0x59e9
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x14d3
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x14d4
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x33
	.quad	.LBB95
	.quad	.LBE95-.LBB95
	.long	0x5a0f
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x14e5
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x33
	.quad	.LBB96
	.quad	.LBE96-.LBB96
	.long	0x5a35
	.uleb128 0x2d
	.long	.LASF732
	.byte	0x1
	.value	0x14f3
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x29
	.quad	.LBB97
	.quad	.LBE97-.LBB97
	.uleb128 0x2d
	.long	.LASF228
	.byte	0x1
	.value	0x1501
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x2d
	.long	.LASF956
	.byte	0x1
	.value	0x1502
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2d
	.long	.LASF957
	.byte	0x1
	.value	0x1503
	.long	0x15b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x29
	.quad	.LBB98
	.quad	.LBE98-.LBB98
	.uleb128 0x2d
	.long	.LASF697
	.byte	0x1
	.value	0x1507
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2c
	.string	"len"
	.byte	0x1
	.value	0x1508
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x33
	.quad	.LBB99
	.quad	.LBE99-.LBB99
	.long	0x5acc
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1520
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x33
	.quad	.LBB100
	.quad	.LBE100-.LBB100
	.long	0x5b65
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x1527
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x29
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.uleb128 0x2d
	.long	.LASF913
	.byte	0x1
	.value	0x152b
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2c
	.string	"a"
	.byte	0x1
	.value	0x152c
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x33
	.quad	.LBB102
	.quad	.LBE102-.LBB102
	.long	0x5b42
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1534
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x29
	.quad	.LBB103
	.quad	.LBE103-.LBB103
	.uleb128 0x2d
	.long	.LASF958
	.byte	0x1
	.value	0x153f
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB104
	.quad	.LBE104-.LBB104
	.uleb128 0x2d
	.long	.LASF959
	.byte	0x1
	.value	0x1555
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF960
	.byte	0x1
	.value	0x1584
	.long	0x1539
	.quad	.LFB120
	.quad	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.long	0x5be9
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1584
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1586
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB105
	.quad	.LBE105-.LBB105
	.uleb128 0x2d
	.long	.LASF961
	.byte	0x1
	.value	0x1595
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF962
	.byte	0x1
	.value	0x15ba
	.long	0x1539
	.quad	.LFB121
	.quad	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.long	0x5c65
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x15ba
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF963
	.byte	0x1
	.value	0x15bc
	.long	0x3ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x15bd
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x15be
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -42
	.uleb128 0x29
	.quad	.LBB106
	.quad	.LBE106-.LBB106
	.uleb128 0x2c
	.string	"k"
	.byte	0x1
	.value	0x15c4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF964
	.byte	0x1
	.value	0x15ef
	.long	0x1539
	.quad	.LFB122
	.quad	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.long	0x5cb6
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x15ef
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB107
	.quad	.LBE107-.LBB107
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x15f2
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF965
	.byte	0x1
	.value	0x15fc
	.long	0x1539
	.quad	.LFB123
	.quad	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.long	0x5ce6
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x15fc
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF966
	.byte	0x1
	.value	0x1603
	.long	0x1539
	.quad	.LFB124
	.quad	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d25
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1603
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1605
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.byte	0
	.uleb128 0x31
	.long	.LASF967
	.byte	0x1
	.value	0x160a
	.long	0x1539
	.quad	.LFB125
	.quad	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d55
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x160a
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF968
	.byte	0x1
	.value	0x1630
	.long	0x1539
	.quad	.LFB126
	.quad	.LFE126-.LFB126
	.uleb128 0x1
	.byte	0x9c
	.long	0x5d94
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1630
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1632
	.long	0x13a0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.byte	0
	.uleb128 0x31
	.long	.LASF969
	.byte	0x1
	.value	0x1637
	.long	0x1539
	.quad	.LFB127
	.quad	.LFE127-.LFB127
	.uleb128 0x1
	.byte	0x9c
	.long	0x5dd2
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1637
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1639
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x31
	.long	.LASF970
	.byte	0x1
	.value	0x1655
	.long	0x1539
	.quad	.LFB128
	.quad	.LFE128-.LFB128
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e57
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1655
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1657
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x33
	.quad	.LBB108
	.quad	.LBE108-.LBB108
	.long	0x5e35
	.uleb128 0x2d
	.long	.LASF971
	.byte	0x1
	.value	0x165e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x29
	.quad	.LBB109
	.quad	.LBE109-.LBB109
	.uleb128 0x2d
	.long	.LASF971
	.byte	0x1
	.value	0x1671
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x37
	.long	.LASF972
	.byte	0x1
	.value	0x1680
	.long	0x1539
	.quad	.LFB129
	.quad	.LFE129-.LFB129
	.uleb128 0x1
	.byte	0x9c
	.long	0x5e87
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1680
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF973
	.byte	0x1
	.value	0x1687
	.long	0x1539
	.quad	.LFB130
	.quad	.LFE130-.LFB130
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f07
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1687
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1689
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB110
	.quad	.LBE110-.LBB110
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x168b
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB111
	.quad	.LBE111-.LBB111
	.uleb128 0x2d
	.long	.LASF974
	.byte	0x1
	.value	0x168d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x37
	.long	.LASF975
	.byte	0x1
	.value	0x169d
	.long	0x1539
	.quad	.LFB131
	.quad	.LFE131-.LFB131
	.uleb128 0x1
	.byte	0x9c
	.long	0x5f37
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x169d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF976
	.byte	0x1
	.value	0x16a3
	.long	0x1539
	.quad	.LFB132
	.quad	.LFE132-.LFB132
	.uleb128 0x1
	.byte	0x9c
	.long	0x5ff9
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x16a3
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2d
	.long	.LASF977
	.byte	0x1
	.value	0x16a5
	.long	0x1521
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x33
	.quad	.LBB112
	.quad	.LBE112-.LBB112
	.long	0x5fab
	.uleb128 0x2c
	.string	"svp"
	.byte	0x1
	.value	0x16a7
	.long	0x20cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF978
	.byte	0x1
	.value	0x16a8
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0x29
	.quad	.LBB113
	.quad	.LBE113-.LBB113
	.uleb128 0x2d
	.long	.LASF789
	.byte	0x1
	.value	0x16c0
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF790
	.byte	0x1
	.value	0x16c1
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"oa"
	.byte	0x1
	.value	0x16c2
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2d
	.long	.LASF978
	.byte	0x1
	.value	0x16c3
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF979
	.byte	0x1
	.value	0x16d4
	.long	0x1539
	.quad	.LFB133
	.quad	.LFE133-.LFB133
	.uleb128 0x1
	.byte	0x9c
	.long	0x6029
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x16d4
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF980
	.byte	0x1
	.value	0x16e0
	.long	0x1539
	.quad	.LFB134
	.quad	.LFE134-.LFB134
	.uleb128 0x1
	.byte	0x9c
	.long	0x60cc
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x16e0
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x16e2
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x33
	.quad	.LBB114
	.quad	.LBE114-.LBB114
	.long	0x60aa
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x16e5
	.long	0x3d46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x29
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x16e8
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1700
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF981
	.byte	0x1
	.value	0x170e
	.long	0x1539
	.quad	.LFB135
	.quad	.LFE135-.LFB135
	.uleb128 0x1
	.byte	0x9c
	.long	0x610b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x170e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1710
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF982
	.byte	0x1
	.value	0x1723
	.long	0x1539
	.quad	.LFB136
	.quad	.LFE136-.LFB136
	.uleb128 0x1
	.byte	0x9c
	.long	0x614a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1723
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1725
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF983
	.byte	0x1
	.value	0x1737
	.long	0x1539
	.quad	.LFB137
	.quad	.LFE137-.LFB137
	.uleb128 0x1
	.byte	0x9c
	.long	0x61aa
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1737
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF236
	.byte	0x1
	.value	0x1739
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x29
	.quad	.LBB117
	.quad	.LBE117-.LBB117
	.uleb128 0x2d
	.long	.LASF984
	.byte	0x1
	.value	0x173c
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF985
	.byte	0x1
	.value	0x1753
	.long	0x1539
	.quad	.LFB138
	.quad	.LFE138-.LFB138
	.uleb128 0x1
	.byte	0x9c
	.long	0x6217
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1753
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF986
	.byte	0x1
	.value	0x1755
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB118
	.quad	.LBE118-.LBB118
	.uleb128 0x2c
	.string	"k"
	.byte	0x1
	.value	0x175b
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x175c
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2f
	.long	.LASF987
	.byte	0x1
	.value	0x1792
	.quad	.LFB139
	.quad	.LFE139-.LFB139
	.uleb128 0x1
	.byte	0x9c
	.long	0x628b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1792
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1794
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2c
	.string	"k"
	.byte	0x1
	.value	0x1795
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF988
	.byte	0x1
	.value	0x1796
	.long	0x57
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1797
	.long	0x1556
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF989
	.byte	0x1
	.value	0x1798
	.long	0x112
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x31
	.long	.LASF990
	.byte	0x1
	.value	0x17d7
	.long	0x1539
	.quad	.LFB140
	.quad	.LFE140-.LFB140
	.uleb128 0x1
	.byte	0x9c
	.long	0x62ea
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x17d7
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x17d9
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x29
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.uleb128 0x2d
	.long	.LASF954
	.byte	0x1
	.value	0x17ea
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF991
	.byte	0x1
	.value	0x180e
	.long	0x1539
	.quad	.LFB141
	.quad	.LFE141-.LFB141
	.uleb128 0x1
	.byte	0x9c
	.long	0x635c
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x180e
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB120
	.quad	.LBE120-.LBB120
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1811
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x29
	.quad	.LBB121
	.quad	.LBE121-.LBB121
	.uleb128 0x2d
	.long	.LASF992
	.byte	0x1
	.value	0x1813
	.long	0x79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF993
	.byte	0x1
	.value	0x181f
	.long	0x1539
	.quad	.LFB142
	.quad	.LFE142-.LFB142
	.uleb128 0x1
	.byte	0x9c
	.long	0x6599
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x181f
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2d
	.long	.LASF994
	.byte	0x1
	.value	0x1821
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2c
	.string	"o2"
	.byte	0x1
	.value	0x1823
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2d
	.long	.LASF995
	.byte	0x1
	.value	0x1824
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2d
	.long	.LASF904
	.byte	0x1
	.value	0x1825
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2c
	.string	"cv"
	.byte	0x1
	.value	0x1826
	.long	0x154a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2d
	.long	.LASF996
	.byte	0x1
	.value	0x1827
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF997
	.byte	0x1
	.value	0x1828
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x2c
	.string	"arg"
	.byte	0x1
	.value	0x1829
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2d
	.long	.LASF998
	.byte	0x1
	.value	0x182a
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x2c
	.string	"e"
	.byte	0x1
	.value	0x182b
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x182c
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2e
	.long	.LASF999
	.byte	0x1
	.value	0x18cd
	.quad	.L1927
	.uleb128 0x2e
	.long	.LASF1000
	.byte	0x1
	.value	0x18e4
	.quad	.L1910
	.uleb128 0x2e
	.long	.LASF1001
	.byte	0x1
	.value	0x1890
	.quad	.L1932
	.uleb128 0x33
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.long	0x64af
	.uleb128 0x2d
	.long	.LASF866
	.byte	0x1
	.value	0x1831
	.long	0x3d46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x29
	.quad	.LBB123
	.quad	.LBE123-.LBB123
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x1836
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x33
	.quad	.LBB124
	.quad	.LBE124-.LBB124
	.long	0x64d3
	.uleb128 0x2c
	.string	"o"
	.byte	0x1
	.value	0x1844
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x33
	.quad	.LBB125
	.quad	.LBE125-.LBB125
	.long	0x6536
	.uleb128 0x2d
	.long	.LASF1002
	.byte	0x1
	.value	0x1871
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x29
	.quad	.LBB126
	.quad	.LBE126-.LBB126
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x187c
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2d
	.long	.LASF1003
	.byte	0x1
	.value	0x187d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2c
	.string	"n"
	.byte	0x1
	.value	0x187e
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x33
	.quad	.LBB127
	.quad	.LBE127-.LBB127
	.long	0x6568
	.uleb128 0x2c
	.string	"p"
	.byte	0x1
	.value	0x189e
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2c
	.string	"s"
	.byte	0x1
	.value	0x189f
	.long	0x7f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -189
	.byte	0
	.uleb128 0x29
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x18cf
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2c
	.string	"sib"
	.byte	0x1
	.value	0x18d0
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x37
	.long	.LASF1004
	.byte	0x1
	.value	0x18f6
	.long	0x1539
	.quad	.LFB143
	.quad	.LFE143-.LFB143
	.uleb128 0x1
	.byte	0x9c
	.long	0x65c9
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x18f6
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF1005
	.byte	0x1
	.value	0x18fd
	.long	0x1539
	.quad	.LFB144
	.quad	.LFE144-.LFB144
	.uleb128 0x1
	.byte	0x9c
	.long	0x661a
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x18fd
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB129
	.quad	.LBE129-.LBB129
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1900
	.long	0x3d46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x31
	.long	.LASF1006
	.byte	0x1
	.value	0x190f
	.long	0x1539
	.quad	.LFB145
	.quad	.LFE145-.LFB145
	.uleb128 0x1
	.byte	0x9c
	.long	0x666b
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x190f
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x29
	.quad	.LBB130
	.quad	.LBE130-.LBB130
	.uleb128 0x2c
	.string	"kid"
	.byte	0x1
	.value	0x1913
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2a
	.long	.LASF1007
	.byte	0x1
	.value	0x1923
	.quad	.LFB146
	.quad	.LFE146-.LFB146
	.uleb128 0x1
	.byte	0x9c
	.long	0x6a26
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1923
	.long	0x1539
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF1008
	.byte	0x1
	.value	0x1925
	.long	0x1539
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2c
	.string	"n_a"
	.byte	0x1
	.value	0x1926
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.uleb128 0x2e
	.long	.LASF1009
	.byte	0x1
	.value	0x196a
	.quad	.L2007
	.uleb128 0x2e
	.long	.LASF1010
	.byte	0x1
	.value	0x1986
	.quad	.L1987
	.uleb128 0x33
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.long	0x6728
	.uleb128 0x2c
	.string	"pop"
	.byte	0x1
	.value	0x1991
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x2c
	.string	"i"
	.byte	0x1
	.value	0x1993
	.long	0x134
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x29
	.quad	.LBB132
	.quad	.LBE132-.LBB132
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x199d
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.byte	0
	.byte	0
	.uleb128 0x33
	.quad	.LBB133
	.quad	.LBE133-.LBB133
	.long	0x676e
	.uleb128 0x2c
	.string	"gv"
	.byte	0x1
	.value	0x19bf
	.long	0x1556
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x29
	.quad	.LBB134
	.quad	.LBE134-.LBB134
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x19c2
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.byte	0
	.byte	0
	.uleb128 0x33
	.quad	.LBB135
	.quad	.LBE135-.LBB135
	.long	0x6794
	.uleb128 0x2d
	.long	.LASF714
	.byte	0x1
	.value	0x1a06
	.long	0x13c1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -340
	.byte	0
	.uleb128 0x33
	.quad	.LBB136
	.quad	.LBE136-.LBB136
	.long	0x6839
	.uleb128 0x2c
	.string	"rop"
	.byte	0x1
	.value	0x1a13
	.long	0x2bac
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x2d
	.long	.LASF1011
	.byte	0x1
	.value	0x1a14
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x2d
	.long	.LASF1012
	.byte	0x1
	.value	0x1a15
	.long	0x6a26
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x2c
	.string	"svp"
	.byte	0x1
	.value	0x1a16
	.long	0x20cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x2d
	.long	.LASF1013
	.byte	0x1
	.value	0x1a16
	.long	0x20cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x1a16
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x2c
	.string	"ind"
	.byte	0x1
	.value	0x1a17
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x2c
	.string	"key"
	.byte	0x1
	.value	0x1a18
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2d
	.long	.LASF1014
	.byte	0x1
	.value	0x1a19
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.byte	0
	.uleb128 0x33
	.quad	.LBB137
	.quad	.LBE137-.LBB137
	.long	0x68fe
	.uleb128 0x2c
	.string	"rop"
	.byte	0x1
	.value	0x1a50
	.long	0x2bac
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x2d
	.long	.LASF1011
	.byte	0x1
	.value	0x1a51
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2d
	.long	.LASF1012
	.byte	0x1
	.value	0x1a52
	.long	0x6a26
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2c
	.string	"svp"
	.byte	0x1
	.value	0x1a53
	.long	0x20cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2d
	.long	.LASF1013
	.byte	0x1
	.value	0x1a53
	.long	0x20cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2c
	.string	"sv"
	.byte	0x1
	.value	0x1a53
	.long	0x13de
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.string	"ind"
	.byte	0x1
	.value	0x1a54
	.long	0x13ab
	.uleb128 0x3
	.byte	0x91
	.sleb128 -332
	.uleb128 0x2c
	.string	"key"
	.byte	0x1
	.value	0x1a55
	.long	0x79
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2d
	.long	.LASF1014
	.byte	0x1
	.value	0x1a56
	.long	0x15c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x2d
	.long	.LASF1015
	.byte	0x1
	.value	0x1a57
	.long	0x3d46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2d
	.long	.LASF1016
	.byte	0x1
	.value	0x1a57
	.long	0x3d46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.byte	0
	.uleb128 0x33
	.quad	.LBB138
	.quad	.LBE138-.LBB138
	.long	0x6987
	.uleb128 0x2d
	.long	.LASF1017
	.byte	0x1
	.value	0x1a91
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2d
	.long	.LASF1018
	.byte	0x1
	.value	0x1a91
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x2c
	.string	"o2"
	.byte	0x1
	.value	0x1a92
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x29
	.quad	.LBB139
	.quad	.LBE139-.LBB139
	.uleb128 0x2d
	.long	.LASF1019
	.byte	0x1
	.value	0x1a9c
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x29
	.quad	.LBB140
	.quad	.LBE140-.LBB140
	.uleb128 0x2d
	.long	.LASF1020
	.byte	0x1
	.value	0x1aa0
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x29
	.quad	.LBB141
	.quad	.LBE141-.LBB141
	.uleb128 0x2d
	.long	.LASF1021
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF1022
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2d
	.long	.LASF1023
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF1024
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2d
	.long	.LASF1025
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2d
	.long	.LASF1026
	.byte	0x1
	.value	0x1b07
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF1002
	.byte	0x1
	.value	0x1b08
	.long	0x1539
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x2d
	.long	.LASF941
	.byte	0x1
	.value	0x1b09
	.long	0x3550
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x2d
	.long	.LASF1027
	.byte	0x1
	.value	0x1b09
	.long	0x3550
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1556
	.uleb128 0x31
	.long	.LASF1028
	.byte	0x1
	.value	0x1b6b
	.long	0x79
	.quad	.LFB147
	.quad	.LFE147-.LFB147
	.uleb128 0x1
	.byte	0x9c
	.long	0x6a88
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1b6b
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF1029
	.byte	0x1
	.value	0x1b6d
	.long	0x134
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF1030
	.byte	0x1
	.value	0x1b6e
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"he"
	.byte	0x1
	.value	0x1b6f
	.long	0x22f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x31
	.long	.LASF1031
	.byte	0x1
	.value	0x1b7d
	.long	0x79
	.quad	.LFB148
	.quad	.LFE148-.LFB148
	.uleb128 0x1
	.byte	0x9c
	.long	0x6ae4
	.uleb128 0x2b
	.string	"o"
	.byte	0x1
	.value	0x1b7d
	.long	0x1539
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF1029
	.byte	0x1
	.value	0x1b7f
	.long	0x134
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF1030
	.byte	0x1
	.value	0x1b80
	.long	0x13de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2c
	.string	"he"
	.byte	0x1
	.value	0x1b81
	.long	0x22f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2f
	.long	.LASF1032
	.byte	0x1
	.value	0x1b94
	.quad	.LFB149
	.quad	.LFE149-.LFB149
	.uleb128 0x1
	.byte	0x9c
	.long	0x6b6a
	.uleb128 0x2b
	.string	"cv"
	.byte	0x1
	.value	0x1b94
	.long	0x154a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2c
	.string	"sp"
	.byte	0x1
	.value	0x1b96
	.long	0x20cc
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x2d
	.long	.LASF1033
	.byte	0x1
	.value	0x1b96
	.long	0x20cc
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x2c
	.string	"ax"
	.byte	0x1
	.value	0x1b96
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.long	.LASF1034
	.byte	0x1
	.value	0x1b96
	.long	0x13ab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x29
	.quad	.LBB142
	.quad	.LBE142-.LBB142
	.uleb128 0x2d
	.long	.LASF1035
	.byte	0x1
	.value	0x1b9f
	.long	0x134
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x8
	.long	0x79
	.long	0x6b75
	.uleb128 0x20
	.byte	0
	.uleb128 0x3c
	.long	.LASF1036
	.byte	0x15
	.byte	0x1e
	.long	0x6b6a
	.uleb128 0x34
	.long	.LASF1037
	.byte	0x15
	.value	0x185
	.long	0x6b6a
	.uleb128 0x34
	.long	.LASF1038
	.byte	0x15
	.value	0x2f1
	.long	0x239d
	.uleb128 0x8
	.long	0x6ba3
	.long	0x6ba3
	.uleb128 0x20
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x6ba9
	.uleb128 0x1f
	.long	0x1539
	.long	0x6bb8
	.uleb128 0x18
	.long	0x1539
	.byte	0
	.uleb128 0x34
	.long	.LASF1039
	.byte	0x15
	.value	0x457
	.long	0x6b98
	.uleb128 0x8
	.long	0x13b6
	.long	0x6bcf
	.uleb128 0x20
	.byte	0
	.uleb128 0x34
	.long	.LASF1040
	.byte	0x15
	.value	0x5be
	.long	0x6bc4
	.uleb128 0x3c
	.long	.LASF1041
	.byte	0x16
	.byte	0x17
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1042
	.byte	0x16
	.byte	0x18
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1043
	.byte	0x16
	.byte	0x34
	.long	0x1396
	.uleb128 0x3c
	.long	.LASF1044
	.byte	0x16
	.byte	0x3b
	.long	0x13b6
	.uleb128 0x3c
	.long	.LASF1045
	.byte	0x16
	.byte	0x50
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1046
	.byte	0x16
	.byte	0x52
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1047
	.byte	0x16
	.byte	0x53
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1048
	.byte	0x16
	.byte	0x5d
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1049
	.byte	0x16
	.byte	0x79
	.long	0x1556
	.uleb128 0x3c
	.long	.LASF1050
	.byte	0x16
	.byte	0x81
	.long	0x1521
	.uleb128 0x3c
	.long	.LASF1051
	.byte	0x16
	.byte	0x83
	.long	0x13de
	.uleb128 0x3c
	.long	.LASF1052
	.byte	0x16
	.byte	0x84
	.long	0x155c
	.uleb128 0x3c
	.long	.LASF1053
	.byte	0x16
	.byte	0x85
	.long	0x155c
	.uleb128 0x3c
	.long	.LASF1054
	.byte	0x16
	.byte	0x86
	.long	0x155c
	.uleb128 0x3c
	.long	.LASF1055
	.byte	0x16
	.byte	0x87
	.long	0x155c
	.uleb128 0x3c
	.long	.LASF1056
	.byte	0x16
	.byte	0x89
	.long	0x13b6
	.uleb128 0x3c
	.long	.LASF1057
	.byte	0x16
	.byte	0x98
	.long	0x7f
	.uleb128 0x3c
	.long	.LASF1058
	.byte	0x16
	.byte	0x99
	.long	0x79
	.uleb128 0x3c
	.long	.LASF1059
	.byte	0x16
	.byte	0x9d
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1060
	.byte	0x16
	.byte	0x9e
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1061
	.byte	0x16
	.byte	0x9f
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1062
	.byte	0x16
	.byte	0xa0
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1063
	.byte	0x16
	.byte	0xa4
	.long	0x13c1
	.uleb128 0x3c
	.long	.LASF1064
	.byte	0x16
	.byte	0xcf
	.long	0x1df
	.uleb128 0x3c
	.long	.LASF1065
	.byte	0x16
	.byte	0xd1
	.long	0x154a
	.uleb128 0x3c
	.long	.LASF1066
	.byte	0x16
	.byte	0xd3
	.long	0x155c
	.uleb128 0x3c
	.long	.LASF1067
	.byte	0x16
	.byte	0xdd
	.long	0x57
	.uleb128 0x3c
	.long	.LASF1068
	.byte	0x16
	.byte	0xf3
	.long	0x13b6
	.uleb128 0x3c
	.long	.LASF1069
	.byte	0x16
	.byte	0xf4
	.long	0x13a0
	.uleb128 0x34
	.long	.LASF1070
	.byte	0x16
	.value	0x112
	.long	0x2386
	.uleb128 0x34
	.long	.LASF1071
	.byte	0x16
	.value	0x125
	.long	0x881
	.uleb128 0x34
	.long	.LASF1072
	.byte	0x16
	.value	0x126
	.long	0x881
	.uleb128 0x34
	.long	.LASF1073
	.byte	0x16
	.value	0x144
	.long	0x79
	.uleb128 0x34
	.long	.LASF1074
	.byte	0x16
	.value	0x145
	.long	0x79
	.uleb128 0x34
	.long	.LASF1075
	.byte	0x16
	.value	0x148
	.long	0x57
	.uleb128 0x34
	.long	.LASF1076
	.byte	0x16
	.value	0x14b
	.long	0x13ab
	.uleb128 0x34
	.long	.LASF1077
	.byte	0x16
	.value	0x14f
	.long	0x13ab
	.uleb128 0x34
	.long	.LASF1078
	.byte	0x16
	.value	0x150
	.long	0x13ab
	.uleb128 0x34
	.long	.LASF1079
	.byte	0x16
	.value	0x15c
	.long	0x13ab
	.uleb128 0x34
	.long	.LASF1080
	.byte	0x16
	.value	0x15d
	.long	0x1521
	.uleb128 0x34
	.long	.LASF1081
	.byte	0x16
	.value	0x162
	.long	0x13b6
	.uleb128 0x34
	.long	.LASF1082
	.byte	0x16
	.value	0x198
	.long	0x57
	.uleb128 0x34
	.long	.LASF1083
	.byte	0x16
	.value	0x19e
	.long	0x57
	.uleb128 0x34
	.long	.LASF1084
	.byte	0x16
	.value	0x1f6
	.long	0x1521
	.uleb128 0x34
	.long	.LASF1085
	.byte	0x16
	.value	0x1f7
	.long	0x1521
	.uleb128 0x3c
	.long	.LASF1086
	.byte	0x17
	.byte	0x22
	.long	0x20cc
	.uleb128 0x3c
	.long	.LASF1087
	.byte	0x17
	.byte	0x26
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1088
	.byte	0x17
	.byte	0x28
	.long	0x20cc
	.uleb128 0x3c
	.long	.LASF1089
	.byte	0x17
	.byte	0x2a
	.long	0x20cc
	.uleb128 0x3c
	.long	.LASF1090
	.byte	0x17
	.byte	0x2b
	.long	0x20cc
	.uleb128 0x3c
	.long	.LASF1091
	.byte	0x17
	.byte	0x2e
	.long	0x13ab
	.uleb128 0x3c
	.long	.LASF1092
	.byte	0x17
	.byte	0x31
	.long	0x6e27
	.uleb128 0x6
	.byte	0x8
	.long	0x12e7
	.uleb128 0x3c
	.long	.LASF1093
	.byte	0x17
	.byte	0x33
	.long	0x13ab
	.uleb128 0x3c
	.long	.LASF1094
	.byte	0x17
	.byte	0x34
	.long	0x13ab
	.uleb128 0x3c
	.long	.LASF1095
	.byte	0x17
	.byte	0x38
	.long	0x13ab
	.uleb128 0x3c
	.long	.LASF1096
	.byte	0x17
	.byte	0x3c
	.long	0x1451
	.uleb128 0x3c
	.long	.LASF1097
	.byte	0x17
	.byte	0x3d
	.long	0x1451
	.uleb128 0x3c
	.long	.LASF1098
	.byte	0x17
	.byte	0x43
	.long	0x13de
	.uleb128 0x3c
	.long	.LASF1099
	.byte	0x17
	.byte	0x44
	.long	0x6e7a
	.uleb128 0x6
	.byte	0x8
	.long	0xcac
	.uleb128 0x3c
	.long	.LASF1100
	.byte	0x17
	.byte	0x7d
	.long	0x1521
	.uleb128 0x3c
	.long	.LASF1101
	.byte	0x17
	.byte	0x7e
	.long	0x1521
	.uleb128 0x3c
	.long	.LASF1102
	.byte	0x17
	.byte	0x81
	.long	0x6ea1
	.uleb128 0x7
	.long	0x2100
	.uleb128 0x3c
	.long	.LASF1103
	.byte	0x17
	.byte	0x82
	.long	0xaa
	.uleb128 0x3c
	.long	.LASF1104
	.byte	0x17
	.byte	0x88
	.long	0x6ebc
	.uleb128 0x6
	.byte	0x8
	.long	0x226e
	.uleb128 0x3c
	.long	.LASF1105
	.byte	0x17
	.byte	0x97
	.long	0x13ab
	.uleb128 0x3c
	.long	.LASF1106
	.byte	0x17
	.byte	0x9d
	.long	0x1539
	.uleb128 0x3c
	.long	.LASF1107
	.byte	0x17
	.byte	0xe3
	.long	0x23e2
	.uleb128 0x3c
	.long	.LASF1108
	.byte	0x17
	.byte	0xe5
	.long	0x23ff
	.uleb128 0x3c
	.long	.LASF1109
	.byte	0x17
	.byte	0xed
	.long	0x2430
	.uleb128 0x34
	.long	.LASF1110
	.byte	0x17
	.value	0x115
	.long	0x155c
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x15
	.byte	0
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF785:
	.string	"Perl_gen_constant_list"
.LASF598:
	.string	"OP_ESERVENT"
.LASF831:
	.string	"nextmin"
.LASF523:
	.string	"OP_FTSVTX"
.LASF86:
	.string	"precomp"
.LASF476:
	.string	"OP_SYSREAD"
.LASF875:
	.string	"trueop"
.LASF118:
	.string	"blku_oldretsp"
.LASF493:
	.string	"OP_SHUTDOWN"
.LASF569:
	.string	"OP_MSGRCV"
.LASF669:
	.string	"si_prev"
.LASF977:
	.string	"table"
.LASF816:
	.string	"tlast"
.LASF611:
	.string	"OP_LOCK"
.LASF964:
	.string	"Perl_ck_index"
.LASF616:
	.string	"OP_max"
.LASF23:
	.string	"op_next"
.LASF258:
	.string	"xiou_any"
.LASF527:
	.string	"OP_CHDIR"
.LASF441:
	.string	"OP_ENTER"
.LASF1015:
	.string	"first_key_op"
.LASF292:
	.string	"OP_REGCMAYBE"
.LASF115:
	.string	"block"
.LASF422:
	.string	"OP_FLOP"
.LASF460:
	.string	"OP_BINMODE"
.LASF1022:
	.string	"theirmark"
.LASF171:
	.string	"xpvgv"
.LASF48:
	.string	"logop"
.LASF862:
	.string	"listval"
.LASF944:
	.string	"Perl_ck_exists"
.LASF193:
	.string	"xio_ifp"
.LASF352:
	.string	"OP_SEQ"
.LASF38:
	.string	"cop_io"
.LASF663:
	.string	"stackinfo"
.LASF878:
	.string	"Perl_newRANGE"
.LASF758:
	.string	"S_my_kid"
.LASF514:
	.string	"OP_FTSOCK"
.LASF165:
	.string	"xhv_keys"
.LASF208:
	.string	"xio_flags"
.LASF590:
	.string	"OP_GSERVENT"
.LASF872:
	.string	"otherp"
.LASF212:
	.string	"svt_set"
.LASF909:
	.string	"done"
.LASF161:
	.string	"xpvhv"
.LASF1001:
	.string	"again"
.LASF705:
	.string	"lastpmop"
.LASF1011:
	.string	"lexname"
.LASF1090:
	.string	"PL_stack_max"
.LASF1113:
	.string	"/home/yunqi/SPEC2006/benchspec/CPU2006/400.perlbench/build/build_base_amd64-m64-gcc43-nn.0000"
.LASF481:
	.string	"OP_TELL"
.LASF553:
	.string	"OP_SETPGRP"
.LASF1085:
	.string	"PL_custom_op_descs"
.LASF1058:
	.string	"PL_op_mask"
.LASF911:
	.string	"not_safe"
.LASF508:
	.string	"OP_FTROWNED"
.LASF104:
	.string	"gp_hv"
.LASF721:
	.string	"func_ops"
.LASF956:
	.string	"priv"
.LASF192:
	.string	"xpvio"
.LASF497:
	.string	"OP_GETPEERNAME"
.LASF351:
	.string	"OP_SGE"
.LASF139:
	.string	"xpviv"
.LASF1110:
	.string	"PL_comppad"
.LASF655:
	.string	"sbu_targ"
.LASF17:
	.string	"overflow_arg_area"
.LASF491:
	.string	"OP_LISTEN"
.LASF349:
	.string	"OP_SGT"
.LASF951:
	.string	"Perl_ck_ftst"
.LASF882:
	.string	"leftstart"
.LASF563:
	.string	"OP_SHMCTL"
.LASF890:
	.string	"next"
.LASF321:
	.string	"OP_DIVIDE"
.LASF928:
	.string	"Perl_newGVREF"
.LASF18:
	.string	"reg_save_area"
.LASF180:
	.string	"xcv_start"
.LASF962:
	.string	"Perl_ck_grep"
.LASF1100:
	.string	"PL_defstash"
.LASF101:
	.string	"gp_io"
.LASF885:
	.string	"once"
.LASF834:
	.string	"Perl_pmruntime"
.LASF105:
	.string	"gp_egv"
.LASF778:
	.string	"Perl_newPROG"
.LASF988:
	.string	"descending"
.LASF1050:
	.string	"PL_debstash"
.LASF647:
	.string	"sbu_iters"
.LASF366:
	.string	"OP_SRAND"
.LASF827:
	.string	"to_utf"
.LASF897:
	.string	"iterpflags"
.LASF676:
	.string	"hek_hash"
.LASF820:
	.string	"rdiff"
.LASF36:
	.string	"cop_line"
.LASF179:
	.string	"xcv_stash"
.LASF332:
	.string	"OP_LEFT_SHIFT"
.LASF873:
	.string	"warnop"
.LASF1014:
	.string	"keylen"
.LASF599:
	.string	"OP_GPWNAM"
.LASF835:
	.string	"rcop"
.LASF923:
	.string	"Perl_newANONSUB"
.LASF184:
	.string	"xcv_gv"
.LASF462:
	.string	"OP_UNTIE"
.LASF989:
	.string	"gvname"
.LASF363:
	.string	"OP_SIN"
.LASF670:
	.string	"si_next"
.LASF708:
	.string	"Perl_op_refcnt_lock"
.LASF550:
	.string	"OP_KILL"
.LASF1033:
	.string	"mark"
.LASF959:
	.string	"namesv"
.LASF136:
	.string	"xpv_cur"
.LASF1037:
	.string	"PL_op_desc"
.LASF1073:
	.string	"PL_bufptr"
.LASF797:
	.string	"Perl_newUNOP"
.LASF949:
	.string	"badtype"
.LASF290:
	.string	"OP_READLINE"
.LASF303:
	.string	"OP_SCHOP"
.LASF129:
	.string	"mg_type"
.LASF536:
	.string	"OP_READLINK"
.LASF981:
	.string	"Perl_ck_return"
.LASF39:
	.string	"UNOP"
.LASF73:
	.string	"op_lastop"
.LASF1107:
	.string	"PL_peepp"
.LASF135:
	.string	"xpv_pv"
.LASF1114:
	.string	"opcode"
.LASF1040:
	.string	"PL_opargs"
.LASF429:
	.string	"OP_METHOD"
.LASF934:
	.string	"Perl_ck_bitop"
.LASF306:
	.string	"OP_DEFINED"
.LASF148:
	.string	"xpvmg"
.LASF654:
	.string	"sbu_dstr"
.LASF1105:
	.string	"PL_modcount"
.LASF800:
	.string	"Perl_pmtrans"
.LASF1060:
	.string	"PL_main_start"
.LASF544:
	.string	"OP_CLOSEDIR"
.LASF571:
	.string	"OP_SEMCTL"
.LASF447:
	.string	"OP_LEAVELOOP"
.LASF538:
	.string	"OP_RMDIR"
.LASF49:
	.string	"op_other"
.LASF477:
	.string	"OP_SYSWRITE"
.LASF256:
	.string	"cv_flags_t"
.LASF845:
	.string	"aver"
.LASF109:
	.string	"gp_line"
.LASF608:
	.string	"OP_EGRENT"
.LASF874:
	.string	"Perl_newCONDOP"
.LASF1038:
	.string	"PL_ppaddr"
.LASF791:
	.string	"Perl_append_list"
.LASF1007:
	.string	"Perl_peep"
.LASF646:
	.string	"subst"
.LASF198:
	.string	"xio_page_len"
.LASF305:
	.string	"OP_SCHOMP"
.LASF879:
	.string	"range"
.LASF836:
	.string	"repl_has_vars"
.LASF865:
	.string	"optype"
.LASF471:
	.string	"OP_LEAVEWRITE"
.LASF350:
	.string	"OP_SLE"
.LASF145:
	.string	"xpvnv"
.LASF172:
	.string	"xgv_gp"
.LASF22:
	.string	"__va_list_tag"
.LASF348:
	.string	"OP_SLT"
.LASF404:
	.string	"OP_JOIN"
.LASF128:
	.string	"mg_private"
.LASF1098:
	.string	"PL_Sv"
.LASF304:
	.string	"OP_CHOMP"
.LASF1054:
	.string	"PL_checkav"
.LASF737:
	.string	"Perl_ref"
.LASF653:
	.string	"sbu_orig"
.LASF884:
	.string	"debuggable"
.LASF963:
	.string	"gwop"
.LASF397:
	.string	"OP_EXISTS"
.LASF950:
	.string	"badthing"
.LASF770:
	.string	"Perl_scope"
.LASF993:
	.string	"Perl_ck_subr"
.LASF1084:
	.string	"PL_custom_op_names"
.LASF898:
	.string	"Perl_newLOOPEX"
.LASF158:
	.string	"xav_arylen"
.LASF98:
	.string	"program"
.LASF863:
	.string	"S_list_assignment"
.LASF1029:
	.string	"index"
.LASF63:
	.string	"PADOP"
.LASF752:
	.string	"i_PeRlHaSh"
.LASF1067:
	.string	"PL_generation"
.LASF767:
	.string	"desc"
.LASF626:
	.string	"old_in_eval"
.LASF674:
	.string	"hent_hek"
.LASF127:
	.string	"mg_virtual"
.LASF736:
	.string	"Perl_refkids"
.LASF446:
	.string	"OP_ENTERLOOP"
.LASF265:
	.string	"OP_STUB"
.LASF783:
	.string	"curop"
.LASF1062:
	.string	"PL_eval_start"
.LASF34:
	.string	"cop_seq"
.LASF456:
	.string	"OP_CLOSE"
.LASF861:
	.string	"subscript"
.LASF353:
	.string	"OP_SNE"
.LASF1005:
	.string	"Perl_ck_trunc"
.LASF79:
	.string	"sv_flags"
.LASF1083:
	.string	"PL_glob_index"
.LASF560:
	.string	"OP_ALARM"
.LASF341:
	.string	"OP_I_GE"
.LASF337:
	.string	"OP_I_GT"
.LASF76:
	.string	"broiled"
.LASF203:
	.string	"xio_fmt_gv"
.LASF937:
	.string	"Perl_ck_delete"
.LASF1002:
	.string	"gvop"
.LASF927:
	.string	"Perl_newAVREF"
.LASF461:
	.string	"OP_TIE"
.LASF294:
	.string	"OP_REGCOMP"
.LASF108:
	.string	"gp_flags"
.LASF114:
	.string	"cx_u"
.LASF302:
	.string	"OP_CHOP"
.LASF100:
	.string	"gp_refcnt"
.LASF1076:
	.string	"PL_multi_end"
.LASF637:
	.string	"itervar"
.LASF94:
	.string	"nparens"
.LASF576:
	.string	"OP_LEAVEEVAL"
.LASF236:
	.string	"type"
.LASF465:
	.string	"OP_DBMCLOSE"
.LASF1070:
	.string	"PL_runops"
.LASF716:
	.string	"Perl___notused"
.LASF319:
	.string	"OP_MULTIPLY"
.LASF428:
	.string	"OP_ORASSIGN"
.LASF757:
	.string	"sstr"
.LASF110:
	.string	"gp_file"
.LASF494:
	.string	"OP_GSOCKOPT"
.LASF197:
	.string	"xio_page"
.LASF592:
	.string	"OP_SNETENT"
.LASF434:
	.string	"OP_WARN"
.LASF562:
	.string	"OP_SHMGET"
.LASF867:
	.string	"Perl_newSTATEOP"
.LASF370:
	.string	"OP_INT"
.LASF584:
	.string	"OP_GNETENT"
.LASF848:
	.string	"veop"
.LASF551:
	.string	"OP_GETPPID"
.LASF729:
	.string	"restore_2cv"
.LASF978:
	.string	"mode"
.LASF374:
	.string	"OP_LENGTH"
.LASF295:
	.string	"OP_MATCH"
.LASF187:
	.string	"xcv_padlist"
.LASF519:
	.string	"OP_FTPIPE"
.LASF14:
	.string	"__gnuc_va_list"
.LASF812:
	.string	"tend"
.LASF1008:
	.string	"oldop"
.LASF645:
	.string	"blku_loop"
.LASF727:
	.string	"nomod"
.LASF763:
	.string	"Perl_sawparens"
.LASF358:
	.string	"OP_NEGATE"
.LASF733:
	.string	"S_scalar_mod_type"
.LASF99:
	.string	"gp_sv"
.LASF0:
	.string	"unsigned char"
.LASF64:
	.string	"padop"
.LASF597:
	.string	"OP_EPROTOENT"
.LASF373:
	.string	"OP_ABS"
.LASF234:
	.string	"PerlIO"
.LASF889:
	.string	"redo"
.LASF759:
	.string	"Perl_my_attrs"
.LASF656:
	.string	"sbu_s"
.LASF1065:
	.string	"PL_compcv"
.LASF814:
	.string	"ulen"
.LASF587:
	.string	"OP_GPROTOENT"
.LASF686:
	.string	"XATTRBLOCK"
.LASF1103:
	.string	"PL_in_eval"
.LASF679:
	.string	"float"
.LASF638:
	.string	"itersave"
.LASF958:
	.string	"padname"
.LASF953:
	.string	"tokid"
.LASF142:
	.string	"xpvuv"
.LASF77:
	.string	"sv_any"
.LASF995:
	.string	"cvop"
.LASF408:
	.string	"OP_ANONHASH"
.LASF339:
	.string	"OP_I_LE"
.LASF933:
	.string	"Perl_ck_anoncode"
.LASF1052:
	.string	"PL_beginav"
.LASF741:
	.string	"target"
.LASF607:
	.string	"OP_SGRENT"
.LASF625:
	.string	"block_eval"
.LASF335:
	.string	"OP_I_LT"
.LASF426:
	.string	"OP_COND_EXPR"
.LASF520:
	.string	"OP_FTLINK"
.LASF97:
	.string	"reganch"
.LASF813:
	.string	"rend"
.LASF227:
	.string	"stashes"
.LASF454:
	.string	"OP_EXIT"
.LASF83:
	.string	"endp"
.LASF1039:
	.string	"PL_check"
.LASF760:
	.string	"rops"
.LASF326:
	.string	"OP_ADD"
.LASF570:
	.string	"OP_SEMGET"
.LASF297:
	.string	"OP_SUBST"
.LASF420:
	.string	"OP_RANGE"
.LASF266:
	.string	"OP_SCALAR"
.LASF1034:
	.string	"items"
.LASF1059:
	.string	"PL_main_root"
.LASF1010:
	.string	"nothin"
.LASF593:
	.string	"OP_SPROTOENT"
.LASF568:
	.string	"OP_MSGSND"
.LASF393:
	.string	"OP_EACH"
.LASF748:
	.string	"imop"
.LASF565:
	.string	"OP_SHMWRITE"
.LASF394:
	.string	"OP_VALUES"
.LASF416:
	.string	"OP_GREPSTART"
.LASF11:
	.string	"size_t"
.LASF939:
	.string	"Perl_ck_eof"
.LASF1026:
	.string	"rv2av"
.LASF283:
	.string	"OP_PROTOTYPE"
.LASF1035:
	.string	"tmpXSoff"
.LASF893:
	.string	"Perl_newFOROP"
.LASF1003:
	.string	"sibling"
.LASF345:
	.string	"OP_I_NE"
.LASF811:
	.string	"transv"
.LASF719:
	.string	"want"
.LASF1093:
	.string	"PL_savestack_ix"
.LASF688:
	.string	"XTERMBLOCK"
.LASF687:
	.string	"XATTRTERM"
.LASF288:
	.string	"OP_BACKTICK"
.LASF858:
	.string	"term"
.LASF747:
	.string	"pack"
.LASF427:
	.string	"OP_ANDASSIGN"
.LASF802:
	.string	"repl"
.LASF717:
	.string	"Perl_scalarvoid"
.LASF253:
	.string	"SVt_PVGV"
.LASF742:
	.string	"attrs"
.LASF900:
	.string	"Perl_cv_ckproto"
.LASF644:
	.string	"blku_eval"
.LASF90:
	.string	"sublen"
.LASF1115:
	.string	"S_newDEFSVOP"
.LASF1024:
	.string	"iter"
.LASF442:
	.string	"OP_LEAVE"
.LASF154:
	.string	"xav_fill"
.LASF528:
	.string	"OP_CHOWN"
.LASF635:
	.string	"next_op"
.LASF502:
	.string	"OP_FTREXEC"
.LASF126:
	.string	"mg_moremagic"
.LASF869:
	.string	"other"
.LASF533:
	.string	"OP_RENAME"
.LASF658:
	.string	"sbu_strend"
.LASF35:
	.string	"cop_arybase"
.LASF920:
	.string	"Perl_newFORM"
.LASF856:
	.string	"oexpect"
.LASF1096:
	.string	"PL_markstack_ptr"
.LASF19:
	.string	"va_list"
.LASF376:
	.string	"OP_VEC"
.LASF667:
	.string	"si_cxmax"
.LASF469:
	.string	"OP_READ"
.LASF437:
	.string	"OP_LINESEQ"
.LASF132:
	.string	"mg_ptr"
.LASF463:
	.string	"OP_TIED"
.LASF314:
	.string	"OP_POSTINC"
.LASF755:
	.string	"stashpv"
.LASF642:
	.string	"itermax"
.LASF401:
	.string	"OP_UNPACK"
.LASF558:
	.string	"OP_LOCALTIME"
.LASF206:
	.string	"xio_subprocess"
.LASF821:
	.string	"diff"
.LASF517:
	.string	"OP_FTFILE"
.LASF88:
	.string	"subbeg"
.LASF82:
	.string	"startp"
.LASF1023:
	.string	"ourlast"
.LASF766:
	.string	"right"
.LASF750:
	.string	"s_PeRlHaSh_tmp"
.LASF908:
	.string	"const_sv"
.LASF604:
	.string	"OP_GGRNAM"
.LASF991:
	.string	"Perl_ck_join"
.LASF1116:
	.string	"Perl_newNULLLIST"
.LASF907:
	.string	"aname"
.LASF1111:
	.string	"GNU C 4.8.1 -mtune=generic -march=x86-64 -g -fno-strict-aliasing -fstack-protector"
.LASF328:
	.string	"OP_SUBTRACT"
.LASF979:
	.string	"Perl_ck_repeat"
.LASF504:
	.string	"OP_FTEWRITE"
.LASF530:
	.string	"OP_UNLINK"
.LASF81:
	.string	"regexp"
.LASF613:
	.string	"OP_SETSTATE"
.LASF450:
	.string	"OP_NEXT"
.LASF485:
	.string	"OP_IOCTL"
.LASF1057:
	.string	"PL_tainting"
.LASF80:
	.string	"REGEXP"
.LASF868:
	.string	"Perl_newLOGOP"
.LASF78:
	.string	"sv_refcnt"
.LASF445:
	.string	"OP_ITER"
.LASF522:
	.string	"OP_FTSGID"
.LASF277:
	.string	"OP_PUSHRE"
.LASF275:
	.string	"OP_PADHV"
.LASF545:
	.string	"OP_FORK"
.LASF1075:
	.string	"PL_expect"
.LASF213:
	.string	"svt_len"
.LASF699:
	.string	"S_bad_type"
.LASF245:
	.string	"SVt_PVIV"
.LASF237:
	.string	"next_off"
.LASF1017:
	.string	"oleft"
.LASF439:
	.string	"OP_DBSTATE"
.LASF29:
	.string	"op_flags"
.LASF824:
	.string	"havefinal"
.LASF37:
	.string	"cop_warnings"
.LASF672:
	.string	"PERL_SI"
.LASF906:
	.string	"Perl_newATTRSUB"
.LASF85:
	.string	"substrs"
.LASF941:
	.string	"enter"
.LASF1106:
	.string	"PL_sortcop"
.LASF600:
	.string	"OP_GPWUID"
.LASF808:
	.string	"squash"
.LASF732:
	.string	"newop"
.LASF308:
	.string	"OP_STUDY"
.LASF929:
	.string	"Perl_newHVREF"
.LASF375:
	.string	"OP_SUBSTR"
.LASF120:
	.string	"blku_oldscopesp"
.LASF250:
	.string	"SVt_PVAV"
.LASF819:
	.string	"rlast"
.LASF581:
	.string	"OP_GHOSTENT"
.LASF666:
	.string	"si_cxix"
.LASF1000:
	.string	"oops"
.LASF162:
	.string	"xhv_array"
.LASF789:
	.string	"first"
.LASF583:
	.string	"OP_GNBYADDR"
.LASF974:
	.string	"cmop"
.LASF89:
	.string	"offsets"
.LASF409:
	.string	"OP_SPLICE"
.LASF925:
	.string	"Perl_oopsAV"
.LASF1086:
	.string	"PL_stack_sp"
.LASF354:
	.string	"OP_SCMP"
.LASF794:
	.string	"Perl_newLISTOP"
.LASF541:
	.string	"OP_TELLDIR"
.LASF204:
	.string	"xio_bottom_name"
.LASF355:
	.string	"OP_BIT_AND"
.LASF837:
	.string	"plen"
.LASF248:
	.string	"SVt_PVBM"
.LASF1112:
	.string	"op.c"
.LASF916:
	.string	"Perl_newCONSTSUB"
.LASF761:
	.string	"maybe_scalar"
.LASF1071:
	.string	"PL_sv_undef"
.LASF1055:
	.string	"PL_initav"
.LASF124:
	.string	"MAGIC"
.LASF838:
	.string	"lastop"
.LASF31:
	.string	"cop_label"
.LASF130:
	.string	"mg_flags"
.LASF630:
	.string	"cur_text"
.LASF151:
	.string	"XPVAV"
.LASF847:
	.string	"idop"
.LASF61:
	.string	"svop"
.LASF252:
	.string	"SVt_PVCV"
.LASF311:
	.string	"OP_I_PREINC"
.LASF1012:
	.string	"fields"
.LASF782:
	.string	"Perl_fold_constants"
.LASF93:
	.string	"prelen"
.LASF1102:
	.string	"PL_curcop"
.LASF744:
	.string	"stashsv"
.LASF417:
	.string	"OP_GREPWHILE"
.LASF910:
	.string	"exists"
.LASF451:
	.string	"OP_REDO"
.LASF26:
	.string	"op_targ"
.LASF930:
	.string	"Perl_oopsCV"
.LASF310:
	.string	"OP_PREINC"
.LASF771:
	.string	"Perl_save_hints"
.LASF71:
	.string	"op_redoop"
.LASF205:
	.string	"xio_bottom_gv"
.LASF973:
	.string	"Perl_ck_method"
.LASF307:
	.string	"OP_UNDEF"
.LASF828:
	.string	"tsave"
.LASF360:
	.string	"OP_NOT"
.LASF458:
	.string	"OP_FILENO"
.LASF119:
	.string	"blku_oldmarksp"
.LASF801:
	.string	"expr"
.LASF423:
	.string	"OP_AND"
.LASF887:
	.string	"whileline"
.LASF702:
	.string	"Perl_op_free"
.LASF575:
	.string	"OP_ENTEREVAL"
.LASF1036:
	.string	"PL_op_name"
.LASF1053:
	.string	"PL_endav"
.LASF764:
	.string	"Perl_bind_match"
.LASF95:
	.string	"lastparen"
.LASF982:
	.string	"Perl_ck_select"
.LASF1031:
	.string	"Perl_custom_op_desc"
.LASF177:
	.string	"XPVCV"
.LASF917:
	.string	"Perl_newXS"
.LASF640:
	.string	"iterary"
.LASF1094:
	.string	"PL_savestack_max"
.LASF357:
	.string	"OP_BIT_OR"
.LASF492:
	.string	"OP_ACCEPT"
.LASF464:
	.string	"OP_DBMOPEN"
.LASF609:
	.string	"OP_GETLOGIN"
.LASF9:
	.string	"__ssize_t"
.LASF239:
	.string	"reg_data"
.LASF202:
	.string	"xio_fmt_name"
.LASF675:
	.string	"hent_val"
.LASF440:
	.string	"OP_UNSTACK"
.LASF713:
	.string	"S_scalarboolean"
.LASF146:
	.string	"xnv_nv"
.LASF673:
	.string	"hent_next"
.LASF987:
	.string	"S_simplify_sort"
.LASF482:
	.string	"OP_SEEK"
.LASF762:
	.string	"Perl_my"
.LASF215:
	.string	"svt_free"
.LASF1041:
	.string	"PL_incgv"
.LASF58:
	.string	"op_pmdynflags"
.LASF743:
	.string	"for_my"
.LASF969:
	.string	"Perl_ck_listiob"
.LASF734:
	.string	"S_is_handle_constructor"
.LASF714:
	.string	"oldline"
.LASF913:
	.string	"tmpstr"
.LASF1027:
	.string	"exlist"
.LASF254:
	.string	"SVt_PVFM"
.LASF722:
	.string	"Perl_listkids"
.LASF842:
	.string	"Perl_newPVOP"
.LASF412:
	.string	"OP_SHIFT"
.LASF1048:
	.string	"PL_errgv"
.LASF876:
	.string	"falseop"
.LASF438:
	.string	"OP_NEXTSTATE"
.LASF896:
	.string	"iterflags"
.LASF226:
	.string	"clone_params"
.LASF66:
	.string	"PVOP"
.LASF1081:
	.string	"PL_hints"
.LASF181:
	.string	"xcv_root"
.LASF606:
	.string	"OP_GGRENT"
.LASF347:
	.string	"OP_I_NCMP"
.LASF325:
	.string	"OP_REPEAT"
.LASF1028:
	.string	"Perl_custom_op_name"
.LASF385:
	.string	"OP_LCFIRST"
.LASF524:
	.string	"OP_FTTTY"
.LASF1047:
	.string	"PL_argvgv"
.LASF998:
	.string	"contextclass"
.LASF776:
	.string	"floor"
.LASF330:
	.string	"OP_CONCAT"
.LASF473:
	.string	"OP_PRINT"
.LASF940:
	.string	"Perl_ck_eval"
.LASF657:
	.string	"sbu_m"
.LASF188:
	.string	"xcv_outside"
.LASF259:
	.string	"PADLIST"
.LASF804:
	.string	"rstr"
.LASF224:
	.string	"any_dxptr"
.LASF803:
	.string	"tstr"
.LASF1095:
	.string	"PL_tmps_floor"
.LASF413:
	.string	"OP_UNSHIFT"
.LASF176:
	.string	"xgv_flags"
.LASF125:
	.string	"magic"
.LASF556:
	.string	"OP_TIME"
.LASF505:
	.string	"OP_FTEEXEC"
.LASF602:
	.string	"OP_SPWENT"
.LASF507:
	.string	"OP_FTEOWNED"
.LASF322:
	.string	"OP_I_DIVIDE"
.LASF343:
	.string	"OP_I_EQ"
.LASF251:
	.string	"SVt_PVHV"
.LASF240:
	.string	"SVt_NULL"
.LASF573:
	.string	"OP_REQUIRE"
.LASF210:
	.string	"mgvtbl"
.LASF1109:
	.string	"PL_regfree"
.LASF289:
	.string	"OP_GLOB"
.LASF926:
	.string	"Perl_oopsHV"
.LASF542:
	.string	"OP_SEEKDIR"
.LASF1056:
	.string	"PL_sub_generation"
.LASF170:
	.string	"XPVGV"
.LASF972:
	.string	"Perl_ck_match"
.LASF472:
	.string	"OP_PRTF"
.LASF660:
	.string	"sbu_rx"
.LASF209:
	.string	"MGVTBL"
.LASF582:
	.string	"OP_GNBYNAME"
.LASF662:
	.string	"cx_subst"
.LASF902:
	.string	"Perl_op_const_sv"
.LASF16:
	.string	"fp_offset"
.LASF661:
	.string	"cx_blk"
.LASF255:
	.string	"SVt_PVIO"
.LASF15:
	.string	"gp_offset"
.LASF368:
	.string	"OP_LOG"
.LASF986:
	.string	"firstkid"
.LASF91:
	.string	"refcnt"
.LASF749:
	.string	"meth"
.LASF315:
	.string	"OP_I_POSTINC"
.LASF691:
	.string	"regfree_t"
.LASF712:
	.string	"Perl_scalarkids"
.LASF746:
	.string	"imopsp"
.LASF751:
	.string	"s_PeRlHaSh"
.LASF652:
	.string	"sbu_rxtainted"
.LASF534:
	.string	"OP_LINK"
.LASF891:
	.string	"loopflags"
.LASF418:
	.string	"OP_MAPSTART"
.LASF718:
	.string	"useless"
.LASF704:
	.string	"pmstash"
.LASF160:
	.string	"XPVHV"
.LASF433:
	.string	"OP_CALLER"
.LASF7:
	.string	"sizetype"
.LASF342:
	.string	"OP_EQ"
.LASF269:
	.string	"OP_CONST"
.LASF67:
	.string	"pvop"
.LASF54:
	.string	"op_pmnext"
.LASF554:
	.string	"OP_GETPRIORITY"
.LASF490:
	.string	"OP_CONNECT"
.LASF182:
	.string	"xcv_xsub"
.LASF557:
	.string	"OP_TMS"
.LASF622:
	.string	"hasargs"
.LASF432:
	.string	"OP_LEAVESUBLV"
.LASF496:
	.string	"OP_GETSOCKNAME"
.LASF30:
	.string	"op_private"
.LASF272:
	.string	"OP_GELEM"
.LASF382:
	.string	"OP_CHR"
.LASF218:
	.string	"any_ptr"
.LASF1:
	.string	"short unsigned int"
.LASF4:
	.string	"signed char"
.LASF1089:
	.string	"PL_stack_base"
.LASF331:
	.string	"OP_STRINGIFY"
.LASF549:
	.string	"OP_EXEC"
.LASF329:
	.string	"OP_I_SUBTRACT"
.LASF191:
	.string	"XPVIO"
.LASF877:
	.string	"start"
.LASF1019:
	.string	"reverse"
.LASF138:
	.string	"XPVIV"
.LASF157:
	.string	"xav_alloc"
.LASF901:
	.string	"Perl_cv_const_sv"
.LASF270:
	.string	"OP_GVSV"
.LASF786:
	.string	"oldtmps_floor"
.LASF650:
	.string	"sbu_oldsave"
.LASF164:
	.string	"xhv_max"
.LASF724:
	.string	"Perl_scalarseq"
.LASF92:
	.string	"minlen"
.LASF919:
	.string	"filename"
.LASF301:
	.string	"OP_AASSIGN"
.LASF899:
	.string	"Perl_cv_undef"
.LASF915:
	.string	"oldscope"
.LASF475:
	.string	"OP_SYSSEEK"
.LASF150:
	.string	"xmg_stash"
.LASF572:
	.string	"OP_SEMOP"
.LASF649:
	.string	"sbu_rflags"
.LASF777:
	.string	"needblockscope"
.LASF740:
	.string	"stash"
.LASF84:
	.string	"regstclass"
.LASF340:
	.string	"OP_GE"
.LASF167:
	.string	"xhv_eiter"
.LASF406:
	.string	"OP_LSLICE"
.LASF470:
	.string	"OP_ENTERWRITE"
.LASF773:
	.string	"full"
.LASF336:
	.string	"OP_GT"
.LASF271:
	.string	"OP_GV"
.LASF498:
	.string	"OP_LSTAT"
.LASF467:
	.string	"OP_SELECT"
.LASF561:
	.string	"OP_SLEEP"
.LASF249:
	.string	"SVt_PVLV"
.LASF238:
	.string	"reg_substr_data"
.LASF623:
	.string	"lval"
.LASF619:
	.string	"savearray"
.LASF639:
	.string	"iterlval"
.LASF643:
	.string	"blku_sub"
.LASF268:
	.string	"OP_WANTARRAY"
.LASF700:
	.string	"S_no_bareword_allowed"
.LASF711:
	.string	"Perl_linklist"
.LASF938:
	.string	"Perl_ck_die"
.LASF840:
	.string	"Perl_newPADOP"
.LASF886:
	.string	"Perl_newWHILEOP"
.LASF333:
	.string	"OP_RIGHT_SHIFT"
.LASF775:
	.string	"Perl_block_end"
.LASF588:
	.string	"OP_GSBYNAME"
.LASF123:
	.string	"blk_u"
.LASF247:
	.string	"SVt_PVMG"
.LASF156:
	.string	"xof_off"
.LASF967:
	.string	"Perl_ck_defined"
.LASF841:
	.string	"Perl_newGVOP"
.LASF555:
	.string	"OP_SETPRIORITY"
.LASF970:
	.string	"Perl_ck_sassign"
.LASF605:
	.string	"OP_GGRGID"
.LASF174:
	.string	"xgv_namelen"
.LASF850:
	.string	"Perl_load_module"
.LASF1088:
	.string	"PL_curpad"
.LASF839:
	.string	"Perl_newSVOP"
.LASF904:
	.string	"proto"
.LASF44:
	.string	"op_last"
.LASF274:
	.string	"OP_PADAV"
.LASF984:
	.string	"argop"
.LASF1061:
	.string	"PL_eval_root"
.LASF232:
	.string	"__dirstream"
.LASF402:
	.string	"OP_PACK"
.LASF221:
	.string	"any_long"
.LASF455:
	.string	"OP_OPEN"
.LASF844:
	.string	"Perl_utilize"
.LASF28:
	.string	"op_seq"
.LASF992:
	.string	"pmstr"
.LASF864:
	.string	"Perl_newASSIGNOP"
.LASF586:
	.string	"OP_GPBYNUMBER"
.LASF833:
	.string	"Perl_newPMOP"
.LASF698:
	.string	"S_too_many_arguments"
.LASF42:
	.string	"BINOP"
.LASF246:
	.string	"SVt_PVNV"
.LASF50:
	.string	"PMOP"
.LASF1082:
	.string	"PL_yynerrs"
.LASF389:
	.string	"OP_RV2AV"
.LASF537:
	.string	"OP_MKDIR"
.LASF947:
	.string	"kidsv"
.LASF478:
	.string	"OP_SEND"
.LASF516:
	.string	"OP_FTBLK"
.LASF823:
	.string	"bits"
.LASF853:
	.string	"modname"
.LASF96:
	.string	"lastcloseparen"
.LASF147:
	.string	"XPVMG"
.LASF40:
	.string	"unop"
.LASF529:
	.string	"OP_CHROOT"
.LASF1087:
	.string	"PL_op"
.LASF207:
	.string	"xio_type"
.LASF503:
	.string	"OP_FTEREAD"
.LASF6:
	.string	"long int"
.LASF214:
	.string	"svt_clear"
.LASF1063:
	.string	"PL_copline"
.LASF194:
	.string	"xio_ofp"
.LASF175:
	.string	"xgv_stash"
.LASF372:
	.string	"OP_OCT"
.LASF1042:
	.string	"PL_hintgv"
.LASF965:
	.string	"Perl_ck_lengthconst"
.LASF738:
	.string	"S_dup_attrlist"
.LASF627:
	.string	"old_op_type"
.LASF327:
	.string	"OP_I_ADD"
.LASF52:
	.string	"op_pmreplroot"
.LASF826:
	.string	"from_utf"
.LASF186:
	.string	"xcv_depth"
.LASF107:
	.string	"gp_cvgen"
.LASF144:
	.string	"XPVNV"
.LASF914:
	.string	"db_postponed"
.LASF871:
	.string	"firstp"
.LASF166:
	.string	"xhv_riter"
.LASF122:
	.string	"blku_gimme"
.LASF632:
	.string	"label"
.LASF1079:
	.string	"PL_in_my"
.LASF281:
	.string	"OP_RV2CV"
.LASF112:
	.string	"context"
.LASF715:
	.string	"Perl_scalar"
.LASF618:
	.string	"dfoutgv"
.LASF692:
	.string	"XSUBADDR_t"
.LASF515:
	.string	"OP_FTCHR"
.LASF1072:
	.string	"PL_sv_no"
.LASF790:
	.string	"last"
.LASF966:
	.string	"Perl_ck_lfun"
.LASF414:
	.string	"OP_SORT"
.LASF387:
	.string	"OP_LC"
.LASF338:
	.string	"OP_LE"
.LASF689:
	.string	"peep_t"
.LASF769:
	.string	"Perl_invert"
.LASF694:
	.string	"S_gv_ename"
.LASF589:
	.string	"OP_GSBYPORT"
.LASF53:
	.string	"op_pmreplstart"
.LASF615:
	.string	"OP_CUSTOM"
.LASF334:
	.string	"OP_LT"
.LASF356:
	.string	"OP_BIT_XOR"
.LASF435:
	.string	"OP_DIE"
.LASF298:
	.string	"OP_SUBSTCONT"
.LASF825:
	.string	"final"
.LASF1091:
	.string	"PL_scopestack_ix"
.LASF241:
	.string	"SVt_IV"
.LASF320:
	.string	"OP_I_MULTIPLY"
.LASF235:
	.string	"regnode"
.LASF1051:
	.string	"PL_curstname"
.LASF364:
	.string	"OP_COS"
.LASF792:
	.string	"Perl_prepend_elem"
.LASF24:
	.string	"op_sibling"
.LASF195:
	.string	"xio_dirpu"
.LASF220:
	.string	"any_iv"
.LASF391:
	.string	"OP_AELEM"
.LASF168:
	.string	"xhv_pmroot"
.LASF361:
	.string	"OP_COMPLEMENT"
.LASF436:
	.string	"OP_RESET"
.LASF922:
	.string	"Perl_newANONHASH"
.LASF3:
	.string	"long unsigned int"
.LASF51:
	.string	"pmop"
.LASF1004:
	.string	"Perl_ck_svconst"
.LASF513:
	.string	"OP_FTCTIME"
.LASF419:
	.string	"OP_MAPWHILE"
.LASF511:
	.string	"OP_FTMTIME"
.LASF403:
	.string	"OP_SPLIT"
.LASF651:
	.string	"sbu_once"
.LASF359:
	.string	"OP_I_NEGATE"
.LASF540:
	.string	"OP_READDIR"
.LASF999:
	.string	"wrapref"
.LASF780:
	.string	"sigil"
.LASF74:
	.string	"PerlInterpreter"
.LASF1020:
	.string	"pushmark"
.LASF946:
	.string	"iscv"
.LASF344:
	.string	"OP_NE"
.LASF580:
	.string	"OP_GHBYADDR"
.LASF997:
	.string	"optional"
.LASF779:
	.string	"Perl_localize"
.LASF8:
	.string	"char"
.LASF709:
	.string	"Perl_op_refcnt_unlock"
.LASF1077:
	.string	"PL_error_count"
.LASF425:
	.string	"OP_XOR"
.LASF500:
	.string	"OP_FTRREAD"
.LASF620:
	.string	"argarray"
.LASF43:
	.string	"binop"
.LASF952:
	.string	"Perl_ck_fun"
.LASF200:
	.string	"xio_top_name"
.LASF548:
	.string	"OP_SYSTEM"
.LASF133:
	.string	"mg_len"
.LASF474:
	.string	"OP_SYSOPEN"
.LASF257:
	.string	"xiou_dirp"
.LASF1092:
	.string	"PL_savestack"
.LASF173:
	.string	"xgv_name"
.LASF291:
	.string	"OP_RCATLINE"
.LASF424:
	.string	"OP_OR"
.LASF316:
	.string	"OP_POSTDEC"
.LASF617:
	.string	"block_sub"
.LASF484:
	.string	"OP_FCNTL"
.LASF68:
	.string	"op_pv"
.LASF726:
	.string	"Perl_mod"
.LASF509:
	.string	"OP_FTZERO"
.LASF278:
	.string	"OP_RV2GV"
.LASF405:
	.string	"OP_LIST"
.LASF448:
	.string	"OP_RETURN"
.LASF852:
	.string	"Perl_vload_module"
.LASF1006:
	.string	"Perl_ck_substr"
.LASF772:
	.string	"Perl_block_start"
.LASF196:
	.string	"xio_lines"
.LASF707:
	.string	"Perl_op_null"
.LASF980:
	.string	"Perl_ck_require"
.LASF1030:
	.string	"keysv"
.LASF955:
	.string	"numargs"
.LASF506:
	.string	"OP_FTIS"
.LASF960:
	.string	"Perl_ck_glob"
.LASF1074:
	.string	"PL_oldbufptr"
.LASF665:
	.string	"si_cxstack"
.LASF264:
	.string	"OP_NULL"
.LASF137:
	.string	"xpv_len"
.LASF701:
	.string	"nextkid"
.LASF921:
	.string	"Perl_newANONLIST"
.LASF817:
	.string	"tdiff"
.LASF27:
	.string	"op_type"
.LASF398:
	.string	"OP_RV2HV"
.LASF21:
	.string	"STRLEN"
.LASF1097:
	.string	"PL_markstack_max"
.LASF521:
	.string	"OP_FTSUID"
.LASF857:
	.string	"Perl_dofile"
.LASF296:
	.string	"OP_QR"
.LASF380:
	.string	"OP_FORMLINE"
.LASF628:
	.string	"old_namesv"
.LASF547:
	.string	"OP_WAITPID"
.LASF242:
	.string	"SVt_NV"
.LASF377:
	.string	"OP_INDEX"
.LASF365:
	.string	"OP_RAND"
.LASF378:
	.string	"OP_RINDEX"
.LASF678:
	.string	"hek_key"
.LASF710:
	.string	"Perl_allocmy"
.LASF595:
	.string	"OP_EHOSTENT"
.LASF324:
	.string	"OP_I_MODULO"
.LASF185:
	.string	"xcv_file"
.LASF1068:
	.string	"PL_cop_seqmax"
.LASF948:
	.string	"svtype"
.LASF943:
	.string	"Perl_ck_exec"
.LASF141:
	.string	"XPVUV"
.LASF881:
	.string	"flop"
.LASF849:
	.string	"vesv"
.LASF798:
	.string	"Perl_newBINOP"
.LASF229:
	.string	"proto_perl"
.LASF629:
	.string	"old_eval_root"
.LASF400:
	.string	"OP_HSLICE"
.LASF72:
	.string	"op_nextop"
.LASF323:
	.string	"OP_MODULO"
.LASF62:
	.string	"op_sv"
.LASF564:
	.string	"OP_SHMREAD"
.LASF518:
	.string	"OP_FTDIR"
.LASF594:
	.string	"OP_SSERVENT"
.LASF892:
	.string	"unstack"
.LASF983:
	.string	"Perl_ck_shift"
.LASF903:
	.string	"Perl_newMYSUB"
.LASF260:
	.string	"PADOFFSET"
.LASF614:
	.string	"OP_METHOD_NAMED"
.LASF56:
	.string	"op_pmflags"
.LASF1108:
	.string	"PL_regcompp"
.LASF860:
	.string	"Perl_newSLICEOP"
.LASF143:
	.string	"xuv_uv"
.LASF75:
	.string	"interpreter"
.LASF121:
	.string	"blku_oldpm"
.LASF805:
	.string	"tlen"
.LASF41:
	.string	"op_first"
.LASF20:
	.string	"double"
.LASF888:
	.string	"cont"
.LASF57:
	.string	"op_pmpermflags"
.LASF134:
	.string	"xrv_rv"
.LASF155:
	.string	"xav_max"
.LASF799:
	.string	"uvcompare"
.LASF683:
	.string	"XREF"
.LASF10:
	.string	"ssize_t"
.LASF25:
	.string	"op_ppaddr"
.LASF706:
	.string	"S_cop_free"
.LASF612:
	.string	"OP_THREADSV"
.LASF851:
	.string	"args"
.LASF219:
	.string	"any_i32"
.LASF703:
	.string	"Perl_op_clear"
.LASF796:
	.string	"Perl_newOP"
.LASF815:
	.string	"tfirst"
.LASF1049:
	.string	"PL_DBsub"
.LASF244:
	.string	"SVt_PV"
.LASF33:
	.string	"cop_filegv"
.LASF222:
	.string	"any_bool"
.LASF410:
	.string	"OP_PUSH"
.LASF386:
	.string	"OP_UC"
.LASF190:
	.string	"xcv_outside_seq"
.LASF728:
	.string	"skip_kids"
.LASF313:
	.string	"OP_I_PREDEC"
.LASF87:
	.string	"data"
.LASF489:
	.string	"OP_BIND"
.LASF596:
	.string	"OP_ENETENT"
.LASF976:
	.string	"Perl_ck_open"
.LASF543:
	.string	"OP_REWINDDIR"
.LASF745:
	.string	"S_apply_attrs_my"
.LASF668:
	.string	"si_type"
.LASF153:
	.string	"xav_array"
.LASF720:
	.string	"clear_pmop"
.LASF243:
	.string	"SVt_RV"
.LASF1043:
	.string	"PL_dowarn"
.LASF225:
	.string	"CLONE_PARAMS"
.LASF443:
	.string	"OP_SCOPE"
.LASF579:
	.string	"OP_GHBYNAME"
.LASF690:
	.string	"regcomp_t"
.LASF312:
	.string	"OP_PREDEC"
.LASF633:
	.string	"resetsp"
.LASF111:
	.string	"PERL_CONTEXT"
.LASF968:
	.string	"Perl_ck_rfun"
.LASF806:
	.string	"rlen"
.LASF1069:
	.string	"PL_op_seqmax"
.LASF1021:
	.string	"ourmark"
.LASF163:
	.string	"xhv_fill"
.LASF140:
	.string	"xiv_iv"
.LASF829:
	.string	"rsave"
.LASF685:
	.string	"XBLOCK"
.LASF942:
	.string	"Perl_ck_exit"
.LASF753:
	.string	"hash_PeRlHaSh"
.LASF765:
	.string	"left"
.LASF818:
	.string	"rfirst"
.LASF680:
	.string	"runops_proc_t"
.LASF116:
	.string	"blku_oldsp"
.LASF1025:
	.string	"expushmark"
.LASF1009:
	.string	"ignore_optimization"
.LASF546:
	.string	"OP_WAIT"
.LASF452:
	.string	"OP_DUMP"
.LASF809:
	.string	"grows"
.LASF931:
	.string	"Perl_newCVREF"
.LASF788:
	.string	"Perl_append_elem"
.LASF300:
	.string	"OP_SASSIGN"
.LASF723:
	.string	"Perl_list"
.LASF832:
	.string	"range_mark"
.LASF634:
	.string	"redo_op"
.LASF390:
	.string	"OP_AELEMFAST"
.LASF677:
	.string	"hek_len"
.LASF932:
	.string	"Perl_newSVREF"
.LASF384:
	.string	"OP_UCFIRST"
.LASF787:
	.string	"Perl_convert"
.LASF535:
	.string	"OP_SYMLINK"
.LASF369:
	.string	"OP_SQRT"
.LASF830:
	.string	"tmpbuf"
.LASF567:
	.string	"OP_MSGCTL"
.LASF985:
	.string	"Perl_ck_sort"
.LASF510:
	.string	"OP_FTSIZE"
.LASF12:
	.string	"long long unsigned int"
.LASF480:
	.string	"OP_EOF"
.LASF636:
	.string	"last_op"
.LASF415:
	.string	"OP_REVERSE"
.LASF1066:
	.string	"PL_comppad_name"
.LASF526:
	.string	"OP_FTBINARY"
.LASF499:
	.string	"OP_STAT"
.LASF399:
	.string	"OP_HELEM"
.LASF768:
	.string	"sample"
.LASF276:
	.string	"OP_PADANY"
.LASF280:
	.string	"OP_AV2ARYLEN"
.LASF486:
	.string	"OP_FLOCK"
.LASF781:
	.string	"Perl_jmaybe"
.LASF381:
	.string	"OP_ORD"
.LASF217:
	.string	"svt_dup"
.LASF1101:
	.string	"PL_curstash"
.LASF671:
	.string	"si_markoff"
.LASF1078:
	.string	"PL_subline"
.LASF267:
	.string	"OP_PUSHMARK"
.LASF69:
	.string	"LOOP"
.LASF574:
	.string	"OP_DOFILE"
.LASF961:
	.string	"glob_gv"
.LASF201:
	.string	"xio_top_gv"
.LASF859:
	.string	"doop"
.LASF945:
	.string	"Perl_ck_rvconst"
.LASF1013:
	.string	"indsvp"
.LASF396:
	.string	"OP_DELETE"
.LASF822:
	.string	"none"
.LASF735:
	.string	"argnum"
.LASF659:
	.string	"sbu_rxres"
.LASF1104:
	.string	"PL_curstackinfo"
.LASF1032:
	.string	"const_sv_xsub"
.LASF912:
	.string	"tname"
.LASF431:
	.string	"OP_LEAVESUB"
.LASF905:
	.string	"Perl_newSUB"
.LASF866:
	.string	"tmpop"
.LASF273:
	.string	"OP_PADSV"
.LASF285:
	.string	"OP_SREFGEN"
.LASF453:
	.string	"OP_GOTO"
.LASF731:
	.string	"okid"
.LASF697:
	.string	"name"
.LASF59:
	.string	"op_pmstash"
.LASF695:
	.string	"S_no_fh_allowed"
.LASF739:
	.string	"S_apply_attrs"
.LASF211:
	.string	"svt_get"
.LASF894:
	.string	"forline"
.LASF936:
	.string	"Perl_ck_spair"
.LASF102:
	.string	"gp_form"
.LASF880:
	.string	"flip"
.LASF317:
	.string	"OP_I_POSTDEC"
.LASF795:
	.string	"pushop"
.LASF730:
	.string	"lvalue_func"
.LASF774:
	.string	"retval"
.LASF279:
	.string	"OP_RV2SV"
.LASF117:
	.string	"blku_oldcop"
.LASF261:
	.string	"padtidy_SUB"
.LASF1046:
	.string	"PL_defgv"
.LASF32:
	.string	"cop_stash"
.LASF287:
	.string	"OP_BLESS"
.LASF935:
	.string	"Perl_ck_concat"
.LASF1016:
	.string	"key_op"
.LASF1044:
	.string	"PL_perldb"
.LASF559:
	.string	"OP_GMTIME"
.LASF754:
	.string	"Perl_apply_attrs_string"
.LASF13:
	.string	"long long int"
.LASF230:
	.string	"line_t"
.LASF784:
	.string	"nope"
.LASF169:
	.string	"xhv_name"
.LASF525:
	.string	"OP_FTTEXT"
.LASF996:
	.string	"namegv"
.LASF664:
	.string	"si_stack"
.LASF512:
	.string	"OP_FTATIME"
.LASF216:
	.string	"svt_copy"
.LASF975:
	.string	"Perl_ck_null"
.LASF411:
	.string	"OP_POP"
.LASF309:
	.string	"OP_POS"
.LASF807:
	.string	"complement"
.LASF318:
	.string	"OP_POW"
.LASF444:
	.string	"OP_ENTERITER"
.LASF284:
	.string	"OP_REFGEN"
.LASF957:
	.string	"targ"
.LASF468:
	.string	"OP_GETC"
.LASF46:
	.string	"listop"
.LASF684:
	.string	"XSTATE"
.LASF501:
	.string	"OP_FTRWRITE"
.LASF495:
	.string	"OP_SSOCKOPT"
.LASF113:
	.string	"cx_type"
.LASF60:
	.string	"SVOP"
.LASF1080:
	.string	"PL_in_my_stash"
.LASF159:
	.string	"xav_flags"
.LASF895:
	.string	"padoff"
.LASF601:
	.string	"OP_GPWENT"
.LASF918:
	.string	"subaddr"
.LASF45:
	.string	"LISTOP"
.LASF641:
	.string	"iterix"
.LASF591:
	.string	"OP_SHOSTENT"
.LASF70:
	.string	"loop"
.LASF449:
	.string	"OP_LAST"
.LASF149:
	.string	"xmg_magic"
.LASF395:
	.string	"OP_KEYS"
.LASF131:
	.string	"mg_obj"
.LASF924:
	.string	"Perl_newANONATTRSUB"
.LASF994:
	.string	"prev"
.LASF578:
	.string	"OP_LEAVETRY"
.LASF223:
	.string	"any_dptr"
.LASF421:
	.string	"OP_FLIP"
.LASF539:
	.string	"OP_OPEN_DIR"
.LASF1018:
	.string	"oright"
.LASF152:
	.string	"xpvav"
.LASF55:
	.string	"op_pmregexp"
.LASF286:
	.string	"OP_REF"
.LASF696:
	.string	"S_too_few_arguments"
.LASF488:
	.string	"OP_SOCKPAIR"
.LASF855:
	.string	"ocurcop"
.LASF585:
	.string	"OP_GPBYNAME"
.LASF183:
	.string	"xcv_xsubany"
.LASF756:
	.string	"attrstr"
.LASF262:
	.string	"padtidy_SUBCLONE"
.LASF459:
	.string	"OP_UMASK"
.LASF199:
	.string	"xio_lines_left"
.LASF954:
	.string	"sibl"
.LASF479:
	.string	"OP_RECV"
.LASF103:
	.string	"gp_av"
.LASF483:
	.string	"OP_TRUNCATE"
.LASF47:
	.string	"LOGOP"
.LASF457:
	.string	"OP_PIPE_OP"
.LASF603:
	.string	"OP_EPWENT"
.LASF990:
	.string	"Perl_ck_split"
.LASF971:
	.string	"kkid"
.LASF631:
	.string	"block_loop"
.LASF282:
	.string	"OP_ANONCODE"
.LASF883:
	.string	"Perl_newLOOPOP"
.LASF846:
	.string	"version"
.LASF299:
	.string	"OP_TRANS"
.LASF65:
	.string	"op_padix"
.LASF681:
	.string	"XOPERATOR"
.LASF610:
	.string	"OP_SYSCALL"
.LASF1099:
	.string	"PL_Xpv"
.LASF793:
	.string	"Perl_force_list"
.LASF189:
	.string	"xcv_flags"
.LASF263:
	.string	"padtidy_FORMAT"
.LASF2:
	.string	"unsigned int"
.LASF648:
	.string	"sbu_maxiters"
.LASF178:
	.string	"xpvcv"
.LASF362:
	.string	"OP_ATAN2"
.LASF407:
	.string	"OP_ANONLIST"
.LASF487:
	.string	"OP_SOCKET"
.LASF392:
	.string	"OP_ASLICE"
.LASF371:
	.string	"OP_HEX"
.LASF624:
	.string	"oldcomppad"
.LASF233:
	.string	"_PerlIO"
.LASF682:
	.string	"XTERM"
.LASF466:
	.string	"OP_SSELECT"
.LASF566:
	.string	"OP_MSGGET"
.LASF854:
	.string	"ocopline"
.LASF5:
	.string	"short int"
.LASF106:
	.string	"gp_cv"
.LASF810:
	.string	"listsv"
.LASF388:
	.string	"OP_QUOTEMETA"
.LASF552:
	.string	"OP_GETPGRP"
.LASF621:
	.string	"olddepth"
.LASF1064:
	.string	"PL_compiling"
.LASF346:
	.string	"OP_NCMP"
.LASF577:
	.string	"OP_ENTERTRY"
.LASF531:
	.string	"OP_CHMOD"
.LASF367:
	.string	"OP_EXP"
.LASF843:
	.string	"Perl_package"
.LASF1045:
	.string	"PL_stdingv"
.LASF725:
	.string	"S_modkids"
.LASF383:
	.string	"OP_CRYPT"
.LASF532:
	.string	"OP_UTIME"
.LASF231:
	.string	"PerlIOl"
.LASF430:
	.string	"OP_ENTERSUB"
.LASF228:
	.string	"flags"
.LASF379:
	.string	"OP_SPRINTF"
.LASF293:
	.string	"OP_REGCRESET"
.LASF693:
	.string	"tmpsv"
.LASF870:
	.string	"S_new_logop"
	.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
